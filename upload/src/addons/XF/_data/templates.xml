<?xml version="1.0" encoding="utf-8"?>
<templates>
  <template type="admin" title="LOGIN_CONTAINER" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<!DOCTYPE html>
<html id="XF" lang="{$xf.language.language_code}" dir="{$xf.language.text_direction}"
	class="has-no-js p-adminLogin {{ $template ? 'template-' . $template : '' }}" data-template="{$template}"
	data-app="admin"
	data-cookie-prefix="{$xf.cookie.prefix}"
	{{ $xf.runJobs ? ' data-run-jobs=""' : '' }}>
<head>
	<meta charset="utf-8" />
	<meta name="robots" content="noindex" />
	<meta http-equiv="X-UA-Compatible" content="IE=Edge" />
	<meta name="viewport" content="width=device-width, initial-scale=1">

	<title>{{ phrase('admin_login') }} | {$xf.options.boardTitle}</title>
	<xf:foreach loop="$head" value="$head">
		{$head}
	</xf:foreach>

	<xf:macro template="public:helper_js_global" name="head" arg-app="admin" />
</head>
<body>

<div class="adminLogin-wrapper">
	<div class="adminLogin-content {{ $loginWide ? 'adminLogin-content--wide' : '' }}">
		{$content|raw}
		<xf:if contentcheck="true">
			<div class="adminLogin-debug">
				<xf:contentcheck>
					<xf:macro template="public:debug_macros" name="debug"
						arg-controller="{$controller}"
						arg-action="{$actionMethod}"
						arg-template="{$template}" />
				</xf:contentcheck>
			</div>
		</xf:if>
	</div>
</div>

<xf:macro template="admin:helper_js_global" name="body" arg-jsState="{$jsState}" />

</body>
</html>]]></template>
  <template type="admin" title="PAGE_CONTAINER" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[<!DOCTYPE html>
<html id="XF" lang="{$xf.language.language_code}" dir="{$xf.language.text_direction}"
	class="has-no-js {{ $template ? 'template-' . $template : '' }}" data-template="{$template}"
	data-app="admin"
	data-cookie-prefix="{$xf.cookie.prefix}"
	{{ $xf.runJobs ? ' data-run-jobs=""' : '' }}>
<head>

	<meta charset="utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=Edge" />
	<meta name="viewport" content="width=device-width, initial-scale=1, viewport-fit=cover">

	<title>
		<xf:title formatter="%s | {$xf.options.boardTitle} - {{ phrase('admin_control_panel') }}" fallback="{$xf.options.boardTitle} - {{ phrase('admin_control_panel') }}" />
	</title>
	<xf:foreach loop="$head" value="$headTag">
		{$headTag}
	</xf:foreach>

	<xf:macro template="public:helper_js_global" name="head" arg-app="admin" />
</head>
<body>

<!-- HEADER -->

<header class="p-header">
	<div class="p-header-buttons p-header-buttons--main">
		<a class="p-header-button p-header-button--nav"
			data-xf-click="off-canvas"
			data-menu="#js-nav"
			role="button"
			tabindex="0"
			aria-label="{{ phrase('menu') }}">
			<xf:fa icon="fa-bars" />
		</a>
		<a href="{{ link('index') }}" class="p-header-button" aria-label="{{ phrase('home')|for_attr }}"><xf:fa icon="fa-home" /></a>
		<a href="index.php" class="p-header-button p-header-button--title" target="_blank">{$xf.options.boardTitle}</a>
	</div>

	<div class="p-header-buttons p-header-buttons--opposite">
		<xf:if is="$xf.visitor.hasAdminPermission('option')">
			<a class="p-header-button" data-xf-key="{{ phrase('shortcut.options')|for_attr }}" data-xf-click="menu" role="button" tabindex="0"
				aria-label="{{ phrase('options')|for_attr }}"
				aria-expanded="false"
				aria-haspopup="true">
				<xf:fa icon="fa-cogs" />
			</a>
			<div class="menu menu--structural menu--superWide" data-menu="menu" aria-hidden="true"
				data-href="{{ link('options/menu') }}"
				data-load-target=".js-optionGroupsMenuBody">
				<div class="menu-content js-optionGroupsMenuBody">
					<div class="menu-row">
						{{ phrase('loading...') }}
					</div>
				</div>
			</div>
		</xf:if>
		<a class="p-header-button" data-xf-key="{{ phrase('shortcut.search_menu')|for_attr }}" data-xf-click="menu" role="button" tabindex="0"
			aria-label="{{ phrase('search')|for_attr }}"
			aria-expanded="false"
			aria-haspopup="true">
			<xf:fa icon="fa-search" />
		</a>
		<form action="{{ link('search/search') }}" class="menu menu--structural menu--veryWide" data-xf-init="admin-search" data-menu="menu" aria-hidden="true">
			<div class="menu-content">
				<h3 class="menu-header">{{ phrase('search...') }}</h3>
				<div class="menu-row">
					<input type="text" name="q" autocomplete="off" class="input js-adminSearchInput" data-menu-autofocus="" />
				</div>
				<div class="menu-scroller p-quickSearchResultsWrapper js-adminSearchResultsWrapper">
					<div class="p-quickSearchResults js-adminSearchResults"></div>
				</div>
			</div>
		</form>
	</div>
</header>

<!-- BODY -->

<div class="p-body-container">
	<div class="p-body">
		<nav class="p-nav" id="js-nav" data-ocm-class="offCanvasMenu offCanvasMenu--adminNav" data-ocm-builder="acpNav">
			<div data-ocm-class="offCanvasMenu-backdrop" data-menu-close="true"></div>
			<div class="p-nav-inner" data-xf-init="admin-nav" data-ocm-class="offCanvasMenu-content">
				<div class="offCanvasMenu-shown offCanvasMenu-header">
					{{ phrase('menu') }}
					<a class="offCanvasMenu-closer" data-menu-close="true" role="button" tabindex="0" aria-label="{{ phrase('close')|for_attr }}"></a>
				</div>
				<div class="p-nav-content js-navSticky">
					<xf:macro name="navigation_list"
						arg-children="{$navigation}"
						arg-selectedTab="{$selectedNavTab}"
						arg-selectedLink="{$selectedNavLink}" />
				</div>
				<div class="p-nav-tester js-navTester"></div>
			</div>
		</nav>

		<div class="p-main">
			<main class="p-main-inner">

				<!--XF:EXTRA_OUTPUT-->

				<xf:macro template="public:browser_warning_macros" name="javascript" />
				<xf:macro template="public:browser_warning_macros" name="browser" />

				<xf:if is="$upgradeCheck">
					<xf:macro template="upgrade_check_macros" name="serious_errors" arg-upgradeCheck="{$upgradeCheck}" />
				</xf:if>

				<xf:if is="$upgradePending">
					<div class="blockMessage blockMessage--important blockMessage--iconic">
						<xf:include template="public:notice_upgrade_pending" />
					</div>
				</xf:if>

				<xf:if is="$listenersDisabled">
					<div class="blockMessage blockMessage--important blockMessage--iconic">
						{{ phrase('code_listeners_extensions_disabled_warning') }}
					</div>
				</xf:if>

				<xf:if is="$mailDisabled">
					<div class="blockMessage blockMessage--important blockMessage--iconic">
						{{ phrase('mail_has_been_disabled_warning') }}
					</div>
				</xf:if>

				<xf:if is="$breadcrumbs is not empty">
					<ul class="p-breadcrumbs">
						<xf:foreach loop="$breadcrumbs" value="$breadcrumb">
							<li><a href="{$breadcrumb.href}">{$breadcrumb.value}</a></li>
						</xf:foreach>
					</ul>
				</xf:if>

				<xf:if contentcheck="true">
					<div class="p-main-header">
					<xf:contentcheck>
						<xf:if contentcheck="true">
							<div class="p-title {{ $noH1 ? 'p-title--noH1' : '' }}">
							<xf:contentcheck>
								<xf:if is="!$noH1">
									<h1 class="p-title-value">
										<xf:h1 fallback="{$xf.options.boardTitle}" />
									</h1>
								</xf:if>
								<xf:if contentcheck="true">
									<div class="p-title-pageAction"><xf:contentcheck><xf:pageaction /></xf:contentcheck></div>
								</xf:if>
							</xf:contentcheck>
							</div>
						</xf:if>

						<xf:if contentcheck="true">
							<div class="p-description"><xf:contentcheck><xf:description /></xf:contentcheck></div>
						</xf:if>
					</xf:contentcheck>
					</div>
				</xf:if>

				<div class="p-content" id="content">
					{$content|raw}
				</div>
			</main>
		</div>
	</div>
</div>

<footer class="p-footer">
	<div class="p-footer-row">
		<div class="p-footer-row-main">
			<a href="{{ link('login/logout', null, {'t': csrf_token()}) }}">{{ phrase('log_out') }}</a>
		</div>

		<div class="p-footer-row-opposite">
			<span class="p-footer-version">v{$xf.version}</span>
			<xf:if is="$xf.visitor.canChangeLanguage()">
				<a href="{{ link('languages/admin') }}" data-xf-click="overlay" data-xf-init="tooltip" title="{{ phrase('language_chooser')|for_attr }}">
					<xf:fa icon="fa-globe" /> {$xf.language.title}
				</a>
			</xf:if>
		</div>
	</div>

	<xf:if contentcheck="true">
		<div class="p-footer-copyright">
		<xf:contentcheck>
			<xf:copyright />
			{{ phrase('extra_copyright') }}
		</xf:contentcheck>
		</div>
	</xf:if>

	<xf:if contentcheck="true">
		<div class="p-footer-debug">
		<xf:contentcheck>
			<xf:macro template="public:debug_macros" name="debug"
				arg-controller="{$controller}"
				arg-action="{$actionMethod}"
				arg-template="{$template}" />
		</xf:contentcheck>
		</div>
	</xf:if>
</footer>

<div class="u-bottomFixer js-bottomFixTarget"></div>

<xf:macro template="admin:helper_js_global" name="body" arg-jsState="{$jsState}" />

</body>
</html>

<xf:macro name="navigation_list"
	arg-children="!"
	arg-selectedTab="!"
	arg-selectedLink="!"
	arg-navigation=""
	arg-depth="1">

	<xf:if is="$children is not empty">
		<xf:if is="$depth == 1">
			<ul class="p-nav-listRoot" id="js-navAccordion">
		<xf:elseif is="$depth == 2" />
			<ul class="p-nav-listSection {{ $navigation.navigation_id == $selectedTab ? 'is-active' : '' }}">
		<xf:else />
			<ul class="p-nav-subList p-nav-list--depth{$depth}">
		</xf:if>
		<xf:foreach loop="$children" value="$child">
			<xf:macro name="navigation_list_entry"
				arg-navigation="{$child.record}"
				arg-children="{$child.children}"
				arg-selectedTab="{$selectedTab}"
				arg-selectedLink="{$selectedLink}"
				arg-depth="{$depth}" />
		</xf:foreach>
		</ul>
	</xf:if>
</xf:macro>
<xf:macro name="navigation_list_entry" arg-navigation="!" arg-children="!" arg-selectedTab="!" arg-selectedLink="!" arg-depth="1">
	<xf:if is="$depth == 1">
		<li class="p-nav-section{{ $navigation.navigation_id == $selectedTab ? ' is-active' : '' }}" data-navigation-id="{$navigation.navigation_id}">
			<div class="p-nav-sectionHeader">
				<a href="{{ link({$navigation.link}) }}" class="p-nav-sectionLink js-navSectionToggle">
					<xf:fa icon="{$navigation.icon} fa-fw" /> {$navigation.title}
				</a>
				<a class="p-nav-sectionToggle js-navSectionToggle" role="button" tabindex="0" aria-label="{{ phrase('toggle_expanded')|for_attr }}"></a>
			</div>
	<xf:elseif is="$depth == 2" />
		<li class="{{ $children ? 'p-nav-subSection' : 'p-nav-el' }} {{ $navigation.navigation_id == $selectedLink ? ' is-active' : '' }}" data-navigation-id="{$navigation.navigation_id}">
			<xf:if is="$children OR !$navigation.link">
				<span>
					<xf:if is="{$navigation.icon}"><xf:fa icon="{$navigation.icon} fa-fw" /> </xf:if>{$navigation.title}</span>
			<xf:else />
				<a href="{{ link($navigation.link) }}">{$navigation.title}</a>
			</xf:if>
	<xf:else />
		<li class="p-nav-el {{ $navigation.navigation_id == $selectedLink ? ' is-active' : '' }}" data-navigation-id="{$navigation.navigation_id}">
			<xf:if is="{$navigation.link}">
				<a href="{{ link($navigation.link) }}">{$navigation.title}</a>
			<xf:else />
				<span>{$navigation.title}</span>
			</xf:if>
	</xf:if>
		<xf:macro name="navigation_list"
			arg-navigation="{$navigation}"
			arg-children="{$children}"
			arg-selectedTab="{$selectedTab}"
			arg-selectedLink="{$selectedLink}"
			arg-depth="{{ $depth + 1 }}" />
	</li>
</xf:macro>]]></template>
  <template type="admin" title="PAGE_RUN_JOB" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<!DOCTYPE html>
<html id="XF" lang="{$xf.language.language_code}" dir="{$xf.language.text_direction}" class="has-no-js p-runJob"
	data-app="admin">
<head>

	<meta charset="utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=Edge" />
	<meta name="viewport" content="width=device-width, initial-scale=1">

	<title>
		<xf:title formatter="%s | {$xf.options.boardTitle} - {{ phrase('admin_control_panel') }}" fallback="{$xf.options.boardTitle} - {{ phrase('admin_control_panel') }}" />
	</title>
	<xf:foreach loop="$head" value="$headTag">
		{$headTag}
	</xf:foreach>

	<xf:macro template="public:helper_js_global" name="head" arg-app="admin" />
</head>
<body>

<main class="p-runJobContent">
	<div class="p-main-header">
		<div class="p-title">
			<h1 class="p-title-value">
				<xf:h1 fallback="{$xf.options.boardTitle}" />
			</h1>
			<xf:if contentcheck="true">
				<div class="p-title-pageAction"><xf:contentcheck><xf:pageaction /></xf:contentcheck></div>
			</xf:if>
		</div>
	</div>

	{$content|raw}
</main>


<xf:if contentcheck="true">
	<div class="p-runJobDebug">
	<xf:contentcheck>
		<xf:macro template="public:debug_macros" name="debug"
			arg-controller="{$controller}"
			arg-action="{$actionMethod}"
			arg-template="{$template}"
			arg-link="{{ false }}" />
	</xf:contentcheck>
	</div>
</xf:if>

<xf:macro template="admin:helper_js_global" name="body" arg-jsState="{$jsState}" />

</body>
</html>]]></template>
  <template type="admin" title="addon_action_macros" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro name="summary" arg-errors="{{ [] }}" arg-warnings="{{ [] }}">
	<xf:if contentcheck="true">
		<div class="block-row">
			<xf:contentcheck>
				<xf:macro template="addon_action_macros" name="errors" arg-errors="{$errors}" />
				<xf:macro template="addon_action_macros" name="warnings" arg-warnings="{$warnings}" />
			</xf:contentcheck>
		</div>
	</xf:if>
</xf:macro>

<xf:macro name="action" arg-errors="{{ [] }}" arg-warnings="{{ [] }}" arg-submit="!">
	<xf:if is="!$errors">
		<xf:if is="$warnings">
			<div class="block-body">
				<xf:checkboxrow rowtype="fullWidth noLabel">
					<xf:option name="confirm" data-xf-init="disabler" data-container=".js-submitDisable">
						<xf:label>{{ phrase('i_have_reviewed_warnings_and_i_still_wish_to_proceed') }}</xf:label>
					</xf:option>
				</xf:checkboxrow>
			</div>
		</xf:if>
		<xf:submitrow submit="{$submit}" rowtype="simple" rowclass="js-submitDisable" />
	</xf:if>
</xf:macro>

<xf:macro name="errors" arg-errors="{{ [] }}">
	<xf:if is="$errors">
		<div class="block-rowMessage block-rowMessage--error block-rowMessage--iconic">
			{{ phrase('following_errors_must_be_resolved_before_continuing:') }}
			<ul>
				<xf:foreach loop="$errors" value="$error">
					<li>{$error}</li>
				</xf:foreach>
			</ul>
		</div>
	</xf:if>
</xf:macro>

<xf:macro name="warnings" arg-warnings="{{ [] }}">
	<xf:if is="$warnings">
		<div class="block-rowMessage block-rowMessage--warning block-rowMessage--iconic">
			{{ phrase('prevent_potential_issues_please_resolve_following_warnings_before_continuing:') }}
			<ul>
				<xf:foreach loop="$warnings" value="$warning">
					<li>{$warning}</li>
				</xf:foreach>
			</ul>
		</div>
	</xf:if>
</xf:macro>]]></template>
  <template type="admin" title="addon_controls" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:if contentcheck="false">
	<xf:contentcheck>
		<xf:if contentcheck="false">
			<xf:contentcheck>
				<xf:if is="$hasOptions">
					<a href="{{ $hasOptions === true ? link('add-ons/options', $addOn) : link($hasOptions) }}" class="menu-linkRow">{{ phrase('options') }}</a>
				</xf:if>
				<xf:if is="$hasPublicTemplates">
					<a href="{{ link('styles/templates', $style, {'addon_id': $addOn.addon_id, 'type': 'public'}) }}" class="menu-linkRow">{{ phrase('public_templates') }}</a>
				</xf:if>
				<xf:if is="$hasEmailTemplates">
					<a href="{{ link('styles/templates', $style, {'addon_id': $addOn.addon_id, 'type': 'email'}) }}" class="menu-linkRow">{{ phrase('email_templates') }}</a>
				</xf:if>
				<xf:if is="$hasAdminTemplates">
					<a href="{{ link('styles/templates', $masterStyle, {'addon_id': $addOn.addon_id, 'type': 'admin'}) }}" class="menu-linkRow">{{ phrase('admin_templates') }}</a>
				</xf:if>
				<xf:if is="$hasPhrases">
					<a href="{{ link('languages/phrases', $language, {'addon_id': $addOn.addon_id}) }}" class="menu-linkRow">{{ phrase('phrases') }}</a>
				</xf:if>
			</xf:contentcheck>

			<hr class="menu-separator" />
		</xf:if>

		<xf:if contentcheck="false">
			<xf:contentcheck>
				<xf:if is="($addOn.isInstalled() OR $addOn.canUpgrade()) AND !$addOn.isLegacy()">
					<a href="{{ link('add-ons/toggle', $addOn, {'t': csrf_token()}) }}" class="menu-linkRow">{{ $addOn.active ? phrase('disable') : phrase('enable') }}</a>
				</xf:if>
				<xf:if is="$addOn.hasPendingChanges() AND $xf.development">
					<a href="{{ link('add-ons/sync-changes', $addOn, {'t': csrf_token()}) }}" class="menu-linkRow">{{ phrase('sync_changes') }}</a>
				</xf:if>
				<xf:if is="$addOn.isFileVersionValid() AND $addOn.canRebuild()">
					<a href="{{ link('add-ons/rebuild', $addOn) }}" class="menu-linkRow" data-xf-click="overlay">{{ phrase('rebuild') }}</a>
				</xf:if>
				<xf:if is="$addOn.isInstalled() AND !$addOn.canUpgrade()">
					<a href="{{ link('add-ons/uninstall', $addOn) }}" class="menu-linkRow" data-xf-click="overlay">{{ phrase('uninstall') }}</a>
				</xf:if>
			</xf:contentcheck>
		</xf:if>
	</xf:contentcheck>
<xf:else />
	<div class="menu-row">{{ phrase('no_items_to_display') }}</div>
</xf:if>]]></template>
  <template type="admin" title="addon_install" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link('add-ons/install', $addOn) }}" class="block">

	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				<xf:if is="$errors">
					{{ phrase('we_found_some_errors_while_trying_to_install_following_add_on:') }}
				<xf:elseif is="$warnings" />
					{{ phrase('please_review_warnings_and_confirm_you_wish_to_proceed_installing:') }}
				<xf:else />
					{{ phrase('please_confirm_that_you_want_to_install_following_add_on:') }}
				</xf:if>
				<strong>{$addOn.title} {$addOn.version_string}</strong>
			</xf:inforow>
		</div>

		<xf:macro template="addon_action_macros" name="summary"
			arg-errors="{$errors}"
			arg-warnings="{$warnings}" />

		<xf:macro template="addon_action_macros" name="action"
			arg-errors="{$errors}"
			arg-warnings="{$warnings}"
			arg-submit="{{ phrase('install') }}" />
	</div>

	<xf:redirect />

</xf:form>]]></template>
  <template type="admin" title="addon_install_from_archive" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('install_upgrade_from_archive') }}</xf:title>

<xf:form action="{{ link('add-ons/install-from-archive') }}" upload="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:uploadrow name="uploads[]" multiple="multiple" required="required" accept=".zip"
				label="{{ phrase('add_on_archives') }}" />
		</div>
		<xf:submitrow icon="upload" submit="{{ phrase('upload') }}" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="addon_install_from_archive_complete" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('add_on_batch_result') }}</xf:title>

<xf:if is="$hasErrors">
	<div class="blockMessage blockMessage--error">
		{{ phrase('one_or_more_of_add_ons_in_this_batch_failed_to_install_upgrade') }}
	</div>
<xf:else />
	<div class="blockMessage blockMessage--success">
		{{ phrase('all_add_ons_in_this_batch_installed_upgraded_successfully') }}
	</div>
</xf:if>

<div class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:datalist data-xf-init="responsive-data-list">
				<xf:datarow rowtype="header">
					<xf:cell>{{ phrase('add_on') }}</xf:cell>
					<xf:cell>{{ phrase('action') }}</xf:cell>
					<xf:cell>{{ phrase('version') }}</xf:cell>
				</xf:datarow>
				<xf:foreach loop="$batch.results" key="$addOnId" value="$result">
					<xf:set var="$addOn" value="{{ $addOns.{$addOnId} }}" />
					<xf:datarow rowclass="dataList-row--noHover">
						<xf:cell>{{ $addOn.title ?: $addOnId }}</xf:cell>
						<xf:cell>
							<xf:if is="$result.status == 'error'">
								<span data-xf-init="tooltip" data-trigger="hover focus click" title="{$result.error}">
									<xf:fa icon="fas fa-exclamation-circle" style="color: #c84448;" />
									{{ phrase('error') }}
								</span>
							<xf:else />
								<span data-xf-init="tooltip" data-trigger="hover focus click"
									title="{{ phrase('action_completed_successfully') }}">
									<xf:fa icon="fas fa-check-circle" style="color: #63b265;" />
									<xf:if is="$result.action == 'install'">
										{{ phrase('install') }}
									<xf:elseif is="$result.action == 'upgrade'" />
										{{ phrase('upgrade') }}
									<xf:elseif is="$result.action == 'rebuild'" />
										{{ phrase('rebuild') }}
									</xf:if>
								</span>
							</xf:if>
						</xf:cell>
						<xf:cell>
							<xf:if is="$result.status == 'success'">
								<xf:if is="$action.action == 'upgrade'">
									{$result.old_version} -&gt; {$addOn.version_string}
								<xf:else />
									{$addOn.version_string}
								</xf:if>
							</xf:if>
						</xf:cell>
					</xf:datarow>
				</xf:foreach>
			</xf:datalist>
		</div>
		<div class="block-footer">
			<span class="block-footer-controls"><a
				href="{{ link('add-ons') }}">{{ phrase('view_all_add_ons') }}</a></span>
		</div>
	</div>
</div>]]></template>
  <template type="admin" title="addon_install_from_archive_confirm" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('install_upgrade_from_archive') }}</xf:title>

<xf:form action="{{ link('add-ons/install-from-archive-confirm') }}" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:datalist data-xf-init="responsive-data-list">
				<xf:datarow rowtype="header">
					<xf:cell>{{ phrase('add_on') }}</xf:cell>
					<xf:cell>{{ phrase('action') }}</xf:cell>
					<xf:cell>{{ phrase('version') }}</xf:cell>
				</xf:datarow>
				<xf:foreach loop="$plannedActions" key="$addOnId" value="$action">
					<xf:datarow rowclass="dataList-row--noHover">
						<xf:cell><span data-xf-init="tooltip" title="{$addOnId}">{$action.title}</span></xf:cell>
						<xf:cell>
							<xf:if is="$action.action == 'install'">
								{{ phrase('install') }}
							<xf:elseif is="$action.action == 'upgrade'" />
								{{ phrase('upgrade') }}
							<xf:elseif is="$action.action == 'rebuild'" />
								{{ phrase('rebuild') }}
							</xf:if>
						</xf:cell>
						<xf:cell>
							<xf:if is="$action.action == 'upgrade'">
								{$action.oldVersion} -&gt; {$action.version}
							<xf:else />
								{$action.version}
							</xf:if>
						</xf:cell>
					</xf:datarow>
				</xf:foreach>
			</xf:datalist>
		</div>
		<xf:submitrow submit="{{ phrase('confirm_actions') }}" rowtype="simple"/>
	</div>
	<xf:hiddenval name="batch_id">{$batch.batch_id}</xf:hiddenval>
</xf:form>]]></template>
  <template type="admin" title="addon_list" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('add_ons') }}</xf:title>

<xf:css src="addon_list.less" />

<xf:pageaction>
	<xf:button href="{{ link('add-ons/install-from-archive') }}" overlay="true" icon="add">
		{{ phrase('install_upgrade_from_archive') }}
	</xf:button>
	<xf:if is="$disabled">
		<xf:button href="{{ link('add-ons/mass-toggle', null, {'enable': 1}) }}" overlay="true" data-cache="0">
			{{ phrase('enable') }}
		</xf:button>
	</xf:if>
	<xf:button href="{{ link('add-ons/mass-toggle', null, {'enable': 0}) }}" overlay="true" data-cache="0">
		{{ phrase('disable_all') }}
	</xf:button>
</xf:pageaction>

<xf:if is="$hasProcessing">
	<div class="blockMessage blockMessage--error blockMessage--iconic">
		{{ phrase('addon_action_pending_warning') }}
	</div>
</xf:if>

<xf:macro template="addon_list_macros" name="addon_list_filter" />

<xf:if is="$total">
	<div class="addOnList">
		<!--[XF:list_block:top]-->
		<xf:macro template="addon_list_macros" name="addon_list_block"
			arg-addOns="{$upgradeable}" arg-heading="{{ phrase('upgradeable_add_ons') }}" />
		<!--[XF:list_block:below_upgradeable]-->
		<xf:macro template="addon_list_macros" name="addon_list_block"
			arg-addOns="{$installable}" arg-heading="{{ phrase('installable_add_ons') }}" />
		<!--[XF:list_block:below_installable]-->
		<xf:macro template="addon_list_macros" name="addon_list_block"
			arg-addOns="{$installed}" arg-heading="{{ phrase('installed_add_ons') }}" />
		<!--[XF:list_block:below_installed]-->
		<xf:macro template="addon_list_macros" name="addon_list_block"
			arg-addOns="{$legacy}"
			arg-heading="{{ phrase('legacy_add_ons') }}"
			arg-desc="{{ phrase('legacy_add_ons_desc') }}" />
		<!--[XF:list_block:bottom]-->
	</div>
<xf:else />
	<div class="blockMessage">{{ phrase('no_add_ons_installed_or_available_to_be_installed') }}</div>
</xf:if>]]></template>
  <template type="admin" title="addon_list.less" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[.addOnList
{
	.block,
	.blockMessage
	{
		&.is-hidden
		{
			display: none;
		}
	}
}

.addOnList-row
{
	&.is-disabled
	{
		.contentRow-figure,
		.contentRow-header,
		.contentRow-lesser
		{
			opacity: 0.5;
		}

		.contentRow-header
		{
			text-decoration: line-through;
		}

		.contentRow-extra
		{
			// this is needed to move this above the semi-transparent layer that's created above
			position: relative;
			z-index: 2;
		}
	}

	&.is-hidden
	{
		display: none;
	}

	.contentRow-lesser
	{
		&.no-description
		{
			visibility: hidden;
		}
	}

	.is-match
	{
		text-decoration: underline;
		color: red;
	}
}

]]></template>
  <template type="admin" title="addon_list_macros" version_id="2010036" version_string="2.1.0 Beta 6"><![CDATA[<xf:macro name="addon_list_filter">
	<div class="block">
		<div class="block-outer">
			<xf:js src="xf/filter.js" min="1" />
			<div class="block-outer-opposite quickFilter u-jsOnly"
				data-xf-init="filter"
				data-key="addOns"
				data-search-target=".addOnList"
				data-search-row=".addOnList-row"
				data-search-row-group=".block"
				data-search-limit=".js-filterSearchable"
				data-no-results-format="<div class=&quot;blockMessage js-filterNoResults&quot;>%s</div>">

				<div class="inputGroup inputGroup--inline inputGroup--joined">
					<input type="text" class="input js-filterInput" placeholder="{{ phrase('filter...')|for_attr }}" />
					<span class="inputGroup-text">
						<xf:checkbox standalone="true">
							<xf:option class="js-filterPrefix" label="{{ phrase('prefix') }}" />
						</xf:checkbox>
					</span>
					<i class="inputGroup-text js-filterClear is-disabled" aria-hidden="true"></i>
				</div>
			</div>
		</div>
	</div>
</xf:macro>

<xf:macro name="addon_list_block" arg-addOns="!" arg-heading="!" arg-desc="">
	<xf:if is="$addOns is not empty">
		<div class="block">
			<div class="block-container">
				<h3 class="block-header">
					{$heading}
					<xf:if is="$desc">
						<span class="block-desc">
							{$desc}
						</span>
					</xf:if>
				</h3>
				<ol class="block-body">
					<xf:foreach loop="$addOns" value="$addOn">
						<xf:macro name="addon_list_item" arg-addOn="{$addOn}" />
					</xf:foreach>
				</ol>
			</div>
		</div>
	</xf:if>
</xf:macro>

<xf:macro name="addon_list_item" arg-addOn="!">
	<xf:css src="addon_list.less" />

	<li class="block-row block-row--separated addOnList-row{{ ($addOn.isInstalled() && !$addOn.active) ? ' is-disabled' : '' }}">
		<div class="contentRow">
			<xf:macro name="addon_list_item_icon" arg-addOn="{$addOn}" />
			<div class="contentRow-main">
				<xf:macro name="addon_list_item_menu" arg-addOn="{$addOn}" />
				<h3 class="contentRow-header js-filterSearchable">
					{$addOn.title} <span class="contentRow-muted">{$addOn.version_string}</span>
					<xf:if is="$addOn.is_processing">
						<span class="label label--error" data-xf-init="tooltip" title="{{ phrase('last_action:')|for_attr }} {{ $addOn.last_pending_action ?: phrase('n_a')|for_attr }}">{{ phrase('action_pending') }}</span>
					</xf:if>
				</h3>
				<div class="contentRow-lesser js-filterSearchable{{ !$addOn.description ? ' no-description' : '' }}">
					{{ $addOn.description ? snippet($addOn.description, 200)|nl2br : '&nbsp;' }}
				</div>
				<xf:macro name="addon_list_item_footer" arg-addOn="{$addOn}" />
			</div>
		</div>
	</li>
</xf:macro>

<xf:macro name="addon_list_item_icon" arg-addOn="!">
	<div class="contentRow-figure">
		<div class="contentRow-figureIcon">
			<xf:if is="$addOn.hasFaIcon()">
				<xf:fa icon="{$addOn.icon} fa-3x" />
			<xf:elseif is="$addOn.hasIcon()" />
				<img src="{$addOn.getIconUri()}" alt="{$addOn.title}" />
			<xf:elseif is="$addOn.isLegacy()" />
				<xf:fa icon="fa-question-circle fa-3x" />
			<xf:else />
				<xf:fa icon="fa-puzzle-piece fa-3x" />
			</xf:if>
		</div>
	</div>
</xf:macro>

<xf:macro name="addon_list_item_menu" arg-addOn="!">
	<div class="contentRow-extra">
		<xf:if is="$addOn.canUpgrade()">
			<xf:button href="{{ link('add-ons/upgrade', $addOn) }}" overlay="true" data-cache="0">
				{{ phrase('upgrade') }}
			</xf:button>
		<xf:elseif is="$addOn.canInstall()" />
			<xf:button href="{{ link('add-ons/install', $addOn) }}" overlay="true" data-cache="0">
				{{ phrase('install') }}
			</xf:button>
		</xf:if>
		<xf:if is="$addOn.isInstalled()">
			<xf:button class="button--link menuTrigger"
				data-xf-click="menu"
				aria-label="{{ phrase('more_options') }}"
				aria-expanded="false"
				aria-haspopup="true">
				<xf:fa icon="fa-cog" />
			</xf:button>
			<div class="menu" data-menu="menu" aria-hidden="true"
				data-href="{{ link('add-ons/controls', $addOn) }}"
				data-load-target=".js-controlsMenuBody">
				<div class="menu-content">
					<div class="js-controlsMenuBody">
						<div class="menu-row">{{ phrase('loading...') }}</div>
					</div>
				</div>
			</div>
		</xf:if>
	</div>
</xf:macro>

<xf:macro name="addon_list_item_footer" arg-addOn="!">
	<div class="contentRow-minor">
		<ul class="listInline listInline--bullet">
			<xf:if is="$addOn.isInstalled() && !$addOn.canUpgrade()">
				<xf:if is="$addOn.isLegacy()">
					<li class="addOnList-row-noSearch">
						<span class="label label--red" data-xf-init="tooltip"
							title="{{ phrase('this_legacy_add_on_cannot_be_enabled')|for_attr }}">
							{{ phrase('legacy_add_on') }}
						</span>
					</li>
				<xf:elseif is="$addOn.hasMissingFiles()" />
					<li class="addOnList-row-noSearch">
						<span class="label label--red" data-xf-init="tooltip"
							title="{{ phrase('some_files_or_directories_for_this_add_on_missing_x', {
								'missing_files': $addOn.missing_files|join(', ')
							})|for_attr }}">
							{{ phrase('missing_files') }}
						</span>
					</li>
				<xf:elseif is="!$addOn.isFileVersionValid()" />
					<li class="addOnList-row-noSearch">
						<span class="label label--primary" data-xf-init="tooltip"
							title="{{ phrase('add_on_files_do_not_appear_to_be_from_correct_version')|for_attr }}">
							{{ phrase('version_mismatch') }}
						</span>
					</li>
				<xf:elseif is="$addOn.hasPendingChanges()" />
					<li class="addOnList-row-noSearch">
						<span class="label label--primary" data-xf-init="tooltip"
							title="{{ phrase('this_add_on_has_pending_metadata_changes')|for_attr }}">
							{{ phrase('pending_changes') }}
						</span>
					</li>
				</xf:if>
			</xf:if>
			<xf:if is="$addOn.dev || $addOn.dev_url">
				<li>
					<xf:if is="$addOn.dev && $addOn.dev_url">
						<span class="addOnList-row-noSearch">{{ phrase('developer:') }}</span> <a href="{$addOn.dev_url}" target="_blank">{$addOn.dev}</a>
					<xf:elseif is="$addOn.dev" />
						<span class="addOnList-row-noSearch">{{ phrase('developer:') }}</span> {$addOn.dev}
					<xf:elseif is="$addOn.dev_url" />
						<span class="addOnList-row-noSearch">{{ phrase('developer:') }}</span> <a href="{$addOn.dev_url}" target="_blank">{$addOn.dev_url}</a>
					</xf:if>
				</li>
			</xf:if>
			<xf:if is="$addOn.faq_url">
				<li><a href="{$addOn.faq_url}" target="_blank">{{ phrase('faq') }}</a></li>
			</xf:if>
			<xf:if is="$addOn.support_url">
				<li><a href="{$addOn.support_url}" target="_blank">{{ phrase('support') }}</a></li>
			</xf:if>
			<xf:if is="$addOn.extra_urls is not empty">
				<xf:foreach loop="$addOn.extra_urls" key="$text" value="$url">
					<li><a href="{$url}" target="_blank">{$text}</a></li>
				</xf:foreach>
			</xf:if>
		</ul>
	</div>
</xf:macro>]]></template>
  <template type="admin" title="addon_macros" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro name="addon_edit" arg-addOnId="!" arg-row="{{ true }}" arg-includeAny="{{ false }}">
	<xf:set var="$addOnRepo" value="{{ $xf.app.em.getRepository('XF:AddOn') }}" />
	<xf:if is="$addOnRepo.canChangeAddOn()">
		<xf:macro name="addon_select" arg-addOnId="{$addOnId}" arg-row="{$row}" arg-includeAny="{$includeAny}" />
	<xf:else />
		<xf:hiddenval name="addon_id">{$addOnId}</xf:hiddenval>
	</xf:if>
</xf:macro>

<xf:macro name="addon_change_menu"
	arg-addOns="!"
	arg-route="!"
	arg-routeData="!"
	arg-routeParams="{{ {} }}"
	arg-currentAddOn="{{ null }}"
	arg-linkClass="button button--link">

	<a class="{$linkClass} menuTrigger"
		data-xf-click="menu"
		role="button"
		tabindex="0"
		aria-expanded="false"
		aria-haspopup="true">{{ phrase('add_on:') }} {{ $currentAddOn ? $currentAddOn.title : phrase('(any)') }}</a>

	<div class="menu" data-menu="menu" aria-hidden="true">
		<div class="menu-content">
			<h3 class="menu-header">{{ phrase('add_ons') }}</h3>
			<a href="{{ link($route, $routeData, {'addon_id': null} + $routeParams) }}"
				class="menu-linkRow {{ !$currentAddOn ? 'is-selected' : '' }}">
				{{ phrase('(any)') }}
			</a>
			<xf:foreach loop="$addOns" value="$addOn">
				<a href="{{ link($route, $routeData, {'addon_id': $addOn.addon_id} + $routeParams) }}"
					class="menu-linkRow {{ ($currentAddOn && $currentAddOn.addon_id == $addOn.addon_id) ? 'is-selected' : '' }}">
					{$addOn.title}
				</a>
			</xf:foreach>
		</div>
	</div>
</xf:macro>

<xf:macro name="addon_select" arg-addOnId="!" arg-row="{{ true }}" arg-class="" arg-includeAny="{{ false }}">
	<xf:set var="$addOnRepo" value="{{ $xf.app.em.getRepository('XF:AddOn') }}" />
	<xf:set var="$select">
		<xf:select name="addon_id" value="{{ $addOnId === false ? $addOnRepo.getDefaultAddOnId() : $addOnId }}" class="{$class}">
			<xf:option value=""></xf:option>
			<xf:if is="$includeAny">
				<xf:option value="_any">{{ phrase('(any)') }}</xf:option>
			</xf:if>
			<xf:foreach loop="{{ $addOnRepo.findAddOnsForList().fetch() }}" value="$addOn">
				<xf:option value="{$addOn.addon_id}">{$addOn.title}</xf:option>
			</xf:foreach>
		</xf:select>
	</xf:set>
	<xf:if is="$row">
		<xf:formrow rowtype="input"
			label="{{ phrase('add_on') }}">

			{$select|raw}
		</xf:formrow>
	<xf:else />
		{$select|raw}
	</xf:if>
</xf:macro>]]></template>
  <template type="admin" title="addon_mass_disable" version_id="2000036" version_string="2.0.0 Beta 6"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link('add-ons/mass-toggle', null, {'enable': 0}) }}" class="block" ajax="true">

	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				<p>{{ phrase('you_sure_you_want_to_disable_all_add_ons') }}</p>
				<xf:if is="!$disabled">
					<div class="blockMessage blockMessage--important blockMessage--iconic">
						{{ phrase('note_this_action_will_overwrite_previously_cached_disabled_add_ons_list') }}
					</div>
				</xf:if>
			</xf:inforow>
		</div>

		<xf:submitrow submit="{{ phrase('disable_all') }}" rowtype="simple" icon="disable" />
	</div>

	<xf:redirect />

</xf:form>]]></template>
  <template type="admin" title="addon_mass_enable" version_id="2000036" version_string="2.0.0 Beta 6"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link('add-ons/mass-toggle', null, {'enable': 1}) }}" class="block" ajax="true">

	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				<p>{{ phrase('you_sure_you_want_to_re_enable_previously_disabled_add_ons') }}</p>
				<p>{{ phrase('you_may_control_which_add_ons_re_enabled_from_list_below:') }}</p>
			</xf:inforow>

			<xf:checkboxrow name="to_enable">
				<xf:foreach loop="$addOns" key="$addOnId" value="$addOn">
					<xf:option value="{$addOnId}" selected="in_array($addOnId, $disabled)" label="{$addOn.title}">
						<xf:hint>{{ $addOn.active ? phrase('this_add_on_is_already_enabled') : '' }}</xf:hint>
					</xf:option>
				</xf:foreach>
			</xf:checkboxrow>
		</div>

		<xf:submitrow submit="{{ phrase('enable') }}" icon="disable" />
	</div>

	<xf:redirect />

</xf:form>]]></template>
  <template type="admin" title="addon_options" version_id="2000033" version_string="2.0.0 Beta 3"><![CDATA[<xf:title>{{ phrase('options:') }} {$addOn.title}</xf:title>

<xf:if is="$groups is not empty">
	<xf:form action="{{ link('options/update') }}" ajax="true" class="block">
		<div class="block-container">
			<xf:foreach loop="$groups" key="$groupId" value="$group">
				<xf:if is="{$groupedOptions.{$groupId}} is not empty">
					<h3 class="block-formSectionHeader">
						<span class="{{ $groups.count() > 1 ? 'collapseTrigger collapseTrigger--block' : '' }} is-active" data-xf-click="{{ $groups.count() > 1 ? 'toggle' : '' }}" data-target="< :up:next">
							{$group.title}
						</span>
						<span class="block-desc">
							{$group.description}
						</span>
					</h3>
					<div class="block-body {{ $groups.count() > 1 ? 'block-body--collapsible' : '' }} is-active">

						<xf:set var="$hundred" value="0" />

						<xf:foreach loop="{$groupedOptions.{$groupId}}" value="{$option}">

							<xf:if is="$group">
								<xf:set var="$curHundred" value="{{ floor($option.Relations.{$group.group_id}.display_order / 100) }}" />
								<xf:if is="{{ $curHundred > $hundred }}">
									<xf:set var="$hundred" value="{$curHundred}" />
									<hr class="formRowSep" />
								</xf:if>
							</xf:if>

							<xf:macro template="option_macros" name="option_row" arg-group="{$group}" arg-option="{$option}" arg-includeAddOnHint="{{ false }}" />
						</xf:foreach>
					</div>
				</xf:if>
			</xf:foreach>
			<xf:submitrow sticky="true" icon="save" />
		</div>
	</xf:form>
<xf:else />
	<div class="blockMessage">{{ phrase('no_items_have_been_created_yet') }}</div>
</xf:if>]]></template>
  <template type="admin" title="addon_rebuild" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link('add-ons/rebuild', $addOn) }}" class="block">

	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				<xf:if is="$errors">
					{{ phrase('we_found_some_errors_while_trying_to_rebuild_following_add_on:') }}
				<xf:elseif is="$warnings" />
					{{ phrase('please_review_warnings_and_confirm_you_wish_to_proceed_rebuilding:') }}
				<xf:else />
					{{ phrase('please_confirm_that_you_want_to_rebuild_following_add_on:') }}
				</xf:if>
				<strong>{$addOn.title} {$addOn.version_string}</strong>
			</xf:inforow>
		</div>

		<xf:macro template="addon_action_macros" name="summary"
			arg-errors="{$errors}"
			arg-warnings="{$warnings}" />

		<xf:macro template="addon_action_macros" name="action"
			arg-errors="{$errors}"
			arg-warnings="{$warnings}"
			arg-submit="{{ phrase('rebuild') }}" />
	</div>

	<xf:redirect />

</xf:form>]]></template>
  <template type="admin" title="addon_run_step" version_id="2000170" version_string="2.0.1"><![CDATA[<xf:title>{$actionText}{$xf.language.ellipsis}</xf:title>
<xf:page option="template">PAGE_RUN_JOB</xf:page>

<form action="{{ link($actionRoute, $addOn) }}" method="post"
	class="blockMessage"
	data-xf-init="auto-submit">

	<div>
		{$actionText}
		<strong>{$addOn.title} {$addOn.version_string}{{ repeat(' . ', $count ) }}</strong>
	</div>

	<div class="u-noJsOnly"><xf:button type="submit">{{ phrase('proceed...') }}</xf:button></div>

	<xf:hiddenval name="_xfProcessing">{$isProcessing}</xf:hiddenval>

	<xf:hiddenval name="continue">1</xf:hiddenval>
	<xf:hiddenval name="confirm">1</xf:hiddenval>

	<xf:hiddenval name="params">{$params|json}</xf:hiddenval>
	<xf:hiddenval name="count">{$count}</xf:hiddenval>
	<xf:hiddenval name="finished">{{ $finished ? 1 : 0 }}</xf:hiddenval>

	<xf:csrf />
</form>]]></template>
  <template type="admin" title="addon_uninstall" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link('add-ons/uninstall', $addOn) }}" class="block">

	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('please_confirm_that_you_want_to_uninstall_following_add_on:') }}
				<strong>{$addOn.title} {$addOn.version_string}</strong>
				<xf:if is="$addOn.isLegacy()">
					<div class="blockMessage blockMessage--warning blockMessage--iconic">
						{{ phrase('uninstalling_legacy_add_ons_may_leave_orphaned_data') }}
					</div>
				<xf:else />
					<div class="blockMessage blockMessage--important blockMessage--iconic">
						{{ phrase('this_will_remove_any_data_created_by_add_on') }}
					</div>
				</xf:if>
			</xf:inforow>
		</div>

		<xf:submitrow submit="{{ phrase('uninstall') }}" rowtype="simple" icon="delete" />
	</div>

	<xf:redirect />

</xf:form>]]></template>
  <template type="admin" title="addon_upgrade" version_id="2000038" version_string="2.0.0 Beta 8"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link('add-ons/upgrade', $addOn) }}" class="block">

	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				<xf:if is="$errors">
					{{ phrase('we_found_some_errors_while_trying_to_upgrade_following_add_on:') }}
				<xf:elseif is="$warnings" />
					{{ phrase('please_review_warnings_and_confirm_you_wish_to_proceed_upgrading:') }}
				<xf:else />
					{{ phrase('please_confirm_that_you_want_to_upgrade_following_add_on:') }}
				</xf:if>
				<strong>{$addOn.title} &middot; {$addOn.version_string} -&gt; {$addOn.json_version_string}</strong>
			</xf:inforow>
		</div>

		<xf:macro template="addon_action_macros" name="summary"
			arg-errors="{$errors}"
			arg-warnings="{$warnings}" />

		<xf:macro template="addon_action_macros" name="action"
			arg-errors="{$errors}"
			arg-warnings="{$warnings}"
			arg-submit="{{ phrase('upgrade') }}" />
	</div>

	<xf:redirect />

</xf:form>]]></template>
  <template type="admin" title="admin_delete" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link('admins/delete', $admin) }}" class="block" ajax="true">

	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('confirm_that_you_want_to_remove_following_user_as_an_admin:') }}
				<strong><a href="{{ link('admins/edit', $admin) }}">{$admin.username}</a></strong>
			</xf:inforow>

			<xf:passwordboxrow name="visitor_password"
				label="{{ phrase('your_password') }}"
				explain="{{ phrase('you_must_enter_your_current_password_to_validate_this_request') }}" />
		</div>

		<xf:submitrow icon="delete" />
	</div>

</xf:form>]]></template>
  <template type="admin" title="admin_edit" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:if is="$admin.isInsert()">
	<xf:title>{{ phrase('add_administrator') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_administrator:') }} {$admin.username}</xf:title>
</xf:if>

<xf:pageaction if="$admin.isUpdate()">
	<xf:button href="{{ link('admins/delete', $admin) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('admins/save', $admin) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:passwordboxrow name="visitor_password"
				label="{{ phrase('your_password') }}"
				explain="{{ phrase('you_must_enter_your_current_password_to_validate_this_request') }}" />

			<hr class="formRowSep" />

			<xf:if is="!$admin.user_id">
				<xf:textboxrow name="username" ac="single"
					label="{{ phrase('user') }}" />
			</xf:if>

			<xf:checkboxrow name="extra_user_group_ids" value="{$admin.extra_user_group_ids}" listclass="listColumns"
				label="{{ phrase('add_user_to_user_groups') }}">
				<xf:hint><br />
					<xf:checkbox standalone="true"><xf:option check-all="< .formRow" label="{{ phrase('select_all') }}" /></xf:checkbox>
				</xf:hint>
				<xf:options source="$userGroups" />
			</xf:checkboxrow>

			<hr class="formRowSep" />

			<xf:radiorow name="is_super_admin" value="{$admin.is_super_admin}"
				label="{{ phrase('administrator_type') }}">

				<xf:option value="1"
					label="{{ phrase('super_administrator') }}"
					hint="{{ phrase('super_admins_have_all_admin_permissions_and_can_manage_other_admins') }}" />
				<xf:option value="0" data-hide="true" data-xf-init="disabler" data-container=".js-adminPermissions"
					label="{{ phrase('regular_administrator') }}" />
			</xf:radiorow>

			<div class="js-adminPermissions">
				<xf:checkboxrow name="permission_cache" value="{{ array_keys($admin.permission_cache) }}" listclass="listColumns"
					label="{{ phrase('permissions') }}">
					<xf:hint><br />
						<xf:checkbox standalone="true"><xf:option check-all="< .formRow" label="{{ phrase('select_all') }}" /></xf:checkbox>
					</xf:hint>
					<xf:options source="$permissions" />
				</xf:checkboxrow>
			</div>
		</div>
		<xf:submitrow sticky="true" icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="admin_list" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('administrators') }}</xf:title>

<xf:pageaction>
	<xf:button href="{{ link('admins/add') }}" icon="add">{{ phrase('add_administrator') }}</xf:button>
</xf:pageaction>

<div class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:datalist>
				<xf:foreach loop="$admins" value="$admin">
					<xf:datarow>
						<xf:cell class="dataList-cell--min dataList-cell--image dataList-cell--imageSmall"
							href="{{ link('admins/edit', $admin) }}">
							<xf:avatar user="$admin.User" size="s" href="" />
						</xf:cell>
						<xf:main href="{{ link('admins/edit', $admin) }}" label="{$admin.User.username}">
							<xf:hint>
								<ul class="listInline listInline--bullet listInline--selfInline">
									<li>{{ phrase('last_login:') }} {{ $admin.last_login ? date_dynamic($admin.last_login) : phrase('n_a') }}</li>
									<xf:if is="$admin.is_super_admin">
										<li>{{ phrase('super_administrator') }}</li>
									</xf:if>
								</ul>
							</xf:hint>
						</xf:main>
						<xf:action href="{{ link('users/edit', $admin.User) }}">{{ phrase('user_info') }}</xf:action>
						<xf:delete href="{{ link('admins/delete', $admin) }}" overlay="true" />
					</xf:datarow>
				</xf:foreach>
			</xf:datalist>
		</div>
	</div>
</div>]]></template>
  <template type="admin" title="admin_navigation_delete" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link('admin-navigation/delete', $navigation) }}" class="block" ajax="true">

	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('please_confirm_that_you_want_to_delete_following:') }}
				<strong><a href="{{ link('admin-navigation/edit', $navigation) }}">{$navigation.title}</a></strong>
			</xf:inforow>

			<xf:if is="$hasChildren">
				<xf:inforow>
					<p class="block-rowMessage block-rowMessage--warning block-rowMessage--iconic">
						<strong>{{ phrase('note:') }}</strong>
						{{ phrase('deleting_parent_also_deletes_children') }}
					</p>
				</xf:inforow>
			</xf:if>
		</div>

		<xf:submitrow rowtype="simple" icon="delete" />
	</div>

	<xf:redirect />

</xf:form>]]></template>
  <template type="admin" title="admin_navigation_edit" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[<xf:if is="$navigation.isInsert()">
	<xf:title>{{ phrase('add_navigation') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_navigation:') }} {$navigation.title}</xf:title>
</xf:if>

<xf:pageaction if="$navigation.isUpdate()">
	<xf:button href="{{ link('admin-navigation/delete', $navigation) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('admin-navigation/save', $navigation) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:textboxrow name="navigation_id" value="{$navigation.navigation_id}" maxlength="{{ max_length($navigation, 'navigation_id') }}"
				label="{{ phrase('admin_navigation_id') }}"
				dir="ltr" />
			<xf:textboxrow name="title" value="{{ $navigation.exists() ? $navigation.MasterTitle.phrase_text : '' }}"
				label="{{ phrase('title') }}" />
			<xf:textboxrow name="link" value="{$navigation.link}" maxlength="{{ max_length($navigation, 'link') }}"
				label="{{ phrase('link') }}"
				dir="ltr" />
			<xf:textboxrow name="icon" value="{$navigation.icon}" maxlength="{{ max_length($navigation, 'icon') }}"
				label="{{ phrase('admin_navigation_icon') }}"
				explain="{{ phrase('admin_navigation_icon_explain') }}"
				dir="ltr" />

			<hr class="formRowSep" />

			<xf:selectrow name="parent_navigation_id" value="{$navigation.parent_navigation_id}"
				label="{{ phrase('parent_navigation_entry') }}">

				<xf:option>&nbsp;</xf:option>
				<xf:foreach loop="$navigationTree.getFlattened()" value="$treeEntry">
					<xf:option value="{$treeEntry.record.navigation_id}">{{ repeat('--', $treeEntry.depth) }}
						{$treeEntry.record.title}
					</xf:option>
				</xf:foreach>
			</xf:selectrow>

			<xf:macro template="display_order_macros" name="row"
				arg-value="{$navigation.display_order}" />

			<hr class="formRowSep" />

			<xf:selectrow name="admin_permission_id" value="{$navigation.admin_permission_id}"
				label="{{ phrase('required_admin_permission') }}">

				<xf:option>&nbsp;</xf:option>
				<xf:foreach loop="$adminPermissions" value="$adminPermission">
					<xf:option value="{$adminPermission.admin_permission_id}">{$adminPermission.title}</xf:option>
				</xf:foreach>
			</xf:selectrow>
			<xf:checkboxrow>
				<xf:option name="debug_only" selected="$navigation.debug_only">{{
					phrase('display_this_navigation_in_debug_mode_only') }}
				</xf:option>
				<xf:option name="development_only" selected="$navigation.debug_only">{{
					phrase('display_this_navigation_in_development_mode_only') }}
				</xf:option>
				<xf:option name="hide_no_children" selected="$navigation.hide_no_children">{{
					phrase('hide_this_navigation_when_there_no_viewable_children') }}
				</xf:option>
			</xf:checkboxrow>

			<hr class="formRowSep" />

			<xf:macro template="addon_macros" name="addon_edit" arg-addOnId="{$navigation.addon_id}" />

		</div>

		<xf:submitrow sticky="true" icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="admin_navigation_list" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('admin_navigation') }}</xf:title>

<xf:pageaction>
	<xf:button href="{{ link('admin-navigation/add') }}" icon="add">{{ phrase('add_navigation') }}</xf:button>
</xf:pageaction>

<div class="block">
	<div class="block-outer">
		<xf:macro template="filter_macros" name="quick_filter" arg-key="admin-navigation" arg-class="block-outer-opposite" />
	</div>
	<div class="block-container">
		<div class="block-body">
			<xf:datalist>
				<xf:macro name="navigation_list" arg-children="{$tree}" />
			</xf:datalist>
		</div>
		<div class="block-footer">
			<span class="block-footer-counter">{{ display_totals($tree.getFlattened(0)) }}</span>
		</div>
	</div>
</div>

<xf:macro name="navigation_list" arg-children="!" arg-depth="1">
	<xf:foreach loop="$children" value="$child">
		<xf:macro name="navigation_list_entry" arg-navigation="{$child.record}" arg-children="{$child.children}" arg-depth="{$depth}" />
	</xf:foreach>
</xf:macro>

<xf:macro name="navigation_list_entry" arg-navigation="!" arg-children="!" arg-depth="1">
	<xf:if is="$depth == 1">
		<xf:datarow rowtype="subsection">
			<xf:cell href="{{ link('admin-navigation/edit', $navigation) }}" hash="{$navigation.navigation_id}">
				<div class="dataList-textRow">
					<xf:if is="{$navigation.icon}"><xf:fa icon="{$navigation.icon} fa-fw" /></xf:if>
					{$navigation.title}
					<xf:if is="{$navigation.link}"><span class="dataList-hint" dir="auto">{$navigation.link}</span></xf:if>
				</div>
			</xf:cell>
			<xf:cell class="dataList-cell--min dataList-cell--hint">{$navigation.display_order}</xf:cell>
			<xf:delete href="{{ link('admin-navigation/delete', $navigation) }}" />
		</xf:datarow>
	<xf:else />
		<xf:datarow>
			<xf:cell href="{{ link('admin-navigation/edit', $navigation) }}"
				class="dataList-cell--d{{ $depth - 1 }}"
				hash="{$navigation.navigation_id}">

				<div class="dataList-textRow">
					{$navigation.title}
					<xf:if is="{$navigation.link}"><span class="dataList-hint" dir="auto">{$navigation.link}</span></xf:if>
				</div>
			</xf:cell>
			<xf:cell class="dataList-cell--min dataList-cell--hint">{$navigation.display_order}</xf:cell>
			<xf:delete href="{{ link('admin-navigation/delete', $navigation) }}" />
		</xf:datarow>
	</xf:if>
	<xf:macro name="navigation_list" arg-children="{$children}" arg-depth="{{ $depth + 1 }}" />
</xf:macro>]]></template>
  <template type="admin" title="admin_navigation_sort" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('sort_admin_navigation') }}</xf:title>

<xf:macro template="public:nestable_macros" name="setup" />

<xf:form action="{{ link('admin-navigation/sort') }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<div class="nestable-container" data-xf-init="nestable" data-parent-id="">
				<xf:macro name="navigation_list" arg-children="{$navTree}" />
				<xf:hiddenval name="navigation" value="" />
			</div>
		</div>
		<xf:submitrow icon="save" rowtype="simple" />
	</div>
</xf:form>

<xf:macro name="navigation_list" arg-children="!">
	<ol class="nestable-list">
		<xf:foreach loop="$children" key="$id" value="$child">
			<xf:macro name="navigation_list_entry" arg-nav="{$child.record}" arg-children="{$child.children}" />
		</xf:foreach>
	</ol>
</xf:macro>

<xf:macro name="navigation_list_entry" arg-nav="!" arg-children="!">
	<li class="nestable-item" data-id="{$nav.navigation_id}">
		<div class="nestable-handle" aria-label="{{ phrase('drag_handle')|for_attr }}"><xf:fa icon="fa-bars" /></div>
		<div class="nestable-content">{$nav.title}</div>
		<xf:if is="$children is not empty">
			<xf:macro name="navigation_list" arg-children="{$children}" />
		</xf:if>
	</li>
</xf:macro>]]></template>
  <template type="admin" title="admin_permission_edit" version_id="2000033" version_string="2.0.0 Beta 3"><![CDATA[<xf:if is="$permission.isInsert()">
	<xf:title>{{ phrase('add_admin_permission') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_admin_permission:') }} {$permission.title}</xf:title>
</xf:if>

<xf:pageaction if="$permission.isUpdate()">
	<xf:button href="{{ link('admin-permissions/delete', $permission) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('admin-permissions/save', $permission) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">

			<xf:textboxrow name="admin_permission_id" value="{$permission.admin_permission_id}"
				maxlength="{{ max_length($permission, 'admin_permission_id') }}"
				label="{{ phrase('permission_id') }}"
				dir="ltr" />

			<xf:textboxrow name="title" value="{{ $permission.exists() ? $permission.MasterTitle.phrase_text : '' }}"
				label="{{ phrase('title') }}" />

			<xf:macro template="display_order_macros" name="row"
				arg-value="{$permission.display_order}" />

			<xf:macro template="addon_macros" name="addon_edit" arg-addOnId="{$permission.addon_id}" />
		</div>

		<xf:submitrow sticky="true" icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="admin_permission_list" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('admin_permissions') }}</xf:title>

<xf:pageaction>
	<xf:button href="{{ link('admin-permissions/add') }}" icon="add">{{ phrase('add_admin_permission') }}</xf:button>
</xf:pageaction>

<xf:form action="" class="block">
	<div class="block-outer">
		<xf:macro template="filter_macros" name="quick_filter" arg-key="admin-permissions" arg-class="block-outer-opposite" />
	</div>
	<div class="block-container">
		<div class="block-body">
			<xf:datalist>
				<xf:foreach loop="$permissions" value="$permission">
					<xf:datarow href="{{ link('admin-permissions/edit', $permission) }}"
						label="{$permission.title}"
						hint="{$permission.admin_permission_id}"
						delete="{{ link('admin-permissions/delete', $permission) }}" />
				</xf:foreach>
			</xf:datalist>
		</div>
		<div class="block-footer">
			<span class="block-footer-counter">{{ display_totals($permissions) }}</span>
		</div>
	</div>
</xf:form>]]></template>
  <template type="admin" title="advertising_edit" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:if is="$ad.isInsert()">
	<xf:title>{{ phrase('add_advertisement') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_advertisement:') }} {$ad.title}</xf:title>
</xf:if>

<xf:pageaction if="$ad.isUpdate()">
	<xf:button href="{{ link('advertising/delete', $ad) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('advertising/save', $ad) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">

			<xf:textboxrow name="title" value="{$ad.title}" maxlength="{{ max_length($ad, 'title') }}"
				label="{{ phrase('title') }}"
				explain="{{ phrase('provide_short_title_for_this_advertisement') }}" />

			<xf:selectrow name="position_id" value="{$ad.position_id}"
				data-xf-init="desc-loader"
				data-desc-url="{{ link('advertising/get-position-description') }}"
				label="{{ phrase('position') }}">
				<xf:option />
				<xf:options source="{$advertisingPositions}" />
				<xf:html>
					<div class="js-descTarget formRow-explain">{$ad.AdvertisingPosition.description|raw}</div>
				</xf:html>
			</xf:selectrow>

			<xf:codeeditorrow name="ad_html" value="{$ad.ad_html}" class="codeEditor--short" mode="html"
				label="{{ phrase('html') }}"
				explain="{{ phrase('you_may_use_xenforo_template_syntax_here') }}" />

			<xf:checkboxrow
				label="{{ phrase('display_criteria') }}"
				explain="{{ phrase('use_above_criteria_to_restrict_display_of_this_advertisement') }}">

				<xf:option selected="{$ad.display_criteria.user_groups}"
					label="{{ phrase('user_is_member_of_any_of_selected_user_groups:') }}">

					<xf:select name="display_criteria[user_groups]" size="4" multiple="true" value="{$ad.display_criteria.user_groups}">
						<xf:foreach loop="$userGroups" key="$userGroupId" value="$userGroupTitle">
							<xf:option value="{$userGroupId}">{$userGroupTitle}</xf:option>
						</xf:foreach>
					</xf:select>
				</xf:option>

				<xf:option selected="{$ad.display_criteria.not_user_groups}"
					label="{{ phrase('user_is_not_member_of_any_of_selected_user_groups:') }}">

					<xf:select name="display_criteria[not_user_groups]" size="4" multiple="true" value="{$ad.display_criteria.not_user_groups}">
						<xf:foreach loop="$userGroups" key="$userGroupId" value="$userGroupTitle">
							<xf:option value="{$userGroupId}">{$userGroupTitle}</xf:option>
						</xf:foreach>
					</xf:select>
				</xf:option>
			</xf:checkboxrow>

			<xf:macro template="display_order_macros" name="row"
				arg-value="{$ad.display_order}"
				arg-explain="{{ phrase('enter_display_order_relative_to_other_ads_in_same_position') }}" />

			<xf:checkboxrow>
				<xf:option name="active" value="1" selected="$ad.active">{{ phrase('advertisement_is_active') }}</xf:option>
			</xf:checkboxrow>
		</div>
		<xf:submitrow sticky="true" icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="advertising_list" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('advertising') }}</xf:title>

<xf:pageaction>
	<xf:button href="{{ link('advertising/add') }}" icon="add">{{ phrase('add_advertisement') }}</xf:button>
</xf:pageaction>

<xf:if is="$ads is not empty">
	<xf:form action="{{ link('advertising/toggle') }}" class="block" ajax="true">
		<div class="block-outer">
			<xf:macro template="filter_macros" name="quick_filter" arg-key="advertising" arg-class="block-outer-opposite" />
		</div>
		<div class="block-container">
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$positions" key="$positionId" value="$position">
						<xf:if is="{$ads.{$positionId}} is not empty">
							<tbody class="dataList-rowGroup">
								<xf:datarow
									colspan="3"
									label="{$position.title}"
									explain="{$position.description|raw}"
									rowtype="subsection"
									rowclass="dataList-row--noHover" />
								<xf:foreach loop="{$ads.{$positionId}}" value="$ad">
									<xf:datarow
										label="{$ad.title}"
										href="{{ link('advertising/edit', $ad) }}"
										delete="{{ link('advertising/delete', $ad) }}">

										<xf:toggle name="active[{$ad.ad_id}]" selected="$ad.active"
											class="dataList-cell--separated" submit="true"
											tooltip="{{ phrase('enable_disable_x', {'title': $ad.title}) }}" />
									</xf:datarow>
								</xf:foreach>
							</tbody>
						</xf:if>
					</xf:foreach>
				</xf:datalist>
				<div class="block-footer">
					<span class="block-footer-counter">{{ display_totals($totalAds) }}</span>
				</div>
			</div>
		</div>
	</xf:form>
<xf:else />
	<div class="blockMessage">{{ phrase('no_items_have_been_created_yet') }}</div>
</xf:if>

<xf:macro template="option_macros" name="option_form_block" arg-options="{$options}" />]]></template>
  <template type="admin" title="advertising_position_edit" version_id="2000036" version_string="2.0.0 Beta 6"><![CDATA[<xf:if is="$advertisingPosition.isInsert()">
	<xf:title>{{ phrase('add_advertising_position') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_advertising_position:') }} {$advertisingPosition.title}</xf:title>
</xf:if>

<xf:pageaction if="$advertisingPosition.isUpdate()">
	<xf:button href="{{ link('advertising/positions/delete', $advertisingPosition) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('advertising/positions/save', $advertisingPosition) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">

			<xf:textboxrow name="position_id" value="{$advertisingPosition.position_id}"
				maxlength="{{ max_length($advertisingPosition, 'position_id') }}"
				label="{{ phrase('position_id') }}"
				dir="ltr" />

			<xf:textboxrow name="title" value="{$advertisingPosition.MasterTitle.phrase_text}"
				label="{{ phrase('title') }}" />

			<xf:codeeditorrow name="description" value="{$advertisingPosition.MasterDescription.phrase_text}"
				mode="html" data-line-wrapping="true"
				class="codeEditor--autoSize codeEditor--proportional"
				label="{{ phrase('description') }}"
				hint="{{ phrase('you_may_use_html') }}" />

			<xf:formrow rowtype="input"
				label="{{ phrase('arguments') }}"
				explain="{{ phrase('list_arguments_that_this_advertising_position_requires') }}">

				<ul class="listPlain inputGroup-container">
					<xf:foreach loop="$advertisingPosition.arguments" key="$counter" value="$argument">
						<li class="inputGroup">
							<xf:textbox name="arguments[{$counter}][argument]" value="{$argument.argument}" placeholder="{{ phrase('name_of_argument') }}" size="20" />
							<span class="inputGroup-splitter"></span>

							<xf:checkbox value="{$argument.required}" standalone="true">
								<xf:option name="arguments[{$counter}][required]" value="1" labelclass="inputGroup-text">{{ phrase('required') }}</xf:option>
							</xf:checkbox>
						</li>
					</xf:foreach>

					<li class="inputGroup" data-xf-init="field-adder" data-increment-format="arguments[{counter}]">
						<xf:textbox name="arguments[{$nextCounter}][argument]" placeholder="{{ phrase('name_of_argument') }}" size="20" />
						<span class="inputGroup-splitter"></span>

						<xf:checkbox standalone="true">
							<xf:option name="arguments[{$nextCounter}][required]" value="1" labelclass="inputGroup-text">{{ phrase('required') }}</xf:option>
						</xf:checkbox>
					</li>
				</ul>
			</xf:formrow>

			<xf:checkboxrow>
				<xf:option name="active" value="1" selected="$advertisingPosition.active">{{ phrase('advertising_position_is_active') }}</xf:option>
			</xf:checkboxrow>

			<xf:macro template="addon_macros" name="addon_edit" arg-addOnId="{$advertisingPosition.addon_id}" />
		</div>
		<xf:submitrow sticky="true" icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="advertising_position_list" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('advertising_positions') }}</xf:title>

<xf:pageaction>
	<xf:button href="{{ link('advertising/positions/add') }}" icon="add">{{ phrase('add_advertising_position') }}</xf:button>
</xf:pageaction>

<xf:if is="$advertisingPositions is not empty">
	<xf:form action="{{ link('advertising/positions/toggle') }}" class="block" ajax="true">
		<div class="block-outer">
			<xf:macro template="filter_macros" name="quick_filter" arg-key="advertising-positions" arg-class="block-outer-opposite" />
		</div>
		<div class="block-container">
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$advertisingPositions" value="$advertisingPosition">
						<xf:datarow
							label="{$advertisingPosition.title}"
							explain="{$advertisingPosition.description|raw}"
							href="{{ link('advertising/positions/edit', $advertisingPosition) }}"
							delete="{{ link('advertising/positions/delete', $advertisingPosition) }}">

							<xf:toggle name="active[{$advertisingPosition.position_id}]" selected="$advertisingPosition.active"
								class="dataList-cell--separated" submit="true"
								tooltip="{{ phrase('enable_disable_x', {'title': $advertisingPosition.position_id}) }}" />
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($advertisingPositions) }}</span>
			</div>
		</div>
	</xf:form>
<xf:else />
	<div class="blockMessage">{{ phrase('no_items_have_been_created_yet') }}</div>
</xf:if>]]></template>
  <template type="admin" title="api_key_edit" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:if is="$apiKey.isInsert()">
	<xf:title>{{ phrase('add_api_key') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_api_key') }}</xf:title>
</xf:if>

<xf:pageaction if="$apiKey.isUpdate()">
	<xf:button href="{{ link('api-keys/delete', $apiKey) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('api-keys/save', $apiKey) }}" ajax="true" data-force-flash-message="on" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:if is="$apiKey.isUpdate()">
				<xf:formrow label="{{ phrase('api_key') }}" rowtype="button">
					<code>{$apiKey.api_key_snippet}</code>
					<xf:button href="{{ link('api-keys/view-key', $apiKey) }}"
						data-xf-click="overlay"
						class="button--link">{{ phrase('view_full_key') }}
					</xf:button>

					<xf:button href="{{ link('api-keys/regenerate', $apiKey) }}"
						data-xf-click="overlay"
						class="button--link">{{ phrase('regenerate_key') }}
					</xf:button>
				</xf:formrow>
			</xf:if>

			<xf:textboxrow name="title"
				label="{{ phrase('title') }}"
				maxlength="{{ max_length($apiKey, 'title') }}"
				value="{$apiKey.title}">
				<xf:explain>{{ phrase('provide_title_for_key_seen_list_api_keys') }}</xf:explain>
			</xf:textboxrow>

			<xf:if is="$apiKey.isUpdate()">
				<xf:macro template="api_key_macros" name="key_type_row" arg-apiKey="{$apiKey}" />

				<xf:formrow label="{{ phrase('created') }}">
					<xf:date time="{$apiKey.creation_date}" />
					&middot;
					{{ phrase('by_user_x', {'name': $apiKey.Creator.username ?: phrase('n_a') }) }}
				</xf:formrow>

				<xf:formrow label="{{ phrase('last_used') }}">
					<xf:if is="$apiKey.last_use_date">
						<xf:date time="{$apiKey.last_use_date}" />
					<xf:else />
						{{ phrase('n_a') }}
					</xf:if>
				</xf:formrow>
			<xf:else />
				<xf:radiorow name="key_type" label="{{ phrase('key_type') }}" value="guest">
					<xf:option value="guest">{{ phrase('guest_key') }}</xf:option>
					<xf:option label="{{ phrase('user_key') }}" value="user"
						data-xf-init="disabler">
						<xf:textbox name="username" ac="single" autocomplete="off"
							value="{{ $apiKey.key_type == 'user' ? $apiKey.User.username : '' }}"
							maxlength="{{ max_length($xf.visitor, 'username') }}" />
						<xf:afterhint>{{ phrase('enter_username_key_authenticate_as') }}</xf:afterhint>
					</xf:option>
					<xf:option value="super">{{ phrase('super_user_key') }}</xf:option>
					<xf:explain>{{ phrase('cannot_be_changed_after_creation_requires_new_api_key') }}</xf:explain>
				</xf:radiorow>
			</xf:if>

			<xf:radiorow label="{{ phrase('allowed_scopes') }}" name="allow_all_scopes"
				value="{$apiKey.allow_all_scopes}">
				<xf:option value="0" label="{{ phrase('selected_scopes_only') }}:">
					<xf:checkbox>
						<xf:foreach loop="$scopes" value="$scope">
							<xf:option name="scopes[]"
								value="{$scope.api_scope_id}"
								checked="{$apiKey.scopes.{$scope.api_scope_id}}"
								label="{$scope.api_scope_id}"
								hint="{$scope.description}" />
						</xf:foreach>
					</xf:checkbox>
				</xf:option>
				<xf:option value="1" label="{{ phrase('all_scopes') }}"/>
				<xf:explain>{{ phrase('api_scopes_explain') }}</xf:explain>
			</xf:radiorow>

			<hr class="formRowSep" />

			<xf:checkboxrow>
				<xf:option name="active" selected="$apiKey.active"
					label="{{ phrase('api_key_is_active') }}"
					hint="{{ phrase('use_this_to_disable_api_key') }}"/>
			</xf:checkboxrow>
		</div>
		<xf:submitrow icon="save" sticky="true" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="api_key_list" version_id="2010052" version_string="2.1.0 Release Candidate 2"><![CDATA[<xf:title>{{ phrase('api_keys') }}</xf:title>

<xf:pageaction>
	<xf:button href="{{ link('api-keys/add') }}" icon="add">{{ phrase('add_api_key') }}</xf:button>
</xf:pageaction>

<xf:if is="$newKey">
	<div class="blockMessage blockMessage--important blockMessage--iconic">
		{{ phrase('api_key_x_created_or_updated_key_use_follows', {'title': $newKey.title}) }}
		<div style="margin: 1em 0; text-align: center"><xf:macro template="api_key_macros" name="copy_key" arg-apiKey="{$newKey}" /></div>
		<xf:macro template="api_key_macros" name="key_usage" arg-apiKey="{$newKey}" />
	</div>
</xf:if>

<xf:if is="$apiKeys is not empty">
	<xf:form action="{{ link('api-keys/toggle') }}" class="block" ajax="true">
		<div class="block-outer">
			<xf:macro template="filter_macros" name="quick_filter" arg-key="apiKeys" arg-class="block-outer-opposite" />
		</div>
		<div class="block-container">
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$apiKeys" value="$apiKey">
						<xf:datarow
							label="{$apiKey.title}"
							href="{{ link('api-keys/edit', $apiKey) }}"
							delete="{{ link('api-keys/delete', $apiKey) }}">
							<xf:explain>
								<ul class="listInline listInline--bullet">
									<li>{$apiKey.api_key_snippet}</li>
									<li>
										<xf:macro template="api_key_macros" name="key_type" arg-apiKey="{$apiKey}" />
									</li>
									<li>
										{{ phrase('created') }}:
										<xf:date time="{$apiKey.creation_date}"/>
									</li>
									<xf:if is="$apiKey.last_use_date">
										<li>
											{{ phrase('last_used') }}:
											<xf:date time="{$apiKey.last_use_date}"/>
										</li>
									</xf:if>
								</ul>
							</xf:explain>
							<xf:toggle name="active[{$apiKey.api_key_id}]" selected="$apiKey.active"
								class="dataList-cell--separated" submit="true"
								tooltip="{{ phrase('enable_disable_x', {'title': $apiKey.title}) }}" />
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
		</div>
	</xf:form>
<xf:else />
	<div class="blockMessage">{{ phrase('no_items_have_been_created_yet') }}</div>
</xf:if>]]></template>
  <template type="admin" title="api_key_macros" version_id="2010053" version_string="2.1.0 Release Candidate 3"><![CDATA[<xf:macro name="key_type" arg-apiKey="!">
	<xf:if is="$apiKey.key_type == 'super'">
		{{ phrase('super_user_key') }}
	<xf:elseif is="$apiKey.key_type == 'user'"/>
		{{ phrase('user_key') }}:
		<xf:username user="$apiKey.User" href="" defaultname="{{ phrase('deleted_member') }}"/>
	<xf:else/>
		{{ phrase('guest_key') }}
	</xf:if>
</xf:macro>

<xf:macro name="key_type_row" arg-apiKey="!">
	<xf:formrow label="{{ phrase('key_type') }}"
		explain="{{ phrase('cannot_be_changed_after_creation_requires_new_api_key') }}">
		<xf:macro name="key_type" arg-apiKey="{$apiKey}" />
	</xf:formrow>
</xf:macro>

<xf:macro name="copy_key_row" arg-apiKey="!">
	<xf:formrow label="{{ phrase('api_key') }}" rowtype="button">
		<xf:macro name="copy_key" arg-apiKey="{$apiKey}" />

		<div class="formRow-explain">
			<xf:macro name="key_usage" arg-apiKey="{$apiKey}" />
		</div>
	</xf:formrow>
</xf:macro>

<xf:macro name="copy_key" arg-apiKey="!">
	<code class="js-copyTarget">{$apiKey.api_key}</code>
	<xf:button icon="copy"
		data-xf-init="copy-to-clipboard"
		data-copy-target=".js-copyTarget"
		data-success="{{ phrase('api_key_copied_to_clipboard') }}"
		class="button--link" />
</xf:macro>

<xf:macro name="key_usage" arg-apiKey="!">
	{{ phrase('key_provided_to_api_via_header') }}

	<xf:if is="$apiKey.key_type == 'super'">
		{{ phrase('as_super_user_key_include_user_header') }}
	</xf:if>
</xf:macro>]]></template>
  <template type="admin" title="api_key_regenerate" version_id="2010132" version_string="2.1.1 Beta 2"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link('api-keys/regenerate', $apiKey) }}" class="block" ajax="true">

	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('please_confirm_that_you_want_to_regenerate_following_api_key') }}:
				<strong><a href="{{ link('api-keys/edit', $apiKey) }}">{$apiKey.title}</a></strong>
				<span>{{ phrase('applications_using_old_key_not_function_until_update') }}</span>
			</xf:inforow>
		</div>

		<xf:submitrow rowtype="simple" submit="{{ phrase('regenerate_key') }}"/>
	</div>

</xf:form>]]></template>
  <template type="admin" title="api_key_view" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('api_key_details') }}: {$apiKey.title}</xf:title>

<div class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:macro template="api_key_macros" name="copy_key_row" arg-apiKey="{$apiKey}" />
			<xf:macro template="api_key_macros" name="key_type_row" arg-apiKey="{$apiKey}" />
		</div>
	</div>
</div>]]></template>
  <template type="admin" title="api_scope_edit" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:if is="$scope.isInsert()">
	<xf:title>{{ phrase('add_api_scope') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_api_scope') }}: {$permission.title}</xf:title>
</xf:if>

<xf:pageaction if="$scope.isUpdate()">
	<xf:button href="{{ link('api-scopes/delete', $scope) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('api-scopes/save', $scope) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">

			<xf:textboxrow name="api_scope_id" value="{$scope.api_scope_id}"
				maxlength="{{ max_length($scope, 'api_scope_id') }}"
				label="{{ phrase('scope_id') }}"
				dir="ltr" />

			<xf:textboxrow name="description" value="{{ $scope.exists() ? $scope.MasterDescription.phrase_text : '' }}"
				label="{{ phrase('description') }}" />

			<xf:macro template="addon_macros" name="addon_edit" arg-addOnId="{$scope.addon_id}" />
		</div>

		<xf:submitrow sticky="true" icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="api_scope_list" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('api_scopes') }}</xf:title>

<xf:pageaction>
	<xf:button href="{{ link('api-scopes/add') }}" icon="add">{{ phrase('add_api_scope') }}</xf:button>
</xf:pageaction>

<xf:form action="" class="block">
	<div class="block-outer">
		<xf:macro template="filter_macros" name="quick_filter" arg-key="api-scopes" arg-class="block-outer-opposite" />
	</div>
	<div class="block-container">
		<div class="block-body">
			<xf:datalist>
				<xf:foreach loop="$scopes" value="$scope">
					<xf:datarow href="{{ link('api-scopes/edit', $scope) }}"
						label="{$scope.api_scope_id}"
						hint="{$scope.description}"
						hash="{$scope.api_scope_id_url}"
						delete="{{ link('api-scopes/delete', $scope) }}" />
				</xf:foreach>
			</xf:datalist>
		</div>
		<div class="block-footer">
			<span class="block-footer-counter">{{ display_totals($scopes) }}</span>
		</div>
	</div>
</xf:form>]]></template>
  <template type="admin" title="app.less" version_id="2010037" version_string="2.1.0 Beta 7"><![CDATA[@_adminPage-maxWidth: 1100px; // this does not include the navigation sidebar

.m-pageWidth()
{
	width: 100%;
	max-width: @_adminPage-maxWidth;
	margin: 0 auto;
}

.m-pageInset(@defaultVPadding: @xf-paddingLarge, @defaultHPadding: @xf-pageEdgeSpacer)
{
	padding: @defaultVPadding @defaultHPadding;

	// iPhone X/Xr/Xs support
	@supports(padding: max(0px))
	{
		&
		{
			padding-left: ~"max(@{defaultHPadding}, env(safe-area-inset-left))";
			padding-right: ~"max(@{defaultHPadding}, env(safe-area-inset-right))";
		}
	}
}

html
{
	.xf-pageBackground();
}

// ##################################### HEADER ###############################

@_adminHeader-height: 40px;
@_adminHeader-shadowHeight: 8px;
@_adminHeader-offset: 10px;
@_adminHeader-bg: @xf-paletteColor5;

.u-anchorTarget
{
	height: (@_adminHeader-height + @_adminHeader-shadowHeight + @_adminHeader-offset);
	margin-top: -(@_adminHeader-height + @_adminHeader-shadowHeight + @_adminHeader-offset);
}

.p-header
{
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
	height: @_adminHeader-height;
	line-height: @_adminHeader-height;
	.m-clearFix();
	z-index: @zIndex-4;
	background: @_adminHeader-bg;
	color: contrast(@_adminHeader-bg);
	text-align: center;
	.m-dropShadow(0, 0, @_adminHeader-shadowHeight, 3px, 0.3);
}

.p-header-buttons
{
	&.p-header-buttons--main
	{
		float: left;
	}

	&.p-header-buttons--opposite
	{
		float: right;
	}
}

.p-header-button
{
	display: inline-block;
	color: inherit;
	cursor: pointer;
	text-decoration: none;
	text-align: center;
	min-width: @_adminHeader-height;
	overflow: hidden;
	.m-transition();

	.m-pageInset(0px);

	&:hover,
	&:active,
	&.is-active
	{
		background: xf-diminish(@_adminHeader-bg, 8%);
		color: inherit;
		text-decoration: none;
	}

	&.p-header-button--title
	{
		.m-overflowEllipsis();
		max-width: 250px;
	}

	&.p-header-button--nav
	{
		display: none;
	}
}

@media (max-width: @_adminNav-hideWidth)
{
	.p-header-button.p-header-button--nav
	{
		display: inline-block;
	}
}

@media (max-width: @xf-responsiveNarrow)
{
	.p-header-button.p-header-button--title
	{
		max-width: 160px;
	}
}

// ##################################### BODY AREA SETUP ##########################

.p-body-container
{
}

.p-body
{
	display: flex;
}

@media (max-width: @_adminNav-hideWidth)
{
	.p-body
	{
		display: block;
	}
}

// ###################################### SIDEBAR NAVIGATION #######################

@_adminNav-bg: @xf-paletteColor5;
@_adminNav-strongBg: xf-intensify(@xf-paletteColor5, 8%);
@_adminNav-color: @xf-paletteColor2;
@_adminNav-strongColor: @xf-paletteColor1;
@_adminNav-selectedBorder: @xf-borderColorFeature;
@_adminNav-width: 260px;
@_adminNav-hideWidth: @xf-responsiveWide;
@_adminNav-activelElBg: rgba(0, 0, 0, .1);

.p-nav
{
	min-height: 100vh;
	width: @_adminNav-width;
	padding-top: @_adminHeader-height;
	background: @_adminNav-bg;
	color: @_adminNav-strongColor;
	vertical-align: top;
	flex-shrink: 0;
}

.p-nav-tester
{
	display: none;
	font-family: 'default';
}

.p-nav-inner
{
	height: 100%;
}

.p-nav-listRoot
{
	.m-listPlain();
	padding-bottom: 30px;
}

.p-nav-section
{
	.m-transition();

	.p-nav-listSection
	{
		.m-transitionFadeDown();
	}

	&.is-active
	{
		padding-bottom: 10px;
		.m-gradient(@_adminNav-strongBg, mix(@_adminNav-strongBg, @_adminNav-bg), @_adminNav-strongBg);
		box-shadow: inset 0 -10px 15px -10px rgba(0, 0, 0, .3), inset 0 10px 15px -10px rgba(0, 0, 0, .3);

		.p-nav:not(.offCanvasMenu) &:first-child
		{
			box-shadow: inset 0 -10px 15px -10px rgba(0, 0, 0, .3);
		}
	}
}

.p-nav-sectionHeader
{
	display: flex;
	color: @_adminNav-color;
	font-size: @xf-fontSizeLarge;
	.m-transition();
	.m-highResolution({
		font-weight: @xf-fontWeightLight;
	});

	&:hover
	{
		color: xf-diminish(@_adminNav-color, 3%);
		background: xf-intensify(@_adminNav-bg, 3%);
		text-decoration: none;
	}

	.p-nav-section.is-active &:hover
	{
		background: none;
	}

	a
	{
		color: inherit;

		&:hover
		{
			text-decoration: none;
		}
	}

	.p-nav-sectionLink
	{
		display: block;
		padding: 20px 10px;
		border-top: @xf-borderSize solid xf-intensify(@_adminNav-bg, 4%);
		flex-grow: 1;

		.far, .fal, .fas, .fab
		{
			color: @_adminNav-strongColor;
			font-size: @xf-fontSizeLarger;
			vertical-align: -2px;
		}
	}

	.p-nav-sectionToggle
	{
		display: inline-block;
		padding: 20px 10px;
		border-top: @xf-borderSize solid xf-intensify(@_adminNav-bg, 4%);
		text-decoration: none;
		flex-grow: 0;

		&:hover
		{
			text-decoration: none;
		}

		&:after
		{
			.m-faBase('Pro', @faWeight-solid);
			font-size: 80%;
			.m-faContent(@fa-var-chevron-down, 1em);
		}

		.p-nav-section.is-active &:after
		{
			.m-faContent(@fa-var-chevron-up, 1em);
		}
	}
}

.p-nav-listSection
{
	.m-listPlain();
}

.p-nav-subSection
{
	margin-top: 15px;
	border-top: @xf-borderSize solid transparent;
	overflow: hidden;
	.m-transition();

	&:first-child
	{
		margin-top: 0;
	}

	> span,
	> a
	{
		display: block;
		padding: 3px 10px;
		font-size: @xf-fontSizeSmaller;
		font-weight: @xf-fontWeightHeavy;
		color: @_adminNav-strongColor;
		position: relative;

		> .far, > .fal, > .fas
		{
			color: fade(@_adminNav-strongColor, 2.5%);
			font-size: 60px;

			position: absolute;
			top: 5px;
			right: .05em;
			pointer-events: none;

			.m-transition();
		}
	}

	+ .p-nav-el
	{
		margin-top: 15px;
	}

	&:hover
	{
		background: linear-gradient(180deg, fade(@_adminNav-strongColor, 7.5%), transparent 30%);
		border-top-color: fade(@_adminNav-strongColor, 10%);
		.m-transition();

		> span,
		> a
		{
			> .far, > .fal, > .fas
			{
				color: fade(@_adminNav-strongColor, 10%);

				top: 10px;
				right: .1em;

				.m-transition();
			}
		}
	}
}

.p-nav-subList
{
	.m-listPlain();
}

.p-nav-el
{
	> span,
	> a
	{
		display: block;
		padding: 6px 10px;
		color: @_adminNav-color;
		font-size: @xf-fontSizeSmaller;
		.m-transition();

		&:hover
		{
			background: @_adminNav-activelElBg;
			text-decoration: none;
		}
	}

	&.is-active > a
	{
		background: @_adminNav-activelElBg;
		border-right: 4px solid @_adminNav-selectedBorder;
	}
}

@media (max-width: @_adminNav-hideWidth)
{
	.p-nav
	{
		display: none;
		position: fixed;
		top: 0;
		bottom: 0;
		left: 0;
		right: 0;
		z-index: @zIndex-7;
		padding: 0;
		background: none;
		height: 100vh;
		width: auto;
		overflow: auto;

		-webkit-tap-highlight-color: rgba(0, 0, 0, 0);

		.p-nav-sectionLink,
		.p-nav-sectionToggle
		{
			//padding: 10px;
		}
	}

	.p-nav-tester
	{
		// let's us know in JS when this breakpoint has triggered
		font-family: 'off-canvas';
	}

	.p-nav-listRoot
	{
		padding-bottom: 0;
	}
}

// ############################ OFF CANVAS SIDEBAR VARIANT ####################

.offCanvasMenu--adminNav
{
	.offCanvasMenu-content
	{
		background: @_adminNav-bg;
	}

	.offCanvasMenu-header
	{
		background: xf-intensify(@_adminNav-bg, 4%);
		border-bottom-color: xf-intensify(@_adminNav-bg, 8%);
		color: @_adminNav-color;
	}
}

// ###################################### MAIN COLUMN #########################

.p-main
{
	min-height: 100vh;
	vertical-align: top;
	padding-top: @_adminHeader-height;
	flex-grow: 1;
	min-width: 0;
}

.p-main-inner
{
	.m-pageWidth();
	.m-pageInset();
}

.p-breadcrumbs
{
	.m-listPlain();
	.m-clearFix();

	margin-bottom: 5px;
	line-height: 1.5;

	> li
	{
		float: left;
		margin-right: .5em;
		font-size: @xf-fontSizeSmall;

		a
		{
			display: inline-block;
			color: @xf-textColorMuted;
			vertical-align: bottom;
			max-width: 300px;
			.m-overflowEllipsis();
		}

		&:after,
		&:before
		{
			.m-faBase();
			font-size: 90%;
			color: @xf-textColorMuted;
		}

		&:after
		{
			.m-faContent(@fa-var-angle-right, .5em, ltr);
			.m-faContent(@fa-var-angle-left, .5em, rtl);
			margin-left: .5em;
		}

		&:last-child
		{
			margin-right: 0;

			a
			{
				font-weight: @xf-fontWeightHeavy;
			}
		}
	}
}

.p-main-header
{
	margin-bottom: ((@xf-elementSpacer) / 2);
}

.p-title
{
	display: flex;
	flex-wrap: wrap;
	align-items: center;
	max-width: 100%;
	margin-bottom: -5px;

	&.p-title--noH1
	{
		flex-direction: row-reverse;
	}
}

.p-title-value
{
	padding: 0;
	margin: 0 0 5px 0;
	font-size: @xf-fontSizeLargest;
	font-weight: @xf-fontWeightNormal;
	min-width: 0;
	margin-right: auto;
}

.p-title-pageAction
{
	margin-bottom: 5px;
}

.p-description
{
	margin: 5px 0 0;
	padding: 0;
	font-size: @xf-fontSizeSmall;
	color: @xf-textColorMuted;
}

.p-content
{
	margin: 0;

	> :first-child
	{
		margin-top: 0;
	}
	> :last-child
	{
		margin-bottom: 0;
	}
}

@media (max-width: @_adminNav-hideWidth)
{
	.p-main
	{
		display: block;
		height: auto;
		min-height: 100vh;
	}
}

@media (max-width: @xf-responsiveMedium)
{
	.p-breadcrumbs > li a
	{
		max-width: 200px;
	}
}

@media (max-width: @xf-responsiveNarrow)
{
	.p-breadcrumbs
	{
		> li
		{
			display: none;
			font-size: @xf-fontSizeSmallest;

			&:last-child
			{
				display: block;
			}

			a
			{
				max-width: 90vw;
			}

			&:after
			{
				display: none;
			}

			&:before
			{
				.m-faContent(@fa-var-chevron-left, .72em, ltr);
				.m-faContent(@fa-var-chevron-right, .72em, rtl);
				margin-right: .5em;
			}
		}
	}

	.p-title-value
	{
		font-size: @xf-fontSizeLarger;
	}
}

// ####################################### FOOTER AREA ########################

@_adminFooter-bg: xf-intensify(@_adminHeader-bg, 12%);
@_adminFooter-color: @xf-paletteColor2;
@_adminFooter-linkColor: @xf-paletteColor1;

.p-footer
{
	background: @_adminFooter-bg;
	border-top: @xf-borderSize solid xf-intensify(@_adminFooter-bg, 4%);
	color: @_adminFooter-color;
	font-size: @xf-fontSizeSmall;

	.m-pageInset();

	a
	{
		color: @_adminFooter-linkColor;
	}
}

.p-footer-row
{
	.m-clearFix();

	margin-bottom: -@xf-paddingLarge;

	a
	{
		padding: 2px 4px;
		border-radius: @xf-borderRadiusSmall;

		&:hover
		{
			text-decoration: none;
			background-color: fade(@_adminFooter-linkColor, 10%);
		}
	}
}

.p-footer-row-main
{
	float: left;
	margin-bottom: @xf-paddingLarge;
	margin-left: -2px;
}

.p-footer-row-opposite
{
	float: right;
	margin-bottom: @xf-paddingLarge;
	margin-right: -2px;
}

.p-footer-copyright
{
	margin-top: @xf-paddingLarge;
	text-align: center;
	font-size: @xf-fontSizeSmallest;
}

.p-footer-debug
{
	margin-top: @xf-paddingLarge;
	text-align: right;
	font-size: @xf-fontSizeSmallest;

	.pairs > dt { color: inherit; }
}

.p-footer-version {}

@media (max-width: @xf-responsiveMedium)
{
	.p-footer-row
	{
		margin-bottom: @xf-paddingLarge;
	}

	.p-footer-row-main,
	.p-footer-row-opposite
	{
		float: none;
		display: inline;
	}

	.p-footer-copyright
	{
		text-align: left;
		padding: 0 4px; // aligns with other links
	}
}

// ##################################### QUICK SEARCH RESULTS ################

.p-quickSearchResultsWrapper
{
	&.is-active
	{
		border-top: @xf-borderSize solid @xf-borderColor;
	}
}

.p-quickSearchResults
{
	.m-transitionFadeDown();
}

.p-quickSearchResultSet
{
	margin: 0;
	padding: 0;

	display: table;
	width: 100%;
	table-layout: fixed;

	> dt
	{
		display: table-cell;
		width: 140px;
		padding: @xf-paddingMedium;
		margin: 0;
		background: @xf-contentAltBg;
		border-right: @xf-borderSize solid @xf-borderColor;
		text-align: right;
		font-size: @xf-fontSizeSmall;
	}

	> dd
	{
		display: table-cell;
		padding: 0;
		margin: 0;

	}

	@media (max-width: 400px)
	{
		display: block;

		> dt
		{
			display: block;
			width: auto;
			text-align: left;
			font-weight: @xf-fontWeightHeavy;
			border-right: none;
			border-bottom: @xf-borderSize solid @xf-borderColorFaint;
		}

		> dd
		{
			display: block;
			border-bottom: @xf-borderSize solid @xf-borderColorHeavy;
		}

		&:last-child > dd
		{
			border-bottom: none;
		}
	}
}

.p-quickSearchResultList
{
	.m-listPlain();

	a
	{
		display: block;
		padding: @xf-paddingMedium;
		font-size: @xf-fontSizeSmall;

		&:hover,
		&.is-active
		{
			text-decoration: none;
			background: @xf-contentHighlightBg;
		}

		span
		{
			font-size: @xf-fontSizeSmaller;
			color: fade(@xf-textColorMuted, 75%);
		}
	}
}

// ##################################### ADMIN LOGIN #####################

@_adminLogin-bg: @xf-paletteColor5;
@_adminLogin-inputColor: @xf-paletteColor1;
@_adminLogin-color: @xf-paletteColor2;

.p-adminLogin
{
	min-height: 100%;
	background: @_adminLogin-bg;
	color: @_adminLogin-color;

	.m-textColoredLinks();

	.adminLogin-wrapper
	{
		display: flex;
		padding: 2vh 2vw;
		height: 100vh;
		min-height: 300px;
		max-width: 100%;
		align-items: center;
		justify-content: center;
	}

	.adminLogin-content
	{
		width: 100%;
		max-width: 400px;

		&.adminLogin-content--wide
		{
			max-width: 800px;
		}
	}

	.adminLogin-contentForm
	{
		background: xf-intensify(@_adminLogin-bg, 3%);
		border: 1px solid xf-intensify(@_adminLogin-bg, 6%);
		padding: 20px 40px;
		border-radius: 10px;
		color: @_adminLogin-color;

		.m-dropShadow(0, 5px, 20px);
	}

	.adminLogin-row
	{
		margin: 20px 0;

		> dt
		{
			margin-bottom: 5px;
			display: none;
		}
		> dd
		{
			margin: 0;
			position: relative;

			input
			{
				border: none;
				padding: 10px;
				padding-left: 30px;
				background: xf-intensify(@_adminLogin-bg, 6%);
				font-weight: @xf-fontWeightHeavy;
				font-size: 16px;
				color: @_adminLogin-inputColor;
				.m-placeholder({color: fade(@_adminLogin-color, 60%); });

				& + .far,
				& + .fal,
				& + .fas
				{
					position: absolute;
					top: 0;
					left: 0;
					bottom: 0;
					width: 30px;
					display: flex;
					align-items: center;
					justify-content: center;

					color: @_adminLogin-color;
					font-size: 16px;
					line-height: @xf-lineHeightDefault;
					text-shadow: 1px 1px 2px rgba(0, 0, 0, .5);
				}

				&:-webkit-autofill
				{
					+ .far,
					+ .fal,
					+ .fas
					{
						color: black;
					}

					~ .inputGroup-text
					{
						color: black;
						background: rgb(250, 255, 189); // this is the color used by Chrome autofill
						border-color: transparent;
					}
				}
			}

			.inputGroup-text.inputGroup-text // ugly specificity hack ;)
			{
				border: none;
				border-left: @xf-borderSize solid xf-intensify(@_adminLogin-bg, 9%);
				background: xf-intensify(@_adminLogin-bg, 6%);
				color: fade(@_adminLogin-color, 80%);
			}
		}
	}

	.adminLogin-row--submit
	{
		//text-align: right;

		.button
		{
			width: 100%;
		}
	}

	.adminLogin-boardTitle
	{
		text-align: center;
		font-size: @xf-fontSizeSmaller;
		margin-top: 5px;
		color: fade(@_adminLogin-color, 50%);
	}

	.adminLogin-debug
	{
		text-align: center;
		margin: 2em auto 0;
		font-size: @xf-fontSizeSmallest;
		.m-hiddenLinks();

		.pairs > dt { color: inherit; }
	}
}

// ----------------

.p-runJob
{
	min-height: 100%;
}

.p-runJobContent
{
	width: 600px;
	max-width: 100%;
	margin: 10px auto 10px;
	margin-top: 10vh;
	padding: 0 10px;
}

.p-runJobTitle
{
	margin: 0;
	padding: 0;
	font-size: @xf-fontSizeLargest;
	font-weight: @xf-fontWeightNormal;
}

.p-runJobDebug
{
	text-align: center;
	margin: 10px auto 0;
	font-size: @xf-fontSizeSmallest;
}

// ################################## MISC STYLES ########################

.iconicLinks
{
	margin-bottom: @xf-elementSpacer;
}

.iconicLinks-list
{
	.m-listPlain();
	margin-bottom: -@xf-paddingMedium;
	margin-right: -@xf-paddingMedium;
	font-size: 0;

	display: flex;
	flex-flow: row wrap;

	> li
	{
		flex: auto;

		width: 160px;
		max-width: 320px;

		position: relative;
		overflow: hidden;

		margin-right: @xf-paddingMedium;
		margin-bottom: @xf-paddingMedium;
		vertical-align: top;
		text-align: center;
		font-size: @xf-fontSizeNormal;
		.xf-contentBase();
		.xf-blockBorder();
		border-radius: @xf-blockBorderRadius;

		&.iconicLinks-placeholder
		{
			margin-top: 0;
			margin-bottom: 0;
			height: 0;
			border: none;
		}

		> a
		{
			display: block;
			padding: @xf-paddingMedium;
			background: fade(@xf-contentHighlightBg, 0%);
			.m-transition();

			&:hover
			{
				background: @xf-contentHighlightBg;
				text-decoration: none;

				.iconicLinkList-icon
				{
					opacity: 1;
				}
			}
		}
	}
}

.iconicLinks-icon
{
	font-size: 3em;
	opacity: .6;
	.m-transition(opacity);
}

.iconicLinks-title
{
	.m-overflowEllipsis();
}

.graphList
{
	.m-listPlain();
	display: flex;
	flex-wrap: wrap;
	justify-content: center;

	> li
	{
		width: 50%;
	}

	@media (max-width: @xf-responsiveMedium)
	{
		display: block;

		> li
		{
			width: 100%;
		}
	}
}

.nodeIcon
{
	.m-faBase();
	color: @xf-textColorDimmed;

	&--Forum:before
	{
		.m-faContent(@fa-var-comments);
	}

	&--Category:before
	{
		.m-faContent(@fa-var-bars);
	}

	&--LinkForum:before
	{
		.m-faContent(@fa-var-link);
	}

	&--Page:before
	{
		.m-faContent(@fa-var-file-alt);
	}
}]]></template>
  <template type="admin" title="appearance" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('admin_navigation.appearance') }}</xf:title>

<xf:macro template="section_nav_macros" name="section_nav" arg-section="appearance" />]]></template>
  <template type="admin" title="attachment_delete" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link('attachments/delete', null, $linkFilters) }}" class="block" ajax="true">

	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				<xf:if is="$attachment">
					{{ phrase('please_confirm_that_you_want_to_delete_following:') }}
					<strong><a href="{{ link('attachments/view', $attachment) }}">{$attachment.filename}</a></strong>
				<xf:else />
					{{ phrase('please_confirm_that_you_want_to_delete_x_attachments', {'number': count($attachmentIds)}) }}
				</xf:if>
			</xf:inforow>
		</div>

		<xf:submitrow rowtype="simple" icon="delete" />
	</div>

	<xf:foreach loop="$attachmentIds" value="$attachmentId">
		<xf:hiddenval name="attachment_ids[]">{$attachmentId}</xf:hiddenval>
	</xf:foreach>

</xf:form>]]></template>
  <template type="admin" title="attachment_list" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('attachment_browser') }}</xf:title>

<xf:form action="{{ link('attachments') }}" class="block" ajax="true"

	data-xf-init="select-plus"
	data-sp-checkbox=".dataList-cell--toggle input:checkbox"
	data-sp-container=".dataList-row"
	data-sp-control=".dataList-cell a">

	<div class="block-outer">
		<div class="filterBlock">
			<ul class="listInline">
				<li>
					<xf:select name="content_type" class="filterBlock-input" value="{$linkFilters.content_type}">
						<xf:option>{{ phrase('(all_content_types)') }}</xf:option>
						<xf:foreach loop="$handlers" key="$contentType" value="$handler">
							<xf:option value="{$contentType}">{$handler.getContentTypePhrase()}</xf:option>
						</xf:foreach>
					</xf:select>
				</li>
				<li>
					<xf:textbox name="username" value="{$linkFilters.username}" ac="single"
						class="input filterBlock-input"
						placeholder="{{ phrase('user_name') }}" />
				</li>
				<li>
					<div class="inputGroup inputGroup--auto inputGroup--inline">
						<xf:dateinput name="start" value="{{ $linkFilters.start ? date($linkFilters.start, 'Y-m-d') : '' }}"
							class="filterBlock-input filterBlock-input--small" />
						<span class="inputGroup-text">-</span>
						<xf:dateinput name="end" value="{{ $linkFilters.end ? date($linkFilters.end, 'Y-m-d') : '' }}"
							class="filterBlock-input filterBlock-input--small" />
						<span class="inputGroup-splitter"></span>
					</div>
				</li>
				<li>
					<xf:select name="date_preset" class="js-presetChange filterBlock-input">
						<xf:option label="{{ phrase('date_presets:') }}" value="-1" />
						<xf:optgroup>
							<xf:options source="{$datePresets}" />
							<xf:option value="1995-01-01">{{ phrase('all_time') }}</xf:option>
						</xf:optgroup>
					</xf:select>
				</li>
				<li>
					<xf:button type="submit" class="button--small">{{ phrase('go') }}</xf:button>
				</li>
			</ul>
		</div>
	</div>
	<div class="block-container">
		<xf:if is="$attachments is not empty">
			<h2 class="block-tabHeader">
				<span class="tabs">
					<label class="tabs-tab {{ (!$linkFilters.mode || $linkFilters.mode == 'recent') ? 'is-active' : '' }}">
						<input type="radio" name="mode" value="recent"
							style="display: none"
							data-xf-click="submit"
							{{ (!$linkFilters.mode || $linkFilters.mode == 'recent') ? 'checked="checked"' : '' }} />
						{{ phrase('most_recent') }}
					</label>
					<label class="tabs-tab {{ $linkFilters.mode == 'size' ? 'is-active' : '' }}">
						<input type="radio" name="mode" value="size"
							style="display: none"
							data-xf-click="submit"
							{{ $linkFilters.mode == 'size' ? 'checked="checked"' : '' }} />
						{{ phrase('largest') }}
					</label>
				</span>
			</h2>
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$attachments" value="$attachment">
						<xf:datarow>
							<xf:toggle name="attachment_ids[]" value="{$attachment.attachment_id}" />

							<xf:cell
								class="dataList-cell--min dataList-cell--alt dataList-cell--image dataList-cell--imageMediumWide"
								href="{{ link('attachments/view', $attachment) }}">
								<xf:if is="$attachment.has_thumbnail">
									<img src="{$attachment.thumbnail_url}" alt="{$attachment.filename}" />
								<xf:else />
									<xf:fa icon="fa-file fa-2x" />
								</xf:if>
							</xf:cell>

							<xf:cell href="{{ link('attachments/view', $attachment) }}" class="dataList-cell--main">
								<div class="dataList-mainRow">{$attachment.filename}</div>
								<div class="dataList-subRow">
									<ul class="listInline listInline--bullet">
										<li><xf:date time="{$attachment.Data.upload_date}" /></li>
										<li>{{ $attachment.Data.User.username ?: phrase('unknown_user') }}</li>
										<li>{$attachment.file_size|file_size}</li>
									</ul>
								</div>
							</xf:cell>

							<xf:cell
								href="{{ (!$attachment.unassociated && $attachment.getContainerLink()) ? $attachment.getContainerLink() : link('attachments/view', $attachment) }}"
								target="{{ !$attachment.unassociated ? '_blank' : '' }}"
								class="dataList-cell--action">
								<xf:if is="!$attachment.unassociated">
									{{ phrase('view_host_content') }}
									<span class="dataList-secondRow">{$attachment.getContentTypePhrase()|parens}</span>
								<xf:else />
									{{ phrase('unassociated') }}
								</xf:if>
							</xf:cell>

							<xf:delete href="{{ link('attachments/delete', $attachment, $linkFilters) }}" />
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer block-footer--split">
				<span class="block-footer-counter">{{ display_totals($attachments, $total) }}</span>
				<span class="block-footer-select"><xf:checkbox standalone="true"><xf:option check-all="< .block-container" label="{{ phrase('select_all') }}" /></xf:checkbox></span>
				<span class="block-footer-controls">
					<xf:button type="submit" name="delete_attachments" overlay="true" icon="delete" />
				</span>
			</div>
		<xf:else />
			<div class="block-body block-row">{{ phrase('no_results_found') }}</div>
		</xf:if>
	</div>
	<xf:pagenav page="{$page}" perpage="{$perPage}" total="{$total}"
		link="attachments" params="{$linkFilters}"
		wrapperclass="block-outer block-outer--after" />

</xf:form>

<xf:js>
	$(function()
	{
		$('.js-presetChange').change(function(e)
		{
			var $ctrl = $(this),
			value = $ctrl.val(),
			$form = $ctrl.closest('form');

			if (value == -1)
			{
				return;
			}

			$form.find($ctrl.data('start') || 'input[name=start]').val(value);
			$form.find($ctrl.data('end') || 'input[name=end]').val('');
			$form.submit();
		});
	});
</xf:js>]]></template>
  <template type="admin" title="ban_email_list" version_id="2001070" version_string="2.0.10"><![CDATA[<xf:title>{{ phrase('banned_emails') }}</xf:title>

<xf:pageaction>
	<div class="buttonGroup">
		<xf:button href="{{ link('banning/emails/import') }}" icon="import" overlay="true" />
		<xf:if is="$emailBans is not empty">
			<xf:button href="{{ link('banning/emails/export', null, {'t': csrf_token()}) }}" icon="export" />
		</xf:if>
	</div>
</xf:pageaction>

<xf:if is="$emailBans is not empty">
	<xf:form action="{{ link('banning/emails/delete') }}" ajax="true" class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:datalist data-xf-init="responsive-data-list">
					<colgroup>
						<col style="width: 1%">
						<col style="width: 15%">
						<col style="width: 15%">
						<col style="width: 15%">
						<col style="width: 15%">
						<col>
					</colgroup>
					<xf:datarow rowtype="header">
						<xf:cell><xf:checkbox standalone="true"><xf:option check-all="< .block-container" data-xf-init="tooltip" title="{{ phrase('select_all') }}" /></xf:checkbox></xf:cell>
						<xf:cell href="{{ link('banning/emails', '', {'order': 'banned_email', 'direction': ($direction == 'desc' || !$direction)  ? 'asc' : ''}) }}">
							{{ phrase('email') }}
						</xf:cell>
						<xf:cell href="{{ link('banning/emails', '', {'order': '', 'direction': ($direction == 'desc' || !$direction)  ? 'asc' : ''}) }}">
							{{ phrase('date') }}
						</xf:cell>
						<xf:cell href="{{ link('banning/emails', '', {'order': 'last_triggered_date', 'direction': ($direction == 'desc' || !$direction)  ? 'asc' : ''}) }}">
							{{ phrase('last_triggered') }}
						</xf:cell>
						<xf:cell>{{ phrase('by') }}</xf:cell>
						<xf:cell>{{ phrase('reason') }}</xf:cell>
					</xf:datarow>
					<xf:foreach loop="$emailBans" value="$emailBan">
						<xf:datarow>
							<xf:toggle name="delete[]" value="{$emailBan.banned_email}" />
							<xf:cell>{$emailBan.banned_email}</xf:cell>
							<xf:cell>{{ $emailBan.create_date ? date($emailBan.create_date) : phrase('n_a') }}</xf:cell>
							<xf:cell>
								{{ $emailBan.last_triggered_date ? date_dynamic($emailBan.last_triggered_date) : phrase('never') }}
							</xf:cell>
							<xf:cell>{{ $emailBan.User ? $emailBan.User.username : phrase('n_a') }}</xf:cell>
							<xf:cell>{{ $emailBan.reason ? $emailBan.reason : phrase('n_a') }}</xf:cell>
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer block-footer--split">
				<span class="block-footer-counter">{{ display_totals($emailBans, $total) }}</span>
				<span class="block-footer-select"><xf:checkbox standalone="true"><xf:option check-all="< .block-container" label="{{ phrase('select_all') }}" /></xf:checkbox></span>
				<span class="block-footer-controls"><xf:button type="submit" icon="delete" /></span>
			</div>
		</div>
		<xf:pagenav page="{$page}" perpage="{$perPage}" total="{$total}" link="banning/emails"
			params="{{ {
				'order': ($order != 'create_date' ? $order : ''),
				'direction': ($direction != 'desc' ? $direction : '')
			} }}"
			wrapperclass="block-outer block-outer--after" />
	</xf:form>
<xf:else />
	<div class="blockMessage">{{ phrase('no_email_addresses_have_been_banned') }}</div>
</xf:if>

<xf:form action="{{ link('banning/emails/add') }}" ajax="true" class="block">
	<div class="block-container">
		<h3 class="block-header">{{ phrase('add_email_ban') }}</h3>
		<div class="block-body">
			<xf:textboxrow name="email"
				maxlength="{{ max_length($newEmail, 'banned_email') }}"
				label="{{ phrase('email_to_ban') }}"
				explain="{{ phrase('you_may_use_star_to_represent_wildcards_automatically_added') }}" />
			<xf:textboxrow name="reason" maxlength="{{ max_length($newEmail, 'reason') }}"
				label="{{ phrase('reason') }}"
				hint="{{ phrase('optional') }}" />
		</div>
		<xf:submitrow icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="ban_ip" version_id="2000370" version_string="2.0.3"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link('banning/ips/add', null, {'ip': $ip.ip}) }}" ajax="true" data-redirect="off" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('please_confirm_that_you_want_to_ban_following_ip:') }}
				<strong><a href="{{ link('users/ip-users', null, {'ip': $ip.ip}) }}" dir="ltr">{$ip.ip}</a></strong>
			</xf:inforow>

			<xf:textboxrow name="reason" value="{$ip.reason}" maxlength="{{ max_length($ip, 'reason') }}"
				label="{{ phrase('reason') }}"
				hint="{{ phrase('optional') }}" />
		</div>
		<xf:submitrow icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="ban_ip_list" version_id="2001070" version_string="2.0.10"><![CDATA[<xf:title>{{ phrase('banned_ip_addresses') }}</xf:title>

<xf:pageaction>
	<div class="buttonGroup">
		<xf:button href="{{ link('banning/ips/import') }}" icon="import" overlay="true" />
		<xf:if is="$ipBans is not empty">
			<xf:button href="{{ link('banning/ips/export', null, {'t': csrf_token()}) }}" icon="export" />
		</xf:if>
	</div>
</xf:pageaction>

<xf:if is="$ipBans is not empty">
	<xf:form action="{{ link('banning/ips/delete') }}" ajax="true" class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:datalist data-xf-init="responsive-data-list">
					<colgroup>
						<col style="width: 1%">
						<col style="width: 15%">
						<col style="width: 15%">
						<col style="width: 15%">
						<col style="width: 15%">
						<col>
					</colgroup>
					<xf:datarow rowtype="header">
						<xf:cell><xf:checkbox standalone="true"><xf:option check-all="< .block-container" data-xf-init="tooltip" title="{{ phrase('select_all') }}" /></xf:checkbox></xf:cell>
						<xf:cell href="{{ link('banning/ips', '', {'order': 'start_range', 'direction': ($direction == 'desc' || !$direction)  ? 'asc' : ''}) }}">
							{{ phrase('ip') }}
						</xf:cell>
						<xf:cell href="{{ link('banning/ips', '', {'order': '', 'direction': ($direction == 'desc' || !$direction)  ? 'asc' : ''}) }}">
							{{ phrase('date') }}
						</xf:cell>
						<xf:cell href="{{ link('banning/ips', '', {'order': 'last_triggered_date', 'direction': ($direction == 'desc' || !$direction)  ? 'asc' : ''}) }}">
							{{ phrase('last_triggered') }}
						</xf:cell>
						<xf:cell>{{ phrase('by') }}</xf:cell>
						<xf:cell>{{ phrase('reason') }}</xf:cell>
					</xf:datarow>
					<xf:foreach loop="$ipBans" value="$ipBan">
						<xf:datarow>
							<xf:toggle name="delete[]" value="{$ipBan.ip}" />
							<xf:cell class="u-ltr">{$ipBan.ip}</xf:cell>
							<xf:cell>{{ $ipBan.create_date ? date($ipBan.create_date) : phrase('n_a') }}</xf:cell>
							<xf:cell>
								{{ $ipBan.last_triggered_date ? date_dynamic($ipBan.last_triggered_date) : phrase('never') }}
							</xf:cell>
							<xf:cell>{{ $ipBan.User ? $ipBan.User.username : phrase('n_a') }}</xf:cell>
							<xf:cell>{{ $ipBan.reason ? $ipBan.reason : phrase('n_a') }}</xf:cell>
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer block-footer--split">
				<span class="block-footer-counter">{{ display_totals($ipBans, $total) }}</span>
				<span class="block-footer-select"><xf:checkbox standalone="true"><xf:option check-all="< .block-container" label="{{ phrase('select_all') }}" /></xf:checkbox></span>
				<span class="block-footer-controls"><xf:button type="submit" icon="delete" /></span>
			</div>
		</div>
			<xf:pagenav page="{$page}" perpage="{$perPage}" total="{$total}" link="banning/ips"
				params="{{ {
					'order': ($order != 'create_date' ? $order : ''),
					'direction': ($direction != 'desc' ? $direction : '')
				} }}"
				wrapperclass="block-outer block-outer--after" />
	</xf:form>
<xf:else />
	<div class="blockMessage">{{ phrase('no_ips_have_been_banned') }}</div>
</xf:if>

<xf:form action="{{ link('banning/ips/add') }}" ajax="true" class="block">
	<div class="block-container">
		<h3 class="block-header">{{ phrase('add_ip_ban') }}</h3>
		<div class="block-body">
			<xf:textboxrow name="ip" value="{$ip}"
				label="{{ phrase('ip_to_ban') }}"
				explain="{{ phrase('you_may_enter_partial_ip_v4_v6') }}"
				dir="ltr" />
			<xf:textboxrow name="reason" maxlength="{{ max_length($newIp, 'reason') }}"
				label="{{ phrase('reason') }}"
				hint="{{ phrase('optional') }}" />
		</div>
		<xf:submitrow icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="ban_user_edit" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:if is="$userBan.isInsert()">
	<xf:title>{{ phrase('ban_user') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_banned_user:') }} {$userBan.User.username}</xf:title>
</xf:if>

<xf:pageaction if="$userBan.isUpdate()">
	<xf:button href="{{ link('banning/users/lift', $userBan) }}" overlay="true">{{ phrase('lift_ban') }}</xf:button>
</xf:pageaction>

<xf:form action="{{ link('banning/users/save', $userBan) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:if is="!$userBan.user_id">
				<xf:textboxrow name="username" ac="single" value="{$addName}"
					label="{{ phrase('user_name') }}" />
			<xf:else />
				<xf:formrow label="{{ phrase('user_name') }}">{$userBan.User.username}</xf:formrow>

				<xf:formrow label="{{ phrase('banned_by') }}">{$userBan.BanUser.username}</xf:formrow>

				<xf:formrow label="{{ phrase('ban_started') }}">{{ date($userBan.ban_date) }}</xf:formrow>

				<xf:formrow label="{{ phrase('ban_ends') }}">
					<xf:if is="$userBan.end_date">
						{{ date($userBan.end_date) }}
					<xf:else />
						{{ phrase('never') }}
					</xf:if>
				</xf:formrow>
			</xf:if>

			<xf:radiorow name="ban_length" value="{{ !$userBan.end_date ? 'permanent' : 'temporary' }}"
				label="{{ phrase('ban_length') }}">

				<xf:option label="{{ phrase('permanent') }}" value="permanent" />
				<xf:option label="{{ phrase('until:') }}" value="temporary">
					<xf:dateinput name="end_date" value="{{ $userBan.end_date ? date($userBan.end_date, 'Y-m-d') : '' }}" />
				</xf:option>
			</xf:radiorow>

			<xf:textboxrow name="user_reason" value="{$userBan.user_reason}" maxlength="{{ max_length($userBan, 'user_reason') }}"
				label="{{ phrase('reason_for_banning') }}"
				explain="{{ phrase('this_will_be_shown_to_user_if_provided') }}" />
		</div>

		<xf:submitrow icon="save" sticky="true" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="ban_user_lift" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link('banning/users/lift', $userBan) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('please_confirm_that_you_want_to_lift_ban_on_following_user:') }}
				<strong><a href="{{ link('banning/users', $userBan) }}">{$userBan.User.username}</a></strong>
			</xf:inforow>
			<xf:formrow label="{{ phrase('banned_by') }}">{$userBan.BanUser.username}</xf:formrow>
			<xf:formrow label="{{ phrase('ban_started') }}">{{ date($userBan.ban_date) }}</xf:formrow>
			<xf:formrow label="{{ phrase('ban_ends') }}">
				<xf:if is="$userBan.end_date">
					{{ date($userBan.end_date) }}
				<xf:else />
					{{ phrase('never') }}
				</xf:if>
			</xf:formrow>

			<xf:if is="$userBan.user_reason">
				<xf:formrow label="{{ phrase('reason_for_ban') }}">
					{$userBan.user_reason}
				</xf:formrow>
			</xf:if>
		</div>
		<xf:submitrow submit="{{ phrase('lift') }}" sticky="true" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="ban_user_list" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('banned_users') }}</xf:title>

<xf:pageaction>
	<xf:button href="{{ link('banning/users/add') }}" icon="add">{{ phrase('ban_user') }}</xf:button>
</xf:pageaction>

<xf:if is="$userBans is not empty">
	<div class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:datalist data-xf-init="responsive-data-list">
					<xf:datarow rowtype="header">
						<xf:cell>{{ phrase('user_name') }}</xf:cell>
						<xf:cell>{{ phrase('end_date') }}</xf:cell>
						<xf:cell>{{ phrase('reason') }}</xf:cell>
						<xf:cell>&nbsp;</xf:cell>
						<xf:cell>&nbsp;</xf:cell>
					</xf:datarow>
					<xf:foreach loop="$userBans" value="$userBan">
						<xf:datarow>
							<xf:cell href="{{ link('banning/users', $userBan.User) }}">{$userBan.User.username}</xf:cell>
							<xf:cell href="{{ link('banning/users', $userBan.User) }}">{{ $userBan.end_date ? date($userBan.end_date) : phrase('permanent') }}</xf:cell>
							<xf:cell href="{{ link('banning/users', $userBan.User) }}">{{ $userBan.user_reason ?: phrase('n_a') }}</xf:cell>
							<xf:action href="{{ link('users/edit', $userBan.User) }}">{{ phrase('user') }}</xf:action>
							<xf:delete href="{{ link('banning/users/lift', $userBan.User) }}" tooltip="{{ phrase('lift_ban') }}" />
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($userBans, $total) }}</span>
			</div>
		</div>

		<xf:pagenav page="{$page}" perpage="{$perPage}" total="{$total}"
			link="banning/users"
			wrapperclass="block-outer block-outer--after" />
	</div>
<xf:else />
	<div class="blockMessage">{{ phrase('there_no_banned_users') }}</div>
</xf:if>]]></template>
  <template type="admin" title="banning_import" version_id="2000631" version_string="2.0.6 Beta 1"><![CDATA[<xf:include template="xml_import" />]]></template>
  <template type="admin" title="base_custom_field_delete" version_id="2001070" version_string="2.0.10"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link($prefix . '/delete', $field) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('please_confirm_that_you_want_to_delete_following:') }}
				<strong><a href="{{ link($prefix . '/edit', $field) }}">{$field.title|htmlspecialchars}</a></strong>
			</xf:inforow>
		</div>
		<xf:submitrow icon="delete" rowtype="simple" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="base_custom_field_edit" version_id="2010132" version_string="2.1.1 Beta 2"><![CDATA[<xf:if is="$field.isInsert()">
	<xf:title>{{ phrase('add_field') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_field:') }} {$field.title|htmlspecialchars}</xf:title>
</xf:if>

<xf:pageaction if="$field.isUpdate()">
	<xf:button href="{{ link($prefix . '/delete', $field) }}" overlay="true" icon="delete" />
</xf:pageaction>

<xf:js src="xf/sort.js, vendor/dragula/dragula.js"/>
<xf:css src="public:dragula.less"/>

<xf:form action="{{ link($prefix . '/save', $field) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:if is="{{ $field.exists() }}">
				<xf:formrow label="{{ phrase('field_id') }}"
					explain="{{ phrase('this_is_unique_identifier_for_field_cannot_be_changed') }}">
					<span class="u-ltr">{$field.field_id}</span>
				</xf:formrow>
			<xf:else />
				<xf:textboxrow name="field_id" id="ctrl_field_id" maxlength="{{ max_length($field, 'field_id') }}"
					label="{{ phrase('field_id') }}"
					explain="{{ phrase('this_is_unique_identifier_for_field_cannot_be_changed') }}"
					dir="ltr" />
			</xf:if>

			<hr class="formRowSep" />

			<xf:textboxrow name="title" value="{{ $field.exists() ? $field.MasterTitle.phrase_text : '' }}"
				label="{{ phrase('title') }}" />

			<xf:textarearow name="description" value="{{ $field.exists() ? $field.MasterDescription.phrase_text : '' }}"
				autosize="true"
				label="{{ phrase('description') }}"/>

			<hr class="formRowSep" />

			<xf:radiorow name="display_group" value="{$field.display_group}"
				label="{{ phrase('display_location') }}">
				<xf:options source="$displayGroups" />
			</xf:radiorow>

			<xf:macro template="display_order_macros" name="row"
				arg-value="{$field.display_order}" />

			{$displayOptions|raw}

			<hr class="formRowSep" />

			<xf:radiorow name="field_type" value="{$field.field_type}" listclass="listColumns"
				label="{{ phrase('field_type') }}">

				<xf:foreach loop="$fieldTypes"
					key="$fieldType"
					value="$fieldDef"
					if="!$existingType || $fieldDef.compatible == $existingType.compatible">

					<xf:option class="{$fieldDef.type}" value="{$fieldType}">{$fieldDef.label}</xf:option>
				</xf:foreach>
			</xf:radiorow>
		</div>

		<xf:if is="!$existingType || $existingType.options == 'text'">
			<h3 class="block-formSectionHeader">
				<span class="collapseTrigger collapseTrigger--block" data-xf-click="toggle" data-target="< :up:next">
					<span class="block-formSectionHeader-aligner">{{ phrase('options_for_text_fields') }}</span>
				</span>
			</h3>
			<div class="block-body block-body--collapsible">
				<xf:radiorow name="match_type" value="{$field.match_type}" listclass="_listColumns"
					label="{{ phrase('value_match_requirements') }}"
					hint="{{ phrase('empty_values_always_allowed') }}">

					<xf:option value="none">{$matchTypes.none}</xf:option>
					<xf:option value="number" data-hide="true"
						label="{$matchTypes.number}">
						<xf:dependent><xf:macro name="number_dependent" arg-field="{$field}" /></xf:dependent>
					</xf:option>
					<xf:option value="alphanumeric">{$matchTypes.alphanumeric}</xf:option>
					<xf:option value="email">{$matchTypes.email}</xf:option>
					<xf:option value="url">{$matchTypes.url}</xf:option>
					<xf:option value="color">{$matchTypes.color}</xf:option>
					<xf:option value="date" data-hide="true"
						label="{$matchTypes.date}">
						<xf:dependent><xf:macro name="date_dependent" arg-field="{$field}" /></xf:dependent>
					</xf:option>
					<xf:option value="regex" data-hide="true"
						label="{$matchTypes.regex}">
						<xf:dependent><xf:macro name="regex_dependent" arg-field="{$field}" /></xf:dependent>
					</xf:option>
					<xf:option value="callback"  data-hide="true"
						label="{$matchTypes.callback}">
						<xf:dependent>
							<xf:macro template="helper_callback_fields" name="callback_fields"
								arg-className="match_params[callback_class]"
								arg-methodName="match_params[callback_method]"
								arg-classValue="{$field.match_params.callback_class}"
								arg-methodValue="{$field.match_params.callback_method}"
								arg-size="23" />
							<p class="formRow-explain">
								<code>
									<em>\XF\CustomField\Definition</em> $definition,
									&amp;$value,
									&amp;$error
								</code>
							</p>
						</xf:dependent>
					</xf:option>
					<xf:option value="validator" data-hide="true"
						label="{$matchTypes.validator}">
						<xf:dependent><xf:macro name="validator_dependent" arg-field="{$field}" /></xf:dependent>
					</xf:option>
				</xf:radiorow>

				<hr class="formRowSep" />

				<xf:numberboxrow name="max_length" value="{$field.max_length}" min="0"
					label="{{ phrase('maximum_length') }}" />
			</div>
		</xf:if>

		<xf:if is="!$existingType || $existingType.options == 'choice'">
			<h3 class="block-formSectionHeader">
				<span class="collapseTrigger collapseTrigger--block" data-xf-click="toggle" data-target="< :up:next">
					<span class="block-formSectionHeader-aligner">{{ phrase('options_for_choice_fields') }}</span>
				</span>
			</h3>
			<div class="block-body block-body--collapsible">
				<xf:formrow rowtype="input"
					label="{{ phrase('possible_choices') }}"
					explain="{{ phrase('value_represents_internal_value_for_choice_text_is_displayed') }}">

					<div class="inputGroup-container" data-xf-init="list-sorter" data-drag-handle=".dragHandle">
						<xf:foreach loop="$field.field_choices" key="$choice" value="$text">
							<div class="inputGroup">
								<span class="inputGroup-text dragHandle"
									aria-label="{{ phrase('drag_handle')|for_attr }}"></span>
								<xf:textbox name="field_choice[]" value="{$choice}"
									placeholder="{{ phrase('value_a_z_0_9_and_only') }}"
									size="24" maxlength="25"
									dir="ltr" />
								<span class="inputGroup-splitter"></span>
								<xf:textbox name="field_choice_text[]" value="{$text}"
									placeholder="{{ phrase('text') }}" size="24" />
							</div>
						</xf:foreach>
						<div class="inputGroup is-undraggable js-blockDragafter" data-xf-init="field-adder"
							data-remove-class="is-undraggable js-blockDragafter">
							<span class="inputGroup-text dragHandle"
								aria-label="{{ phrase('drag_handle')|for_attr }}"></span>
							<xf:textbox name="field_choice[]"
								placeholder="{{ phrase('value_a_z_0_9_and_only') }}"
								size="24" maxlength="25" data-i="0"
								dir="ltr" />
							<span class="inputGroup-splitter"></span>
							<xf:textbox name="field_choice_text[]"
								placeholder="{{ phrase('text') }}"
								size="24" data-i="0" />
						</div>
					</div>
				</xf:formrow>
			</div>
		</xf:if>

		<h3 class="block-formSectionHeader">
			<span class="collapseTrigger collapseTrigger--block" data-xf-click="toggle" data-target="< :up:next">
				<span class="block-formSectionHeader-aligner">{{ phrase('general_options') }}</span>
			</span>
		</h3>
		<div class="block-body block-body--collapsible">
			<xf:if is="$extraOptions is not empty">
				{$extraOptions|raw}

				<hr class="formRowSep" />
			</xf:if>

			<xf:codeeditorrow name="display_template" value="{$field.display_template}"
				mode="html" data-line-wrapping="true"
				class="codeEditor--autoSize"
				label="{{ phrase('value_display_html') }}"
				explain="{{ phrase('field_display_html_description', {'fieldId': $field.field_id}) }}" />
		</div>

		<xf:submitrow sticky="true" icon="save" />
	</div>
</xf:form>

<xf:macro name="number_dependent" arg-field="!">
	<div class="inputGroup inputGroup--numbers">
		<xf:numberbox name="match_params[number_min]" value="{$field.match_params.number_min}" size="5"
			class="input--numberNarrow"
			placeholder="{{ phrase('minimum') }}" />
		&nbsp;
		<xf:numberbox name="match_params[number_max]" value="{$field.match_params.number_max}" size="5"
			class="input--numberNarrow"
			placeholder="{{ phrase('maximum') }}" />
	</div>
	<xf:checkbox>
		<xf:option name="match_params[number_integer]" selected="{$field.match_params.number_integer}">{{ phrase('field_definition_require_whole_number') }}</xf:option>
	</xf:checkbox>
</xf:macro>

<xf:macro name="regex_dependent" arg-field="!">
	<xf:textbox name="match_params[regex]" value="{$field.match_params.regex}"
		placeholder="{{ phrase('regular_expression') }}"
		code="true" />
</xf:macro>

<xf:macro name="validator_dependent" arg-field="!">
	<xf:textbox name="match_params[validator]" value="{$field.match_params.validator}"
		placeholder="{{ phrase('validator') }}"
		dir="ltr" />
</xf:macro>

<xf:macro name="date_dependent" arg-field="!">
	<xf:radio name="match_params[date_constraint]" value="{{ $field.match_params.date_constraint ?: '' }}">
		<xf:option value="past">{{ phrase('field_definition_require_past_date') }}</xf:option>
		<xf:option value="future">{{ phrase('field_definition_require_future_date') }}</xf:option>
		<xf:option value="">{{ phrase('any') }}</xf:option>
	</xf:radio>
</xf:macro>]]></template>
  <template type="admin" title="base_custom_field_list" version_id="2001070" version_string="2.0.10"><![CDATA[<xf:pageaction>
	<xf:button href="{{ link($prefix . '/add') }}" icon="add">{{ phrase('add_field') }}</xf:button>
</xf:pageaction>

<xf:if is="$fieldsGrouped is not empty">
	<xf:form action="{{ link($prefix . '/toggle') }}" class="block" ajax="true">
		<div class="block-outer">
			<xf:macro template="filter_macros" name="quick_filter" arg-key="user-fields" arg-class="block-outer-opposite" />
		</div>
		<div class="block-container">
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$displayGroups" key="$displayGroupId" value="$displayGroup">
						<xf:if is="{$fieldsGrouped.{$displayGroupId}} is not empty">
							<tbody class="dataList-rowGroup">
								<xf:datarow rowtype="subsection" rowclass="dataList-row--noHover">
									<xf:cell colspan="2">{$displayGroup}</xf:cell>
								</xf:datarow>
								<xf:foreach loop="{$fieldsGrouped.{$displayGroupId}}" value="$field">
									<xf:datarow
										label="{$field.title|htmlspecialchars}"
										href="{{ link($prefix . '/edit', $field) }}"
										delete="{{ link($prefix . '/delete', $field) }}"
										hash="{$field.field_id}">
										<xf:hint>
											{$fieldTypes.{$field.field_type}.label}
										</xf:hint>
									</xf:datarow>
								</xf:foreach>
							</tbody>
						</xf:if>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($displayGroups) }}</span>
			</div>
		</div>
	</xf:form>
<xf:else />
	<div class="blockMessage">{{ phrase('no_items_have_been_created_yet') }}</div>
</xf:if>]]></template>
  <template type="admin" title="base_custom_field_macros" version_id="2000034" version_string="2.0.0 Beta 4"><![CDATA[<xf:macro name="common_options" arg-field="!"
	arg-supportsRequired="{{ true }}"
	arg-supportsUserEditable="{{ false }}"
	arg-supportsEditableOnce="{{ false }}"
	arg-supportsModeratorEditable="{{ false }}"
	arg-supportsGroupEditable="{{ false }}">

	<xf:checkboxrow hideempty="true">
		<xf:if is="$supportsRequired">
			<xf:option name="required" selected="$field.required">{{ phrase('field_is_required') }}</xf:option>
		</xf:if>
		<xf:if is="$supportsUserEditable">
			<xf:option name="user_editable" value="yes" selected="$field.user_editable != 'never'"
				label="{{ phrase('user_editable') }}">

				<xf:checkbox>
					<xf:if is="$supportsEditableOnce">
						<xf:option name="user_editable" value="once" selected="$field.user_editable == 'once'">{{ phrase('editable_only_once') }}</xf:option>
					</xf:if>
				</xf:checkbox>
			</xf:option>
		</xf:if>
		<xf:if is="$supportsModeratorEditable">
			<xf:option name="moderator_editable" selected="$field.moderator_editable">{{ phrase('moderator_editable') }}</xf:option>
		</xf:if>
	</xf:checkboxrow>

	<xf:if is="$supportsGroupEditable">
		<xf:macro template="helper_user_group_edit" name="checkboxes"
			arg-label="{{ phrase('editable_by_user_groups') }}"
			arg-id="editable_user_group"
			arg-selectedUserGroups="{{ $field.field_id ? $field.editable_user_group_ids : [-1] }}" />
	</xf:if>
</xf:macro>]]></template>
  <template type="admin" title="base_prefix_delete" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link($linkPrefix . '/delete', $prefix) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('please_confirm_that_you_want_to_delete_following:') }}
				<strong><a href="{{ link($linkPrefix . '/edit', $prefix) }}">{$prefix.title}</a></strong>
			</xf:inforow>
		</div>
		<xf:submitrow rowtype="simple" icon="delete" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="base_prefix_edit" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:if is="$prefix.isInsert()">
	<xf:title>{{ phrase('add_prefix') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_prefix:') }} {$prefix.title}</xf:title>
</xf:if>

<xf:pageaction if="$prefix.isUpdate()">
	<xf:button href="{{ link($linkPrefix . '/delete', $prefix) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link($linkPrefix . '/save', $prefix) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">

			<xf:textboxrow name="title" value="{{ $prefix.prefix_id ? $prefix.MasterTitle.phrase_text : '' }}"
				label="{{ phrase('title') }}" />

			<xf:macro template="base_prefix_edit_macros" name="display_style" arg-prefix="{$prefix}"
				arg-displayStyles="{$displayStyles}" />

			<hr class="formRowSep" />

			<xf:macro template="base_prefix_edit_macros" name="prefix_groups" arg-prefix="{$prefix}"
				arg-prefixGroups="{$prefixGroups}" />

			<xf:macro template="display_order_macros" name="row"
				arg-value="{$prefix.display_order}" />

			<hr class="formRowSep" />

			<xf:macro template="helper_user_group_edit" name="checkboxes"
				arg-selectedUserGroups="{{ $prefix.prefix_id ? $prefix.allowed_user_group_ids : [-1] }}" />

			{$extraOptions|raw}
		</div>
		<xf:submitrow sticky="true" icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="base_prefix_edit_macros" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro name="display_style" arg-prefix="!" arg-displayStyles="!" arg-withRow="1">
	<xf:set var="$inner">
		<xf:radio name="css_class" value="{{ $prefix.css_class ? $prefix.css_class : 'label label--hidden' }}" listclass="listColumns">
			<xf:foreach loop="$displayStyles" value="$class">
				<xf:option value="{$class}"><span title="{$class}" class="{$class}" data-xf-init="tooltip" style="display: inline">{{ phrase('prefix') }}</span></xf:option>
			</xf:foreach>
			<xf:option value="" selected="$prefix.css_class AND !in_array($prefix.css_class, $displayStyles)" label="{{ phrase('other_using_custom_css_class_name') }}">
				<xf:textbox name="css_class" value="{{ ($prefix.css_class AND !in_array($prefix.css_class, $displayStyles)) ? $prefix.css_class : '' }}" maxlength="{{ max_length($prefix, 'css_class') }}" />
			</xf:option>
		</xf:radio>
	</xf:set>

	<xf:if is="$withRow">
		<xf:formrow label="{{ phrase('display_styling') }}">
			{$inner|raw}
		</xf:formrow>
	<xf:else />
		{$inner|raw}
	</xf:if>
</xf:macro>

<xf:macro name="prefix_groups" arg-prefix="!" arg-prefixGroups="!" arg-withRow="1">

	<xf:if is="$withRow">
		<xf:selectrow name="prefix_group_id" value="{$prefix.prefix_group_id}" label="{{ phrase('prefix_group') }}">
			<xf:option value="" label="{{ phrase('(none)') }}" />
			<xf:options source="{$prefixGroups}" />
		</xf:selectrow>
	<xf:else />
		<xf:select name="prefix_group_id" value="{$prefix.prefix_group_id}">
			<xf:option value="" label="{{ phrase('(none)') }}" />
			<xf:options source="{$prefixGroups}" />
		</xf:select>
	</xf:if>
</xf:macro>]]></template>
  <template type="admin" title="base_prefix_group_delete" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link($groupLinkPrefix . '/delete', $prefixGroup) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('please_confirm_that_you_want_to_delete_following:') }}
				<strong><a href="{{ link($groupLinkPrefix . '/edit', $prefixGroup) }}" data-xf-click="overlay">{$prefixGroup.title}</a></strong>
				{{ phrase('prefixes_belonging_to_this_group_will_be_disassociated_rather_than_deleted') }}
			</xf:inforow>
		</div>
		<xf:submitrow rowtype="simple" icon="delete" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="base_prefix_group_edit" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:if is="$prefixGroup.isInsert()">
	<xf:title>{{ phrase('add_prefix_group') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_prefix_group:') }} {$prefixGroup.title}</xf:title>
</xf:if>

<xf:pageaction if="$prefixGroup.isUpdate()">
	<xf:button href="{{ link($groupLinkPrefix . '/delete', $prefixGroup) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link($groupLinkPrefix . '/save', $prefixGroup) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:textboxrow name="title" value="{{ $prefixGroup.prefix_group_id ? $prefixGroup.MasterTitle.phrase_text : '' }}"
				label="{{ phrase('title') }}" />

			<xf:macro template="display_order_macros" name="row"
				arg-value="{$prefixGroup.display_order}" />
		</div>
		<xf:submitrow icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="base_prefix_list" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:pageaction>
	<div class="buttonGroup">
		<xf:button href="{{ link($linkPrefix . '/add') }}" icon="add">{{ phrase('add_prefix') }}</xf:button>
		<xf:button href="{{ link($groupLinkPrefix . '/add') }}" icon="add" overlay="true">{{ phrase('add_prefix_group') }}</xf:button>
	</div>
</xf:pageaction>

<xf:if is="$prefixesGrouped is not empty OR count($prefixGroups) > 1">
	<xf:form action="{{ link($linkPrefix . '/quick-set') }}" ajax="true" class="block"

		data-xf-init="select-plus"
		data-sp-checkbox=".dataList-cell--toggle input:checkbox"
		data-sp-container=".dataList-row"
		data-sp-control=".dataList-cell a">

		<div class="block-outer">
			<xf:macro template="filter_macros" name="quick_filter" arg-key="{$linkPrefix}" arg-class="block-outer-opposite" />
		</div>
		<div class="block-container">
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$prefixGroups" key="$prefixGroupId" value="$prefixGroup">
						<tbody class="dataList-rowGroup" id="js-prefixGroup{$prefixGroupId}">

						<xf:if is="{{ count($prefixGroups) > 1 }}">
							<xf:datarow rowtype="subsection" rowclass="{{ !$prefixGroupId ? 'dataList-row--noHover' : '' }}">
								<xf:if is="{{ $prefixGroupId > 0 }}">
									<xf:cell class="dataList-cell--min">
										<xf:if is="{{ count($prefixesGrouped.{$prefixGroupId}) }}">
											<xf:checkbox standalone="true"><xf:option check-all="#js-prefixGroup{$prefixGroupId}" /></xf:checkbox>
										</xf:if>
									</xf:cell>
									<xf:cell href="{{ link($groupLinkPrefix . '/edit', $prefixGroup) }}" overlay="true">
										{$prefixGroup.title}
									</xf:cell>
									<xf:delete href="{{ link($groupLinkPrefix . '/delete', $prefixGroup) }}" />
								<xf:elseif is="{{ count($prefixesGrouped.{$prefixGroupId}) }}" />
									<xf:cell class="dataList-cell--min">
										<xf:checkbox standalone="true"><xf:option check-all="#js-prefixGroup{$prefixGroupId}" /></xf:checkbox>
									</xf:cell>
									<xf:cell>{{ phrase('(ungrouped)') }}</xf:cell>
									<xf:cell>&nbsp;</xf:cell>
								</xf:if>
							</xf:datarow>
						</xf:if>

						<xf:foreach loop="{$prefixesGrouped.{$prefixGroupId}}" key="$prefixId" value="$prefix">
							<xf:datarow rowclass="prefixGroup{$prefixGroupId}">
								<xf:toggle name="prefix_ids[]" value="{$prefix.prefix_id}" />
								<xf:cell href="{{ link($linkPrefix . '/edit', $prefix) }}" class="dataList-cell">
									{$prefix.title}
								</xf:cell>
								<xf:delete href="{{ link($linkPrefix . '/delete', $prefix) }}" />
							</xf:datarow>
						<xf:else />
							<xf:if is="{{ count($prefixesGrouped.{$prefixGroupId}) || $prefixGroupId > 0 }}">
								<xf:datarow rowclass="dataList-row--noHover">
									<xf:cell colspan="3" class="dataList-cell--noSearch">
										<xf:if is="{{ count($prefixGroups) > 1 }}">
											{{ phrase('no_prefixes_have_been_added_to_this_group_yet') }}
										<xf:else />
											{{ phrase('no_prefixes_have_been_added_yet') }}
										</xf:if>
									</xf:cell>
								</xf:datarow>
							</xf:if>
						</xf:foreach>
						</tbody>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer block-footer--split">
				<span class="block-footer-counter">{{ display_totals($prefixTotal) }}</span>
				<span class="block-footer-select"><xf:checkbox standalone="true"><xf:option check-all=".dataList" label="{{ phrase('select_all') }}" /></xf:checkbox></span>
				<span class="block-footer-controls"><xf:button type="submit" name="quickset" value="1">{{ phrase('quick_set') }}</xf:button></span>
			</div>
		</div>
	</xf:form>
<xf:else />
	<div class="blockMessage">{{ phrase('no_items_have_been_created_yet') }}</div>
</xf:if>]]></template>
  <template type="admin" title="base_prefix_quickset_chooser" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('quick_set_prefixes') }}</xf:title>

<xf:form action="{{ link($linkPrefix . '/quick-set') }}" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:selectrow name="prefix_id"
				label="{{ phrase('copy_settings_from') }}"
				explain="{{ phrase('on_next_page_you_may_apply_settings_to_all_selected_prefixes') }}">

				<xf:option value="-1">{{ phrase('(none)') }}</xf:option>
				<xf:foreach loop="$prefixGroups" key="$groupId" value="$prefixGroup" if="{{ count($prefixesGrouped.{$groupId}) > 0 }}">
					<xf:optgroup label="{{ prefix_group($prefixType, $groupId) }}">
						<xf:foreach loop="{$prefixesGrouped.{$groupId}}" key="$prefixId" value="$cssClass">
							<xf:option value="{$prefixId}" label="{{ prefix_title($prefixType, $prefixId) }}" />
						</xf:foreach>
					</xf:optgroup>
				</xf:foreach>

			</xf:selectrow>
		</div>
		<xf:submitrow submit="{{ phrase('proceed...') }}" name="quickset" value="1" />
	</div>
	<xf:foreach loop="$prefixIds" value="$prefixId">
		<xf:hiddenval name="prefix_ids[]">{$prefixId}</xf:hiddenval>
	</xf:foreach>
</xf:form>]]></template>
  <template type="admin" title="base_prefix_quickset_editor" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('quick_set_prefixes') }}</xf:title>

<xf:form action="{{ link($linkPrefix . '/quick-set') }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:checkboxrow name="prefix_ids" listclass="listInline"
				label="{{ phrase('apply_options_to_these_prefixes') }}">

				<xf:foreach loop="$prefixes" key="$prefixId" value="$_prefix">
					<xf:option value="{$prefixId}" checked="checked">
						<xf:label><span class="{$_prefix.css_class}">{$_prefix.title}</span></xf:label>
					</xf:option>
				</xf:foreach>
			</xf:checkboxrow>

			<xf:checkboxrow name="apply_css_class"
				label="{{ phrase('display_styling') }}">

				<xf:option label="{{ phrase('apply_display_styling_options:') }}">
					<xf:dependent>
						<xf:macro template="base_prefix_edit_macros" name="display_style"
							arg-prefix="{$prefix}"
							arg-displayStyles="{$displayStyles}"
							arg-withRow="0" />
					</xf:dependent>
				</xf:option>
			</xf:checkboxrow>

			<hr class="formRowSep" />

			<xf:checkboxrow name="apply_prefix_group_id"
				label="{{ phrase('prefix_group') }}">

				<xf:option label="{{ phrase('apply_prefix_group_options:') }}">
					<xf:dependent>
						<xf:macro template="base_prefix_edit_macros" name="prefix_groups"
							arg-prefix="{$prefix}"
							arg-prefixGroups="{$prefixGroups}"
							arg-withRow="0" />
					</xf:dependent>
				</xf:option>
			</xf:checkboxrow>

			<hr class="formRowSep" />

			<xf:checkboxrow name="apply_user_group_ids"
				label="{{ phrase('usable_by_user_groups') }}">

				<xf:option label="{{ phrase('apply_user_group_options:') }}">
					<xf:dependent>
						<xf:macro template="helper_user_group_edit" name="checkboxes"
							arg-selectedUserGroups="{{ $prefix.prefix_id ? $prefix.allowed_user_group_ids : [-1] }}"
							arg-withRow="0" />
					</xf:dependent>
				</xf:option>
			</xf:checkboxrow>

			{$extraOptions|raw}
		</div>
		<xf:submitrow sticky="true" icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="base_prompt_delete" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link($linkPrefix . '/delete', $prompt) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('please_confirm_that_you_want_to_delete_following:') }}
				<strong><a href="{{ link($linkPrefix . '/edit', $prompt) }}">{$prompt.title}</a></strong>
			</xf:inforow>
		</div>
		<xf:submitrow rowtype="simple" icon="delete" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="base_prompt_edit" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:if is="$prompt.isInsert()">
	<xf:title>{{ phrase('add_prompt') }}</xf:title>
	<xf:else />
	<xf:title>{{ phrase('edit_prompt:') }} {$prompt.title}</xf:title>
</xf:if>

<xf:pageaction if="$prompt.isUpdate()">
	<xf:button href="{{ link($linkPrefix . '/delete', $prompt) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link($linkPrefix . '/save', $prompt) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">

			<xf:textboxrow name="title" value="{{ $prompt.prompt_id ? $prompt.MasterTitle.phrase_text : '' }}"
				label="{{ phrase('title') }}" />

			<hr class="formRowSep" />

			<xf:macro template="base_prompt_edit_macros" name="prompt_groups" arg-prompt="{$prompt}"
				arg-promptGroups="{$promptGroups}" />

			<xf:macro template="display_order_macros" name="row"
				arg-value="{$prompt.display_order}" />

			<hr class="formRowSep" />

			{$extraOptions|raw}
		</div>
		<xf:submitrow sticky="true" icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="base_prompt_edit_macros" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro name="prompt_groups" arg-prompt="!" arg-promptGroups="!" arg-withRow="1">

	<xf:if is="$withRow">
		<xf:selectrow name="prompt_group_id" value="{$prompt.prompt_group_id}" label="{{ phrase('prompt_group') }}">
			<xf:option value="" label="{{ phrase('(none)') }}" />
			<xf:options source="{$promptGroups}" />
		</xf:selectrow>
	<xf:else />
		<xf:select name="prompt_group_id" value="{$prompt.prompt_group_id}">
			<xf:option value="" label="{{ phrase('(none)') }}" />
			<xf:options source="{$promptGroups}" />
		</xf:select>
	</xf:if>
</xf:macro>]]></template>
  <template type="admin" title="base_prompt_group_delete" version_id="2000035" version_string="2.0.0 Beta 5"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link($groupLinkPrefix . '/delete', $promptGroup) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('please_confirm_that_you_want_to_delete_following:') }}
				<strong><a href="{{ link($groupLinkPrefix . '/edit', $promptGroup) }}" data-xf-click="overlay">{$promptGroup.title}</a></strong>
				{{ phrase('prompts_belonging_to_this_group_will_be_disassociated_rather_than_deleted') }}
			</xf:inforow>
		</div>
		<xf:submitrow rowtype="simple" icon="delete" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="base_prompt_group_edit" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:if is="$promptGroup.isInsert()">
	<xf:title>{{ phrase('add_prompt_group') }}</xf:title>
	<xf:else />
	<xf:title>{{ phrase('edit_prompt_group:') }} {$promptGroup.title}</xf:title>
</xf:if>

<xf:pageaction if="$promptGroup.isUpdate()">
	<xf:button href="{{ link($groupLinkPrefix . '/delete', $promptGroup) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link($groupLinkPrefix . '/save', $promptGroup) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:textboxrow name="title" value="{{ $promptGroup.prompt_group_id ? $promptGroup.MasterTitle.phrase_text : '' }}"
				label="{{ phrase('title') }}" />

			<xf:macro template="display_order_macros" name="row"
				arg-value="{$promptGroup.display_order}" />
		</div>
		<xf:submitrow icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="base_prompt_list" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:pageaction>
	<div class="buttonGroup">
		<xf:button href="{{ link($linkPrefix . '/add') }}" icon="add">{{ phrase('add_prompt') }}</xf:button>
		<xf:button href="{{ link($groupLinkPrefix . '/add') }}" icon="add" overlay="true">{{ phrase('add_prompt_group') }}</xf:button>
	</div>
</xf:pageaction>

<xf:if is="$promptsGrouped is not empty OR count($promptGroups) > 1">
	<xf:form action="{{ link($linkPrefix . '/quick-set') }}" ajax="true" class="block"

		data-xf-init="select-plus"
		data-sp-checkbox=".dataList-row:not(.dataList-row--subSection) input:checkbox"
		data-sp-container=".dataList-row:not(.dataList-row--subSection, .dataList-row--noHover)"
		data-sp-control=".dataList-cell a">

		<div class="block-outer">
			<xf:macro template="filter_macros" name="quick_filter" arg-key="{$linkPrefix}" arg-class="block-outer-opposite" />
		</div>
		<div class="block-container">
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$promptGroups" key="$promptGroupId" value="$promptGroup">
						<tbody class="dataList-rowGroup" id="js-promptGroup{$promptGroupId}">

						<xf:if is="{{ count($promptGroups) > 1 }}">
							<xf:datarow rowtype="subsection" rowclass="{{ !$promptGroupId ? 'dataList-row--noHover' : '' }}">
								<xf:if is="{{ $promptGroupId > 0 }}">
									<xf:cell class="dataList-cell--min">
										<xf:if is="{{ count($promptsGrouped.{$promptGroupId}) }}">
											<xf:checkbox standalone="true"><xf:option check-all="#js-promptGroup{$promptGroupId}" /></xf:checkbox>
										</xf:if>
									</xf:cell>
									<xf:cell href="{{ link($groupLinkPrefix . '/edit', $promptGroup) }}" overlay="true">
										{$promptGroup.title}
									</xf:cell>
									<xf:delete href="{{ link($groupLinkPrefix . '/delete', $promptGroup) }}" />
									<xf:elseif is="{{ count($promptsGrouped.{$promptGroupId}) }}" />
									<xf:cell class="dataList-cell--min">
										<xf:checkbox standalone="true"><xf:option check-all="#js-promptGroup{$promptGroupId}" /></xf:checkbox>
									</xf:cell>
									<xf:cell>{{ phrase('(ungrouped)') }}</xf:cell>
									<xf:cell>&nbsp;</xf:cell>
								</xf:if>
							</xf:datarow>
						</xf:if>

						<xf:foreach loop="{$promptsGrouped.{$promptGroupId}}" key="$promptId" value="$prompt">
							<xf:datarow rowclass="promptGroup{$promptGroupId}">
								<xf:toggle name="prompt_ids[]" value="{$prompt.prompt_id}" />
								<xf:cell href="{{ link($linkPrefix . '/edit', $prompt) }}" class="dataList-cell">
									{$prompt.title}
								</xf:cell>
								<xf:delete href="{{ link($linkPrefix . '/delete', $prompt) }}" />
							</xf:datarow>
							<xf:else />
							<xf:if is="{{ count($promptsGrouped.{$promptGroupId}) || $promptGroupId > 0 }}">
								<xf:datarow rowclass="dataList-row--noHover">
									<xf:cell colspan="3" class="dataList-cell--noSearch">
										<xf:if is="{{ count($promptGroups) > 1 }}">
											{{ phrase('no_prompts_have_been_added_to_this_group_yet') }}
											<xf:else />
											{{ phrase('no_prompts_have_been_added_yet') }}
										</xf:if>
									</xf:cell>
								</xf:datarow>
							</xf:if>
						</xf:foreach>
						</tbody>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer block-footer--split">
				<span class="block-footer-counter">{{ display_totals($promptTotal) }}</span>
				<span class="block-footer-select"><xf:checkbox standalone="true"><xf:option check-all=".dataList" label="{{ phrase('select_all') }}" /></xf:checkbox></span>
				<span class="block-footer-controls"><xf:button type="submit" name="quickset" value="1">{{ phrase('quick_set') }}</xf:button></span>
			</div>
		</div>
	</xf:form>
	<xf:else />
	<div class="blockMessage">{{ phrase('no_items_have_been_created_yet') }}</div>
</xf:if>]]></template>
  <template type="admin" title="base_prompt_quickset_chooser" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('quick_set_prompts') }}</xf:title>

<xf:form action="{{ link($linkPrefix . '/quick-set') }}" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:selectrow name="prompt_id"
				label="{{ phrase('copy_settings_from') }}"
				explain="{{ phrase('on_next_page_you_may_apply_settings_to_all_selected_prompts') }}">

				<xf:option value="-1">{{ phrase('(none)') }}</xf:option>
				<xf:foreach loop="$promptGroups" key="$groupId" value="$promptGroup" if="{{ count($promptsGrouped.{$groupId}) > 0 }}">
					<xf:optgroup label="{{ $groupId ? $promptGroup.title : phrase('ungrouped') }}">
						<xf:foreach loop="{$promptsGrouped.{$groupId}}" key="$promptId" value="$prompt">
							<xf:option value="{$promptId}" label="{$prompt.title}" />
						</xf:foreach>
					</xf:optgroup>
				</xf:foreach>

			</xf:selectrow>
		</div>
		<xf:submitrow submit="{{ phrase('proceed...') }}" name="quickset" value="1" />
	</div>
	<xf:foreach loop="$promptIds" value="$promptId">
		<xf:hiddenval name="prompt_ids[]">{$promptId}</xf:hiddenval>
	</xf:foreach>
</xf:form>]]></template>
  <template type="admin" title="base_prompt_quickset_editor" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('quick_set_prompts') }}</xf:title>

<xf:form action="{{ link($linkPrefix . '/quick-set') }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:checkboxrow name="prompt_ids" listclass="_listInline"
				label="{{ phrase('apply_options_to_these_prompts') }}">

				<xf:foreach loop="$prompts" key="$promptId" value="$_prompt">
					<xf:option value="{$promptId}" checked="checked">
						<xf:label>{$_prompt.title}</xf:label>
					</xf:option>
				</xf:foreach>
			</xf:checkboxrow>

			<hr class="formRowSep" />

			<xf:checkboxrow name="apply_prompt_group_id"
				label="{{ phrase('prompt_group') }}">

				<xf:option label="{{ phrase('apply_prompt_group_options:') }}">
					<xf:dependent>
						<xf:macro template="base_prompt_edit_macros" name="prompt_groups"
							arg-prompt="{$prompt}"
							arg-promptGroups="{$promptGroups}"
							arg-withRow="0" />
					</xf:dependent>
				</xf:option>
			</xf:checkboxrow>

			<hr class="formRowSep" />

			{$extraOptions|raw}
		</div>
		<xf:submitrow sticky="true" icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="bb_code_button_manager_dropdown_edit" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[<xf:title>
	<xf:if is="$dropdown.isInsert()">
		{{ phrase('add_dropdown') }}
	<xf:else />
		{{ phrase('edit_dropdown:') }} {$dropdown.title}
	</xf:if>
</xf:title>

<xf:macro template="bb_code_button_manager_editor" name="setup" />

<xf:form action="{{ link('button-manager/dropdown/save', $dropdown) }}" ajax="true" data-xf-init="editor-manager" data-command-tray-class=".js-dragList-commandTrayDropdown">
	<div class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:if is="$dropdown.isInsert()">
					<xf:textboxrow name="cmd" label="{{ phrase('command_id') }}" />
				<xf:else />
					<xf:formrow label="{{ phrase('command_id') }}">{$dropdown.cmd}</xf:formrow>
				</xf:if>

				<xf:textboxrow name="title" label="{{ phrase('title') }}" value="{{ $dropdown.isUpdate() ? $dropdown.MasterTitle.phrase_text : '' }}" />

				<xf:textboxrow name="icon" label="{{ phrase('icon') }}" value="{$dropdown.icon}">
					<xf:explain>{{ phrase('you_can_preview_icons_and_their_names_here') }}</xf:explain>
				</xf:textboxrow>

				<xf:macro template="display_order_macros" name="row" arg-value="{$dropdown.display_order}" />

				<xf:checkboxrow label="">
					<xf:option name="active" selected="$dropdown.active"
						label="{{ phrase('dropdown_is_active') }}" />
				</xf:checkboxrow>
			</div>
		</div>
	</div>

	<div class="block">
		<div class="block-container">
			<h2 class="block-header">
				{{ phrase('available_buttons') }}
			</h2>
			<xf:macro template="bb_code_button_manager_editor"
				name="toolbar_block"
				arg-buttons="{{ array_keys($buttonData) }}"
				arg-buttonData="{$buttonData}"
				arg-toolbarType="commandTrayDropdown"
				arg-displayTooltips="{{ true }}" />

			<div class="block-row block-row--minor u-muted">
				{{ phrase('note_not_all_buttons_supported_inside_dropdowns') }}
			</div>
		</div>
	</div>

	<div class="block">
		<div class="block-container">
			<h2 class="block-header">
				{{ phrase('dropdown_buttons') }}
			</h2>

			<xf:macro template="bb_code_button_manager_editor"
				name="toolbar_block"
				arg-name="buttons"
				arg-buttons="{$dropdown.buttons}"
				arg-buttonData="{$buttonData}"
				arg-toolbarType="toolbarDropdown" />

			<xf:submitrow icon="save" />
		</div>
	</div>
</xf:form>]]></template>
  <template type="admin" title="bb_code_button_manager_editor" version_id="2010037" version_string="2.1.0 Beta 7"><![CDATA[<xf:title>{{ phrase('edit_toolbar') }}: {$typeTitle}</xf:title>

<xf:macro name="setup" />

<xf:pageaction>
	<xf:button href="{{ link('button-manager/reset', null, {'type': $type}) }}" data-xf-click="overlay" icon="refresh">
		{{ phrase('reset_button_configuration') }}
	</xf:button>
</xf:pageaction>

<xf:form action="{{ link('button-manager/save', null, {'type': $type}) }}" ajax="true" data-xf-init="editor-manager" data-force-flash-message="on">
	<div class="block">
		<div class="block-container">
			<h2 class="block-header">
				{{ phrase('available_buttons_and_dropdown_menus') }}
			</h2>

			<xf:macro name="toolbar_block"
				arg-buttons="{{ array_keys($buttonData) }}"
				arg-buttonData="{$buttonData}"
				arg-toolbarType="commandTray"
				arg-displayTooltips="{{ true }}"
				arg-includeDropdownControls="{{ true }}" />

			<div class="block-row block-row--minor u-muted">
				{{ phrase('available_buttons_and_dropdown_menus_desc') }}
			</div>
		</div>
	</div>

	<div class="block">
		<div class="block-container">
			<h3 class="block-header">
				{$typeTitle}
			</h3>

			<xf:macro name="toolbar_block"
				arg-type="{$type}"
				arg-name="editor_toolbar_config[{$type}]"
				arg-buttons="{$toolbarButtons}"
				arg-buttonData="{$buttonData}"
				arg-toolbarType="toolbar" />

			<div class="block-row block-row--minor u-muted">
				{$typeDescription}
			</div>

			<xf:submitrow icon="save" rowtype="simple" />
		</div>
	</div>
</xf:form>

<xf:macro name="toolbar_block"
	arg-type=""
	arg-name=""
	arg-buttons="!"
	arg-buttonData="!"
	arg-toolbarType="!"
	arg-displayTooltips="{{ false }}"
	arg-includeDropdownControls="{{ false }}">
	<div class="block-body">
		<div class="block-row">
			<div class="fr-box fr-box--editor fr-box--editor--{$type} fr-ltr fr-basic fr-top">
				<div class="js-dragList js-dragList-{$toolbarType} toolbar-{$toolbarType} fr-toolbar fr-ltr fr-desktop fr-top fr-basic">
					<xf:foreach loop="$buttons" value="$cmd">
						<xf:if is="{$buttonData.{$cmd}}">
							<xf:macro name="toolbar_button"
								arg-button="{$buttonData.{$cmd}}"
								arg-cmd="{$cmd}"
								arg-displayTooltips="{$displayTooltips}"
								arg-includeDropdownControls="{$includeDropdownControls}" />
						</xf:if>
					</xf:foreach>
					<xf:if is="$name">
						<xf:hiddenval name="{$name}" class="js-dragListValue" />
					</xf:if>
				</div>
			</div>
		</div>
	</div>
</xf:macro>

<xf:macro name="toolbar_button" arg-button="!" arg-cmd="!" arg-displayTooltips="{{ false }}" arg-includeDropdownControls="{{ false }}">
	<div data-cmd="{$cmd}" data-xf-init="{{ $displayTooltips ? 'tooltip' : '' }}" title="{{ $displayTooltips ? $button.title : '' }}"
		class="{{ $button.type ? 'toolbar-' . $button.type : '' }} fr-command fr-btn {{ ($button.type == 'dropdown' OR $button.type == 'editable_dropdown') ? 'fr-dropdown' : '' }} {{ $button.fa ? 'fr-btn-font_awesome' : 'fr-btn-image' }}">
		<xf:macro name="toolbar_icon" arg-button="{$button}" />
		<span class="fr-sr-only">{$button.title}</span>
	</div>
	<xf:if is="$button.type == 'separator'">
		<div class="fr-separator fr{$cmd}"></div>
	</xf:if>
</xf:macro>

<xf:macro name="toolbar_icon" arg-button="!">
	<xf:if is="$button.fa">
		<xf:fa icon="{$button.fa}" />
	<xf:elseif is="$button.image" />
		<img src="{$button.image}" alt="" />
	<xf:elseif is="$button.text" />
		<span style="text-align: center;">{$button.text}</span>
	</xf:if>
</xf:macro>

<xf:macro name="setup">
	<xf:css src="public:editor.less" />
	<xf:css src="button_manager.less" />
	<xf:js dev="vendor/dragula/dragula.js, xf/editor_manager.js" prod="xf/editor_manager-compiled.js" />

	<script class="js-extraPhrases" type="application/json">
		{
			"buttons_menus_may_not_be_duplicated": "{{ phrase('buttons_menus_may_not_be_duplicated')|escape('json') }}",
			"button_removed": "{{ phrase('button_removed')|escape('json') }}"
		}
	</script>
</xf:macro>]]></template>
  <template type="admin" title="bb_code_button_manager_list" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[<xf:title>{{ phrase('bb_code_button_manager') }}</xf:title>

<xf:pageaction>
	<xf:button href="{{ link('button-manager/dropdown/add') }}" icon="add">{{ phrase('add_dropdown') }}</xf:button>
</xf:pageaction>

<div class="block">
	<div class="block-container">
		<h2 class="block-header">
			{{ phrase('editor_toolbars') }}
			<span class="block-desc">{{ phrase('rich_text_editor_supports_four_button_configs') }}</span>
		</h2>
		<div class="block-body">
			<xf:datalist>
				<xf:foreach loop="$toolbarTypes" key="$type" value="$phrases">
					<xf:datarow
						label="{$phrases.title}"
						explain="{$phrases.description}"
						href="{{ link('button-manager/edit', null, {'type': $type}) }}" />
				</xf:foreach>
			</xf:datalist>
		</div>
	</div>
</div>

<xf:if is="$editorDropdowns is not empty">
	<xf:form action="{{ link('button-manager/dropdown/toggle') }}" class="block" ajax="true">
		<div class="block-container">
			<h2 class="block-header">
				{{ phrase('editor_dropdowns') }}
			</h2>
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$editorDropdowns" value="$editorDropdown">
						<xf:datarow
							label="{$editorDropdown.title}"
							href="{{ link('button-manager/dropdown/edit', $editorDropdown) }}"
							icon="{{ $editorDropdown.icon ?: 'none' }}"
							delete="{{ link('button-manager/dropdown/delete', $editorDropdown) }}">
							<xf:toggle name="active[{$editorDropdown.cmd}]" selected="$editorDropdown.active"
								class="dataList-cell--separated" submit="true"
								tooltip="{{ phrase('enable_disable_x', {'title': $editorDropdown.title}) }}" />
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
		</div>
	</xf:form>
</xf:if>]]></template>
  <template type="admin" title="bb_code_button_manager_reset" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('reset_button_configuration') }}</xf:title>

<xf:form action="{{ link('button-manager/reset', null, {'type': $type}) }}" ajax="true" class="block" data-force-flash-message="on">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm close">
				{{ phrase('please_confirm_that_you_want_to_reset_following_button_configuration:') }}
				<strong><a href="{{ link('button-manager/edit', null, {'type': $type}) }}">{$typeTitle}</a></strong>
			</xf:inforow>
			<xf:inforow>
				<p class="block-rowMessage block-rowMessage--warning block-rowMessage--iconic">
					<strong>{{ phrase('note:') }}</strong>
					{{ phrase('button_manager_reset_it_is_not_possible_to_reverse_this_action') }}
				</p>
			</xf:inforow>
		</div>
		<xf:submitrow rowtype="simple" icon="refresh" submit="{{ phrase('reset_button_configuration') }}" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="bb_code_edit" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[<xf:if is="$bbCode.isInsert()">
	<xf:title>{{ phrase('add_bb_code') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_bb_code:') }} [{$bbCode.bb_code_id}]</xf:title>
</xf:if>

<xf:pageaction if="$bbCode.isUpdate() AND $bbCode.canEdit()">
	<xf:button href="{{ link('bb-codes/delete', $bbCode) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:if is="{{ !$bbCode.canEdit() }}">
	<div class="blockMessage blockMessage--important blockMessage--iconic">
		{{ phrase('only_limited_fields_in_item_may_be_edited') }}
	</div>
</xf:if>

<xf:form action="{{ link('bb-codes/save', $bbCode) }}" ajax="true" class="block">
	<div class="block-container">

		<div class="block-body">
			<xf:textboxrow name="bb_code_id" value="{$bbCode.bb_code_id}" maxlength="{{ max_length($bbCode, 'bb_code_id') }}"
				readonly="{{ !$bbCode.canEdit() }}"
				label="{{ phrase('bb_code_tag') }}"
				dir="ltr" />

			<xf:textboxrow name="title" value="{{ $bbCode.exists() ? $bbCode.MasterTitle.phrase_text : '' }}"
				readonly="{{ !$bbCode.canEdit() }}"
				label="{{ phrase('title') }}" />
			<xf:textarearow name="desc" value="{{ $bbCode.exists() ? $bbCode.MasterDesc.phrase_text : '' }}" autosize="true"
				readonly="{{ !$bbCode.canEdit() }}"
				label="{{ phrase('description') }}" />

			<xf:radiorow name="bb_code_mode" value="{$bbCode.bb_code_mode}"
				readonly="{{ !$bbCode.canEdit() }}"
				label="{{ phrase('replacement_mode') }}">

				<xf:option value="replace">{{ phrase('simple_replacement') }}</xf:option>
				<xf:option value="callback">{{ phrase('php_callback') }}</xf:option>
			</xf:radiorow>

			<xf:radiorow name="has_option" value="{$bbCode.has_option}"
				readonly="{{ !$bbCode.canEdit() }}"
				label="{{ phrase('supports_option_parameter') }}">

				<xf:option value="yes">{{ phrase('yes') }}</xf:option>
				<xf:option value="no">{{ phrase('no') }}</xf:option>
				<xf:option value="optional" explain="{{ phrase('bb_code_tag_will_work_with_and_without_option_provided') }}">
					{{ phrase('optional') }}
				</xf:option>
			</xf:radiorow>

			<xf:codeeditorrow name="replace_html" value="{$bbCode.replace_html}"
				mode="html" data-line-wrapping="true"
				readonly="{{ !$bbCode.canEdit() }}"
				class="codeEditor--autoSize"
				label="{{ phrase('html_replacement') }}"
				explain="{{ phrase('use_option_and_text_in_custom_bb_code') }}" />

			<xf:macro template="helper_callback_fields" name="callback_row"
				arg-label="{{ phrase('php_callback') }}"
				arg-explain="{{ phrase('custom_bb_code_callback_will_receive_parameters') }}"
				arg-data="{$bbCode}"
				arg-readOnly="{{ !$bbCode.canEdit() }}" />

			<hr class="formRowSep" />

			<xf:radiorow name="editor_icon_type" value="{$bbCode.editor_icon_type}"
				readonly="{{ !$bbCode.canEdit() }}"
				label="{{ phrase('editor_icon') }}">

				<xf:option value="">{{ phrase('none') }}</xf:option>
				<xf:option value="fa" label="{{ phrase('admin_navigation_icon') }}">
					<xf:textbox name="editor_icon_fa"
						readonly="{{ !$bbCode.canEdit() }}"
						value="{{ $bbCode.editor_icon_type == 'fa' ? $bbCode.editor_icon_value : '' }}"
						maxlength="{{ max_length($bbCode, 'editor_icon_value') }}"
						dir="ltr" />
				</xf:option>
				<xf:option value="image" label="{{ phrase('image') }}">
					<xf:textbox name="editor_icon_image"
						readonly="{{ !$bbCode.canEdit() }}"
						value="{{ $bbCode.editor_icon_type == 'image' ? $bbCode.editor_icon_value : '' }}"
						maxlength="{{ max_length($bbCode, 'editor_icon_value') }}"
						dir="ltr" />
				</xf:option>
			</xf:radiorow>

			<hr class="formRowSep" />

			<xf:textarearow name="example" value="{{ $bbCode.exists() ? $bbCode.MasterExample.phrase_text : '' }}" autosize="true"
				readonly="{{ !$bbCode.canEdit() }}"
				label="{{ phrase('example_usage') }}"
				explain="{{ phrase('if_provide_example_bb_code_appear_on_bb_code_help_page') }}" />

			<xf:textarearow name="output" value="{{ $bbCode.exists() ? $bbCode.MasterOutput.phrase_text : '' }}" autosize="true"
				readonly="{{ !$bbCode.canEdit() }}"
				label="{{ phrase('example_output') }}"
				explain="{{ phrase('control_how_example_appear_on_bb_code_help_page') }}" />

			<hr class="formRowSep" />

			<xf:checkboxrow>
				<xf:option name="allow_signature" value="1" selected="$bbCode.allow_signature">
					{{ phrase('allow_this_bb_code_in_signatures') }}
				</xf:option>
			</xf:checkboxrow>

			<xf:checkboxrow>
				<xf:option name="active" value="1" selected="$bbCode.active"
					hint="{{ ($xf.development AND $bbCode.addon_id) ? phrase('field_value_maintained_addon_upgrade_explain') : '' }}">
					{{ phrase('enabled') }}
				</xf:option>
			</xf:checkboxrow>

			<xf:macro template="addon_macros" name="addon_edit" arg-addOnId="{$bbCode.addon_id}" />
		</div>

		<h3 class="block-formSectionHeader">
			<span class="collapseTrigger collapseTrigger--block" data-xf-click="toggle" data-target="< :up:next">
				<span class="block-formSectionHeader-aligner">{{ phrase('advanced_options') }}</span>
			</span>
		</h3>
		<div class="block-body block-body--collapsible">
			<xf:textarearow name="option_regex" value="{$bbCode.option_regex}" code="true" autosize="true"
				readonly="{{ !$bbCode.canEdit() }}"
				label="{{ phrase('option_match_regular_expression') }}"
				explain="{{ phrase('if_provided_tag_only_be_valid_if_option_matches_regex') }}" />

			<xf:checkboxrow label="{{ phrase('within_this_bb_code') }}" readonly="{{ !$bbCode.canEdit() }}">
				<xf:option name="disable_smilies" value="1" selected="$bbCode.disable_smilies">
					{{ phrase('disable_smilies') }}
				</xf:option>
				<xf:option name="disable_nl2br" value="1" selected="$bbCode.disable_nl2br">
					{{ phrase('disable_line_break_conversion') }}
				</xf:option>
				<xf:option name="disable_autolink" value="1" selected="$bbCode.disable_autolink">
					{{ phrase('disable_auto_linking') }}
				</xf:option>
				<xf:option name="plain_children" value="1" selected="$bbCode.plain_children">
					{{ phrase('stop_parsing_bb_code') }}
				</xf:option>
			</xf:checkboxrow>

			<xf:checkboxrow readonly="{{ !$bbCode.canEdit() }}">
				<xf:option name="allow_empty" value="1" selected="$bbCode.allow_empty"
					label="{{ phrase('display_html_replacement_when_empty') }}"
					explain="{{ phrase('if_selected_replacement_html_displayed_no_text_inside_bb_code') }}" />
			</xf:checkboxrow>

			<xf:numberboxrow name="trim_lines_after" value="{$bbCode.trim_lines_after}" min="0" max="10"
				readonly="{{ !$bbCode.canEdit() }}"
				label="{{ phrase('trim_line_breaks_after') }}"
				explain="{{ phrase('if_tag_is_block_level_may_want_to_ignore_line_breaks') }}" />

			<hr class="formRowSep" />

			<xf:codeeditorrow name="replace_html_email" value="{$bbCode.replace_html_email}"
				mode="html" data-line-wrapping="true"
				readonly="{{ !$bbCode.canEdit() }}"
				class="codeEditor--autoSize"
				label="{{ phrase('html_email_replacement') }}"
				explain="{{ phrase('if_provided_bb_code_replace_html_email_desc') }}" />

			<xf:codeeditorrow name="replace_text" value="{$bbCode.replace_text}"
				mode="text" data-line-wrapping="true"
				readonly="{{ !$bbCode.canEdit() }}"
				class="codeEditor--autoSize"
				label="{{ phrase('text_replacement') }}"
				explain="{{ phrase('if_provided_bb_code_replace_text_desc') }}" />
		</div>

		<xf:submitrow sticky="true" icon="save" />
	</div>

</xf:form>]]></template>
  <template type="admin" title="bb_code_list" version_id="2000170" version_string="2.0.1"><![CDATA[<xf:title>{{ phrase('custom_bb_codes') }}</xf:title>

<xf:pageaction>
	<div class="buttonGroup">
		<xf:button href="{{ link('bb-codes/add') }}" icon="add">{{ phrase('add_bb_code') }}</xf:button>
		<xf:button href="{{ link('bb-codes/import') }}" icon="import" overlay="true" />
		<xf:if is="$bbCodes is not empty">
			<xf:button href="{{ link('bb-codes', null, {'export': ($exportView ? '' : '1')}) }}" icon="export" />
		</xf:if>
	</div>
</xf:pageaction>

<xf:if is="$bbCodes is not empty">
	<xf:form action="{{ link(($exportView ? 'bb-codes/export' : 'bb-codes/toggle')) }}"
		ajax="{{ $exportView ? false : true }}" class="block">

		<div class="block-outer">
			<xf:macro template="filter_macros" name="quick_filter" arg-key="bb-codes" arg-class="block-outer-opposite" />
		</div>
		<div class="block-container">
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$bbCodes" value="$bbCode">
						<xf:datarow>
							<xf:if is="$exportView">
								<xf:toggle name="export[]" value="{$bbCode.bb_code_id}"
									disabled="{{ $bbCode.addon_id ? true : false }}"
									tooltip="{{ $bbCode.addon_id ? phrase('bb_codes_for_addon_not_exported_independently') : '' }}" />
							</xf:if>
							<xf:main href="{{ $exportView ? null : link('bb-codes/edit', $bbCode) }}">
								<xf:label>{$bbCode.title}</xf:label>
								<xf:hint>[{$bbCode.bb_code_id}]</xf:hint>
								<xf:explain>{$bbCode.description}</xf:explain>
							</xf:main>
							<xf:if is="!$exportView">
								<xf:toggle name="active[{$bbCode.bb_code_id}]" selected="$bbCode.active"
									class="dataList-cell--separated" submit="true"
									tooltip="{{ phrase('enable_disable_x', {'title': '[' . $bbCode.bb_code_id . ']'}) }}" />
								<xf:delete href="{{ link('bb-codes/delete', $bbCode) }}" />
							</xf:if>
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer block-footer--split">
				<span class="block-footer-counter">{{ display_totals($bbCodes) }}</span>
				<xf:if is="$exportView">
					<span class="block-footer-select"><xf:checkbox standalone="true"><xf:option check-all="< .block-container" label="{{ phrase('select_all') }}" /></xf:checkbox></span>
					<span class="block-footer-controls"><xf:button type="submit" icon="export" /></span>
				</xf:if>
			</div>
		</div>
	</xf:form>
<xf:else />
	<div class="blockMessage">{{ phrase('no_items_have_been_created_yet') }}</div>
</xf:if>]]></template>
  <template type="admin" title="bb_code_media_site_edit" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:if is="$site.isInsert()">
	<xf:title>{{ phrase('add_bb_code_media_site') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_bb_code_media_site:') }} {$site.site_title}</xf:title>
</xf:if>

<xf:pageaction if="$site.isUpdate() AND $site.canEdit()">
	<xf:button href="{{ link('bb-code-media-sites/delete', $site) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:if is="!$site.canEdit()">
	<div class="blockMessage blockMessage--important blockMessage--iconic">
		{{ phrase('only_limited_fields_in_item_may_be_edited') }}
	</div>
</xf:if>

<xf:form action="{{ link('bb-code-media-sites/save', $site) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:textboxrow name="media_site_id" value="{$site.media_site_id}"
				readonly="{{ $site.exists() ? true : false }}"
				maxlength="{{ max_length($site, 'media_site_id') }}"
				label="{{ phrase('media_site_id') }}"
				explain="{{ phrase('this_will_be_used_to_identify_media_site_to_load_in_bb_code') }}"
				dir="ltr" />

			<xf:macro template="addon_macros" name="addon_edit" arg-addOnId="{$site.addon_id}" />

			<hr class="formRowSep" />

			<xf:textboxrow name="site_title" value="{$site.site_title}" maxlength="{{ max_length($site, 'site_title') }}"
				readonly="{{ !$site.canEdit() }}"
				label="{{ phrase('site_title') }}" />

			<xf:textboxrow name="site_url" value="{$site.site_url}" type="url"
				maxlength="{{ max_length($site, 'site_url') }}"
				readonly="{{ !$site.canEdit() }}"
				label="{{ phrase('site_url') }}"
				dir="ltr" />

			<xf:checkboxrow>
				<xf:option name="supported" value="1" selected="$site.supported">
					{{ phrase('show_this_site_on_list_of_supported_sites_shown_to_visitors') }}
				</xf:option>
			</xf:checkboxrow>

			<xf:checkboxrow>
				<xf:option name="active" value="1" selected="$site.active"
					hint="{{ ($xf.development AND $site.addon_id) ? phrase('field_value_maintained_addon_upgrade_explain') : '' }}">
					{{ phrase('enabled') }}
				</xf:option>
			</xf:checkboxrow>

			<hr class="formRowSep" />

			<xf:textarearow name="match_urls" value="{$site.match_urls}" autosize="true" code="true"
				readonly="{{ !$site.canEdit() }}"
				label="{{ phrase('match_urls') }}"
				explain="{{ phrase('you_may_use_star_as_wildcard_and_id_to_point_to_media_id') }}"
				dir="ltr" />

			<xf:codeeditorrow name="embed_html" value="{{ $site.exists() ? $site.MasterTemplate.template : '' }}"
				mode="html"
				readonly="{{ !$site.canEdit() }}"
				hint="{{ $site.isUpdate() ? $site.getTemplateName() : '' }}"
				class="codeEditor--short"
				label="{{ phrase('embed_template') }}">
				<xf:explain>
					{{ phrase('enter_id_where_you_want_user_entered_media_id_to_be_used') }}<br />
					<br />
					<xf:if is="$site.canEdit()">
						{{ phrase('editing_master_embed_html_explain') }}
					<xf:else />
						{{ phrase('unable_edit_master_embed_html_explain') }}
					</xf:if>
				</xf:explain>
			</xf:codeeditorrow>
		</div>

		<h3 class="block-formSectionHeader">
			<span class="collapseTrigger collapseTrigger--block" data-xf-click="toggle" data-target="< :up:next">
				<span class="block-formSectionHeader-aligner">{{ phrase('oembed_options') }}</span>
			</span>
		</h3>
		<div class="block-body block-body--collapsible">
			<xf:checkboxrow explain="{{ phrase('oembed_explain') }}" readonly="{{ !$site.canEdit() }}">
				<xf:option name="oembed_enabled" selected="{$site.oembed_enabled}">{{ phrase('use_oembed') }}</xf:option>
			</xf:checkboxrow>

			<xf:textboxrow name="oembed_api_endpoint" value="{$site.oembed_api_endpoint}" type="url"
				maxlength="{{ max_length($site, 'oembed_api_endpoint') }}"
				readonly="{{ !$site.canEdit() }}"
				label="{{ phrase('oembed_api_endpoint') }}"
				dir="ltr" />

			<xf:textboxrow name="oembed_url_scheme" value="{$site.oembed_url_scheme}" type="url"
				maxlength="{{ max_length($site, 'oembed_url_scheme') }}"
				label="{{ phrase('oembed_url_scheme') }}"
				readonly="{{ !$site.canEdit() }}"
				explain="{{ phrase('oembed_url_scheme_explain') }}"
				dir="ltr" />

			<xf:checkboxrow
				explain="{{ phrase('oembed_retain_scripts_explain') }}">
				<xf:option name="oembed_retain_scripts" selected="{$site.oembed_retain_scripts}"
					readonly="{{ !$site.canEdit() }}"
					label="{{ phrase('oembed_retain_scripts') }}" />
			</xf:checkboxrow>
		</div>

		<h3 class="block-formSectionHeader">
			<span class="collapseTrigger collapseTrigger--block" data-xf-click="toggle" data-target="< :up:next">
				<span class="block-formSectionHeader-aligner">{{ phrase('advanced_options') }}</span>
			</span>
		</h3>
		<div class="block-body block-body--collapsible">
			<xf:checkboxrow label="{{ phrase('regular_expression_matching') }}" readonly="{{ !$site.canEdit() }}">
				<xf:option name="match_is_regex" selected="$site.match_is_regex"
					label="{{ phrase('match_urls_are_regex') }}" />
				<xf:explain>{{ phrase('match_urls_are_regex_explain') }}</xf:explain>
			</xf:checkboxrow>

			<hr class="formRowSep" />

			<xf:formrow rowtype="input"
				label="{{ phrase('match_url_callback') }}"
				explain="{{ phrase('match_url_callback_explain') }}">
				<xf:macro template="helper_callback_fields" name="callback_fields"
					arg-namePrefix="match_callback"
					arg-data="{$site}"
					arg-readOnly="{{ !$site.canEdit() }}"/>
			</xf:formrow>

			<hr class="formRowSep" />

			<xf:formrow rowtype="input"
				label="{{ phrase('embed_html_callback') }}"
				explain="{{ phrase('embed_html_callback_explain') }}">
				<xf:macro template="helper_callback_fields" name="callback_fields"
					arg-namePrefix="embed_html_callback"
					arg-data="{$site}"
					arg-readOnly="{{ !$site.canEdit() }}"/>
			</xf:formrow>
		</div>

		<xf:submitrow sticky="true" icon="save">
			<xf:html>
				<xf:button type="submit" icon="save" name="exit">{{ phrase('save_and_exit') }}</xf:button>
			</xf:html>
		</xf:submitrow>
	</div>
</xf:form>]]></template>
  <template type="admin" title="bb_code_media_site_list" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('bb_code_media_sites') }}</xf:title>

<xf:pageaction>
	<xf:button href="{{ link('bb-code-media-sites/add') }}" icon="add">{{ phrase('add_bb_code_media_site') }}</xf:button>
</xf:pageaction>

<xf:if is="$sites is not empty">
	<xf:form action="{{ link('bb-code-media-sites/toggle') }}" class="block" ajax="true">
		<div class="block-outer">
			<xf:macro template="filter_macros" name="quick_filter" arg-key="help-pages" arg-class="block-outer-opposite" />
		</div>
		<div class="block-container">
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$sites" value="$site">
						<xf:datarow>
							<xf:main hash="{$site.media_site_id}"
								href="{{ link('bb-code-media-sites/edit', $site) }}" label="{$site.site_title}"
								hint="{$site.site_url}" />
							<xf:toggle name="active[{$site.media_site_id}]" selected="$site.active"
								class="dataList-cell--separated" submit="true"
								tooltip="{{ phrase('enable_disable_x', {'title': $site.site_title}) }}" />
							<xf:if is="{$site.site_url}">
								<xf:action href="{$site.site_url}">{{ phrase('visit_site') }}</xf:action>
							<xf:else />
								<xf:cell class="dataList-cell--alt">&nbsp;</xf:cell>
							</xf:if>
							<xf:delete href="{{ link('bb-code-media-sites/delete', $site) }}" />
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($sites) }}</span>
			</div>
		</div>
	</xf:form>
<xf:else />
	<div class="blockMessage">{{ phrase('no_items_have_been_created_yet') }}</div>
</xf:if>]]></template>
  <template type="admin" title="button_manager.less" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[.toolbar-row
{
	border-top: @xf-borderSize solid @xf-borderColorLight;
	border-bottom: @xf-borderSize solid @xf-borderColorLight;
}

.fr-box
{
	&.fr-box--editor
	{
		margin: @xf-paddingLargest 0;

		&.fr-box--editor--toolbarButtons
		{
			max-width: 1200px;
		}

		&.fr-box--editor--toolbarButtonsMD
		{
			max-width: 992px;
		}

		&.fr-box--editor--toolbarButtonsSM
		{
			max-width: 768px;
		}

		&.fr-box--editor--toolbarButtonsXS
		{
			max-width: 480px;
		}

		.fr-toolbar
		{
			min-height: 36px;

			.toolbar-separator
			{
				margin-right: 0;

				+.fr-separator
				{
					margin-left: 0;
				}

				&.fr-command
				{
					&.fr-btn
					{
						background-color: #dfdfdf; // matches separator colouring

						width: 18px;

						i
						{
							margin: 9px 2px;
						}
					}
				}
			}

			.toolbar-addDropdown
			{
				width: auto;
				background-color: xf-intensify(@xf-paletteNeutral1, 8%);

				i
				{
					margin: 9px 4px;
					display: inline-block;
					float: none;
				}

				span
				{
					display: inline-block;
					text-align: center;
					font-size: @xf-fontSizeSmaller;
					font-weight: normal;
					float: none;
					line-height: 24px;
					margin: 0 4px 0 0;
				}
			}
		}

		.fr-separator
		{
			&.fr-hs
			{
				width: 100%;

				&:last-child
				{
					display: none;
				}
			}
		}
	}
}

.gu-mirror
{
	&.fr-btn
	{
		cursor: grabbing;
		touch-action: none;

		background: mix(@xf-paletteNeutral1, @xf-paletteNeutral2);
		width: 32px;
		height: 32px;

		&.toolbar-separator
		{
			background-color: #dfdfdf; // matches separator colouring
			width: 18px;

			i
			{
				margin: 9px 6px;
			}
		}

		i
		{
			margin: 9px 9px;
		}
	}
}

{{ include('public:dragula.less') }}]]></template>
  <template type="admin" title="captcha_question_edit" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:if is="$question.isInsert()">
	<xf:title>{{ phrase('add_question') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_question:') }} {$question.question}</xf:title>
</xf:if>

<xf:pageaction if="$question.isUpdate()">
	<xf:button href="{{ link('captcha-questions/delete', $question) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('captcha-questions/save', $question) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:textboxrow name="question" value="{{ $question.exists() ? $question.question : '' }}"
				maxlength="{{ max_length($question, 'question') }}"
				label="{{ phrase('question') }}" />

			<xf:formrow rowtype="input"
				label="{{ phrase('correct_answers') }}"
				explain="{{ phrase('captcha_question_answers_explain') }}">

				<ul class="inputList">
					<xf:foreach loop="$question.answers" value="$answer">
						<li class="u-inputSpacer">
							<xf:textbox name="answers[]" value="{$answer}" placeholder="{{ phrase('answer...') }}" />
						</li>
					</xf:foreach>
					<li data-xf-init="field-adder">
						<xf:textbox name="answers[]" value="" placeholder="{{ phrase('answer...') }}" />
					</li>
				</ul>
			</xf:formrow>

			<hr class="formRowSep" />

			<xf:checkboxrow>
				<xf:option name="active" value="1" selected="$question.active"
					label="{{ phrase('question_is_active') }}"
					hint="{{ phrase('inactive_questions_are_not_presented_to_visitors') }}" />
			</xf:checkboxrow>
		</div>
		<xf:submitrow sticky="true" icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="captcha_question_list" version_id="2000770" version_string="2.0.7"><![CDATA[<xf:title>{{ phrase('question_and_answer_captchas') }}</xf:title>

<xf:pageaction>
	<xf:button href="{{ link('captcha-questions/add') }}" icon="add">{{ phrase('add_question') }}</xf:button>
</xf:pageaction>

<xf:if is="$questions is not empty">
	<xf:form action="{{ link('captcha-questions/toggle') }}" class="block" ajax="true">
		<div class="block-outer">
			<xf:macro template="filter_macros" name="quick_filter" arg-key="questions" arg-class="block-outer-opposite" />
		</div>
		<div class="block-container">
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$questions" value="$question">
						<xf:datarow>
							<xf:main hash="{$question.captcha_question_id}"
								href="{{ link('captcha-questions/edit', $question) }}"
								label="{$question.question}" />
							<xf:toggle name="active[{$question.captcha_question_id}]" selected="$question.active"
								class="dataList-cell--separated" submit="true"
								tooltip="{{ phrase('enable_disable_x', {'title': $question.question}) }}" />
							<xf:delete href="{{ link('captcha-questions/delete', $question) }}" />
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($questions) }}</span>
			</div>
		</div>
	</xf:form>
<xf:else />
	<div class="blockMessage">{{ phrase('no_items_have_been_created_yet') }}</div>
</xf:if>]]></template>
  <template type="admin" title="category_delete" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link('categories/delete', $node) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('please_confirm_that_you_want_to_delete_following:') }}
				<strong><a href="{{ link('categories/edit', $node) }}">{$node.title}</a></strong>
			</xf:inforow>

			<xf:macro template="helper_node_delete_children" name="delete_row" arg-node="{$node}" arg-nodeTree="{$nodeTree}" />
		</div>
		<xf:submitrow rowtype="{{ !$node.hasChildren() ? 'simple' : '' }}" icon="delete" />
	</div>	<xf:redirect />
</xf:form>]]></template>
  <template type="admin" title="category_edit" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:if is="$category.isInsert()">
	<xf:title>{{ phrase('add_category') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_category:') }} {$node.title}</xf:title>
</xf:if>

<xf:pageaction if="$category.isUpdate()">
	<xf:button href="{{ link('categories/delete', $node) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('categories/save', $node) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:macro template="node_edit_macros" name="title" arg-node="{$node}" />
			<xf:macro template="node_edit_macros" name="description" arg-node="{$node}" />
			<xf:macro template="node_edit_macros" name="position" arg-node="{$node}" arg-nodeTree="{$nodeTree}" />
			<xf:macro template="node_edit_macros" name="navigation" arg-node="{$node}" arg-navChoices="{$navChoices}" />
			<xf:macro template="node_edit_macros" name="style" arg-node="{$node}" arg-styleTree="{$styleTree}" />
		</div>
		<xf:submitrow sticky="true" icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="category_tree_macros" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:macro name="page_action" arg-linkPrefix="!">
	<xf:pageaction>
		<div class="buttonGroup">
			<xf:button href="{{ link($linkPrefix . '/add') }}" icon="add">{{ phrase('add_category') }}</xf:button>
			<xf:button href="{{ link($linkPrefix . '/sort') }}" icon="sort" overlay="true" />
		</div>
	</xf:pageaction>
</xf:macro>

<xf:comment><!--
	Note that this is a global macro, so scope is inherited into it. The expectation is that this macro will generally
	be close to the only thing in a template so this makes the macro work similarly to an include.
--></xf:comment>
<xf:macro name="category_list" global="true"
	arg-categoryTree="!"
	arg-filterKey="!"
	arg-linkPrefix="!"
	arg-idKey="category_id"
	arg-parentIdKey="parent_category_id">

	<xf:if is="$categoryTree.countChildren()">
		<div class="block">
			<div class="block-outer">
				<xf:macro template="filter_macros" name="quick_filter" arg-key="{$filterKey}" arg-class="block-outer-opposite" />
			</div>
			<div class="block-container">
				<div class="block-body">
					<xf:datalist>
						<xf:foreach loop="$categoryTree.getFlattened(0)" value="$treeEntry">
							<xf:set var="$category" value="{$treeEntry.record}" />
							<xf:datarow>
								<xf:cell class="dataList-cell--link dataList-cell--main" hash="{$category.{$idKey}}">
									<a href="{{ link($linkPrefix . '/edit', $category) }}">
										<div class="u-depth{$treeEntry.depth}">
											<div class="dataList-mainRow">{$category.title}</div>
										</div>
									</a>
								</xf:cell>
								<xf:if is="$permissionContentType">
									<xf:action
										class="{{ {$customPermissions.{$category.{$idKey}}} ? 'dataList-cell--highlighted' : '' }}"
										href="{{ link($linkPrefix . '/permissions', $category) }}">
										{{ phrase('permissions') }}
									</xf:action>
								</xf:if>
								<xf:popup class="dataList-cell--action u-hideMedium"
									label="{{ phrase('add...') }}">

									<div class="menu" data-menu="menu" aria-hidden="true">
										<div class="menu-content">
											<h3 class="menu-header">{{ phrase('add...') }}</h3>
											<a href="{{ link($linkPrefix . '/add', null, { {$parentIdKey}: $category.{$parentIdKey} }) }}" class="menu-linkRow">{{ phrase('sibling') }}</a>
											<a href="{{ link($linkPrefix . '/add', null, { {$parentIdKey}: $category.{$idKey} }) }}" class="menu-linkRow">{{ phrase('child') }}</a>
										</div>
									</div>
								</xf:popup>
								<xf:delete href="{{ link($linkPrefix . '/delete', $category) }}" />
							</xf:datarow>
						</xf:foreach>
					</xf:datalist>
				</div>
			</div>
		</div>
	<xf:else />
		<div class="blockMessage">{{ phrase('no_items_have_been_created_yet') }}</div>
	</xf:if>
</xf:macro>

<xf:macro name="sortable_form" arg-categoryTree="!" arg-linkPrefix="!">
	<xf:macro template="public:nestable_macros" name="setup" />

	<xf:form action="{{ link($linkPrefix . '/sort') }}" class="block" ajax="true">
		<div class="block-container">
			<div class="block-body">
				<div class="nestable-container" data-xf-init="nestable">
					<xf:macro name="sortable_list" arg-children="{$categoryTree}" />
					<xf:hiddenval name="categories" value="" />
				</div>
			</div>
			<xf:submitrow icon="save" rowtype="simple" />
		</div>
	</xf:form>
</xf:macro>

<xf:macro name="sortable_list" arg-children="!">
	<ol class="nestable-list">
		<xf:foreach loop="$children" key="$id" value="$child">
			<xf:macro name="sortable_list_entry" arg-child="{$child}" arg-children="{$child.children}" />
		</xf:foreach>
	</ol>
</xf:macro>

<xf:macro name="sortable_list_entry" arg-child="!" arg-children="!">
	<li class="nestable-item" data-id="{$child.id}">
		<div class="nestable-handle" aria-label="{{ phrase('drag_handle')|for_attr }}"><xf:fa icon="fa-bars" /></div>
		<div class="nestable-content">{$child.record.title}</div>
		<xf:if is="$child.children is not empty">
			<xf:macro name="sortable_list" arg-children="{$child.children}" />
		</xf:if>
	</li>
</xf:macro>

<xf:macro name="parent_category_select_row"
	arg-category="!"
	arg-categoryTree="!"
	arg-idKey="category_id"
	arg-parentIdKey="parent_category_id">

	<xf:selectrow name="{$parentIdKey}" value="{$category.{$parentIdKey}}"
		label="{{ phrase('parent_category') }}">

		<xf:option value="0">{{ phrase('(none)') }}</xf:option>
		<xf:foreach loop="$categoryTree.getFlattened(0)" value="$treeEntry">
			<xf:option value="{$treeEntry.record.{$idKey}}">{{ repeat('--', $treeEntry.depth) }} {$treeEntry.record.title}</xf:option>
		</xf:foreach>
	</xf:selectrow>
</xf:macro>

<xf:macro name="category_delete_form" arg-linkPrefix="!" arg-category="!">
	<xf:form action="{{ link($linkPrefix . '/delete', $category) }}" class="block" ajax="true">

		<div class="block-container">
			<div class="block-body">
				<xf:inforow rowtype="confirm">
					{{ phrase('please_confirm_that_you_want_to_delete_following:') }}
					<strong><a href="{{ link($linkPrefix . '/edit', $category) }}">{$category.title}</a></strong>
				</xf:inforow>

				<xf:if is="$category.hasChildren()">
					<xf:radiorow name="child_nodes_action">
						<xf:option value="move" selected="true">{{ phrase('move_this_categorys_children_to_its_parent') }}</xf:option>
						<xf:option value="delete">{{ phrase('delete_this_categorys_children') }} </xf:option>
					</xf:radiorow>
				</xf:if>
			</div>
			<xf:submitrow rowtype="{{ !$category.hasChildren() ? 'simple' : '' }}" icon="delete" />
		</div>
		<xf:redirect />

	</xf:form>
</xf:macro>]]></template>
  <template type="admin" title="class_extension_edit" version_id="2000033" version_string="2.0.0 Beta 3"><![CDATA[<xf:if is="$extension.isInsert()">
	<xf:title>{{ phrase('add_extension') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_extension:') }} {$extension.to_class}</xf:title>
</xf:if>

<xf:pageaction if="$extension.isUpdate()">
	<xf:button href="{{ link('class-extensions/delete', $extension) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('class-extensions/save', $extension) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:textboxrow name="from_class" value="{$extension.from_class}"
				maxlength="{{ max_length($extension, 'from_class') }}"
				label="{{ phrase('base_class_name') }}"
				dir="ltr" />

			<xf:textboxrow name="to_class" value="{$extension.to_class}"
				maxlength="{{ max_length($extension, 'to_class') }}"
				label="{{ phrase('extension_class_name') }}"
				dir="ltr" />

			<xf:numberboxrow name="execute_order" value="{$extension.execute_order}" min="0"
				label="{{ phrase('execution_order') }}" />

			<xf:checkboxrow>
				<xf:option name="active" selected="$extension.active">{{ phrase('enable_extension') }}</xf:option>
			</xf:checkboxrow>

			<xf:macro template="addon_macros" name="addon_edit" arg-addOnId="{$extension.addon_id}" />
		</div>
		<xf:submitrow sticky="true" icon="save" />
	</div>

</xf:form>]]></template>
  <template type="admin" title="class_extension_list" version_id="2010037" version_string="2.1.0 Beta 7"><![CDATA[<xf:title>{{ phrase('class_extensions') }}</xf:title>

<xf:pageaction>
	<xf:button href="{{ link('class-extensions/add') }}" icon="add">{{ phrase('add_class_extension') }}</xf:button>
</xf:pageaction>

<xf:if is="$extensions is not empty">
	<xf:form action="{{ link('class-extensions/toggle') }}" class="block" ajax="true">
		<div class="block-outer">
			<xf:macro template="filter_macros" name="quick_filter" arg-key="extensions" arg-class="block-outer-opposite" />
		</div>
		<div class="block-container">
			<div class="block-body">
				<xf:datalist data-xf-init="responsive-data-list" data-trigger-width="medium">
					<thead>
						<xf:datarow rowtype="header">
							<xf:cell>{{ phrase('base_class_name') }}</xf:cell>
							<xf:cell>{{ phrase('extension_class_name') }}</xf:cell>
							<xf:cell>&nbsp;</xf:cell>
							<xf:cell>&nbsp;</xf:cell>
						</xf:datarow>
					</thead>
					<xf:foreach loop="$extensions" key="$addOnId" value="$addOnExtensions">
						<tbody class="dataList-rowGroup">
							<xf:datarow rowtype="subsection" rowclass="dataList-row--noHover">
								<xf:cell colspan="4">
									<xf:if is="{{ {$addOns.{$addOnId}} }}">
										{$addOns.{$addOnId}.title}
									<xf:else />
										{{ phrase('custom_class_extensions') }}
									</xf:if>
								</xf:cell>
							</xf:datarow>
							<xf:foreach loop="$addOnExtensions" value="$extension">
								<xf:datarow>
									<xf:cell hash="{$extension.extension_id}"
										href="{{ link('class-extensions/edit', $extension) }}"
										dir="auto">
										{$extension.from_class|split_long(25)}
									</xf:cell>
									<xf:cell href="{{ link('class-extensions/edit', $extension) }}" dir="auto">
										{$extension.to_class|split_long(25)}
									</xf:cell>
									<xf:toggle name="active[{$extension.extension_id}]" selected="$extension.active"
										class="dataList-cell--separated" submit="true"
										tooltip="{{ phrase('enable_disable_x', {'title': $extension.from_class}) }}" />
									<xf:delete href="{{ link('class-extensions/delete', $extension) }}" />
								</xf:datarow>
							</xf:foreach>
						</tbody>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($totalExtensions, $total) }}</span>
			</div>
		</div>
	</xf:form>
<xf:else />
	<div class="blockMessage">{{ phrase('no_items_have_been_created_yet') }}</div>
</xf:if>]]></template>
  <template type="admin" title="code_event.less" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[.eventDescription
{
	font-size: @xf-fontSizeSmall;
	color: @xf-textColorDimmed;

	code, pre
	{
		font-family: @xf-fontFamilyCode;
		direction: ltr;
	}

	code
	{
		color: black;
		font-weight: @xf-fontWeightHeavy;
		white-space: normal;

		em
		{
			font-weight: @xf-fontWeightNormal;
			font-style: normal;
			color: @xf-textColorMuted;
		}
	}

	pre
	{
		color: black;
		overflow: auto;
	}
}]]></template>
  <template type="admin" title="code_event_edit" version_id="2000033" version_string="2.0.0 Beta 3"><![CDATA[<xf:if is="$event.isInsert()">
	<xf:title>{{ phrase('add_code_event') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_code_event:') }} {$event.event_id}</xf:title>
</xf:if>

<xf:pageaction if="$event.isUpdate()">
	<xf:button href="{{ link('code-events/delete', $event) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('code-events/save', $event) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:textboxrow name="event_id" value="{$event.event_id}" maxlength="{{ max_length($event, 'event_id') }}"
				label="{{ phrase('event_id') }}"
				dir="ltr" />

			<xf:codeeditorrow name="description" value="{$event.description}" mode="html"
				label="{{ phrase('description') }}"
				hint="{{ phrase('you_may_use_html') }}" />

			<xf:macro template="addon_macros" name="addon_edit" arg-addOnId="{$event.addon_id}" />
		</div>
		<xf:submitrow sticky="true" icon="save" />
	</div>

</xf:form>]]></template>
  <template type="admin" title="code_event_list" version_id="2000033" version_string="2.0.0 Beta 3"><![CDATA[<xf:title>{{ phrase('code_events') }}</xf:title>

<xf:pageaction>
	<xf:button href="{{ link('code-events/add') }}" icon="add">{{ phrase('add_code_event') }}</xf:button>
</xf:pageaction>

<xf:if is="$events is not empty">
	<xf:form action="code-events/toggle" class="block" ajax="true">
		<div class="block-outer">
			<xf:macro template="filter_macros" name="quick_filter" arg-key="code-events" arg-class="block-outer-opposite" />
		</div>
		<div class="block-container">
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$events" value="$event">
						<xf:datarow
							hash="{$event.event_id}"
							href="{{ link('code-events/edit', $event) }}"
							label="{$event.event_id}"
							delete="{{ link('code-events/delete', $event) }}"
							dir="auto" />
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($events) }}</span>
			</div>
		</div>
	</xf:form>
<xf:else />
	<div class="blockMessage">{{ phrase('no_items_have_been_created_yet') }}</div>
</xf:if>]]></template>
  <template type="admin" title="code_event_listener_edit" version_id="2000033" version_string="2.0.0 Beta 3"><![CDATA[<xf:if is="$listener.isInsert()">
	<xf:title>{{ phrase('add_code_event_listener') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_code_event_listener:') }} {$listener.event_id}</xf:title>
</xf:if>

<xf:pageaction if="$listener.isUpdate()">
	<xf:button href="{{ link('code-events/listeners/delete', $listener) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:css src="code_event.less" />

<xf:form action="{{ link('code-events/listeners/save', $listener) }}" ajax="true" class="block">

	<div class="block-container">
		<div class="block-body">
			<xf:selectrow name="event_id" value="{$listener.event_id}"
				label="{{ phrase('listen_to_event') }}"
				data-xf-init="desc-loader"
				data-desc-url="{{ link('code-events/get-description') }}">

				<xf:option />
				<xf:options source="{$events}" />
				<xf:html>
					<div class="js-descTarget eventDescription" dir="ltr">{$listener.Event.description|raw}</div>
				</xf:html>
			</xf:selectrow>

			<xf:textboxrow name="hint" value="{$listener.hint}" maxlength="{{ max_length($listener, 'hint') }}"
				label="{{ phrase('event_hint') }}"
				explain="{{ phrase('certain_events_take_hints_that_can_limit_when_listener_is_run') }}"
				dir="ltr" />

			<hr class="formRowSep" />

			<xf:formrow rowtype="input"
				label="{{ phrase('execute_callback') }}">
				<xf:macro template="helper_callback_fields" name="callback_fields" arg-data="{$listener}" />
			</xf:formrow>

			<xf:numberboxrow name="execute_order" value="{$listener.execute_order}" min="0"
				label="{{ phrase('callback_execution_order') }}"
				explain="{{ phrase('code_event_execution_order_desc') }}" />

			<xf:checkboxrow>
				<xf:option name="active" selected="$listener.active">{{ phrase('enable_callback_execution') }}</xf:option>
			</xf:checkboxrow>

			<hr class="formRowSep" />

			<xf:textboxrow name="description" value="{$listener.description}"
				label="{{ phrase('description') }}" />

			<xf:macro template="addon_macros" name="addon_edit" arg-addOnId="{$listener.addon_id}" />

			<xf:hiddenval name="event_listener_id">{$listener.event_listener_id}</xf:hiddenval>
		</div>
		<xf:submitrow sticky="true" icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="code_event_listener_list" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('code_event_listeners') }}</xf:title>

<xf:pageaction>
	<xf:button href="{{ link('code-events/listeners/add') }}" icon="add">{{ phrase('add_code_event_listener') }}</xf:button>
</xf:pageaction>

<xf:if is="$listeners is not empty">
	<xf:form action="{{ link('code-events/listeners/toggle') }}" class="block" ajax="true">
		<div class="block-outer">
			<xf:macro template="filter_macros" name="quick_filter" arg-key="listeners" arg-class="block-outer-opposite" />
		</div>
		<div class="block-container">
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$listeners" key="$addOnId" value="$listenerEntity">
						<tbody class="dataList-rowGroup">
							<xf:datarow rowtype="subsection" rowclass="dataList-row--noHover">
								<xf:cell colspan="3">
									<xf:if is="{{ {$addOns.{$addOnId}} }}">
										{$addOns.{$addOnId}.title}
									<xf:else />
										{{ phrase('custom_event_listeners') }}
									</xf:if>
								</xf:cell>
							</xf:datarow>
							<xf:foreach loop="$listenerEntity" value="$listener">
								<xf:datarow>
									<xf:main hash="{$listener.event_listener_id}"
										href="{{ link('code-events/listeners/edit', $listener) }}"
										label="{$listener.event_id}"
										explain="{$listener.description}" />
									<xf:toggle name="active[{$listener.event_listener_id}]" selected="$listener.active"
										class="dataList-cell--separated" submit="true"
										tooltip="{{ phrase('enable_disable_x', {'title': $listener.event_id}) }}" />
									<xf:delete href="{{ link('code-events/listeners/delete', $listener) }}" />
								</xf:datarow>
							</xf:foreach>
						</tbody>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($totalListeners) }}</span>
			</div>
		</div>
	</xf:form>
<xf:else />
	<div class="blockMessage">{{ phrase('no_items_have_been_created_yet') }}</div>
</xf:if>]]></template>
  <template type="admin" title="communication" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('admin_navigation.communication') }}</xf:title>

<xf:macro template="section_nav_macros" name="section_nav" arg-section="communication" />]]></template>
  <template type="admin" title="connected_account_provider_deactivate" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link('connected-accounts/deactivate', $provider) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('please_confirm_that_you_want_to_deactivate_following_provider:') }}
				<strong><a href="{{ link('connected-accounts/edit', $provider) }}">{$provider.title}</a></strong>
			</xf:inforow>
		</div>
		<xf:submitrow submit="{{ phrase('deactivate') }}" rowtype="simple" icon="delete" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="connected_account_provider_edit" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('edit_provider:') }} {$provider.title}</xf:title>
<xf:description>{$provider.description}</xf:description>

<xf:pageaction if="$provider.isUsable()">
	<xf:button href="{{ link('connected-accounts/deactivate', $provider) }}" icon="delete" overlay="true">
		{{ phrase('deactivate') }}
	</xf:button>
</xf:pageaction>

<xf:form action="{{ link('connected-accounts/save', $provider) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			{{ $provider.renderConfig($provider)|raw }}
		</div>
		<xf:submitrow sticky="true" icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="connected_account_provider_facebook" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:textboxrow name="options[app_id]" value="{$options.app_id}"
	label="{{ phrase('app_id') }}"
	hint="{{ phrase('required') }}"
	explain="{{ phrase('con_acc_facebook_app_id_explain') }}" />

<xf:textboxrow name="options[app_secret]" value="{$options.app_secret}"
	label="{{ phrase('app_secret') }}"
	hint="{{ phrase('required') }}"
	explain="{{ phrase('con_acc_facebook_app_secret_explain') }}" />]]></template>
  <template type="admin" title="connected_account_provider_github" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:textboxrow name="options[client_id]" value="{$options.client_id}"
	label="{{ phrase('client_id') }}"
	hint="{{ phrase('required') }}"
	explain="{{ phrase('con_acc_github_client_id_explain') }}" />

<xf:textboxrow name="options[client_secret]" value="{$options.client_secret}"
	label="{{ phrase('client_secret') }}"
	hint="{{ phrase('required') }}"
	explain="{{ phrase('con_acc_github_client_secret_explain') }}" />]]></template>
  <template type="admin" title="connected_account_provider_google" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:textboxrow name="options[client_id]" value="{$options.client_id}"
	label="{{ phrase('client_id') }}"
	hint="{{ phrase('required') }}"
	explain="{{ phrase('con_acc_google_client_id_explain') }}" />

<xf:textboxrow name="options[client_secret]" value="{$options.client_secret}"
	label="{{ phrase('client_secret') }}"
	hint="{{ phrase('required') }}"
	explain="{{ phrase('con_acc_google_client_secret_explain') }}" />]]></template>
  <template type="admin" title="connected_account_provider_linkedin" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:textboxrow name="options[client_id]" value="{$options.client_id}"
	label="{{ phrase('client_id') }}"
	hint="{{ phrase('required') }}"
	explain="{{ phrase('con_acc_linkedin_client_id_explain') }}" />

<xf:textboxrow name="options[client_secret]" value="{$options.client_secret}"
	label="{{ phrase('client_secret') }}"
	hint="{{ phrase('required') }}"
	explain="{{ phrase('con_acc_linkedin_client_secret_explain') }}" />]]></template>
  <template type="admin" title="connected_account_provider_list" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('connected_account_providers') }}</xf:title>

<div class="block">
	<div class="block-outer">
		<xf:macro template="filter_macros" name="quick_filter" arg-key="connected-accounts" arg-class="block-outer-opposite" />
	</div>
	<div class="block-container">
		<xf:if is="$activeProviders is not empty">
			<div class="block-body">
				<xf:datalist>
					<xf:datarow rowtype="subsection" rowclass="dataList-row--noHover">
						<xf:cell colspan="3">{{ phrase('active_providers') }}</xf:cell>
					</xf:datarow>
					<xf:foreach loop="$activeProviders" value="$provider">
						<xf:datarow label="{$provider.title}" href="{{ link('connected-accounts/edit', $provider) }}">
							<xf:if is="$provider.canBeTested()">
								<xf:action href="{{ link('connected-accounts/test', $provider) }}" overlay="true">{{ phrase('test_provider') }}</xf:action>
							<xf:else />
								<xf:cell />
							</xf:if>
							<xf:delete href="{{ link('connected-accounts/deactivate', $provider) }}" tooltip="{{ phrase('deactivate') }}" />
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
		<xf:else />
			<!--<div class="block-body block-row">{{ phrase('there_no_active_providers_yet') }}</div>-->
		</xf:if>

		<xf:if is="$inactiveProviders is not empty">
			<div class="block-body">
				<xf:datalist>
					<xf:datarow rowtype="subsection" rowclass="dataList-row--noHover">
						<xf:cell>{{ phrase('inactive_providers') }}</xf:cell>
					</xf:datarow>
					<xf:foreach loop="$inactiveProviders" value="$provider">
						<xf:datarow label="{$provider.title}" href="{{ link('connected-accounts/edit', $provider) }}" />
					</xf:foreach>
				</xf:datalist>
			</div>
		</xf:if>
		<div class="block-footer">
			<span class="block-footer-counter">{{ display_totals(count($activeProviders) + count($inactiveProviders)) }}</span>
		</div>
	</div>
</div>]]></template>
  <template type="admin" title="connected_account_provider_microsoft" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:textboxrow name="options[client_id]" value="{$options.client_id}"
	label="{{ phrase('client_id') }}"
	hint="{{ phrase('required') }}"
	explain="{{ phrase('con_acc_microsoft_client_id_explain') }}" />

<xf:textboxrow name="options[client_secret]" value="{$options.client_secret}"
	label="{{ phrase('client_secret') }}"
	hint="{{ phrase('required') }}"
	explain="{{ phrase('con_acc_microsoft_client_secret_explain') }}" />]]></template>
  <template type="admin" title="connected_account_provider_test" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('test_provider:') }} {$provider.title}</xf:title>

<div class="block">
	<div class="block-container">
		<div class="block-body">

			{$handler.renderTest($provider, $providerData)|raw}

			<xf:if is="!$providerData">
				<xf:formrow>
					<xf:button href="{{ link('connected-accounts/perform-test', $provider, {'test': 1}) }}">
						{{ phrase('test') }}
					</xf:button>
				</xf:formrow>
				<xf:inforow>
					{{ phrase('note_to_test_provider_must_support_redirecting_to_following_url:') }}
					<div><code>{$redirectUri}</code></div>
				</xf:inforow>
			</xf:if>
		</div>
	</div>
</div>]]></template>
  <template type="admin" title="connected_account_provider_test_facebook" version_id="2000053" version_string="2.0.0 Release Candidate 3"><![CDATA[<xf:if is="!$providerData">
	<xf:macro template="connected_account_provider_test_macros" name="explain"
		arg-providerTitle="{$provider.title}"
		arg-keyName="{{ phrase('app_id') }}"
		arg-keyValue="{$provider.options.app_id}" />
<xf:else />
	<xf:macro template="connected_account_provider_test_macros" name="success" />

	<xf:macro template="connected_account_provider_test_macros" name="display_name"
		arg-name="{$providerData.username}" />

	<xf:macro template="connected_account_provider_test_macros" name="email"
		arg-email="{$providerData.email}" />

	<xf:macro template="connected_account_provider_test_macros" name="picture"
		arg-url="{$providerData.avatar_url}" />
</xf:if>]]></template>
  <template type="admin" title="connected_account_provider_test_github" version_id="2000051" version_string="2.0.0 Release Candidate 1"><![CDATA[<xf:if is="!$providerData">
	<xf:macro template="connected_account_provider_test_macros" name="explain"
		arg-providerTitle="{$provider.title}"
		arg-keyName="{{ phrase('client_id') }}"
		arg-keyValue="{$provider.options.client_id}" />
<xf:else />
	<xf:macro template="connected_account_provider_test_macros" name="success" />

	<xf:macro template="connected_account_provider_test_macros" name="display_name"
		arg-name="{$providerData.username}" />

	<xf:macro template="connected_account_provider_test_macros" name="picture"
		arg-url="{$providerData.avatar_url}" />
</xf:if>]]></template>
  <template type="admin" title="connected_account_provider_test_google" version_id="2000051" version_string="2.0.0 Release Candidate 1"><![CDATA[<xf:if is="!$providerData">
	<xf:macro template="connected_account_provider_test_macros" name="explain"
		arg-providerTitle="{$provider.title}"
		arg-keyName="{{ phrase('client_id') }}"
		arg-keyValue="{$provider.options.client_id}" />
<xf:else />
	<xf:macro template="connected_account_provider_test_macros" name="success" />

	<xf:macro template="connected_account_provider_test_macros" name="display_name"
		arg-name="{$providerData.username}" />

	<xf:macro template="connected_account_provider_test_macros" name="picture"
		arg-url="{$providerData.avatar_url}" />
</xf:if>]]></template>
  <template type="admin" title="connected_account_provider_test_linkedin" version_id="2000051" version_string="2.0.0 Release Candidate 1"><![CDATA[<xf:if is="!$providerData">
	<xf:macro template="connected_account_provider_test_macros" name="explain"
		arg-providerTitle="{$provider.title}"
		arg-keyName="{{ phrase('client_id') }}"
		arg-keyValue="{$provider.options.client_id}" />
<xf:else />
	<xf:macro template="connected_account_provider_test_macros" name="success" />

	<xf:macro template="connected_account_provider_test_macros" name="display_name"
		arg-name="{$providerData.username}" />

	<xf:macro template="connected_account_provider_test_macros" name="picture"
		arg-url="{$providerData.avatar_url}" />
</xf:if>]]></template>
  <template type="admin" title="connected_account_provider_test_macros" version_id="2000051" version_string="2.0.0 Release Candidate 1"><![CDATA[<xf:macro name="explain" arg-providerTitle="!" arg-keyName="!" arg-keyValue="!">
	<xf:inforow>
		{{ phrase('this_will_test_x_connected_account_provider_explain', {'title': $providerTitle}) }}
	</xf:inforow>

	<xf:formrow label="{$keyName}">{$keyValue}</xf:formrow>
</xf:macro>

<xf:macro name="success">
	<xf:inforow rowtype="confirm">
		<div class="blockMessage blockMessage--success">{{ phrase('test_passed') }}</div>
	</xf:inforow>
</xf:macro>

<xf:macro name="display_name" arg-name="!" arg-secondaryName="">
	<xf:formrow label="{{ phrase('name') }}">
		{{ $name ?: phrase('n_a') }}
		<xf:if is="$secondaryName">
			{$secondaryName}
		</xf:if>
	</xf:formrow>
</xf:macro>

<xf:macro name="email" arg-email="!">
	<xf:formrow label="{{ phrase('email') }}">
		{{ $email ?: phrase('n_a') }}
	</xf:formrow>
</xf:macro>

<xf:macro name="picture" arg-url="!">
	<xf:formrow label="{{ phrase('picture') }}">
		<xf:if is="$url">
			<img src="{$url}" width="48" />
		<xf:else />
			{{ phrase('n_a') }}
		</xf:if>
	</xf:formrow>
</xf:macro>]]></template>
  <template type="admin" title="connected_account_provider_test_microsoft" version_id="2000051" version_string="2.0.0 Release Candidate 1"><![CDATA[<xf:if is="!$providerData">
	<xf:macro template="connected_account_provider_test_macros" name="explain"
		arg-providerTitle="{$provider.title}"
		arg-keyName="{{ phrase('client_id') }}"
		arg-keyValue="{$provider.options.client_id}" />
<xf:else />
	<xf:macro template="connected_account_provider_test_macros" name="success" />

	<xf:macro template="connected_account_provider_test_macros" name="display_name"
		arg-name="{$providerData.username}" />

	<xf:macro template="connected_account_provider_test_macros" name="picture"
		arg-url="{$providerData.avatar_url}" />
</xf:if>]]></template>
  <template type="admin" title="connected_account_provider_test_twitter" version_id="2000051" version_string="2.0.0 Release Candidate 1"><![CDATA[<xf:if is="!$providerData">
	<xf:macro template="connected_account_provider_test_macros" name="explain"
		arg-providerTitle="{$provider.title}"
		arg-keyName="{{ phrase('consumer_key') }}"
		arg-keyValue="{$provider.options.consumer_key}" />
<xf:else />
	<xf:macro template="connected_account_provider_test_macros" name="success" />

	<xf:macro template="connected_account_provider_test_macros" name="display_name"
		arg-name="{$providerData.username}"
		arg-secondaryName="{{ parens('@' . {$providerData.screen_name}) }}" />

	<xf:macro template="connected_account_provider_test_macros" name="picture"
		arg-url="{$providerData.avatar_url}" />
</xf:if>]]></template>
  <template type="admin" title="connected_account_provider_test_yahoo" version_id="2000570" version_string="2.0.5"><![CDATA[<xf:if is="!$providerData">
	<xf:macro template="connected_account_provider_test_macros" name="explain"
		arg-providerTitle="{$provider.title}"
		arg-keyName="{{ phrase('client_id') }}"
		arg-keyValue="{$provider.options.client_id}" />
<xf:else />
	<xf:macro template="connected_account_provider_test_macros" name="success" />

	<xf:macro template="connected_account_provider_test_macros" name="display_name"
		arg-name="{$providerData.username}" />

	<xf:macro template="connected_account_provider_test_macros" name="picture"
		arg-url="{$providerData.avatar_url}" />
</xf:if>]]></template>
  <template type="admin" title="connected_account_provider_twitter" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:textboxrow name="options[consumer_key]" value="{$options.consumer_key}"
	label="{{ phrase('consumer_key') }}"
	hint="{{ phrase('required') }}"
	explain="{{ phrase('con_acc_twitter_consumer_key_explain') }}" />

<xf:textboxrow name="options[consumer_secret]" value="{$options.consumer_secret}"
	label="{{ phrase('consumer_secret') }}"
	hint="{{ phrase('required') }}"
	explain="{{ phrase('con_acc_twitter_consumer_secret_explain') }}" />]]></template>
  <template type="admin" title="connected_account_provider_yahoo" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:textboxrow name="options[client_id]" value="{$options.client_id}"
	label="{{ phrase('client_id') }}"
	hint="{{ phrase('required') }}"
	explain="{{ phrase('con_acc_yahoo_client_id_explain') }}" />

<xf:textboxrow name="options[client_secret]" value="{$options.client_secret}"
	label="{{ phrase('client_secret') }}"
	hint="{{ phrase('required') }}"
	explain="{{ phrase('con_acc_yahoo_client_secret_explain') }}" />]]></template>
  <template type="admin" title="content" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('admin_navigation.content') }}</xf:title>

<xf:macro template="section_nav_macros" name="section_nav" arg-section="content" />]]></template>
  <template type="admin" title="content_type_edit" version_id="2000033" version_string="2.0.0 Beta 3"><![CDATA[<xf:if is="$field.isInsert()">
	<xf:title>{{ phrase('add_content_type_field') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_content_type_field:') }} {$field.content_type}</xf:title>
</xf:if>

<xf:pageaction if="$field.isUpdate()">
	<xf:button href="{{ link('content-types/delete', $field) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('content-types/save', $field) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:textboxrow name="content_type" value="{$field.content_type}" maxlength="{{ max_length($field, 'content_type') }}"
				label="{{ phrase('content_type') }}"
				dir="ltr" />
			<xf:textboxrow name="field_name" value="{$field.field_name}" maxlength="{{ max_length($field, 'field_name') }}"
				label="{{ phrase('field') }}"
				dir="ltr" />
			<xf:textboxrow name="field_value" value="{$field.field_value}" maxlength="{{ max_length($field, 'field_value') }}"
				label="{{ phrase('value') }}"
				dir="ltr" />

			<xf:macro template="addon_macros" name="addon_edit" arg-addOnId="{$field.addon_id}" />
		</div>
		<xf:submitrow sticky="true" icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="content_type_list" version_id="2000033" version_string="2.0.0 Beta 3"><![CDATA[<xf:title>{{ phrase('content_types') }}</xf:title>

<xf:pageaction>
	<xf:button href="{{ link('content-types/add') }}" icon="add">{{ phrase('add_content_type_field') }}</xf:button>
</xf:pageaction>

<xf:foreach loop="$fieldsGrouped" key="$contentType" value="$fields">
	<div class="block">
		<div class="block-container">
			<h2 class="block-header">{$contentType}</h2>
			<div class="block-body">
				<xf:datalist>
				<xf:foreach loop="{$fields}" value="$field">
					<xf:datarow href="{{ link('content-types/edit', $field) }}"
						label="{$field.field_name}"
						hint="{$field.field_value}"
						hash="{$field.content_type}_{$field.field_name}"
						dir="auto" />
				</xf:foreach>
				</xf:datalist>
			</div>
		</div>
	</div>
</xf:foreach>]]></template>
  <template type="admin" title="cron_edit" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:if is="$entry.isInsert()">
	<xf:title>{{ phrase('add_cron_entry') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_cron_entry:') }} {$entry.title}</xf:title>
</xf:if>

<xf:pageaction if="$entry.isUpdate() AND $entry.canEdit()">
	<xf:button href="{{ link('cron/delete', $entry) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:if is="{{ !$entry.canEdit() }}">
	<div class="blockMessage blockMessage--important blockMessage--iconic">
		{{ phrase('only_limited_fields_in_item_may_be_edited') }}
	</div>
</xf:if>

<xf:form action="{{ link('cron/save', $entry) }}" ajax="true" class="block">

	<div class="block-container">
		<div class="block-body">

			<xf:textboxrow name="entry_id" value="{$entry.entry_id}" maxlength="{{ max_length($entry, 'entry_id') }}"
				readonly="{{ !$entry.canEdit() }}"
				label="{{ phrase('cron_entry_id') }}"
				dir="ltr" />

			<xf:textboxrow name="title" value="{{ $entry.exists() ? $entry.MasterTitle.phrase_text : '' }}"
				readonly="{{ !$entry.canEdit() }}"
				label="{{ phrase('title') }}" />

			<hr class="formRowSep" />

			<xf:formrow rowtype="input"
				label="{{ phrase('cron_callback') }}">

				<xf:macro template="helper_callback_fields" name="callback_fields" arg-data="{$entry}"
					arg-className="cron_class"
					arg-methodName="cron_method"
					arg-readOnly="{{ !$entry.canEdit() }}" />
			</xf:formrow>

			<hr class="formRowSep" />

			<xf:radiorow name="run_rules[day_type]" value="{$entry.run_rules.day_type}"
				readonly="{{ !$entry.canEdit() }}"
				label="{{ phrase('run_on_type_of_day') }}">

				<xf:option value="dom" label="{{ phrase('day_of_month:') }}">
					<xf:select name="run_rules[dom]"
						readonly="{{ !$entry.canEdit() }}"
						value="{$entry.run_rules.dom|raw}"
						multiple="true" size="8" style="width: 200px">

						<xf:option value="-1">{{ phrase('any') }}</xf:option>
						<xf:option value="1">1</xf:option>
						<xf:option value="2">2</xf:option>
						<xf:option value="3">3</xf:option>
						<xf:option value="4">4</xf:option>
						<xf:option value="5">5</xf:option>
						<xf:option value="6">6</xf:option>
						<xf:option value="7">7</xf:option>
						<xf:option value="8">8</xf:option>
						<xf:option value="9">9</xf:option>
						<xf:option value="10">10</xf:option>
						<xf:option value="11">11</xf:option>
						<xf:option value="12">12</xf:option>
						<xf:option value="13">13</xf:option>
						<xf:option value="14">14</xf:option>
						<xf:option value="15">15</xf:option>
						<xf:option value="16">16</xf:option>
						<xf:option value="17">17</xf:option>
						<xf:option value="18">18</xf:option>
						<xf:option value="19">19</xf:option>
						<xf:option value="20">20</xf:option>
						<xf:option value="21">21</xf:option>
						<xf:option value="22">22</xf:option>
						<xf:option value="23">23</xf:option>
						<xf:option value="24">24</xf:option>
						<xf:option value="25">25</xf:option>
						<xf:option value="26">26</xf:option>
						<xf:option value="27">27</xf:option>
						<xf:option value="28">28</xf:option>
						<xf:option value="29">29</xf:option>
						<xf:option value="30">30</xf:option>
						<xf:option value="31">31</xf:option>
					</xf:select>
				</xf:option>
				<xf:option value="dow" label="{{ phrase('day_of_week:') }}">
					<xf:select name="run_rules[dow]"
						readonly="{{ !$entry.canEdit() }}"
						value="{$entry.run_rules.dow|raw}"
						multiple="true" size="8" style="width: 200px">

						<xf:option value="-1">{{ phrase('any') }}</xf:option>
						<xf:option value="0">{{ phrase('day_sunday') }}</xf:option>
						<xf:option value="1">{{ phrase('day_monday') }}</xf:option>
						<xf:option value="2">{{ phrase('day_tuesday') }}</xf:option>
						<xf:option value="3">{{ phrase('day_wednesday') }}</xf:option>
						<xf:option value="4">{{ phrase('day_thursday') }}</xf:option>
						<xf:option value="5">{{ phrase('day_friday') }}</xf:option>
						<xf:option value="6">{{ phrase('day_saturday') }}</xf:option>
					</xf:select>
				</xf:option>
			</xf:radiorow>

			<xf:selectrow name="run_rules[hours]"
				readonly="{{ !$entry.canEdit() }}"
				value="{$entry.run_rules.hours|raw}"
				multiple="true" size="8" style="width: 200px"
				label="{{ phrase('run_at_hours') }}">

				<xf:option value="-1">{{ phrase('any') }}</xf:option>
				<xf:option value="0">0 {{ phrase('(midnight)') }}</xf:option>
				<xf:option value="1">1</xf:option>
				<xf:option value="2">2</xf:option>
				<xf:option value="3">3</xf:option>
				<xf:option value="4">4</xf:option>
				<xf:option value="5">5</xf:option>
				<xf:option value="6">6</xf:option>
				<xf:option value="7">7</xf:option>
				<xf:option value="8">8</xf:option>
				<xf:option value="9">9</xf:option>
				<xf:option value="10">10</xf:option>
				<xf:option value="11">11</xf:option>
				<xf:option value="12">12 {{ phrase('(noon)') }}</xf:option>
				<xf:option value="13">13</xf:option>
				<xf:option value="14">14</xf:option>
				<xf:option value="15">15</xf:option>
				<xf:option value="16">16</xf:option>
				<xf:option value="17">17</xf:option>
				<xf:option value="18">18</xf:option>
				<xf:option value="19">19</xf:option>
				<xf:option value="20">20</xf:option>
				<xf:option value="21">21</xf:option>
				<xf:option value="22">22</xf:option>
				<xf:option value="23">23</xf:option>

				<xf:explain>{{ phrase('run_times_based_on_utc_time_zone') }}</xf:explain>
			</xf:selectrow>

			<xf:selectrow name="run_rules[minutes]"
				readonly="{{ !$entry.canEdit() }}"
				value="{$entry.run_rules.minutes|raw}"
				multiple="true" size="8" style="width: 200px"
				label="{{ phrase('run_at_minutes') }}">

				<xf:option value="-1">{{ phrase('any') }}</xf:option>
				<xf:option value="0">0</xf:option>
				<xf:option value="1">1</xf:option>
				<xf:option value="2">2</xf:option>
				<xf:option value="3">3</xf:option>
				<xf:option value="4">4</xf:option>
				<xf:option value="5">5</xf:option>
				<xf:option value="6">6</xf:option>
				<xf:option value="7">7</xf:option>
				<xf:option value="8">8</xf:option>
				<xf:option value="9">9</xf:option>
				<xf:option value="10">10</xf:option>
				<xf:option value="11">11</xf:option>
				<xf:option value="12">12</xf:option>
				<xf:option value="13">13</xf:option>
				<xf:option value="14">14</xf:option>
				<xf:option value="15">15</xf:option>
				<xf:option value="16">16</xf:option>
				<xf:option value="17">17</xf:option>
				<xf:option value="18">18</xf:option>
				<xf:option value="19">19</xf:option>
				<xf:option value="20">20</xf:option>
				<xf:option value="21">21</xf:option>
				<xf:option value="22">22</xf:option>
				<xf:option value="23">23</xf:option>
				<xf:option value="24">24</xf:option>
				<xf:option value="25">25</xf:option>
				<xf:option value="26">26</xf:option>
				<xf:option value="27">27</xf:option>
				<xf:option value="28">28</xf:option>
				<xf:option value="29">29</xf:option>
				<xf:option value="30">30</xf:option>
				<xf:option value="31">31</xf:option>
				<xf:option value="32">32</xf:option>
				<xf:option value="33">33</xf:option>
				<xf:option value="34">34</xf:option>
				<xf:option value="35">35</xf:option>
				<xf:option value="36">36</xf:option>
				<xf:option value="37">37</xf:option>
				<xf:option value="38">38</xf:option>
				<xf:option value="39">39</xf:option>
				<xf:option value="40">40</xf:option>
				<xf:option value="41">41</xf:option>
				<xf:option value="42">42</xf:option>
				<xf:option value="43">43</xf:option>
				<xf:option value="44">44</xf:option>
				<xf:option value="45">45</xf:option>
				<xf:option value="46">46</xf:option>
				<xf:option value="47">47</xf:option>
				<xf:option value="48">48</xf:option>
				<xf:option value="49">49</xf:option>
				<xf:option value="50">50</xf:option>
				<xf:option value="51">51</xf:option>
				<xf:option value="52">52</xf:option>
				<xf:option value="53">53</xf:option>
				<xf:option value="54">54</xf:option>
				<xf:option value="55">55</xf:option>
				<xf:option value="56">56</xf:option>
				<xf:option value="57">57</xf:option>
				<xf:option value="58">58</xf:option>
				<xf:option value="59">59</xf:option>
			</xf:selectrow>

			<hr class="formRowSep" />

			<xf:checkboxrow>
				<xf:option name="active" selected="$entry.active"
					hint="{{ ($xf.development AND $entry.addon_id) ? phrase('field_value_maintained_addon_upgrade_explain') : '' }}">
					{{phrase('allow_cron_entry_to_run_automatically_when_scheduled') }}
				</xf:option>
			</xf:checkboxrow>

			<xf:macro template="addon_macros" name="addon_edit" arg-addOnId="{$entry.addon_id}" />
		</div>

		<xf:submitrow sticky="true" icon="save" />
	</div>

	<xf:hiddenval name="original_entry_id">{$entry.entry_id}</xf:hiddenval>
</xf:form>]]></template>
  <template type="admin" title="cron_list" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('cron_entries') }}</xf:title>

<xf:pageaction>
	<xf:button href="{{ link('cron/add') }}" icon="add">{{ phrase('add_cron_entry') }}</xf:button>
</xf:pageaction>

<xf:if is="$entries is not empty">
	<xf:form action="{{ link('cron/toggle') }}" class="block" ajax="true">
		<div class="block-outer">
			<xf:macro template="filter_macros" name="quick_filter" arg-key="cron" arg-class="block-outer-opposite" />
		</div>
		<div class="block-container">
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$entries" value="$cron">
						<xf:datarow>
							<xf:main hash="{$cron.entry_id}" href="{{ link('cron/edit', $cron) }}"
								label="{$cron.title}"
								hint="{{ $cron.addon_id != 'XF' ? $cron.AddOn.title : '' }}">

								<xf:explain>
									<xf:if is="{$cron.active}">
										<xf:if is="{{ !$cron.addon_id OR $cron.AddOn.active }}">
											{{ phrase('next_run') . ': ' . date_time($cron.next_run)  }}
										<xf:else />
											{{ phrase('cron_entry_associated_with_inactive_add_on_cannot_run') }}
										</xf:if>
									</xf:if>
								</xf:explain>
							</xf:main>
							<xf:toggle name="active[{$cron.entry_id}]" selected="$cron.active"
								class="dataList-cell--separated" submit="true"
								tooltip="{{ phrase('enable_disable_x', {'title': $cron.title}) }}" />
							<xf:if is="{{ !$cron.addon_id OR $cron.AddOn.active }}">
								<xf:action href="{{ link('cron/run', $cron) }}" overlay="true"
									data-xf-init="tooltip" title="{{ phrase('run_now') }}"
									class="dataList-cell--iconic">
									<xf:fa icon="fa-sync" /></xf:action>
							<xf:else />
								<xf:action></xf:action>
							</xf:if>
							<xf:delete href="{{ link('cron/delete', $cron) }}" />
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($entries) }}</span>
			</div>
		</div>
	</xf:form>
<xf:else />
	<div class="blockMessage">{{ phrase('no_items_have_been_created_yet') }}</div>
</xf:if>]]></template>
  <template type="admin" title="cron_run" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link('cron/run', $entry) }}" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('please_confirm_that_you_want_to_run_following_cron_entry:') }}
				<strong><a href="{{ link('cron/edit', $entry) }}">{$entry.title}</a></strong>
			</xf:inforow>
		</div>
		<xf:submitrow submit="{{ phrase('run_now') }}" rowtype="simple" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="data_portability_export" version_id="2000631" version_string="2.0.6 Beta 1"><![CDATA[<xf:title>{{ phrase('export_user') }}</xf:title>

<xf:form action="{{ link('data-portability/export') }}" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow>
				{{ phrase('data_portability_export_explain') }}
			</xf:inforow>
			<xf:textboxrow label="{{ phrase('user_name') }}" name="username" value="{$user.username}" required="required" ac="single" />
		</div>
		<xf:submitrow icon="export" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="data_portability_import" version_id="2000631" version_string="2.0.6 Beta 1"><![CDATA[<xf:title>{{ phrase('import_user') }}</xf:title>

<xf:form action="{{ link($urlPrefix . '/import') }}" upload="true" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:uploadrow name="upload" accept=".xml"
				label="{{ phrase('import_from_uploaded_xml_file') }}">
				<xf:explain>{{ phrase('data_portability_import_explain') }}</xf:explain>
			</xf:uploadrow>
		</div>
		<xf:submitrow icon="import" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="development" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('admin_navigation.development') }}</xf:title>

<xf:macro template="section_nav_macros" name="section_nav" arg-section="development" />]]></template>
  <template type="admin" title="discourage_ip" version_id="2000370" version_string="2.0.3"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link('banning/discouraged-ips/add', null, {'ip': $ip}) }}" ajax="true" data-redirect="off" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('please_confirm_that_you_want_to_discourage_following_ip:') }}
				<strong><a href="{{ link('users/ip-users', null, {'ip': $ip}) }}" dir="ltr">{$ip}</a></strong>
			</xf:inforow>

			<xf:textboxrow name="reason" hint="{{ phrase('optional') }}" maxlength="250"
				label="{{ phrase('reason') }}" />
		</div>
		<xf:submitrow icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="discouraged_ip_list" version_id="2001070" version_string="2.0.10"><![CDATA[<xf:title>{{ phrase('discouraged_ip_addresses') }}</xf:title>

<xf:pageaction>
	<div class="buttonGroup">
		<xf:button href="{{ link('banning/discouraged-ips/import') }}" icon="import" overlay="true" />
		<xf:if is="$discouragedIps is not empty">
			<xf:button href="{{ link('banning/discouraged-ips/export', null, {'t': csrf_token()}) }}" icon="export" />
		</xf:if>
	</div>
</xf:pageaction>

<xf:if is="$discouragedIps is not empty">
	<xf:form action="{{ link('banning/discouraged-ips/delete') }}" ajax="true" class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:datalist data-xf-init="responsive-data-list">
					<colgroup>
						<col style="width: 1%">
						<col style="width: 15%">
						<col style="width: 15%">
						<col style="width: 15%">
						<col style="width: 15%">
						<col>
					</colgroup>
					<xf:datarow rowtype="header">
						<xf:cell><xf:checkbox standalone="true"><xf:option check-all="< .block-container" data-xf-init="tooltip" title="{{ phrase('select_all') }}" /></xf:checkbox></xf:cell>
						<xf:cell href="{{ link('banning/discouraged-ips', '', {'order': 'start_range', 'direction': ($direction == 'desc' || !$direction)  ? 'asc' : ''}) }}">
							{{ phrase('ip') }}
						</xf:cell>
						<xf:cell href="{{ link('banning/discouraged-ips', '', {'order': '', 'direction': ($direction == 'desc' || !$direction)  ? 'asc' : ''}) }}">
							{{ phrase('date') }}
						</xf:cell>
						<xf:cell href="{{ link('banning/discouraged-ips', '', {'order': 'last_triggered_date', 'direction': ($direction == 'desc' || !$direction)  ? 'asc' : ''}) }}">
							{{ phrase('last_triggered') }}
						</xf:cell>
						<xf:cell>{{ phrase('by') }}</xf:cell>
						<xf:cell>{{ phrase('reason') }}</xf:cell>
					</xf:datarow>
					<xf:foreach loop="$discouragedIps" value="$discouragedIp">
						<xf:datarow>
							<xf:toggle name="delete[]" value="{$discouragedIp.ip}" />
							<xf:cell class="u-ltr">{$discouragedIp.ip}</xf:cell>
							<xf:cell>{{ $discouragedIp.create_date ? date($discouragedIp.create_date) : phrase('n_a') }}</xf:cell>
							<xf:cell>
								{{ $discouragedIp.last_triggered_date ? date_dynamic($discouragedIp.last_triggered_date) : phrase('never') }}
							</xf:cell>
							<xf:cell>{{ $discouragedIp.User ? $discouragedIp.User.username : phrase('n_a') }}</xf:cell>
							<xf:cell>{{ $discouragedIp.reason ? $discouragedIp.reason : phrase('n_a') }}</xf:cell>
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer block-footer--split">
				<span class="block-footer-counter">{{ display_totals($discouragedIps) }}</span>
				<span class="block-footer-select"><xf:checkbox standalone="true"><xf:option check-all="< .block-container" label="{{ phrase('select_all') }}" /></xf:checkbox></span>
				<span class="block-footer-controls"><xf:button type="submit" icon="delete" /></span>
			</div>
			<xf:pagenav page="{$page}" perpage="{$perPage}" total="{$total}" link="discouraged/ips"
				params="{{ {
					'order': ($order != 'create_date' ? $order : ''),
					'direction': ($direction != 'desc' ? $direction : '')
				} }}"
				wrapperclass="block-outer block-outer--after" />
		</div>
	</xf:form>
<xf:else />
	<div class="blockMessage">{{ phrase('no_ips_have_been_discouraged') }}</div>
</xf:if>

<xf:form action="{{ link('banning/discouraged-ips/add') }}" ajax="true" class="block">
	<div class="block-container">
		<h3 class="block-header">{{ phrase('add_discouraged_ip') }}</h3>
		<div class="block-body">
			<xf:textboxrow name="ip" value="{$ip}" maxlength="{{ max_length($newIp, 'ip') }}"
				label="{{ phrase('ip_to_discourage') }}"
				explain="{{ phrase('you_may_enter_partial_ip_v4_v6') }}"
				dir="ltr" />
			<xf:textboxrow name="reason" maxlength="{{ max_length($newIp, 'reason') }}"
				label="{{ phrase('reason') }}"
				hint="{{ phrase('optional') }}" />
		</div>
		<xf:submitrow icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="display_order_macros" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:macro name="row"
	arg-name="display_order"
	arg-value=""
	arg-step="1"
	arg-label="{{ phrase('display_order') }}"
	arg-hint=""
	arg-readOnly=""
	arg-explain="">

	<xf:numberboxrow name="{$name}" value="{$value}" min="0" step="{$step}"
		label="{$label}"
		hint="{$hint}"
		explain="{$explain}"
		readonly="{{ $readOnly ? 'readonly' : '' }}" />
</xf:macro>

<xf:macro name="input"
	arg-name="display_order"
	arg-value=""
	arg-step="1"
	arg-readOnly="">

	<xf:numberbox name="{$name}" value="{$value}" min="0" step="{$step}" readonly="{{ $readOnly ? 'readonly' : '' }}" />
</xf:macro>]]></template>
  <template type="admin" title="error" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('oops_we_ran_into_some_problems') }}</xf:title>

<div class="blockMessage">
	<xf:if is="$error">
		{$error|raw}
	<xf:else />
		<ul>
		<xf:foreach loop="$errors" value="$error">
			<li>{$error|raw}</li>
		</xf:foreach>
		</ul>
	</xf:if>
</div>]]></template>
  <template type="admin" title="feed_edit" version_id="2000038" version_string="2.0.0 Beta 8"><![CDATA[<xf:if is="$feed.isInsert()">
	<xf:title>{{ phrase('add_feed') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_feed:') }} {$feed.title}</xf:title>
</xf:if>

<xf:pageaction if="$feed.isUpdate()">
	<xf:button href="{{ link('feeds/delete', $feed) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('feeds/save', $feed) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:if is="$feed.feed_id">
				<xf:textboxrow name="title" value="{$feed.title}" maxlength="{{ max_length($feed, 'title') }}"
					label="{{ phrase('title') }}" />
			</xf:if>

			<xf:textboxrow name="url" value="{$feed.url}" maxlength="{{ max_length($feed, 'url') }}" type="url"
				label="{{ phrase('url') }}"
				dir="ltr" />

			<xf:selectrow name="frequency" value="{$feed.frequency}"
				label="{{ phrase('fetch_new_entries_every') }}">

				<xf:option value="600">{{ phrase('x_minutes', {'count': '10'}) }}</xf:option>
				<xf:option value="1200">{{ phrase('x_minutes', {'count': '20'}) }}</xf:option>
				<xf:option value="1800">{{ phrase('x_minutes', {'count': '30'}) }}</xf:option>
				<xf:option value="3600">{{ phrase('x_minutes', {'count': '60'}) }}</xf:option>
				<xf:option value="7200">{{ phrase('x_hours', {'count': '2'}) }}</xf:option>
				<xf:option value="14400">{{ phrase('x_hours', {'count': '4'}) }}</xf:option>
				<xf:option value="21600">{{ phrase('x_hours', {'count': '6'}) }}</xf:option>
				<xf:option value="43200">{{ phrase('x_hours', {'count': '12'}) }}</xf:option>
			</xf:selectrow>

			<xf:if is="$feed.feed_id">
				<xf:checkboxrow>
					<xf:option name="active" selected="$feed.active">
						<xf:label>{{ phrase('feed_is_active') }}</xf:label>
						<xf:hint>{{ phrase('disable_to_prevent_feed_import') }}</xf:hint>
					</xf:option>
				</xf:checkboxrow>
			<xf:else />
				<xf:hiddenval name="active">1</xf:hiddenval>
			</xf:if>

			<hr class="formRowSep" />

			<xf:radiorow name="user_id" value="{$feed.user_id}"
				label="{{ phrase('posting_user') }}">

				<xf:option value="0">{{ phrase('post_feed_entries_as_guest') }}</xf:option>
				<xf:option value="-1" label="{{ phrase('post_feed_entries_as_following_user') }}" selected="{$feed.User}">
					<xf:textbox name="username" value="{$feed.User.username}" placeholder="{{ phrase('user_name...') }}" ac="single" />
				</xf:option>
			</xf:radiorow>

			<hr class="formRowSep" />

			<xf:selectrow name="node_id" value="{$feed.node_id}" id="js-nodeList"
				label="{{ phrase('destination_forum') }}">

				<xf:foreach loop="$forums" value="$forum">
					<xf:option value="{$forum.value}" disabled="{$forum.disabled}" label="{$forum.label}" />
				</xf:foreach>
				<xf:explain>
					{{ phrase('select_forum_for_feed') }}
				</xf:explain>
			</xf:selectrow>

			<xf:prefixinputrow
				textbox-name="title_template"
				textbox-value="{$feed.title_template}"
				maxlength="{{ max_length($feed, 'title_template') }}"
				prefixes="{$prefixes}"
				prefix-value="{$feed.prefix_id}"
				type="thread"
				href="{{ link('forums/prefixes') }}"
				listen-to="#js-nodeList"
				label="{{ phrase('title_template') }}"
				hint="{{ phrase('optional') }}" />

			<xf:textarearow name="message_template" value="{$feed.message_template}" rows="5" autosize="true"
				label="{{ phrase('message_template') }}"
				hint="{{ phrase ('you_may_use_bb_code') }}"
				explain="{{ phrase('feed_message_template_explain') }}" />

			<hr class="formRowSep" />

			<xf:checkboxrow label="{{ phrase('options') }}">

				<xf:option name="discussion_visible" selected="$feed.discussion_visible">
					<xf:label>{{ phrase('post_immediately') }}</xf:label>
					<xf:hint>{{ phrase('otherwise_insert_into_moderation_queue') }}</xf:hint>
				</xf:option>
				<xf:option name="discussion_open" selected="$feed.discussion_open">
					<xf:label>{{ phrase('open') }}</xf:label>
					<xf:hint>{{ phrase('people_may_reply_to_this_thread') }}</xf:hint>
				</xf:option>
				<xf:option name="discussion_sticky" selected="$feed.discussion_sticky">
					<xf:label>{{ phrase('sticky') }}</xf:label>
					<xf:hint>{{ phrase('sticky_threads_appear_at_top_of_first_page_of_list_of_threads') }}</xf:hint>
				</xf:option>
			</xf:checkboxrow>
		</div>
		<xf:submitrow sticky="true" icon="save"><xf:html>
			<xf:button type="submit" name="preview" icon="preview" />
		</xf:html></xf:submitrow>
	</div>
</xf:form>]]></template>
  <template type="admin" title="feed_list" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('rss_feed_importer') }}</xf:title>

<xf:pageaction>
	<xf:button href="{{ link('feeds/add') }}" icon="add">{{ phrase('add_feed') }}</xf:button>
</xf:pageaction>

<xf:if is="$feeds is not empty">
	<xf:form action="{{ link('feeds/toggle') }}" class="block" ajax="true">
		<div class="block-outer">
			<xf:macro template="filter_macros" name="quick_filter" arg-key="feeds" arg-class="block-outer-opposite" />
		</div>
		<div class="block-container">
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$feeds" value="$feed">
						<xf:datarow>
							<xf:main hash="{$feed.feed_id}" href="{{ link('feeds/edit', $feed) }}"
								label="{$feed.title}" explain="{$feed.url}" />
							<xf:toggle name="active[{$feed.feed_id}]" selected="$feed.active"
								class="dataList-cell--separated" submit="true"
								tooltip="{{ phrase('enable_disable_x', {'title': $feed.title}) }}" />
							<xf:action href="{{ link('feeds/import', $feed) }}">{{ phrase('import_now') }}</xf:action>
							<xf:delete href="{{ link('feeds/delete', $feed) }}" />
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($feeds) }}</span>
			</div>
		</div>
	</xf:form>
<xf:else />
	<div class="blockMessage">{{ phrase('no_feeds_have_been_registered_yet') }}</div>
</xf:if>]]></template>
  <template type="admin" title="feed_preview" version_id="2000038" version_string="2.0.0 Beta 8"><![CDATA[<xf:title>{{ phrase('preview_feed_entry') }}</xf:title>
<xf:h1>
	{{ phrase('preview_feed_entry:') }} <a href="{$feed.url}" target="_blank">{$feed.title}</a>
</xf:h1>

<div class="block">
	<div class="block-container">
		<div class="block-body">
			<div class="block-row block-row--separated">
				<h3 class="block-textHeader">{$entry.title}</h3>
				{{ bb_code($entry.message, 'post', $feed.User) }}
			</div>
			<div class="block-row block-row--separated">
				<dl class="pairs pairs--columns pairs--fluidSmall">
					<dt>{{ phrase('author') }}</dt>
					<dd>{$entry.author}</dd>
				</dl>
				<dl class="pairs pairs--columns pairs--fluidSmall">
					<dt>{{ phrase('last_modified') }}</dt>
					<dd><xf:date time="$entry.date_modified" /></dd>
				</dl>
			</div>
		</div>
	</div>
</div>]]></template>
  <template type="admin" title="filter_macros" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:macro name="quick_filter" arg-key="" arg-ajax="" arg-class="">
	<xf:js src="xf/filter.js" min="1" />
	<div class="{$class} quickFilter u-jsOnly" data-xf-init="filter" data-key="{$key}" data-ajax="{$ajax}">
		<div class="inputGroup inputGroup--inline inputGroup--joined">
			<input type="text" class="input js-filterInput" placeholder="{{ phrase('filter...')|for_attr }}" data-xf-key="{{ phrase('shortcut.filter')|for_attr }}" />
			<span class="inputGroup-text">
				<xf:checkbox standalone="true">
					<xf:option class="js-filterPrefix" label="{{ phrase('prefix') }}" />
				</xf:checkbox>
			</span>
			<i class="inputGroup-text js-filterClear is-disabled" aria-hidden="true"></i>
		</div>
	</div>
</xf:macro>
]]></template>
  <template type="admin" title="force_agreement_privacy_policy" version_id="2001070" version_string="2.0.10"><![CDATA[<xf:title>{{ phrase('force_privacy_policy_agreement') }}</xf:title>

<xf:form action="{{ link('force-agreement/privacy-policy') }}" ajax="true" data-force-flash-message="on" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('please_confirm_that_you_want_to_force_all_current_users_to_accept_following') }}
				<strong><a href="{$xf.privacyPolicyUrl}" target="_blank">{{ phrase('privacy_policy') }} &middot; {{ phrase('last_updated:') }} <xf:if is="$xf.options.privacyPolicyLastUpdate"><xf:date time="$xf.options.privacyPolicyLastUpdate" /><xf:else />{{ phrase('never') }}</xf:if></a></strong>
			</xf:inforow>
		</div>
		<xf:submitrow icon="save" rowtype="simple" />
	</div>
</xf:form>

<xf:set var="$header">
	<div class="block-header">{{ phrase('options') }}</div>
</xf:set>
<xf:macro template="option_macros" name="option_form_block"
	arg-options="{$options}"
	arg-containerBeforeHtml="{$header}" />]]></template>
  <template type="admin" title="force_agreement_terms" version_id="2001070" version_string="2.0.10"><![CDATA[<xf:title>{{ phrase('force_terms_and_rules_agreement') }}</xf:title>

<xf:form action="{{ link('force-agreement/terms') }}" ajax="true" data-force-flash-message="on" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('please_confirm_that_you_want_to_force_all_current_users_to_accept_following') }}
				<strong><a href="{$xf.tosUrl}" target="_blank">{{ phrase('terms_and_rules') }} &middot; {{ phrase('last_updated:') }} <xf:if is="$xf.options.termsLastUpdate"><xf:date time="$xf.options.termsLastUpdate" /><xf:else />{{ phrase('never') }}</xf:if></a></strong>
			</xf:inforow>
		</div>
		<xf:submitrow icon="save" rowtype="simple" />
	</div>
</xf:form>

<xf:set var="$header">
	<div class="block-header">{{ phrase('options') }}</div>
</xf:set>
<xf:macro template="option_macros" name="option_form_block"
	arg-options="{$options}"
	arg-containerBeforeHtml="{$header}" />]]></template>
  <template type="admin" title="forum_delete" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link('forums/delete', $node) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('please_confirm_want_to_delete_forum_and_discussions:') }}
				<strong><a href="{{ link('forums/edit', $node) }}">{$node.title}</a></strong>
			</xf:inforow>

			<xf:macro template="helper_node_delete_children" name="delete_row" arg-node="{$node}" arg-nodeTree="{$nodeTree}" />
		</div>
		<xf:submitrow rowtype="{{ !$node.hasChildren() ? 'simple' : '' }}" icon="delete" />
	</div>
	<xf:redirect />
</xf:form>]]></template>
  <template type="admin" title="forum_edit" version_id="2000034" version_string="2.0.0 Beta 4"><![CDATA[<xf:if is="$forum.isInsert()">
	<xf:title>{{ phrase('add_forum') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_forum:') }} {$node.title}</xf:title>
</xf:if>

<xf:pageaction if="$forum.isUpdate()">
	<xf:button href="{{ link('forums/delete', $node) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('forums/save', $node) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:macro template="node_edit_macros" name="title" arg-node="{$node}" />
			<xf:macro template="node_edit_macros" name="description" arg-node="{$node}" />

			<hr class="formRowSep" />
			<xf:macro template="node_edit_macros" name="node_name" arg-node="{$node}" />
			<xf:macro template="node_edit_macros" name="position" arg-node="{$node}" arg-nodeTree="{$nodeTree}" />
			<xf:macro template="node_edit_macros" name="navigation" arg-node="{$node}" arg-navChoices="{$navChoices}" />
			<hr class="formRowSep" />

			<xf:checkboxrow>
				<xf:option name="allow_posting" selected="$forum.allow_posting"
					label="{{ phrase('allow_new_messages_to_be_posted_in_this_forum') }}"
					hint="{{ phrase('if_disabled_users_not_able_post_messages_in_forum') }}" />

				<xf:option name="allow_poll" selected="$forum.allow_poll"
					label="{{ phrase('allow_polls_to_be_created_in_this_forum') }}"
					hint="{{ phrase('if_disabled_users_not_given_option_to_create_poll_with_thread') }}" />

				<xf:option name="moderate_threads" selected="$forum.moderate_threads"
					label="{{ phrase('moderate_new_threads_posted_in_this_forum') }}"
					hint="{{ phrase('if_enabled_moderator_manually_approve_threads_posted_in_forum') }}" />

				<xf:option name="moderate_replies" selected="$forum.moderate_replies"
					label="{{ phrase('moderate_replies_posted_in_this_forum') }}"
					hint="{{ phrase('if_enabled_moderator_manually_approve_replies_posted_in_forum') }}" />

				<xf:option name="count_messages" selected="$forum.count_messages"
					label="{{ phrase('count_messages_in_forum_toward_user_total') }}"
					hint="{{ phrase('if_disabled_messages_posted_will_not_contribute_to_user_message_total') }}" />

				<xf:option name="find_new" selected="$forum.find_new"
					label="{{ phrase('include_forum_in_find_new_threads') }}"
					hint="{{ phrase('if_disabled_messages_will_never_appear_in_find_new_threads') }}" />
			</xf:checkboxrow>

			<xf:numberboxrow name="min_tags" value="{$forum.min_tags}" min="0" max="100"
				label="{{ phrase('minimum_required_tags') }}"
				explain="{{ phrase('forum_min_tags_explain') }}" />

			<xf:radiorow name="allowed_watch_notifications" value="{$forum.allowed_watch_notifications}"
				label="{{ phrase('forum_watch_notification_limit') }}"
				explain="{{ phrase('forum_watch_notification_limit_desc') }}">

				<xf:option value="all" label="{{ phrase('new_messages') }}" />
				<xf:option value="thread" label="{{ phrase('new_threads') }}" />
				<xf:option value="none" label="{{ phrase('none') }}" />
			</xf:radiorow>

			<xf:formrow rowtype="input"
				label="{{ phrase('default_sort_order') }}">

				<div class="inputPair">
					<xf:select name="default_sort_order" value="{$forum.default_sort_order}" class="input--inline">
						<xf:option value="last_post_date" label="{{ phrase('last_message') }}" />
						<xf:option value="post_date" label="{{ phrase('start_date') }}" />
						<xf:option value="title" label="{{ phrase('title') }}" />
						<xf:option value="reply_count" label="{{ phrase('replies') }}" />
						<xf:option value="view_count" label="{{ phrase('views') }}" />
					</xf:select>
					<xf:select name="default_sort_direction" value="{$forum.default_sort_direction}"
						class="input--inline">
						<xf:option value="desc" label="{{ phrase('descending') }}" />
						<xf:option value="asc" label="{{ phrase('ascending') }}" />
					</xf:select>
				</div>
			</xf:formrow>

			<xf:selectrow name="list_date_limit_days" value="{$forum.list_date_limit_days}"
				label="{{ phrase('thread_list_date_limit') }}"
				explain="{{ phrase('thread_list_date_limit_used_on_busy_forums_to_improve_performance') }}">

				<xf:option value="0">{{ phrase('none') }}</xf:option>
				<xf:option value="7">{{ phrase('x_days', {'days': '7'}) }}</xf:option>
				<xf:option value="14">{{ phrase('x_days', {'days': '14'}) }}</xf:option>
				<xf:option value="30">{{ phrase('x_days', {'days': '30'}) }}</xf:option>
				<xf:option value="60">{{ phrase('x_months', {'months': '2'}) }}</xf:option>
				<xf:option value="90">{{ phrase('x_months', {'months': '3'}) }}</xf:option>
				<xf:option value="182">{{ phrase('x_months', {'months': '6'}) }}</xf:option>
				<xf:option value="365">{{ phrase('1_year') }}</xf:option>
			</xf:selectrow>

			<xf:macro template="node_edit_macros" name="style" arg-node="{$node}" arg-styleTree="{$styleTree}" />

			<xf:if is="$availableFields is not empty">
				<hr class="formRowSep" />

				<xf:checkboxrow name="available_fields" value="{$forum.field_cache}" listclass="field listColumns"
					label="{{ phrase('available_fields') }}"
					explain="{{ phrase('asterisk_fields_required_explain') }}">

					<xf:foreach loop="$availableFields" key="$fieldId" value="$field">
						<xf:option value="{$fieldId}" label="{$field.title}" labelclass="{{ $field.required ? 'u-appendAsterisk' : '' }}" />
					</xf:foreach>

					<xf:hint>
						<xf:checkbox standalone="true">
							<xf:option check-all=".field.listColumns">{{ phrase('select_all') }}</xf:option>
						</xf:checkbox>
					</xf:hint>
				</xf:checkboxrow>
			<xf:else />
				<hr class="formRowSep" />

				<xf:formrow label="{{ phrase('available_fields') }}">
					{{ phrase('none')|parens }} <a href="{{ link('custom-thread-fields/add') }}" target="_blank">{{ phrase('add_field') }}</a>
				</xf:formrow>
			</xf:if>

			<xf:if is="$prefixesGrouped is not empty">
				<hr class="formRowSep" />

				<xf:checkboxrow name="available_prefixes" rowtype="explainOffset" listclass="prefix"
					data-xf-init="checkbox-select-disabler"
					data-select="select[name=default_prefix_id]"
					label="{{ phrase('available_prefixes') }}"
					explain="{{ phrase('available_prefixes_forum_explain') }}">

					<xf:foreach loop="$prefixGroups" key="$prefixGroupId" value="$prefixGroup" if="{$prefixesGrouped.{$prefixGroupId}}">

						<xf:optgroup check-all="true" listclass="listColumns"
							label="{{ $prefixGroupId ? $prefixGroup.title : phrase('ungrouped') }}">

							<xf:foreach loop="{$prefixesGrouped.{$prefixGroupId}}" key="$prefixId" value="$prefix">
								<xf:option value="{$prefixId}" selected="{$forum.prefix_cache.{$prefixId}}">
									<xf:label><span class="label {$prefix.css_class}">{$prefix.title}</span></xf:label>
								</xf:option>
							</xf:foreach>
						</xf:optgroup>
					</xf:foreach>

					<xf:hint>
						<xf:checkbox standalone="true">
							<xf:option check-all=".prefix">{{ phrase('select_all') }}</xf:option>
						</xf:checkbox>
					</xf:hint>
				</xf:checkboxrow>

				<xf:selectrow name="default_prefix_id" value="{$forum.default_prefix_id}"
					label="{{ phrase('default_thread_prefix') }}"
					explain="{{ phrase('default_thread_prefix_explain') }}">

					<xf:option value="-1">{{ phrase('none') }}</xf:option>
					<xf:foreach loop="$prefixGroups" key="$prefixGroupId" value="$prefixGroup"
						if="{{ count($prefixesGrouped.{$prefixGroupId}) > 0 }}">
						<xf:optgroup label="{{ $prefixGroupId > 0 ? $prefixGroup.title : phrase('ungrouped') }}">
							<xf:foreach loop="{$prefixesGrouped.{$prefixGroupId}}" key="$prefixId" value="$prefix">
								<xf:option value="{$prefixId}" disabled="{{ !in_array($prefixId, $forum.prefix_cache) }}">{$prefix.title}</xf:option>
							</xf:foreach>
						</xf:optgroup>
					</xf:foreach>
				</xf:selectrow>

				<xf:checkboxrow name="require_prefix" value="{$forum.require_prefix}">
					<xf:option value="1"
						label="{{ phrase('require_users_to_select_prefix') }}"
						hint="{{ phrase('if_selected_users_required_select_prefix_for_thread') }}" />
				</xf:checkboxrow>

			<xf:else />

				<hr class="formRowSep" />

				<xf:formrow label="{{ phrase('available_prefixes') }}">
					{{ phrase('none')|parens }} <a href="{{ link('thread-prefixes/add') }}" target="_blank">{{ phrase('add_prefix') }}</a>
				</xf:formrow>

				<xf:hiddenval name="default_thread_prefix" value="0" />
				<xf:hiddenval name="require_prefix" value="0" />

			</xf:if>

			<xf:if is="$availablePrompts is not empty">

				<hr class="formRowSep" />

				<xf:checkboxrow name="available_prompts" rowtype="explainOffset" listclass="prompt"
					label="{{ phrase('available_prompts') }}"
					explain="{{ phrase('available_thread_prompts_explain',
					{
						'link': link(
							'phrases/edit-by-name', {},
							{'title': 'thread_prompt.default'}
						)
					}) }}">

					<xf:foreach loop="$promptGroups" key="$promptGroupId" value="$promptGroup" if="{$promptsGrouped.{$promptGroupId}}">

						<xf:optgroup check-all="true" listclass="_listColumns"
							label="{{ $promptGroupId ? $promptGroup.title : phrase('ungrouped') }}">

							<xf:foreach loop="{$promptsGrouped.{$promptGroupId}}" key="$promptId" value="$prompt">
								<xf:option value="{$promptId}" selected="{$forum.prompt_cache.{$promptId}}">
									<xf:label>{$prompt.title}</xf:label>
								</xf:option>
							</xf:foreach>
						</xf:optgroup>
					</xf:foreach>

					<xf:hint>
						<xf:checkbox standalone="true">
							<xf:option check-all=".prompt">{{ phrase('select_all') }}</xf:option>
						</xf:checkbox>
					</xf:hint>
				</xf:checkboxrow>

			</xf:if>

		</div>
		<xf:submitrow icon="save" sticky="true" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="forum_selection_macros" version_id="2000052" version_string="2.0.0 Release Candidate 2"><![CDATA[<xf:macro name="select_forums"
	arg-nodeIds="!"
	arg-nodeTree="!"
	arg-withRow="1"
	arg-selectName="node_ids">

	<xf:set var="$inner">
		<ul class="inputList">
			<li><xf:select name="{$selectName}[]" value="{$nodeIds}" size="7" multiple="multiple" id="js-applicableForums">

				<xf:option value="" selected="!{$nodeIds}">{{ phrase('(none)') }}</xf:option>

				<xf:foreach loop="$nodeTree.getFlattened(0)" value="$treeEntry">
					<xf:option value="{$treeEntry.record.node_id}"
						disabled="{{ $treeEntry.record.node_type_id != 'Forum' }}"
						label="{{ repeat('&nbsp;&nbsp;', $treeEntry.depth)|raw }} {$treeEntry.record.title}" />
				</xf:foreach>

			</xf:select></li>

			<xf:checkbox>
				<xf:option label="{{ phrase('select_all') }}" id="js-selectAllForums" />
			</xf:checkbox>
		</ul>
	</xf:set>

	<xf:if is="$withRow">
		<xf:formrow rowtype="input" label="{{ phrase('applicable_forums') }}">
			{$inner|raw}
		</xf:formrow>
	<xf:else />
		{$inner|raw}
	</xf:if>

	<xf:js>
		$(function()
		{
			$('#js-selectAllForums').click(function(e)
			{
				$('#js-applicableForums').find('option:enabled:not([value=""])').prop('selected', this.checked);
			});
		});
	</xf:js>
</xf:macro>]]></template>
  <template type="admin" title="forums" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('admin_navigation.forums') }}</xf:title>

<xf:macro template="section_nav_macros" name="section_nav" arg-section="forums" />]]></template>
  <template type="admin" title="groups_permissions" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('admin_navigation.groupsAndPermissions') }}</xf:title>

<xf:macro template="section_nav_macros" name="section_nav" arg-section="groupsAndPermissions" />]]></template>
  <template type="admin" title="help_page_edit" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:if is="$page.isInsert()">
	<xf:title>{{ phrase('add_help_page') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_help_page:') }} {$page.title}</xf:title>
</xf:if>

<xf:pageaction if="$page.isUpdate() AND $page.canEdit()">
	<xf:button href="{{ link('help-pages/delete', $page) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:if is="!$page.canEdit()">
	<div class="blockMessage blockMessage--important blockMessage--iconic">
		{{ phrase('only_limited_fields_in_item_may_be_edited') }}
	</div>
</xf:if>

<xf:form action="{{ link('help-pages/save', $page) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">

			<xf:textboxrow name="page_name" value="{$page.page_name}"
				readonly="{{ !$page.canEdit() }}"
				maxlength="{{ max_length($page, 'page_name') }}"
				label="{{ phrase('url_portion') }}">
				<xf:explain>
					{{ phrase('represents_portion_of_url_after_help_part_identify_page') }}
				</xf:explain>
			</xf:textboxrow>

			<xf:hiddenval name="page_id">{$page.page_id}</xf:hiddenval>

			<xf:textboxrow name="title" value="{{ $page.exists() ? $page.MasterTitle.phrase_text : '' }}"
				readonly="{{ !$page.canEdit() }}"
				label="{{ phrase('title') }}" />

			<xf:textboxrow name="description" value="{{ $page.exists() ? $page.MasterDescription.phrase_text : '' }}"
				readonly="{{ !$page.canEdit() }}"
				label="{{ phrase('description') }}" />

			<xf:macro template="display_order_macros" name="row"
				arg-value="{$page.display_order}"
				arg-explain="{{ ($xf.development AND $page.addon_id) ? phrase('field_value_maintained_addon_upgrade_explain') : '' }}" />

			<xf:checkboxrow>
				<xf:option name="advanced_mode" value="1" selected="{$page.advanced_mode}"
					readonly="{{ !$page.canEdit() }}"
					label="{{ phrase('advanced_mode') }}"
					hint="{{ phrase('if_enabled_html_for_your_page_will_not_be_contained_within_block') }}" />
			</xf:checkboxrow>

			<xf:codeeditorrow name="content" value="{{ $page.isUpdate() ? $page.MasterTemplate.template : '' }}"
				mode="html"
				class="codeEditor--short"
				readonly="{{ !$page.canEdit() }}"
				label="{{ phrase('page_content') }}"
				explain="{{ phrase('you_may_use_xenforo_template_syntax_here') }}" />

			<xf:formrow rowtype="input"
				label="{{ phrase('php_callback') }}"
				explain="{{ phrase('page_callback_explanation_html') }}">
				<xf:macro template="helper_callback_fields" name="callback_fields"
					arg-data="{$page}"
					arg-readOnly="{{ !$page.canEdit() }}" />
			</xf:formrow>

			<xf:checkboxrow>
				<xf:option name="active" value="1" selected="$page.active"
					hint="{{ ($xf.development AND $page.addon_id) ? phrase('field_value_maintained_addon_upgrade_explain') : '' }}">
					{{ phrase('enabled') }}
				</xf:option>
			</xf:checkboxrow>

			<xf:macro template="addon_macros" name="addon_edit" arg-addOnId="{$page.addon_id}" />
		</div>
		<xf:submitrow sticky="true" icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="help_page_list" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('help_pages') }}</xf:title>

<xf:pageaction>
	<xf:button href="{{ link('help-pages/add') }}" icon="add">{{ phrase('add_help_page') }}</xf:button>
</xf:pageaction>

<xf:if is="$pages is not empty">
	<xf:form action="{{ link('help-pages/toggle') }}" class="block" ajax="true">
		<div class="block-outer">
			<xf:macro template="filter_macros" name="quick_filter" arg-key="help-pages" arg-class="block-outer-opposite" />
		</div>
		<div class="block-container">
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$pages" value="$page">
						<xf:datarow
							label="{$page.title}"
							hint="{$page.page_name}"
							href="{{ link('help-pages/edit', $page) }}"
							explain="{$page.description}"
							delete="{{ link('help-pages/delete', $page) }}"
							hash="{$page.page_id}">
							<xf:toggle name="active[{$page.page_id}]" selected="$page.active"
								class="dataList-cell--separated" submit="true"
								tooltip="{{ phrase('enable_disable_x', {'title': $page.title}) }}" />
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($pages) }}</span>
			</div>
		</div>
	</xf:form>
<xf:else />
	<div class="blockMessage">{{ phrase('no_items_have_been_created_yet') }}</div>
</xf:if>]]></template>
  <template type="admin" title="helper_callback_fields" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro name="callback_fields"
	arg-data=""
	arg-namePrefix=""
	arg-className="callback_class"
	arg-methodName="callback_method"
	arg-classValue=""
	arg-methodValue=""
	arg-size="25"
	arg-readOnly="{{ false }}">

	<xf:if is="$namePrefix">
		<xf:set var="$className" value="{$namePrefix}_class" />
		<xf:set var="$methodName" value="{$namePrefix}_method" />
	</xf:if>
	<xf:if is="empty($classValue) && !empty($data)">
		<xf:set var="$classValue" value="{$data.{$className}}" />
	</xf:if>
	<xf:if is="empty($methodValue) && !empty($data)">
		<xf:set var="$methodValue" value="{$data.{$methodName}}" />
	</xf:if>

	<div class="inputGroup" dir="ltr">
		<xf:textbox name="{$className}" value="{$classValue}" size="{$size}" maxlength="100" dir="ltr"
			readonly="{$readOnly}"
			placeholder="{{ phrase('class') }}" />
		<span class="inputGroup-text">::</span>
		<xf:textbox name="{$methodName}" value="{$methodValue}" size="{$size}" maxlength="75" dir="ltr"
			readonly="{$readOnly}"
			placeholder="{{ phrase('method') }}" />
	</div>
	<p class="formRow-explain">{{ phrase('callback_class_method_explain') }}</p>
</xf:macro>

<xf:macro name="callback_row"
	arg-label="!"
	arg-explain=""
	arg-data=""
	arg-namePrefix=""
	arg-className="callback_class"
	arg-methodName="callback_method"
	arg-classValue=""
	arg-methodValue=""
	arg-size="25"
	arg-readOnly="{{ false }}">
	<xf:formrow label="{$label}" explain="{$explain|raw}" rowtype="input">
		<xf:macro name="callback_fields"
			arg-data="{$data}"
			arg-namePrefix="{$namePrefix}"
			arg-className="{$className}"
			arg-methodName="{$methodName}"
			arg-classValue="{$classValue}"
			arg-methodValue="{$methodValue}"
			arg-size="{$size}"
			arg-readOnly="{$readOnly}" />
	</xf:formrow>
</xf:macro>]]></template>
  <template type="admin" title="helper_criteria" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:macro name="user_tabs" arg-container="" arg-userTabTitle="" arg-active="">
	<xf:set var="$tabs">
		<a class="tabs-tab{{ $active == 'user' ? ' is-active' : '' }}"
			role="tab" tabindex="0" aria-controls="{{ unique_id('criteriaUser') }}">
			{{ $userTabTitle ? $userTabTitle : phrase('user_criteria') }}</a>
		<a class="tabs-tab{{ $active == 'user_field' ? ' is-active' : '' }}"
			role="tab" tabindex="0" aria-controls="{{ unique_id('criteriaUserField') }}">
			{{ phrase('custom_userfield_criteria') }}</a>
	</xf:set>
	<xf:if is="$container">
		<div class="tabs" role="tablist">
			{$tabs|raw}
		</div>
	<xf:else />
		{$tabs|raw}
	</xf:if>
</xf:macro>

<xf:macro name="page_tabs" arg-container="" arg-active="">
	<xf:set var="$tabs">
		<a class="tabs-tab{{ $active == 'page' ? ' is-active' : '' }}"
			role="tab" tabindex="0" aria-controls="{{ unique_id('criteriaPage') }}">{{ phrase('page_criteria') }}</a>
	</xf:set>
	<xf:if is="$container">
		<div class="tabs" role="tablist">
			{$tabs|raw}
		</div>
	<xf:else />
		{$tabs|raw}
	</xf:if>
</xf:macro>

<xf:macro name="user_panes" arg-container="" arg-active="" arg-criteria="!" arg-data="!">

	<xf:set var="$app" value="{$xf.app}" />
	<xf:set var="$visitor" value="{$xf.visitor}" />
	<xf:set var="$em" value="{$app.em}" />

	<xf:set var="$panes">
		<li class="{{ $active == 'user' ? ' is-active' : '' }}" role="tabpanel" id="{{ unique_id('criteriaUser') }}">
			<!--[XF:user:top]-->

			<xf:checkboxrow label="{{ phrase('privileges_and_status') }}">
				<!--[XF:user:status_top]-->

				<xf:option name="user_criteria[is_guest][rule]" value="is_guest" selected="{$criteria.is_guest}"
					label="{{ phrase('user_is_guest') }}" />
				<xf:option name="user_criteria[is_logged_in][rule]" value="is_logged_in" selected="{$criteria.is_logged_in}"
					label="{{ phrase('user_is_logged_in') }}" />
				<xf:option name="user_criteria[is_moderator][rule]" value="is_moderator" selected="{$criteria.is_moderator}"
					label="{{ phrase('user_is_moderator') }}" />
				<xf:option name="user_criteria[is_admin][rule]" value="is_admin" selected="{$criteria.is_admin}"
					label="{{ phrase('user_is_administrator') }}" />
				<xf:option name="user_criteria[is_banned][rule]" value="is_banned" selected="{$criteria.is_banned}"
					label="{{ phrase('user_is_banned') }}"/>
				<xf:option name="user_criteria[birthday][rule]" value="birthday" selected="{$criteria.birthday}"
					label="{{ phrase('user_birthday_is_today') }}"/>
				<xf:option name="user_criteria[user_state][rule]" value="user_state" selected="{$criteria.user_state}"
					label="{{ phrase('user_state_is:') }}">

					<xf:dependent>
						<xf:select name="user_criteria[user_state][data][state]" value="{$criteria.user_state.state}">
							<xf:option value="valid">{{ phrase('valid') }}</xf:option>
							<xf:option value="email_confirm">{{ phrase('awaiting_email_confirmation') }}</xf:option>
							<xf:option value="email_confirm_edit">{{ phrase('awaiting_email_confirmation_from_edit') }}</xf:option>
							<xf:option value="email_bounce">{{ phrase('email_invalid_bounced') }}</xf:option>
							<xf:option value="moderated">{{ phrase('awaiting_approval') }}</xf:option>
							<xf:option value="rejected">{{ phrase('rejected') }}</xf:option>
							<xf:option value="disabled">{{ phrase('disabled') }}</xf:option>
						</xf:select>
					</xf:dependent>

				</xf:option>

				<!--[XF:user:status_bottom]-->
			</xf:checkboxrow>

			<hr class="formRowSep" />

			<!--[XF:user:after_status]-->

			<xf:checkboxrow label="{{ phrase('connected_accounts') }}">
				<xf:option name="user_criteria[connected_accounts][rule]" value="connected_accounts" selected="{$criteria.connected_accounts}"
					label="{{ phrase('user_is_associated_with_any_of_selected_connected_account_providers:') }}">

					<xf:select name="user_criteria[connected_accounts][data][provider_ids]" size="4" multiple="true" value="{$criteria.connected_accounts.provider_ids}">
						<xf:options source="$data.connectedAccProviders" />
					</xf:select>

				</xf:option>
			</xf:checkboxrow>

			<hr class="formRowSep" />

			<!--[XF:user:after_connected]-->

			<xf:checkboxrow label="{{ phrase('user_groups') }}">
				<xf:option name="user_criteria[user_groups][rule]" value="user_groups" selected="{$criteria.user_groups}"
					label="{{ phrase('user_is_member_of_any_of_selected_user_groups:') }}">

					<xf:select name="user_criteria[user_groups][data][user_group_ids]" size="4" multiple="true" value="{$criteria.user_groups.user_group_ids}">
						<xf:foreach loop="$data.userGroups" key="$userGroupId" value="$userGroupTitle">
							<xf:option value="{$userGroupId}">{$userGroupTitle}</xf:option>
						</xf:foreach>
					</xf:select>

				</xf:option>

				<xf:option name="user_criteria[not_user_groups][rule]" value="not_user_groups" selected="{$criteria.not_user_groups}"
					label="{{ phrase('user_is_not_member_of_any_of_selected_user_groups:') }}">

					<xf:select name="user_criteria[not_user_groups][data][user_group_ids]" size="4" multiple="true" value="{$criteria.not_user_groups.user_group_ids}">
						<xf:foreach loop="$data.userGroups" key="$userGroupId" value="$userGroupTitle">
							<xf:option value="{$userGroupId}">{$userGroupTitle}</xf:option>
						</xf:foreach>
					</xf:select>

				</xf:option>
			</xf:checkboxrow>

			<hr class="formRowSep" />

			<!--[XF:user:after_groups]-->

			<xf:checkboxrow label="{{ phrase('content_and_achievements') }}">
				<!--[XF:user:content_top]-->

				<xf:option name="user_criteria[messages_posted][rule]" value="messages_posted" selected="{$criteria.messages_posted}"
					label="{{ phrase('user_has_posted_at_least_x_messages:') }}">
					<xf:numberbox name="user_criteria[messages_posted][data][messages]" value="{$criteria.messages_posted.messages}"
						size="5" min="0" step="1" />
				</xf:option>

				<xf:option name="user_criteria[messages_maximum][rule]" value="messages_maximum" selected="{$criteria.messages_maximum}"
					label="{{ phrase('user_has_posted_no_more_than_x_messages:') }}">
					<xf:numberbox name="user_criteria[messages_maximum][data][messages]" value="{$criteria.messages_maximum.messages}"
						size="5" min="0" step="1" />
				</xf:option>

				<!--[XF:user:content_after_messages]-->

				<xf:option name="user_criteria[reaction_score][rule]" value="reaction_score" selected="{$criteria.reaction_score}"
					label="{{ phrase('user_has_received_a_reaction_sore_of_at_least_x:') }}">
					<xf:numberbox name="user_criteria[reaction_score][data][reactions]" value="{$criteria.reaction_score.reactions}"
						size="5" min="0" step="1" />
				</xf:option>

				<xf:option name="user_criteria[reaction_ratio][rule]" value="reaction_ratio" selected="{$criteria.reaction_ratio}"
					label="{{ phrase('user_reaction_message_ratio_is_at_least:') }}">
					<xf:numberbox name="user_criteria[reaction_ratio][data][ratio]" value="{$criteria.reaction_ratio.ratio}"
						size="5" min="0" step="0.25" />
					<xf:afterhint>{{ phrase('reaction_message_ratio_explanation') }}</xf:afterhint>
				</xf:option>

				<!--[XF:user:content_after_reactions]-->

				<xf:option name="user_criteria[trophy_points][rule]" value="trophy_points" selected="{$criteria.trophy_points}"
					label="{{ phrase('user_has_at_least_x_trophy_points:') }}">
					<xf:numberbox name="user_criteria[trophy_points][data][points]" value="{$criteria.trophy_points.points}"
						size="5" min="0" step="1" />
				</xf:option>

				<!--[XF:user:content_after_trophies]-->

				<xf:option name="user_criteria[registered_days][rule]" value="registered_days" selected="{$criteria.registered_days}"
					label="{{ phrase('user_has_been_registered_for_at_least_x_days:') }}">
					<xf:numberbox name="user_criteria[registered_days][data][days]" value="{$criteria.registered_days.days}"
						size="5" min="0" step="1" />
				</xf:option>

				<xf:option name="user_criteria[inactive_days][rule]" value="inactive_days" selected="{$criteria.inactive_days}"
					label="{{ phrase('user_has_not_visited_for_at_least_x_days:') }}">
					<xf:numberbox name="user_criteria[inactive_days][data][days]" value="{$criteria.inactive_days.days}"
						size="5" min="0" step="1" />
				</xf:option>

				<!--[XF:user:content_bottom]-->
			</xf:checkboxrow>

			<hr class="formRowSep" />

			<!--[XF:user:after_content]-->

			<xf:checkboxrow label="{{ phrase('user_profile_and_options') }}">
				<!--[XF:user:profile_top]-->

				<xf:option name="user_criteria[language][rule]" value="language" selected="{$criteria.language}"
					label="{{ phrase('user_is_browsing_with_following_language:') }}">

					<xf:select name="user_criteria[language][data][language_id]" value="{$criteria.language.language_id}">
						<xf:foreach loop="$data.languageTree.getFlattened(0)" value="$treeEntry">
							<xf:option value="{$treeEntry.record.language_id}">{{ repeat('--', $treeEntry.depth) }} {$treeEntry.record.title}</xf:option>
						</xf:foreach>
					</xf:select>

				</xf:option>

				<xf:optgroup label="{{ phrase('avatar:') }}">
					<xf:option name="user_criteria[has_avatar][rule]" value="has_avatar" selected="{$criteria.has_avatar}"
						label="{{ phrase('user_has_avatar') }}" />

					<xf:option name="user_criteria[no_avatar][rule]" value="no_avatar" selected="{$criteria.no_avatar}"
						label="{{ phrase('user_has_no_avatar') }}" />
				</xf:optgroup>

				<xf:optgroup label="{{ phrase('high_resolution_avatar:') }}">
					<xf:option name="user_criteria[has_highdpi_avatar][rule]" value="has_highdpi_avatar" selected="{$criteria.has_highdpi_avatar}"
						label="{{ phrase('user_has_highdpi_avatar') }}" />

					<xf:option name="user_criteria[no_highdpi_avatar][rule]" value="no_highdpi_avatar" selected="{$criteria.no_highdpi_avatar}"
						label="{{ phrase('user_has_no_highdpi_avatar') }}" />
				</xf:optgroup>

				<xf:optgroup label="{{ phrase('two_step_verification:') }}">
					<xf:option name="user_criteria[with_tfa][rule]" value="with_tfa" selected="{$criteria.with_tfa}"
						label="{{ phrase('user_has_enabled_two_step_verification') }}" />

					<xf:option name="user_criteria[without_tfa][rule]" value="without_tfa" selected="{$criteria.without_tfa}"
						label="{{ phrase('user_has_not_enabled_two_step_verification') }}"/>
				</xf:optgroup>

				<!--[XF:user:profile_bottom]-->
			</xf:checkboxrow>

			<hr class="formRowSep" />

			<!--[XF:user:after_profile]-->

			<xf:checkboxrow label="{{ phrase('specific_users') }}">
				<!--[XF:user:specific_top]-->

				<xf:option name="user_criteria[username][rule]" value="username" selected="{$criteria.username}"
					label="{{ phrase('username_is:') }}">
					<xf:textbox name="user_criteria[username][data][names]" value="{$criteria.username.names}" ac="true" />
					<xf:afterhint>{{ phrase('username_criteria_explain') }}</xf:afterhint>

				</xf:option>

				<xf:option name="user_criteria[username_search][rule]" value="username_search" selected="{$criteria.username_search}"
					label="{{ phrase('username_contains:') }}">
					<xf:textbox name="user_criteria[username_search][data][needles]" value="{$criteria.username_search.needles}" />
					<xf:afterhint>{{ phrase('username_search_criteria_explain') }}</xf:afterhint>
				</xf:option>

				<xf:option name="user_criteria[email_search][rule]" value="email_search" selected="{$criteria.email_search}"
					label="{{ phrase('email_address_contains:') }}">
					<xf:textbox name="user_criteria[email_search][data][needles]" value="{$criteria.email_search.needles}" />
					<xf:afterhint>{{ phrase('email_search_criteria_explain') }}</xf:afterhint>
				</xf:option>

				<!--[XF:user:specific_bottom]-->
			</xf:checkboxrow>

			<!--[XF:user:bottom]-->
		</li>

		<li class="{{ $active == 'user_field' ? 'is-active' : '' }}" role="tabpanel" id="{{ unique_id('criteriaUserField') }}">
			<xf:if contentcheck="true">
				<xf:contentcheck>
					<xf:foreach loop="$xf.app.em.getRepository('XF:UserField').getDisplayGroups()" key="$fieldGroup" value="$groupPhrase">

						<xf:set var="$customFields" value="{$app.getCustomFields('users', $fieldGroup)}" />
						<xf:if contentcheck="true">
							<h2 class="block-formSectionHeader"><span class="block-formSectionHeader-aligner">{$groupPhrase}</span></h2>
							<xf:contentcheck>
								<xf:foreach loop="$customFields" key="$fieldId" value="$fieldDefinition">
									<xf:set var="$fieldName" value="user_field_{$fieldId}" />
									<xf:set var="$choices" value="{$fieldDefinition.field_choices}" />
									<xf:checkboxrow label="{$fieldDefinition.title}">
										<xf:option name="user_criteria[{$fieldName}][rule]" value="{$fieldName}" selected="{$criteria.{$fieldName}}"
											label="{{ $choices ? phrase('criteria_userfield_choice_among') : phrase('criteria_userfield_contains_text:') }}">
											<xf:dependent>
												<xf:if is="!{$choices}">
													<xf:textbox name="user_criteria[{$fieldName}][data][text]" value="{$criteria.{$fieldName}.text}" />
												<xf:elseif is="{{ count($choices) }} > 6" />
													<xf:select name="user_criteria[{$fieldName}][data][choices]" value="{$criteria.{$fieldName}.choices}" multiple="multiple" size="5">
														<xf:options source="{$choices}" />
													</xf:select>
												<xf:else />
													<xf:checkbox name="user_criteria[{$fieldName}][data][choices]" value="{$criteria.{$fieldName}.choices}" listclass="listColumns">
														<xf:options source="{$choices}" />
													</xf:checkbox>
												</xf:if>
											</xf:dependent>
										</xf:option>
									</xf:checkboxrow>
								</xf:foreach>
							</xf:contentcheck>
						</xf:if>

					</xf:foreach>
				</xf:contentcheck>
			<xf:else />
				{{ phrase('no_custom_fields_have_been_created_yet') }}
			</xf:if>
		</li>
	</xf:set>

	<xf:if is="$container">
		<ul class="tabPanes">
			{$panes|raw}
		</ul>
	<xf:else />
		{$panes|raw}
	</xf:if>
</xf:macro>

<xf:macro name="page_panes" arg-container="" arg-active="" arg-criteria="!" arg-data="!">

	<xf:set var="$em" value="{$xf.app.em}" />
	<xf:set var="$visitor" value="{$xf.visitor}" />

	<xf:set var="$panes">
		<li class="{{ $active == 'page' ? ' is-active' : '' }}" role="tabpanel" id="{{ unique_id('criteriaPage') }}">

			<xf:checkboxrow>
				<xf:option label="{{ phrase('user_referred_from_search') }}" name="page_criteria[from_search][rule]" value="from_search" selected="{$criteria.from_search}" />
			</xf:checkboxrow>

			<hr class="formRowSep" />

			<!--[XF:page:after_from_search]-->

			<xf:checkboxrow>
				<xf:option name="page_criteria[after][rule]" value="after" selected="{$criteria.after}"
					label="{{ phrase('criteria_date_time_is_after:') }}">

					<xf:dependent>
						<div class="inputGroup">
							<xf:dateinput name="page_criteria[after][data][ymd]" value="{$criteria.after.ymd}" />
							<span class="inputGroup-text">
								{{ phrase('criteria_time:') }}
							</span>
							<span class="inputGroup" dir="ltr">
								<xf:select name="page_criteria[after][data][hh]" value="{$criteria.after.hh}" class="input--inline input--autoSize">
									<xf:foreach loop="$data.hours" value="$hour">
										<xf:option value="{$hour}" label="{$hour}" />
									</xf:foreach>
								</xf:select>
								<span class="inputGroup-text">:</span>
								<xf:select name="page_criteria[after][data][mm]" value="{$criteria.after.mm}" class="input--inline input--autoSize">
									<xf:foreach loop="$data.minutes" value="$minute">
										<xf:option value="{$minute}" label="{$minute}" />
									</xf:foreach>
								</xf:select>
							</span>
						</div>
						<dfn class="inputChoices-explain inputChoices-explain--after">{{ phrase('criteria_leave_date_empty') }}</dfn>
					</xf:dependent>

					<xf:radio name="page_criteria[after][data][user_tz]" value="{{ $criteria.after.user_tz ? $criteria.after.user_tz : 0 }}">
						<xf:option value="1" label="{{ phrase('criteria_in_visitor_timezone') }}" />
						<xf:option value="0" label="{{ phrase('criteria_in_selected_timezone:') }}">
							<xf:select name="page_criteria[after][data][timezone]" value="{{ $criteria.after.timezone ? $criteria.after.timezone : $visitor.timezone }}">
								<xf:options source="{$data.timeZones}" />
							</xf:select>
						</xf:option>
					</xf:radio>
				</xf:option>
			</xf:checkboxrow>

			<hr class="formRowSep" />

			<!--[XF:page:after_time_after]-->

			<xf:checkboxrow>
				<xf:option name="page_criteria[before][rule]" value="before" selected="{$criteria.before}"
					label="{{ phrase('criteria_date_time_is_before:') }}">

					<xf:dependent>
						<div class="inputGroup">
							<xf:dateinput name="page_criteria[before][data][ymd]" value="{$criteria.before.ymd}" />
							<span class="inputGroup-text">
								{{ phrase('criteria_time:') }}
							</span>
							<span class="inputGroup" dir="ltr">
								<xf:select name="page_criteria[before][data][hh]" value="{$criteria.before.hh}" class="input--inline input--autoSize">
									<xf:foreach loop="$data.hours" value="$hour">
										<xf:option value="{$hour}" label="{$hour}" />
									</xf:foreach>
								</xf:select>
								<span class="inputGroup-text">:</span>
								<xf:select name="page_criteria[before][data][mm]" value="{$criteria.before.mm}" class="input--inline input--autoSize">
									<xf:foreach loop="$data.minutes" value="$minute">
										<xf:option value="{$minute}" label="{$minute}" />
									</xf:foreach>
								</xf:select>
							</span>
						</div>
						<dfn class="inputChoices-explain inputChoices-explain--before">{{ phrase('criteria_leave_date_empty') }}</dfn>
					</xf:dependent>

					<xf:radio name="page_criteria[before][data][user_tz]" value="{{ $criteria.before.user_tz ? $criteria.before.user_tz : 0 }}">
						<xf:option value="1" label="{{ phrase('criteria_in_visitor_timezone') }}" />
						<xf:option value="0" label="{{ phrase('criteria_in_selected_timezone:') }}">
							<xf:select name="page_criteria[before][data][timezone]" value="{{ $criteria.before.timezone ? $criteria.before.timezone : $visitor.timezone }}">
								<xf:options source="{$data.timeZones}" />
							</xf:select>
						</xf:option>
					</xf:radio>

				</xf:option>
			</xf:checkboxrow>

			<hr class="formRowSep" />

			<!--[XF:page:after_time_before]-->

			<xf:checkboxrow label="{{ phrase('nodes') }}">
				<xf:option name="page_criteria[nodes][rule]" value="nodes" selected="{$criteria.nodes}"
					label="{{ phrase('page_is_within_nodes:') }}">

					<xf:select name="page_criteria[nodes][data][node_ids]" multiple="true" value="{$criteria.nodes.node_ids}">
						<xf:foreach loop="$data.nodes" value="$option">
							<xf:option value="{$option.value}" label="{$option.label}" />
						</xf:foreach>
					</xf:select>
					<xf:checkbox>
						<xf:option name="page_criteria[nodes][data][node_only]" value="1" selected="{$criteria.nodes.node_only}"
							label="{{ phrase('only_display_within_selected_nodes_no_children') }}" />
					</xf:checkbox>

				</xf:option>
			</xf:checkboxrow>

			<hr class="formRowSep" />

			<!--[XF:page:after_nodes]-->

			<xf:checkboxrow label="{{ phrase('page_information') }}">
				<xf:option name="page_criteria[style][rule]" value="style" selected="{$criteria.style}"
					label="{{ phrase('user_is_browsing_with_following_style:') }}">

					<xf:select name="page_criteria[style][data][style_id]" value="{$criteria.style.style_id}">
						<xf:foreach loop="$data.styleTree.getFlattened(0)" value="$treeEntry">
							<xf:option value="{$treeEntry.record.style_id}">{{ repeat('--', $treeEntry.depth) }} {$treeEntry.record.title}</xf:option>
						</xf:foreach>
					</xf:select>

				</xf:option>

				<xf:option name="page_criteria[tab][rule]" value="tab" selected="{$criteria.tab}"
					label="{{ phrase('selected_navigation_tab_id_is:') }}">

					<xf:textbox name="page_criteria[tab][data][id]" value="{$criteria.tab.id}"dir="ltr" />
					<xf:afterhint>{{ phrase('selected_tab_criteria_explain') }}</xf:afterhint>
				</xf:option>

				<xf:option name="page_criteria[controller][rule]" value="controller" selected="{$criteria.controller}"
					label="{{ phrase('controller_and_action_is:') }}">

					<xf:macro template="helper_callback_fields" name="callback_fields"
						arg-className="page_criteria[controller][data][name]"
						arg-methodName="page_criteria[controller][data][action]"
						arg-classValue="{$criteria.controller.name}"
						arg-methodValue="{$criteria.controller.action}" />
					<xf:afterhint>{{ phrase('controller_and_action_criteria_explain') }}</xf:afterhint>
				</xf:option>

				<xf:option name="page_criteria[view][rule]" value="view" selected="{$criteria.view}"
					label="{{ phrase('view_class_is:') }}">

					<xf:textbox name="page_criteria[view][data][name]" value="{$criteria.view.name}" dir="ltr" />
					<xf:afterhint>{{ phrase('view_class_criteria_explain') }}</xf:afterhint>
				</xf:option>

				<xf:option name="page_criteria[template][rule]" value="template" selected="{$criteria.template}"
					label="{{ phrase('content_template_is:') }}">

					<xf:textbox name="page_criteria[template][data][name]" value="{$criteria.template.name}" dir="ltr" />
					<xf:afterhint>{{ phrase('content_template_criteria_explain') }}</xf:afterhint>
				</xf:option>
			</xf:checkboxrow>

			<!--[XF:page:after_page_info]-->
		</li>
	</xf:set>

	<xf:if is="$container">
		<ul class="tabPanes">
			{$panes|raw}
		</ul>
	<xf:else />
		{$panes|raw}
	</xf:if>
</xf:macro>]]></template>
  <template type="admin" title="helper_js_global" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:macro name="body" arg-jsState="{{ null }}">
	<xf:macro template="public:helper_js_global" name="body" arg-app="admin" arg-jsState="{$jsState}" />
	<xf:js src="xf/admin.js" min="1" />
	<script>
		jQuery.extend(true, XF.config, {
			job: {
				manualUrl: "{{ link('tools/run-job')|escape('js') }}"
			},
			visitorCounts: null
		});
		jQuery.extend(XF.phrases, {
			cancel: "{{ phrase('cancel')|escape('js') }}",
			cancelling: "{{ phrase('cancelling')|escape('js') }}",
			no_items_matched_your_filter: "{{ phrase('no_items_matched_your_filter')|escape('js') }}"
		});
	</script>
</xf:macro>]]></template>
  <template type="admin" title="helper_node_delete_children" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro name="delete_row" arg-node="!" arg-nodeTree="!">
	<xf:if is="$node.hasChildren()">
		<xf:radiorow name="child_nodes_action">
			<xf:option value="move" selected="true">{{ phrase('attach_this_nodes_children_to_its_parent') }}</xf:option>
			<xf:option value="delete">{{ phrase('delete_this_nodes_children') }}</xf:option>
		</xf:radiorow>
	</xf:if>
</xf:macro>]]></template>
  <template type="admin" title="helper_thread_search_criteria" version_id="2010131" version_string="2.1.1 Beta 1"><![CDATA[<hr class="formRowSep" />

<xf:textboxrow name="criteria[title]" value="{$criteria.title}" type="search"
	label="{{ phrase('title') }}" />

<xf:macro template="public:prefix_macros" name="row"
	arg-includeAny="{{ true }}"
	arg-prefixes="{$prefixes.prefixesGrouped}"
	arg-selected="{$criteria.prefix_id}"
	arg-name="criteria[prefix_id]"
	arg-type="thread"
	arg-multiple="{{ true }}" />

<xf:selectrow name="criteria[node_id]" value="{$criteria.node_id}" multiple="true"
	label="{{ phrase('forum') }}">

	<xf:option value="0" label="{{ phrase('(any)') }}" />
	<xf:foreach loop="$forums" value="$forum">
		<xf:option value="{$forum.value}" disabled="{$forum.disabled}">{$forum.label}</xf:option>
	</xf:foreach>
</xf:selectrow>

<xf:textboxrow name="criteria[username]" value="{$criteria.username}" type="search"
	label="{{ phrase('created_by') }}" />

<hr class="formRowSep" />

<xf:formrow rowtype="input"
	label="{{ phrase('created_between') }}">
	<div class="inputGroup">
		<xf:dateinput name="criteria[post_date][start]" value="{$criteria.post_date.start}" size="15" />
		<span class="inputGroup-text">-</span>
		<xf:dateinput name="criteria[post_date][end]" value="{$criteria.post_date.end}" size="15" />
	</div>
</xf:formrow>

<xf:formrow rowtype="input"
	label="{{ phrase('last_post_between') }}">
	<div class="inputGroup">
		<xf:dateinput name="criteria[last_post_date][start]" value="{$criteria.last_post_date.start}" size="15" />
		<span class="inputGroup-text">-</span>
		<xf:dateinput name="criteria[last_post_date][end]" value="{$criteria.last_post_date.end}" size="15" />
	</div>
</xf:formrow>

<xf:formrow rowtype="input"
	label="{{ phrase('reply_count_between') }}"
	explain="{{ phrase('use_negative_one_specify_no_max') }}">
	<div class="inputGroup">
		<xf:numberbox name="criteria[reply_count][start]" value="{$criteria.reply_count.start}" size="5" min="0" />
		<span class="inputGroup-text">-</span>
		<xf:numberbox name="criteria[reply_count][end]" value="{$criteria.reply_count.end}" size="5" min="-1" />
	</div>
</xf:formrow>

<xf:formrow rowtype="input"
	label="{{ phrase('first_post_reaction_score_between') }}">
	<div class="inputGroup">
		<xf:numberbox name="criteria[first_post_reaction_score][start]" value="{$criteria.first_post_reaction_score.start}" size="5" step="any" />
		<span class="inputGroup-text">-</span>
		<xf:numberbox name="criteria[first_post_reaction_score][end]" value="{$criteria.first_post_reaction_score.end}" size="5" step="any" />
	</div>
</xf:formrow>

<xf:formrow rowtype="input"
	label="{{ phrase('view_count_between') }}"
	explain="{{ phrase('use_negative_one_specify_no_max') }}">
	<div class="inputGroup">
		<xf:numberbox name="criteria[view_count][start]" value="{$criteria.view_count.start}" size="5" min="0" />
		<span class="inputGroup-text">-</span>
		<xf:numberbox name="criteria[view_count][end]" value="{$criteria.view_count.end}" size="5" min="-1" />
	</div>
</xf:formrow>

<hr class="formRowSep" />

<xf:checkboxrow name="criteria[discussion_state]"
	label="{{ phrase('state') }}">
	<xf:option value="visible" selected="in_array('visible', $criteria.discussion_state)">{{ phrase('visible') }}</xf:option>
	<xf:option value="deleted" selected="in_array('deleted', $criteria.discussion_state)">{{ phrase('deleted') }}</xf:option>
	<xf:option value="moderated" selected="in_array('moderated', $criteria.discussion_state)">{{ phrase('moderated') }}</xf:option>
</xf:checkboxrow>

<xf:checkboxrow name="criteria[discussion_open]"
	label="{{ phrase('locked') }}">
	<xf:option value="1" selected="in_array(1, $criteria.discussion_open)">{{ phrase('unlocked') }}</xf:option>
	<xf:option value="0" selected="in_array(0, $criteria.discussion_open)">{{ phrase('locked') }}</xf:option>
</xf:checkboxrow>

<xf:checkboxrow name="criteria[sticky]"
	label="{{ phrase('sticky') }}">
	<xf:option value="0" selected="in_array(0, $criteria.sticky)">{{ phrase('not_sticky') }}</xf:option>
	<xf:option value="1" selected="in_array(1, $criteria.sticky)">{{ phrase('sticky') }}</xf:option>
</xf:checkboxrow>

<xf:if contentcheck="true">
	<hr class="formRowSep" />
	<xf:contentcheck>
		<xf:foreach loop="$xf.app.em.getRepository('XF:ThreadField').getDisplayGroups()" key="$fieldGroup" value="$phrase">
			<xf:set var="$customFields" value="{$xf.app.getCustomFields('threads', $fieldGroup)}" />
			<xf:if contentcheck="true">
				<xf:contentcheck>
					<xf:foreach loop="$customFields" key="$fieldId" value="$fieldDefinition">
						<xf:set var="$choices" value="{$fieldDefinition.field_choices}" />
						<xf:set var="$fieldName" value="criteria[thread_field]{{ ($choices && $fieldDefinition.type_group != 'multiple') ? '[exact]' : '' }}[{$fieldId}]" />
						<xf:formrow rowtype="input"
							label="{$fieldDefinition.title}">
							<xf:if is="!{$choices}">
								<xf:textbox name="{$fieldName}" value="{$criteria.{$fieldName}.text}" />
							<xf:else />
								<xf:checkbox name="{$fieldName}" value="{$criteria.custom.{$fieldId}}" listclass="listColumns">
									<xf:foreach loop="$choices" key="$val" value="$choice">
										<xf:option value="{{ $fieldDefinition.type_group == 'multiple' ? 's:' . strlen($val) . ':"' . $val . '"' : $val }}" label="{$choice}" />
									</xf:foreach>
								</xf:checkbox>
							</xf:if>
						</xf:formrow>
					</xf:foreach>
				</xf:contentcheck>
			</xf:if>
		</xf:foreach>
	</xf:contentcheck>
</xf:if>]]></template>
  <template type="admin" title="helper_user_group_edit" version_id="2000034" version_string="2.0.0 Beta 4"><![CDATA[<xf:macro name="checkboxes"
	arg-label="{{ phrase('usable_by_user_groups') }}"
	arg-id="usable_user_group"
	arg-userGroups=""
	arg-selectedUserGroups="!"
	arg-withRow="1">

	<xf:if is="!$userGroups">
		<xf:set var="$userGroupRepo" value="{$xf.app.em.getRepository('XF:UserGroup')}" />
		<xf:set var="$userGroups" value="{$userGroupRepo.getUserGroupTitlePairs()}" />
	</xf:if>
	<xf:set var="$allUserGroups" value="{{ array_keys($userGroups) == $selectedUserGroups || in_array('-1', $selectedUserGroups) }}" />

	<xf:set var="$inner">
		<xf:radio name="{$id}" id="{$id}">
			<xf:option value="all" selected="{$allUserGroups}">{{ phrase('all_user_groups') }}</xf:option>
			<xf:option value="sel" selected="!{$allUserGroups}" label="{{ phrase('selected_user_groups:') }}">
				<xf:dependent>
					<xf:checkbox name="{{ $id . '_ids' }}" listclass="listColumns">
						<xf:foreach loop="$userGroups" key="$userGroupId" value="$userGroupTitle">
							<xf:option value="{$userGroupId}" selected="{{ in_array($userGroupId, $selectedUserGroups) || $allUserGroups  }}">
								{$userGroupTitle}
							</xf:option>
						</xf:foreach>
					</xf:checkbox>

					<xf:checkbox>
						<xf:option data-xf-init="check-all" data-container="{{ '#' . $id }}">{{ phrase('select_all') }}</xf:option>
					</xf:checkbox>
				</xf:dependent>
			</xf:option>
		</xf:radio>
	</xf:set>

	<xf:if is="$withRow">
		<xf:formrow label="{$label}" name="{$id}" id="{$id}">
			{$inner|raw}
		</xf:formrow>
	<xf:else />
		{$inner|raw}
	</xf:if>
</xf:macro>]]></template>
  <template type="admin" title="helper_user_search_criteria" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:if is="!$noSpecificUser">
	<xf:textboxrow name="criteria[username]" value="{$criteria.username}" readonly="{$readOnly}"
		label="{{ phrase('user_name') }}" />

	<xf:textboxrow name="criteria[email]" value="{$criteria.email}"
		label="{{ phrase('email') }}" />
</xf:if>

<hr class="formRowSep" />

<xf:if is="!{$readOnly}">
	<xf:selectrow name="criteria[user_group_id]" value="{$criteria.user_group_id}"
		label="{{ phrase('primary_user_group') }}">

		<xf:option>{{ phrase('(any)') }}</xf:option>
		<xf:foreach loop="$userGroups" value="$userGroup">
			<xf:option value="{$userGroup.user_group_id}">{$userGroup.title}</xf:option>
		</xf:foreach>
	</xf:selectrow>
<xf:else />
	<xf:formrow label="{{ phrase('primary_user_group') }}">

		<xf:if is="{$userGroups.{$criteria_user_group_id}.title}">
			{$userGroups.{$criteria_user_group_id}.title}
		<xf:else />
			{{ phrase('(any)') }}
		</xf:if>
	</xf:formrow>
	<xf:hiddenval name="criteria[user_group_id]">{$criteria.user_group_id}</xf:hiddenval>
</xf:if>

<xf:radiorow name="criteria[no_secondary_group_ids]" value="{$criteria.no_secondary_group_ids}" readonly="{$readOnly}"
	label="{{ phrase('secondary_user_groups') }}">

	<xf:option value="1">{{ phrase('member_of_no_secondary_groups') }}</xf:option>
	<xf:option value="0" label="{{ phrase('member_of_any_of_these_secondary_groups') }}">
		<xf:checkbox name="criteria[secondary_group_ids]" value="{$criteria.secondary_group_ids}" listclass="listColumns" readonly="{$readOnly}">
			<xf:foreach loop="$userGroups" value="$userGroup">
				<xf:option value="{$userGroup.user_group_id}">{$userGroup.title}</xf:option>
			</xf:foreach>
		</xf:checkbox>
	</xf:option>
</xf:radiorow>

<xf:checkboxrow name="criteria[not_secondary_group_ids]" value="{$criteria.not_secondary_group_ids}" listclass="listColumns" readonly="{$readOnly}"
	label="{{ phrase('not_in_secondary_groups') }}">

	<xf:foreach loop="$userGroups" value="$userGroup">
		<xf:option value="{$userGroup.user_group_id}">{$userGroup.title}</xf:option>
	</xf:foreach>
</xf:checkboxrow>

<hr class="formRowSep" />

<xf:formrow rowtype="input"
	label="{{ phrase('registered_between') }}">

	<div class="inputGroup">
		<xf:dateinput name="criteria[register_date][start]" value="{$criteria.register_date.start}" size="15" readonly="{$readOnly}" />
		<span class="inputGroup-text">-</span>
		<xf:dateinput name="criteria[register_date][end]" value="{$criteria.register_date.end}" size="15" readonly="{$readOnly}" />
	</div>
</xf:formrow>

<xf:formrow rowtype="input"
	label="{{ phrase('last_visited_between') }}"
	explain="{{ phrase('visits_in_last_hour_may_not_be_considered') }}">

	<div class="inputGroup">
		<xf:dateinput name="criteria[last_activity][start]" value="{$criteria.last_activity.start}" size="15" readonly="{$readOnly}" />
		<span class="inputGroup-text">-</span>
		<xf:dateinput name="criteria[last_activity][end]" value="{$criteria.last_activity.end}" size="15" readonly="{$readOnly}" />
	</div>
</xf:formrow>

<xf:formrow rowtype="input"
	label="{{ phrase('message_count_between') }}"
	explain="{{ phrase('use_negative_one_specify_no_max') }}">

	<div class="inputGroup">
		<xf:numberbox name="criteria[message_count][start]" value="{$criteria.message_count.start}" min="0" readonly="{$readOnly}" />
		<span class="inputGroup-text">-</span>
		<xf:numberbox name="criteria[message_count][end]" value="{$criteria.message_count.end}" min="-1" readonly="{$readOnly}" />
	</div>
</xf:formrow>

<xf:formrow rowtype="input"
	label="{{ phrase('trophy_points_between') }}"
	explain="{{ phrase('use_negative_one_specify_no_max') }}">

	<div class="inputGroup">
		<xf:numberbox name="criteria[trophy_points][start]" value="{$criteria.trophy_points.start}" min="0" readonly="{$readOnly}" />
		<span class="inputGroup-text">-</span>
		<xf:numberbox name="criteria[trophy_points][end]" value="{$criteria.trophy_points.end}" min="-1" readonly="{$readOnly}" />
	</div>
</xf:formrow>

<xf:formrow rowtype="input"
	label="{{ phrase('reaction_score_between') }}">
	<div class="inputGroup">
		<xf:numberbox name="criteria[reaction_score][start]" value="{$criteria.reaction_score.start}"
			readonly="{$readOnly}"/>
		<span class="inputGroup-text">-</span>
		<xf:numberbox name="criteria[reaction_score][end]" value="{$criteria.reaction_score.end}"
			readonly="{$readOnly}"/>
	</div>
</xf:formrow>

<hr class="formRowSep" />

<xf:checkboxrow name="criteria[user_state]" readonly="{$readOnly}"
	label="{{ phrase('user_state') }}">

	<xf:option value="valid" selected="in_array('valid', $criteria.user_state)">{{ phrase('valid') }}</xf:option>
	<xf:option value="email_confirm" selected="in_array('email_confirm', $criteria.user_state)">{{ phrase('awaiting_email_confirmation') }}</xf:option>
	<xf:option value="email_confirm_edit" selected="in_array('email_confirm_edit', $criteria.user_state)">{{ phrase('awaiting_email_confirmation_from_edit') }}</xf:option>
	<xf:option value="email_bounce" selected="in_array('email_bounce', $criteria.user_state)">{{ phrase('email_invalid_bounced') }}</xf:option>
	<xf:option value="moderated" selected="in_array('moderated', $criteria.user_state)">{{ phrase('awaiting_moderation') }}</xf:option>
	<xf:option value="rejected" selected="in_array('rejected', $criteria.user_state)">{{ phrase('rejected') }}</xf:option>
	<xf:option value="disabled" selected="in_array('disabled', $criteria.user_state)">{{ phrase('disabled') }}</xf:option>
</xf:checkboxrow>

<xf:checkboxrow name="criteria[is_banned]" readonly="{$readOnly}"
	label="{{ phrase('banned_state') }}">

	<xf:option value="0" selected="in_array(0, $criteria.is_banned)">{{ phrase('not_banned') }}</xf:option>
	<xf:option value="1" selected="in_array(1, $criteria.is_banned)">{{ phrase('banned') }}</xf:option>
</xf:checkboxrow>

<xf:checkboxrow name="criteria[Option][is_discouraged]" readonly="{$readOnly}"
	label="{{ phrase('discouragement_state') }}">

	<xf:option value="0" selected="in_array(0, $criteria.Option.is_discouraged)">{{ phrase('not_discouraged') }}</xf:option>
	<xf:option value="1" selected="in_array(1, $criteria.Option.is_discouraged)">{{ phrase('discouraged') }}</xf:option>
</xf:checkboxrow>

<xf:checkboxrow name="criteria[is_staff]" readonly="{$readOnly}"
	label="{{ phrase('staff_state') }}">

	<xf:option value="0" selected="in_array(0, $criteria.is_staff)">{{ phrase('not_staff_member') }}</xf:option>
	<xf:option value="1" selected="in_array(1, $criteria.is_staff)">{{ phrase('staff_member') }}</xf:option>
</xf:checkboxrow>

<xf:if contentcheck="true">
	<hr class="formRowSep" />
	<xf:contentcheck>
		<xf:foreach loop="$xf.app.em.getRepository('XF:UserField').getDisplayGroups()" key="$fieldGroup" value="$phrase">
			<xf:set var="$customFields" value="{$xf.app.getCustomFields('users', $fieldGroup)}" />
			<xf:if contentcheck="true">
				<xf:contentcheck>
					<xf:foreach loop="$customFields" key="$fieldId" value="$fieldDefinition">
						<xf:set var="$choices" value="{$fieldDefinition.field_choices}" />
						<xf:set var="$fieldName" value="criteria[user_field]{{ ($choices && $fieldDefinition.type_group != 'multiple') ? '[exact]' : '' }}[{$fieldId}]" />
						<xf:formrow rowtype="{{ $choices ? '' : 'input' }}"
							label="{$fieldDefinition.title}">

							<xf:if is="!{$choices}">
								<xf:textbox name="{$fieldName}" value="{$criteria.user_field.{$fieldId}}" readonly="{$readOnly}" />
							<xf:else />
								<xf:checkbox name="{$fieldName}" value="{$criteria.user_field.exact.{$fieldId}}" listclass="listColumns" readonly="{$readOnly}">
									<xf:foreach loop="$choices" key="$val" value="$choice">
										<xf:option value="{{ $fieldDefinition.type_group == 'multiple' ? 's:' . strlen($val) . ':"' . $val . '"' : $val }}" label="{$choice}" />
									</xf:foreach>
								</xf:checkbox>
							</xf:if>

						</xf:formrow>
					</xf:foreach>
				</xf:contentcheck>
			</xf:if>
		</xf:foreach>
	</xf:contentcheck>
</xf:if>]]></template>
  <template type="admin" title="import_complete" version_id="2000036" version_string="2.0.0 Beta 6"><![CDATA[<xf:title>{{ phrase('import_complete') }}</xf:title>

<xf:form action="{{ link('import/complete') }}" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow>
				{{ phrase('your_import_is_now_complete_and_necessary_caches_have_been_rebuilt') }}
			</xf:inforow>
			<xf:macro template="import_finalize" name="notes" arg-notes="{$notes}" />
		</div>
		<xf:submitrow submit="{{ phrase('complete_import') }}" sticky="true" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="import_config" version_id="2000170" version_string="2.0.1"><![CDATA[<xf:title>{{ phrase('configure_importer:') }} {$title}</xf:title>

<xf:if is="$importer.isBeta()">
	<div class="blockMessage blockMessage--important">
		{{ phrase('this_importer_is_currently_in_beta_and_could_contain_bugs') }}
	</div>
</xf:if>

<xf:form action="{{ link('import/config') }}" class="block js-importConfigForm"
	ajax="true" data-replace=".js-importConfigForm">

	<div class="block-container">
		<div class="block-body">
			<xf:if contentcheck="true">
				<xf:contentcheck>
					{{ $importer.renderBaseConfigOptions(vars())|raw }}
				</xf:contentcheck>
			<xf:else />
				<div class="block-row">{{ phrase('no_configuration_necessary') }}</div>
				<xf:hiddenval name="config[]" />
			</xf:if>
		</div>
		<xf:submitrow submit="{{ phrase('continue...') }}" />
	</div>
	<xf:hiddenval name="previous_config">{$baseConfig|json}</xf:hiddenval>
	<xf:hiddenval name="importer">{$importerId}</xf:hiddenval>
</xf:form>]]></template>
  <template type="admin" title="import_config_macros" version_id="2010131" version_string="2.1.1 Beta 1"><![CDATA[<xf:macro name="db_host"
	arg-value="localhost"
	arg-placeholder="{{ null }}"
	arg-explain="{{ null }}">

	<xf:macro name="db_textbox"
		arg-name="host"
		arg-label="{{ phrase('mysql_server') }}"
		arg-value="{$value}"
		arg-placeholder="{$placeholder}"
		arg-explain="{$explain}" />
</xf:macro>

<xf:macro name="db_dbname"
	arg-value="{{ null }}"
	arg-placeholder="{{ null }}"
	arg-explain="{{ null }}">

	<xf:macro name="db_textbox"
		arg-name="dbname"
		arg-label="{{ phrase('mysql_database_name') }}"
		arg-value="{$value}"
		arg-placeholder="{$placeholder}"
		arg-explain="{$explain}" />
</xf:macro>

<xf:macro name="db_username"
	arg-value="{{ null }}"
	arg-placeholder="{{ null }}"
	arg-explain="{{ null }}">

	<xf:macro name="db_textbox"
		arg-name="username"
		arg-label="{{ phrase('mysql_user_name') }}"
		arg-value="{$value}"
		arg-placeholder="{$placeholder}"
		arg-explain="{$explain}" />
</xf:macro>

<xf:macro name="db_password"
	arg-value="{{ null }}"
	arg-placeholder="{{ null }}"
	arg-explain="{{ null }}">

	<xf:macro name="db_textbox"
		arg-name="password"
		arg-label="{{ phrase('mysql_password') }}"
		arg-value="{$value}"
		arg-placeholder="{$placeholder}"
		arg-autocomplete="off"
		arg-explain="{$explain}" />
</xf:macro>

<xf:macro name="db_port"
	arg-value="3306"
	arg-placeholder="{{ null }}"
	arg-explain="{{ null }}">

	<xf:macro name="db_textbox"
		arg-name="port"
		arg-label="{{ phrase('mysql_port') }}"
		arg-value="{$value}"
		arg-placeholder="{$placeholder}"
		arg-explain="{$explain}" />
</xf:macro>

<xf:macro name="db_tablePrefix"
	arg-value="{{ null }}"
	arg-placeholder="{{ null }}"
	arg-explain="{{ null }}">

	<xf:macro name="db_textbox"
		arg-name="tablePrefix"
		arg-label="{{ phrase('mysql_table_prefix') }}"
		arg-value="{$value}"
		arg-placeholder="{$placeholder}"
		arg-explain="{$explain}" />
</xf:macro>

<xf:macro name="db_charset"
	arg-value="{{ null }}"
	arg-placeholder="{{ null }}"
	arg-explain="{{ phrase('mysql_force_charset_explain') }}">

	<xf:macro name="db_textbox"
		arg-name="charset"
		arg-label="{{ phrase('mysql_force_charset') }}"
		arg-value="{$value}"
		arg-placeholder="{$placeholder}"
		arg-explain="{$explain}" />
</xf:macro>

<xf:macro name="db_textbox"
	arg-name="!"
	arg-label="!"
	arg-value="{{ null }}"
	arg-placeholder="{{ null }}"
	arg-autocomplete="{{ null }}"
	arg-explain="{{ null }}">

	<xf:textboxrow name="config[db][{$name}]" value="{$value}" autocomplete="{$autocomplete}"
		placeholder="{$placeholder}"
		label="{$label}"
		explain="{$explain}" />
</xf:macro>]]></template>
  <template type="admin" title="import_config_xenforo_source" version_id="2010131" version_string="2.1.1 Beta 1"><![CDATA[<h3 class="block-formSectionHeader">{{ phrase('source_database_configuration') }}</h3>
<xf:if is="!$baseConfig.db.host">
	<xf:textboxrow name="config[db][host]" value="localhost"
		label="{{ phrase('mysql_server') }}"
		placeholder="$config['db']['host']" />
	<xf:textboxrow name="config[db][port]" value="3306"
		label="{{ phrase('mysql_port') }}"
		placeholder="$config['db']['port']" />
	<xf:textboxrow name="config[db][username]"
		label="{{ phrase('mysql_user_name') }}"
		placeholder="$config['db']['username']" />
	<xf:textboxrow name="config[db][password]" autocomplete="off"
		label="{{ phrase('mysql_password') }}"
		placeholder="$config['db']['password']" />
	<xf:textboxrow name="config[db][dbname]"
		label="{{ phrase('mysql_database_name') }}"
		placeholder="$config['db']['dbname']" />
<xf:else />
	<xf:formrow label="{{ phrase('mysql_server') }}">{$fullConfig.db.host}:{$fullConfig.db.dbname}</xf:formrow>
</xf:if>

<xf:if is="$requiresDataPath">
	<xf:if is="!$baseConfig.data_dir">
		<hr class="formRowSep" />

		<xf:textboxrow name="config[data_dir]"
			label="{{ phrase('data_directory') }}"
			placeholder="$config['externalDataPath']" />
	<xf:else />
		<xf:formrow label="{{ phrase('data_directory') }}">{$fullConfig.data_dir}</xf:formrow>
	</xf:if>
</xf:if>
<xf:if is="$requiresInternalDataPath">
	<xf:if is="!$baseConfig.internal_data_dir">
		<xf:textboxrow name="config[internal_data_dir]"
			label="{{ phrase('internal_data_directory') }}"
			placeholder="$config['internalDataPath']" />
	<xf:else />
		<xf:formrow label="{{ phrase('internal_data_directory') }}">{$fullConfig.internal_data_dir}</xf:formrow>
	</xf:if>
</xf:if>
<xf:if is="$requiresForumImportLog">
	<xf:if is="!$baseConfig.forum_import_log">
		<xf:textboxrow name="config[forum_import_log]" label="{{ phrase('forum_import_log') }}">
			<xf:explain>
				{{ phrase('you_must_provide_name_of_forum_import_log') }}
			</xf:explain>
		</xf:textboxrow>
	<xf:else />
		<xf:formrow label="{{ phrase('forum_import_log') }}">
			{$fullConfig.forum_import_log}
		</xf:formrow>
	</xf:if>
</xf:if>]]></template>
  <template type="admin" title="import_finalize" version_id="2000170" version_string="2.0.1"><![CDATA[<xf:title>{{ phrase('finalize_import') }}</xf:title>

<xf:form action="{{ link('import/finalize') }}" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow>
				{{ phrase('all_data_has_now_been_imported_last_step_is_to_finalize_import') }}
			</xf:inforow>
			<xf:macro name="notes" arg-notes="{$notes}" />
		</div>
		<xf:submitrow submit="{{ phrase('finalize_import') }}" sticky="true" />
	</div>
</xf:form>

<xf:macro name="notes" arg-notes="!">
	<xf:formrow label="{{ phrase('import_log_table') }}"
		explain="{{ phrase('this_table_contains_mappings_from_old_ids_to_new_ids') }}">
		{$notes.logTable}
	</xf:formrow>
	<xf:formrow label="{{ phrase('total_run_time') }}">
		<xf:if is="$notes.runTime > 3600">
			{{ phrase('x_hours', {'count': number($notes.runTime / 3600, 2)}) }}
		<xf:elseif is="$notes.runTime >= 120" />
			{{ phrase('x_minutes', {'count': number($notes.runTime / 60, 2)}) }}
		<xf:else />
			{{ phrase('x_seconds', {'count': number($notes.runTime)}) }}
		</xf:if>
	</xf:formrow>
	<xf:formrow label="{{ phrase('import_totals') }}">
		<xf:foreach loop="$notes.totals" value="$total">
			<dl class="pairs pairs--columns pairs--fixedSmall">
				<dt>{$total.title}</dt>
				<dd>
					{$total.total|number}
					<xf:if is="$total.total">
						<xf:if is="$total.time > 3600">
							{{ parens(phrase('x_hours_y_minutes', {
								'hours': number($total.time / 3600, 0),
								'minutes': number(($total.time / 60) % 60, 0)
							})) }}
						<xf:elseif is="$total.time >= 120" />
							{{ parens(phrase('x_minutes', {'count': number($total.time / 60, 2)})) }}
						<xf:else />
							{{ parens(phrase('x_seconds', {'count': number($total.time)})) }}
						</xf:if>
					</xf:if>
				</dd>
			</dl>
		</xf:foreach>
	</xf:formrow>
	<xf:if is="$notes.notes">
		<hr class="formRowSep" />

		<xf:foreach loop="$notes.notes" value="$noteSet">
			<xf:formrow label="{$noteSet.title}">
				<ul style="margin-top: 0; margin-bottom: 0">
				<xf:foreach loop="$noteSet.entries" value="$entry">
					<li>{$entry}</li>
				</xf:foreach>
				</ul>
			</xf:formrow>
		</xf:foreach>
	</xf:if>
</xf:macro>]]></template>
  <template type="admin" title="import_index" version_id="2010053" version_string="2.1.0 Release Candidate 3"><![CDATA[<xf:title>{{ phrase('import_data') }}</xf:title>

<xf:if is="!$xf.addOns.XFI">
	<div class="blockMessage blockMessage--important">
		{{ phrase('xenforo_importers_now_installed_as_separate_add_on_downloadable_from') }}
	</div>
</xf:if>

<xf:if is="$complete">
	<div class="blockMessage blockMessage--success blockMessage--iconic">
		{{ phrase('your_import_has_been_completed_successfully') }}
	</div>
</xf:if>

<xf:if is="$importersGrouped">
	<xf:form action="{{ link('import/config') }}" class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:selectrow label="{{ phrase('import_from') }}" name="importer" size="10">
					<xf:foreach loop="$importersGrouped" key="$target" value="$importers">
						<xf:optgroup label="{{ phrase('import_target:') }} {$target}">
							<xf:foreach loop="$importers" key="$importer" value="$info">
								<xf:option value="{$importer}">{$info.source}</xf:option>
							</xf:foreach>
						</xf:optgroup>
					</xf:foreach>
				</xf:selectrow>
			</div>
			<xf:submitrow submit="{{ phrase('continue...') }}" />
		</div>
	</xf:form>
<xf:else />
	<div class="blockMessage">{{ phrase('no_importers_currently_available') }}</div>
</xf:if>]]></template>
  <template type="admin" title="import_macros" version_id="2000170" version_string="2.0.1"><![CDATA[<xf:macro name="step_users_config" arg-config="!">
	<xf:checkboxrow label="{{ phrase('users') }}">
		<xf:option name="step_config[users][merge_email]" selected="{$config.merge_email}">{{ phrase('automatically_merge_users_with_same_email') }}</xf:option>
		<xf:option name="step_config[users][merge_name]" selected="{$config.merge_name}">
			<xf:label>{{ phrase('automatically_merge_users_with_same_user_name') }}</xf:label>
			<xf:hint>{{ phrase('note_names_differ_only_accents_considered_identical') }}</xf:hint>
		</xf:option>
	</xf:checkboxrow>
</xf:macro>

<xf:macro name="step_smilies_config" arg-config="">
	<xf:textboxrow name="step_config[smilies][filename]" value="{$config.filename}"
		label="{{ phrase('import_smilies_xml_filename') }}"
		explain="{{ phrase('import_smilies_xml_filename_explain', {'link': link('smilies/import')}) }}"
		placeholder="{$config.filename}" />
</xf:macro>]]></template>
  <template type="admin" title="import_restart" version_id="2000037" version_string="2.0.0 Beta 7"><![CDATA[<xf:title>{{ phrase('restart_import:') }} {$title}</xf:title>

<div class="blocks">
	<xf:form action="{{ link('import/run') }}" class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:inforow rowtype="confirm">
					{{ phrase('pending_import_from_x_has_been_found', {'title': $title}) }}
				</xf:inforow>
			</div>
			<xf:submitrow submit="{{ phrase('restart_import') }}" rowtype="simple" />
		</div>
	</xf:form>

	<div class="blocks-textJoiner"><span></span><em>{{ phrase('or_separator') }}</em><span></span></div>

	<xf:form action="{{ link('import/cancel') }}" class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:inforow rowtype="confirm">
					{{ phrase('alternatively_you_may_cancel_this_import_to_start_new_one') }}

					<div>
						<xf:checkbox standalone="true">
							<xf:option name="confirm" data-xf-init="disabler" data-container=".js-submitDisable">
								{{ phrase('confirm_action') }}
							</xf:option>
						</xf:checkbox>
					</div>
				</xf:inforow>
			</div>
			<xf:submitrow submit="{{ phrase('cancel_import') }}" rowtype="simple" rowclass="js-submitDisable" />
		</div>
	</xf:form>
</div>]]></template>
  <template type="admin" title="import_run" version_id="2000170" version_string="2.0.1"><![CDATA[<xf:title>{{ phrase('importing...') }}</xf:title>
<xf:page option="template">PAGE_RUN_JOB</xf:page>

<xf:form action="{{ link('import/run') }}" method="post" class="blockMessage" data-xf-init="auto-submit">

	<xf:if is="$stepTitle">
		<xf:if is="$stepComplete">
			{{ phrase('step_x_of_y:', {'current': $importCompletion.current, 'total': $importCompletion.total}) }} {$stepTitle} - 100%
		<xf:else />
			{{ phrase('step_x_of_y:', {'current': $importCompletion.current, 'total': $importCompletion.total}) }} {$stepTitle} - {$stepCompletion}
		</xf:if>
	<xf:elseif is="$importCompletion.current" />
		{{ phrase('step_x_of_y:', {'current': $importCompletion.current, 'total': $importCompletion.total}) }} {{ phrase('processing...') }}
	<xf:else />
		{{ phrase('processing...') }}
	</xf:if>

	<div class="u-noJsOnly">
		<xf:button type="submit">{{ phrase('proceed...') }}</xf:button>
	</div>
</xf:form>]]></template>
  <template type="admin" title="import_start" version_id="2010170" version_string="2.1.1"><![CDATA[<xf:title>{{ phrase('import_data:') }} {$title}</xf:title>

<xf:form action="{{ link('import/run') }}" class="block">
	<div class="block-container">
		<h2 class="block-tabHeader tabs" data-xf-init="tabs" role="tablist">
			<a class="tabs-tab is-active" role="tab" tabindex="0" aria-controls="import-web">{{ phrase('browser_importer') }}</a>
			<a class="tabs-tab" role="tab" tabindex="0" aria-controls="import-cli">{{ phrase('cli_importer') }}</a>
		</h2>
		<ul class="tabPanes">
			<li class="is-active" role="tabpanel" id="import-web">
				<div class="block-body block-row">
					{{ phrase('youre_ready_start_import_will_run_browser_window_open') }}
				</div>
				<xf:submitrow submit="{{ phrase('start_import') }}" rowtype="simple" />
			</li>
			<li role="tabpanel" id="import-cli">
				<div class="block-body block-row">
					{{ phrase('you_may_import_via_command_line_recommended_large_imports:') }}
					<pre style="margin: 1em 2em">php cmd.php xf:import</pre>
					{{ phrase('once_this_command_completes_need_refresh_this_page') }}<br />
					<br />
					{{ phrase('there_additional_options_available_via_command_line') }}
				</div>
			</li>
		</ul>
	</div>
</xf:form>]]></template>
  <template type="admin" title="import_step_choose" version_id="2010131" version_string="2.1.1 Beta 1"><![CDATA[<xf:title>{{ phrase('configure_importer:') }} {$title}</xf:title>

<div class="js-importConfigForm">

	<xf:if is="$isCoreImporter AND $canRetainIds">
		<div class="blockMessage blockMessage--warning blockMessage--iconic">
			{{ phrase('to_avoid_unexpected_user_merges_ensure_current_user_unique_name_email', {'link': link('users/edit', $xf.visitor)}) }}
		</div>
	</xf:if>

	<xf:form action="{{ link('import/step-config') }}" class="block"
		ajax="true" data-replace=".js-importConfigForm">

		<div class="block-container">
			<div class="block-body">
				<xf:checkboxrow name="steps[]" label="{{ phrase('data_to_import') }}" listclass="data">
					<xf:foreach loop="$availableSteps" key="$stepId" value="$stepInfo">
						<xf:option value="{$stepId}" selected="1">{$stepInfo.title}</xf:option>
					</xf:foreach>
					<xf:hint>
						<br />
						<xf:checkbox standalone="true">
							<xf:option check-all=".data">{{ phrase('select_all') }}</xf:option>
						</xf:checkbox>
					</xf:hint>
				</xf:checkboxrow>

				<xf:checkboxrow label="{{ phrase('content_ids') }}">
					<xf:if is="$canRetainIds">
						<xf:option name="retain_ids" selected="1">
							<xf:label>{{ phrase('retain_content_ids') }}</xf:label>
							<xf:hint>
								{{ phrase('if_selected_same_id_used_in_xenforo_as_source_db') }}
								<xf:if is="$isCoreImporter"><strong>{{ phrase('note_if_selected_user_1_from_source_merged_into_user_1_xf') }}</strong></xf:if>
							</xf:hint>
						</xf:option>
					<xf:else />
						<xf:option disabled="disabled">
							<xf:label>{{ phrase('retain_content_ids') }}</xf:label>
							<xf:hint>{{ phrase('content_ids_cannot_be_retained_message') }}</xf:hint>
						</xf:option>
					</xf:if>
				</xf:checkboxrow>

				<xf:textboxrow name="log_table"
					hint="{{ phrase('required') }}"
					required="required"
					value="{$logTable}"
					label="{{ phrase('import_log_table_name') }}"
					explain="{{ phrase('import_log_table_name_explain') }}" />
			</div>
			<xf:submitrow submit="{{ phrase('continue...') }}" />
		</div>

		<xf:hiddenval name="config">{$baseConfig|json}</xf:hiddenval>
		<xf:hiddenval name="importer">{$importerId}</xf:hiddenval>
	</xf:form>
</div>]]></template>
  <template type="admin" title="import_step_config" version_id="2000036" version_string="2.0.0 Beta 6"><![CDATA[<xf:title>{{ phrase('configure_importer:') }} {$title}</xf:title>

<xf:form action="{{ link('import/step-config') }}" class="block js-importConfigForm"
	ajax="true" data-replace=".js-importConfigForm">

	<div class="block-container">
		<div class="block-body">
			<xf:if contentcheck="true">
				<xf:contentcheck>
					{{ $importer.renderStepConfigOptions(vars())|raw }}
				</xf:contentcheck>
			<xf:else />
				<div class="block-row">{{ phrase('no_step_configuration_necessary') }}</div>
			</xf:if>
		</div>
		<xf:submitrow submit="{{ phrase('continue...') }}" />
	</div>

	<xf:hiddenval name="config">{$baseConfig|json}</xf:hiddenval>
	<xf:hiddenval name="importer">{$importerId}</xf:hiddenval>
	<xf:hiddenval name="retain_ids">{$retainIds}</xf:hiddenval>
	<xf:hiddenval name="log_table">{$logTable}</xf:hiddenval>
	<xf:foreach loop="$steps" value="$step">
		<xf:hiddenval name="steps[]">{$step}</xf:hiddenval>
	</xf:foreach>
	<xf:hiddenval name="steps_configured">1</xf:hiddenval>
</xf:form>]]></template>
  <template type="admin" title="index" version_id="2010037" version_string="2.1.0 Beta 7"><![CDATA[<xf:if is="$upgradeCheck">
	<xf:macro template="upgrade_check_macros" name="full_status" arg-upgradeCheck="{$upgradeCheck}" />
</xf:if>

<xf:if is="$showUnicodeWarning">
	<div class="blockMessage blockMessage--error blockMessage--iconic">
		{{ phrase('full_unicode_support_has_been_enabled_in_config_but_db_does_not_support') }}
	</div>
</xf:if>

<xf:if is="$xf.visitor.hasAdminPermission('style') && $outdatedTemplates">
	<div class="blockMessage blockMessage--important blockMessage--iconic">
		<a href="{{ link('templates/outdated') }}"> {{ phrase('there_templates_that_may_be_outdated_click_to_review') }}</a>
	</div>
</xf:if>

<xf:if is="$xf.visitor.hasAdminPermission('viewLogs') && $serverErrorLogs">
	<div class="blockMessage blockMessage--error blockMessage--iconic">
		<a href="{{ link('logs/server-errors') }}"> {{ phrase('server_errors_have_been_logged') }}</a>
	</div>
</xf:if>

<xf:if is="$xf.visitor.hasAdminPermission('addOn') && $hasProcessingAddOn">
	<div class="blockMessage blockMessage--error blockMessage--iconic">
		{{ phrase('addon_action_pending_warning') }}<br />
		<br />
		<a href="{{ link('add-ons') }}">{{ phrase('view_addons...') }}</a>
	</div>
</xf:if>

<xf:if is="$legacyConfig">
	<div class="blockMessage blockMessage--important">
		{{ phrase('your_old_config_file_at_library_config_is_still_available') }}
	</div>
</xf:if>

<xf:if is="$hasStoppedManualJobs">
	<div class="blockMessage blockMessage--important blockMessage--iconic">
		{{ phrase('there_manual_rebuild_jobs_awaiting_completion_continue_running', {'link': link('tools/run-job')}) }}
	</div>
</xf:if>

<xf:set var="$firstFileCheck" value="{$fileChecks|first}" />
<xf:if is="$firstFileCheck.check_state == 'failure'">
	<div class="blockMessage blockMessage--error blockMessage--iconic">
		<a href="{{ link('tools/file-check/results', $firstFileCheck) }}">
			{{ phrase('there_x_missing_files_or_files_with_unexpected_contents', {
				'total_missing': ($firstFileCheck.total_missing + $firstFileCheck.total_inconsistent)|number
			}) }}
		</a>
	</div>
</xf:if>

<xf:if is="$requirementErrors">
	<div class="blockMessage blockMessage--error blockMessage--iconic">
		{{ phrase('following_errors_occurred_while_verifying_that_your_server_still_meets_requirements') }}:
		<ul>
			<xf:foreach loop="$requirementErrors" value="$error">
				<li>{$error}</li>
			</xf:foreach>
		</ul>
	</div>
</xf:if>

<xf:if is="{{ $xf.visitor.hasAdminPermission('user') }}">
	<div class="block">
		<div class="block-container">
			<xf:form action="{{ link('users/quick-search') }}">
				<div class="block-body">
					<xf:textboxrow name="query" placeholder="{{ phrase('username_email_ip...') }}" value=""
						label="{{ phrase('search_for_users') }}" />
					<xf:submitrow icon="search" />
				</div>
			</xf:form>
		</div>
	</div>
</xf:if>

<xf:if is="$stats is not empty AND $xf.visitor.hasAdminPermission('viewStatistics')">
	<xf:css src="public:chartist.css" />
	<xf:css src="stats.less" />

	<xf:js prod="xf/stats-compiled.js" dev="vendor/chartist/chartist.min.js, xf/stats.js" />

	<div class="block">
		<div class="block-container">
			<h2 class="block-header"><a href="{{ link('stats') }}">{{ phrase('statistics') }}</a></h2>
			<div class="block-body block-row">
				<ul class="graphList">
					<xf:foreach loop="$stats" value="$statsData">
						<li data-xf-init="stats" data-max-ticks="4">
							<script class="js-statsData" type="application/json">
								{$statsData.data|json|raw}
							</script>
							<script class="js-statsSeriesLabels" type="application/json">
								{$statsData.phrases|json|raw}
							</script>
							<div class="ct-chart ct-chart--small ct-major-tenth js-statsChart"></div>
							<ul class="ct-legend js-statsLegend"></ul>
						</li>
					</xf:foreach>
				</ul>
			</div>
		</div>
	</div>
</xf:if>

<div class="iconicLinks">
	<ul class="iconicLinks-list">
		<xf:foreach loop="$navigation" value="$entry">
			<xf:set var="$nav" value="{$entry.record}" />
			<xf:if is="{$nav.link}">
				<li><a href="{{ link($nav.link) }}">
					<div class="iconicLinks-icon"><xf:fa icon="fa-fw {$nav.icon}" /></div>
					<div class="iconicLinks-title">{$nav.title}</div>
				</a></li>
			</xf:if>
		</xf:foreach>
		<li class="iconicLinks-placeholder"></li>
		<li class="iconicLinks-placeholder"></li>
		<li class="iconicLinks-placeholder"></li>
		<li class="iconicLinks-placeholder"></li>
		<li class="iconicLinks-placeholder"></li>
	</ul>
</div>

<xf:if is="$envReport">
	<div class="block">
		<div class="block-container">
			<h2 class="block-header">
				<span class="collapseTrigger collapseTrigger--block {{ !is_toggled('collapse_env_report') ? 'is-active' : '' }}" data-xf-click="toggle" data-xf-init="toggle-storage" data-storage-key="collapse_env_report" data-target="#js-collapse-env-report">
					{{ phrase('server_environment_report') }}
				</span>
			</h2>
			<div class="block-body block-body--collapsible block-row {{ !is_toggled('collapse_env_report') ? 'is-active' : '' }}" id="js-collapse-env-report">
				<xf:if is="$envReport.phpVersionState == 'minimum'">
					<div class="block-rowMessage block-rowMessage--error">
						{{ phrase('php_version_minimum') }}
					</div>
				<xf:elseif is="$envReport.phpVersionState == 'not_newest'" />
					<div class="block-rowMessage block-rowMessage--warning">
						{{ phrase('php_version_not_newest') }}
					</div>
				<xf:elseif is="$envReport.phpVersionState == 'recommended'" />
					<div class="block-rowMessage block-rowMessage--success">
						{{ phrase('php_version_recommended') }}
					</div>
				</xf:if>
				<div class="pairWrapper pairWrapper--spaced">
					<dl class="pairs pairs--columns">
						<dt>{{ phrase('php_version') }}</dt>
						<dd><a href="{{ link('tools/phpinfo') }}" target="_blank">{$envReport.phpVersion}</a></dd>
					</dl>
					<dl class="pairs pairs--columns">
						<dt>{{ phrase('mysql_version') }}</dt>
						<dd>{$envReport.mysqlVersion}</dd>
					</dl>
					<xf:if is="$envReport.server_software">
						<dl class="pairs pairs--columns">
							<dt>{{ phrase('server_software') }}</dt>
							<dd>{$envReport.server_software}</dd>
						</dl>
					</xf:if>
					<xf:foreach loop="$envReport.ini" key="$ini" value="$iniVal">
						<dl class="pairs pairs--columns">
							<dt>PHP <code>{$ini}</code></dt>
							<dd>{$iniVal}</dd>
						</dl>
					</xf:foreach>
					<dl class="pairs pairs--columns">
						<dt>{{ phrase('curl_version') }}</dt>
						<dd>{{ $envReport.curl_version ?: phrase('n_a') }}</dd>
					</dl>
					<dl class="pairs pairs--columns">
						<dt>{{ phrase('ssl_version') }}</dt>
						<dd>{{ $envReport.ssl_version ?: phrase('n_a') }}</dd>
					</dl>
					<dl class="pairs pairs--columns">
						<dt>{{ phrase('suhosin_enabled') }}</dt>
						<dd>{{ $envReport.suhosin ? phrase('yes') : phrase('no') }}</dd>
					</dl>
					<dl class="pairs pairs--columns">
						<dt>{{ phrase('imagick_support') }}</dt>
						<dd>{{ $envReport.imagick ? phrase('yes') : phrase('no') }}</dd>
					</dl>
					<dl class="pairs pairs--columns">
						<dt>{{ phrase('exif_support') }}</dt>
						<dd>{{ $envReport.exif ? phrase('yes') : phrase('no') }}</dd>
					</dl>
					<dl class="pairs pairs--columns">
						<dt>{{ phrase('gzip_support') }}</dt>
						<dd>{{ $envReport.gzip ? phrase('yes') : phrase('no') }}</dd>
					</dl>
					<dl class="pairs pairs--columns">
						<dt>{{ phrase('mbstring_support') }}</dt>
						<dd>{{ $envReport.mbstring ? phrase('yes') : phrase('no') }}</dd>
					</dl>
					<dl class="pairs pairs--columns">
						<dt>{{ phrase('gmp_support') }}</dt>
						<dd>{{ $envReport.gmp ? phrase('yes') : phrase('no') }}</dd>
					</dl>
					<dl class="pairs pairs--columns">
						<dt>{{ phrase('ziparchive_support') }}</dt>
						<dd>{{ $envReport.zip ? phrase('yes') : phrase('no') }}</dd>
					</dl>
				</div>
			</div>
		</div>
	</div>
</xf:if>

<xf:if is="$logCounts is not empty AND $xf.visitor.hasAdminPermission('viewLogs')">
	<div class="block">
		<div class="block-container">
			<h2 class="block-header">
				<span class="collapseTrigger collapseTrigger--block {{ !is_toggled('collapse_logged_activity') ? 'is-active' : '' }}" data-xf-click="toggle" data-xf-init="toggle-storage" data-storage-key="collapse_logged_activity" data-target="#js-collapse-logged-activity">
					{{ phrase('logged_activity') }}
				</span>
			</h2>
			<div class="block-body block-body--collapsible {{ !is_toggled('collapse_logged_activity') ? 'is-active' : '' }}" id="js-collapse-logged-activity">
				<xf:datalist data-xf-init="responsive-data-list">
					<xf:datarow rowtype="header">
						<xf:cell>{{ phrase('type') }}</xf:cell>
						<xf:cell>{{ phrase('last_day') }}</xf:cell>
						<xf:cell>{{ phrase('last_week') }}</xf:cell>
						<xf:cell>{{ phrase('last_month') }}</xf:cell>
						<xf:cell> </xf:cell>
					</xf:datarow>

					<!--[XF:activity_stats:top]-->
					<xf:datarow>
						<xf:cell>{{ phrase('moderator_actions') }}</xf:cell>
						<xf:cell>{$logCounts.moderator.day|number}</xf:cell>
						<xf:cell>{$logCounts.moderator.week|number}</xf:cell>
						<xf:cell>{$logCounts.moderator.month|number}</xf:cell>
						<xf:action href="{{ link('logs/moderator') }}">{{ phrase('view') }}</xf:action>
					</xf:datarow>

					<xf:datarow>
						<xf:cell>{{ phrase('spam_triggers') }}</xf:cell>
						<xf:cell>{$logCounts.spamTrigger.day|number}</xf:cell>
						<xf:cell>{$logCounts.spamTrigger.week|number}</xf:cell>
						<xf:cell>{$logCounts.spamTrigger.month|number}</xf:cell>
						<xf:action href="{{ link('logs/spam-trigger') }}">{{ phrase('view') }}</xf:action>
					</xf:datarow>

					<xf:datarow>
						<xf:cell>{{ phrase('spam_cleanings') }}</xf:cell>
						<xf:cell>{$logCounts.spamCleaner.day|number}</xf:cell>
						<xf:cell>{$logCounts.spamCleaner.week|number}</xf:cell>
						<xf:cell>{$logCounts.spamCleaner.month|number}</xf:cell>
						<xf:action href="{{ link('logs/spam-cleaner') }}">{{ phrase('view') }}</xf:action>
					</xf:datarow>

					<xf:datarow>
						<xf:cell>{{ phrase('emails_bounced') }}</xf:cell>
						<xf:cell>{$logCounts.emailBounce.day|number}</xf:cell>
						<xf:cell>{$logCounts.emailBounce.week|number}</xf:cell>
						<xf:cell>{$logCounts.emailBounce.month|number}</xf:cell>
						<xf:action href="{{ link('logs/email-bounces') }}">{{ phrase('view') }}</xf:action>
					</xf:datarow>

					<xf:datarow>
						<xf:cell>{{ phrase('payments_received') }}</xf:cell>
						<xf:cell>{$logCounts.payment.day|number}</xf:cell>
						<xf:cell>{$logCounts.payment.week|number}</xf:cell>
						<xf:cell>{$logCounts.payment.month|number}</xf:cell>
						<xf:action href="{{ link('logs/payment-provider') }}">{{ phrase('view') }}</xf:action>
					</xf:datarow>
					<!--[XF:activity_stats:bottom]-->
				</xf:datalist>
			</div>
		</div>
	</div>
</xf:if>

<xf:if is="$staffOnline is not empty">
	<div class="block">
		<div class="block-container">
			<h2 class="block-header">
				<span class="collapseTrigger collapseTrigger--block {{ !is_toggled('collapse_staff_online') ? 'is-active' : '' }}" data-xf-click="toggle" data-xf-init="toggle-storage" data-storage-key="collapse_staff_online" data-target="#js-collapse-staff-online">
					{{ phrase('staff_online') }}
				</span>
			</h2>
			<ul class="block-body block-body--collapsible {{ !is_toggled('collapse_staff_online') ? 'is-active' : '' }}" id="js-collapse-staff-online">
				<xf:foreach loop="$staffOnline" value="$user">
					<li class="block-row">
						<div class="contentRow">
							<div class="contentRow-figure">
								<xf:avatar user="$user" size="xs"/>
							</div>
							<div class="contentRow-main contentRow-main--close">
								<xf:username user="$user" rich="true"/>
								<div class="contentRow-minor">
									<xf:usertitle user="$user"/>
								</div>
							</div>
						</div>
					</li>
				</xf:foreach>
			</ul>
		</div>
	</div>
</xf:if>

<xf:if is="$fileChecks is not empty">
	<div class="block">
		<div class="block-container">
			<h2 class="block-header">
				<span class="collapseTrigger collapseTrigger--block {{ !is_toggled('collapse_health_check') ? 'is-active' : '' }}" data-xf-click="toggle" data-xf-init="toggle-storage" data-storage-key="collapse_health_check" data-target="#js-collapse-health-check">
					{{ phrase('file_health_check_results') }}
				</span>
			</h2>
			<div class="block-body block-body--collapsible {{ !is_toggled('collapse_health_check') ? 'is-active' : '' }}" id="js-collapse-health-check">
				<xf:macro template="tools_file_check" name="file_check_list" arg-fileChecks="{$fileChecks}" />
			</div>
		</div>
	</div>
</xf:if>

<xf:if is="{{ $xf.visitor.hasAdminPermission('addOn') AND $installedAddOns is not empty }}">
	<xf:css src="addon_list.less" />
	<div class="addOnList">
		<div class="block">
			<div class="block-container">
				<h2 class="block-header">
					<span class="collapseTrigger collapseTrigger--block {{ !is_toggled('collapse_add_ons') ? 'is-active' : '' }}" data-xf-click="toggle" data-xf-init="toggle-storage" data-storage-key="collapse_add_ons" data-target="#js-collapse-add-ons">
						{{ phrase('installed_add_ons') }}
					</span>
				</h2>
				<ul class="block-body block-body--collapsible {{ !is_toggled('collapse_add_ons') ? 'is-active' : '' }}" id="js-collapse-add-ons">
					<xf:foreach loop="$installedAddOns" value="$addOn">
						<xf:macro template="addon_list_macros" name="addon_list_item" arg-addOn="{$addOn}" />
					</xf:foreach>
				</ul>
			</div>
		</div>
	</div>
</xf:if>]]></template>
  <template type="admin" title="install_app.less" version_id="2010131" version_string="2.1.1 Beta 1"><![CDATA[@_installPage-maxWidth: 1100px; // this does not include the navigation sidebar

.mixin-pageWidth()
{
	width: 100%;
	max-width: @_installPage-maxWidth;
	margin: 0 auto;
}

// ##################################### HEADER ###############################

@_installHeader-bg: @xf-paletteColor5;
@_installHeader-height: 40px;
@_installHeader-shadowHeight: 8px;
@_installHeader-buttonPaddingH: 10px;

.p-header
{
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
	height: @_installHeader-height;
	line-height: @_installHeader-height;
	.m-clearFix();
	z-index: @zIndex-4;
	background: @_installHeader-bg;
	color: contrast(@_installHeader-bg);
	text-align: center;
	.m-dropShadow(0, 0, @_installHeader-shadowHeight, 3px, 0.3);
}

.p-header-logo
{
	vertical-align: middle;
	margin-right: auto;
}

// ##################################### BODY AREA SETUP ##########################

.p-pageWrapper
{
	position: relative;
	display: flex;
	flex-direction: column;
	min-height: 100vh;
}

.p-body
{
	display: flex;
	align-items: stretch;
	flex-grow: 1;
}


// ###################################### MAIN COLUMN #########################

.p-main
{
	vertical-align: top;
	padding-top: @_installHeader-height;
	flex-grow: 1;
	min-width: 0;
}

.p-main-inner
{
	.mixin-pageWidth();
	padding: @xf-paddingLarge @xf-pageEdgeSpacer;
}

.p-title
{
	display: flex;
	flex-wrap: wrap;
	align-items: center;
	max-width: 100%;
	margin-bottom: 5px;
}

.p-title-value
{
	padding: 0;
	margin: 0 0 3px 0;
	font-size: @xf-fontSizeLargest;
	font-weight: @xf-fontWeightNormal;
	min-width: 0;
}

.p-description
{
	margin: 0;
	padding: 0;
	font-size: @xf-fontSizeSmall;
	color: @xf-textColorMuted;
}

.p-content
{
	margin: @xf-paddingLarge 0;

	> :first-child
	{
		margin-top: 0;
	}
	> :last-child
	{
		margin-bottom: 0;
	}
}

// ####################################### FOOTER AREA ########################

@_adminFooter-bg: darken(@_installHeader-bg, 12%);
@_adminFooter-color: @xf-paletteColor2;
@_adminFooter-linkColor: @xf-paletteColor1;

.p-footer
{
	background: @_adminFooter-bg;
	border-top: @xf-borderSize solid darken(@_adminFooter-bg, 4%);
	color: @_adminFooter-color;
	font-size: @xf-fontSizeSmall;
	padding: @xf-paddingLarge @xf-pageEdgeSpacer;

	a
	{
		color: @_adminFooter-linkColor;
	}
}

.p-footer-row
{
	.m-clearFix();

	margin-bottom: -@xf-paddingLarge;

	a
	{
		padding: 2px 4px;
		border-radius: @xf-borderRadiusSmall;

		&:hover
		{
			text-decoration: none;
			background-color: fade(@_adminFooter-linkColor, 10%);
		}
	}
}

.p-footer-row-main
{
	float: left;
	margin-bottom: @xf-paddingLarge;
	margin-left: -2px;
}

.p-footer-row-opposite
{
	float: right;
	margin-bottom: @xf-paddingLarge;
	margin-right: -2px;
}

.p-footer-copyright
{
	margin-top: @xf-paddingLarge;
	text-align: center;
	font-size: @xf-fontSizeSmallest;
}]]></template>
  <template type="admin" title="ip_users_list" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('users_logged_at_ip_x', {'ip': $ipPrintable}) }}</xf:title>

<div class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:datalist>
				<xf:foreach loop="$ips" value="$ip" key="$key">
					<xf:set var="$user" value="{$ip.user}" />
					<xf:datarow rowclass="dataList-row--noHover">
						<xf:cell class="dataList-cell--min dataList-cell--alt">
							<xf:avatar user="$user" size="s" href="{{ link('users/edit', $user) }}" />
						</xf:cell>
						<xf:main href="{{ link('users/edit', $user) }}" label="{$user.username}">
							<xf:hint><xf:usertitle user="$user" /></xf:hint>
							<xf:explain>
								<ul class="listInline listInline--bullet">
									<xf:if is="$ip.ip_total > 1">
										<li>{{ phrase('ip_x_and_y_more', {'ip': $ip.ips.0|ip, 'count': $ip.ip_total - 1}) }}</li>
									<xf:else />
										<li>{$ip.ips.0|ip}</li>
									</xf:if>
									<xf:if is="$ip.total > 1">
										<li>{{ phrase('x_times', {'total': $ip.total|number}) }}</li>
										<li><xf:date time="{$ip.first_date}" /> - <xf:date time="{$ip.last_date}" /></li>
									<xf:else />
										<li>{{ phrase('1_time') }}</li>
										<li><xf:date time="{$ip.first_date}" /></li>
									</xf:if>
								</ul>
							</xf:explain>
						</xf:main>
					</xf:datarow>
				</xf:foreach>
			</xf:datalist>
		</div>
	</div>
</div>]]></template>
  <template type="admin" title="language_chooser" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('language_chooser') }}</xf:title>

<div class="block">
	<div class="block-container">
		<div class="block-body">
			<a href="{{ link('languages/admin', null, {
				'language_id': 0,
				'_xfRedirect': $redirect,
				't': csrf_token()
			}) }}" class="menu-linkRow">{{ phrase('use_forum_language_preference') }}</a>

			<hr class="block-separator" />

			<ul class="listPlain listColumns">
				<xf:foreach loop="$languageTree.getFlattened(0)" value="$treeEntry">
					<li>
						<a href="{{ link('languages/admin', null, {
							'language_id': $treeEntry.record.language_id,
							'_xfRedirect': $redirect,
							't': csrf_token()
						}) }}" class="menu-linkRow" dir="auto">{$treeEntry.record.title}</a>
					</li>
				</xf:foreach>
			</ul>
		</div>
	</div>
</div>]]></template>
  <template type="admin" title="language_edit" version_id="2000631" version_string="2.0.6 Beta 1"><![CDATA[<xf:if is="$language.isInsert()">
	<xf:title>{{ phrase('add_language') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_language:') }} {$language.title}</xf:title>
</xf:if>

<xf:pageaction if="$language.isUpdate()">
	<xf:button href="{{ link('languages/delete', $language) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('languages/save', $language) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:textboxrow name="title" value="{$language.title}" maxlength="{{ max_length($language, 'title') }}"
				label="{{ phrase('title') }}" />

			<xf:selectrow name="parent_id" value="{$language.parent_id}"
				label="{{ phrase('parent_language') }}">
				<xf:option value="0">{{ phrase('(no_parent)') }}</xf:option>
				<xf:foreach loop="$languageTree.getFlattened(1)" value="$treeEntry">
					<xf:option value="{$treeEntry.record.language_id}"
						label="{{ repeat('--', $treeEntry.depth) }} {$treeEntry.record.title}" />
				</xf:foreach>
			</xf:selectrow>

			<xf:selectrow name="language_code" value="{$language.language_code}"
				label="{{ phrase('locale') }}">

				<xf:option value="">&nbsp;</xf:option>
				<xf:options source="$locales" />
			</xf:selectrow>

			<xf:radiorow name="text_direction" value="{$language.text_direction}"
				label="{{ phrase('text_direction') }}">

				<xf:option value="LTR">{{ phrase('left_to_right') }}</xf:option>
				<xf:option value="RTL">{{ phrase('right_to_left') }}</xf:option>
			</xf:radiorow>

			<hr class="formRowSep" />

			<xf:textboxrow name="decimal_point" value="{$language.decimal_point}" size="5" class="input--autoSize"
				maxlength="{{ max_length($language, 'decimal_point') }}"
				label="{{ phrase('decimal_point_character') }}" />

			<xf:textboxrow name="thousands_separator" value="{$language.thousands_separator}" size="5" class="input--autoSize"
				maxlength="{{ max_length($language, 'thousands_separator') }}"
				label="{{ phrase('thousands_separator') }}" />

			<xf:textboxrow name="label_separator" value="{$language.label_separator}" size="5" class="input--autoSize"
				maxlength="{{ max_length($language, 'label_separator') }}"
				label="{{ phrase('label_separator') }}"
				explain="{{ phrase('this_is_used_to_separate_labels_from_their_associated_values') }}" />

			<xf:textboxrow name="comma_separator" value="{$language.comma_separator}" size="5" class="input--autoSize"
				maxlength="{{ max_length($language, 'comma_separator') }}"
				label="{{ phrase('comma_separator') }}"
				explain="{{ phrase('this_is_used_as_separator_in_lists_of_values') }}" />

			<xf:textboxrow name="ellipsis" value="{$language.ellipsis}" size="5" class="input--autoSize"
				maxlength="{{ max_length($language, 'ellipsis') }}"
				label="{{ phrase('ellipsis_character') }}" />

			<xf:formrow label="{{ phrase('parentheses_characters') }}">

				<div class="inputGroup">
					<xf:textbox name="parenthesis_open" value="{$language.parenthesis_open}" size="5" class="input--autoSize"
						maxlength="{{ max_length($language, 'parenthesis_open') }}" />
					<span class="inputGroup-splitter"></span>
					<xf:textbox name="parenthesis_close" value="{$language.parenthesis_close}" size="5" class="input--autoSize"
						maxlength="{{ max_length($language, 'parenthesis_close') }}" />
				</div>
			</xf:formrow>

			<hr class="formRowSep" />

			<xf:selectrow name="week_start" value="{$language.week_start}"
				label="{{ phrase('week_start_day') }}">

				<xf:option value="0">{{ phrase('day_sunday') }}</xf:option>
				<xf:option value="1">{{ phrase('day_monday') }}</xf:option>
				<xf:option value="2">{{ phrase('day_tuesday') }}</xf:option>
				<xf:option value="3">{{ phrase('day_wednesday') }}</xf:option>
				<xf:option value="4">{{ phrase('day_thursday') }}</xf:option>
				<xf:option value="5">{{ phrase('day_friday') }}</xf:option>
				<xf:option value="6">{{ phrase('day_saturday') }}</xf:option>
			</xf:selectrow>

			<xf:radiorow name="date_format" value="{$language.date_format}"
				label="{{ phrase('date_format') }}">

				<xf:options source="$dateFormats" />
				<xf:option value="" selected="!{$dateFormats.{$language.date_format}}"
					label="{{ phrase('other') }}">
					<xf:dependent>
						<xf:textbox name="date_format_other" value="{{ {$dateFormats.{$language.date_format}} ? '' : $language.date_format }}"
							size="15" maxlength="{{ max_length($language, 'date_format') }}"
							dir="ltr" />
						<p class="formRow-explain">{{ phrase('use_php_date_format') }}</p>
					</xf:dependent>
				</xf:option>
			</xf:radiorow>

			<hr class="formRowSep" />

			<xf:radiorow name="time_format" value="{$language.time_format}"
				label="{{ phrase('time_format') }}">

				<xf:options source="$timeFormats" />
				<xf:option value="" selected="!{$timeFormats.{$language.time_format}}" label="{{ phrase('other') }}">
					<xf:dependent>
						<xf:textbox name="time_format_other" value="{{ {$timeFormats.{$language.time_format}} ? '' : $language.time_format }}"
							size="15" maxlength="{{ max_length($language, 'time_format') }}"
							dir="ltr" />
						<p class="formRow-explain">{{ phrase('use_php_time_format') }}</p>
					</xf:dependent>
				</xf:option>
			</xf:radiorow>

			<hr class="formRowSep" />

			<xf:radiorow name="currency_format" value="{$language.currency_format}"
				label="{{ phrase('currency_format') }}">

				<xf:options source="$currencyFormats" />
				<xf:option value="" selected="!{$currencyFormats.{$language.currency_format}}" label="{{ phrase('other') }}">
					<xf:dependent>
						<xf:textbox name="currency_format_other" value="{{ {$currencyFormats.{$language.currency_format}} ? '' : $language.currency_format }}"
							size="15" maxlength="{{ max_length($language, 'currency_format') }}" />
						<p class="formRow-explain">{{ phrase('use_php_money_format') }}</p>
					</xf:dependent>
				</xf:option>
			</xf:radiorow>

		</div>

		<xf:if is="$quickPhrases is not empty">
			<h3 class="block-formSectionHeader">
				<span class="collapseTrigger collapseTrigger--block" data-xf-click="toggle" data-target="< :up:next">
					<span class="block-formSectionHeader-aligner">{{ phrase('commonly_edited_phrases') }}</span>
				</span>
			</h3>
			<div class="block-body block-body--collapsible">
				<xf:textarearow name="quick_phrases[privacy_policy_text]"
					value="{$quickPhrases.privacy_policy_text.phrase_text}"
					label="{{ phrase('privacy_policy') }}"
					hint="{{ phrase('you_may_use_html') }}"
					autosize="true"
					class="input--fitHeight--short" />

				<xf:textarearow name="quick_phrases[terms_rules_text]"
					value="{$quickPhrases.terms_rules_text.phrase_text}"
					label="{{ phrase('terms_and_rules') }}"
					hint="{{ phrase('you_may_use_html') }}"
					autosize="true"
					class="input--fitHeight--short" />

				<xf:textarearow name="quick_phrases[extra_copyright]"
					value="{$quickPhrases.extra_copyright.phrase_text}"
					label="{{ phrase('extra_footer_copyright') }}"
					hint="{{ phrase('you_may_use_html') }}"
					autosize="true"
					class="input--fitHeight--short"/>

				<xf:textarearow name="quick_phrases[email_footer_html]"
					value="{$quickPhrases.email_footer_html.phrase_text}"
					label="{{ phrase('extra_email_footer_html') }}"
					hint="{{ phrase('you_may_use_html') }}"
					autosize="true"
					class="input--fitHeight--short"/>

				<xf:textarearow name="quick_phrases[email_footer_text]"
					value="{$quickPhrases.email_footer_text.phrase_text}"
					label="{{ phrase('extra_email_footer_plain_text') }}"
					autosize="true"
					class="input--fitHeight--short"/>
			</div>
		</xf:if>

		<xf:submitrow sticky="true" icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="language_export" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('export_language:') }} {$language.title}</xf:title>

<xf:set var="$addOnRepo" value="{{ $xf.app.em.getRepository('XF:AddOn') }}" />

<xf:form action="{{ link('languages/export', $language) }}" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:formrow label="{{ phrase('language') }}">{$language.title}</xf:formrow>

			<xf:selectrow name="addon_id"
				label="{{ phrase('export_from_add_on') }}">

				<xf:option>{{ phrase('(all)') }}</xf:option>
				<xf:foreach loop="$addOnRepo.findAddOnsForList().fetch()" value="$addOn">
					<xf:option value="{$addOn.addon_id}" label="{$addOn.title}" />
				</xf:foreach>
			</xf:selectrow>

			<xf:checkboxrow>
				<xf:option name="untranslated"
					label="{{ phrase('get_unmodified_phrases') }}"
					hint="{{ phrase('helpful_if_wish_to_translate_language_using_xml_file') }}" />
			</xf:checkboxrow>
		</div>
		<xf:submitrow icon="export" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="language_import" version_id="2010036" version_string="2.1.0 Beta 6"><![CDATA[<xf:title>{{ phrase('import_language') }}</xf:title>

<xf:form action="{{ link('languages/import') }}" upload="true" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:uploadrow name="upload" accept=".xml"
				label="{{ phrase('import_from_uploaded_xml_file') }}" />

			<xf:radiorow name="target"
				label="{{ phrase('import_as') }}">

				<xf:option value="new" checked="checked"
					label="{{ phrase('child_of_language:') }}">

					<xf:select name="parent_language_id">
						<xf:option label="{{ phrase('(no_parent)') }}" />
						<xf:foreach loop="$languageTree.getFlattened(0)" value="$treeEntry">
							<xf:option value="{$treeEntry.record.language_id}">{{ repeat('--', $treeEntry.depth) }}
								{$treeEntry.record.title}
							</xf:option>
						</xf:foreach>
					</xf:select>
				</xf:option>
				<xf:option value="overwrite"
					label="{{ phrase('overwrite_language') }}">

					<xf:select name="overwrite_language_id">
						<xf:foreach loop="$languageTree.getFlattened(0)" value="$treeEntry">
							<xf:option value="{$treeEntry.record.language_id}">{{ repeat('--', $treeEntry.depth) }}
								{$treeEntry.record.title}
							</xf:option>
						</xf:foreach>
					</xf:select>
					<xf:html><div class="formRow-explain">{{ phrase('overwrite_language_id_explain') }}</div></xf:html>
				</xf:option>

			</xf:radiorow>

			<xf:checkboxrow>
				<xf:option name="force">
					<xf:label>{{ phrase('skip_import_checks') }}</xf:label>
					<xf:hint>{{ phrase('selecting_bypass_checks_made_by_import_prevent_accidents') }}</xf:hint>
				</xf:option>
			</xf:checkboxrow>
		</div>
		<xf:submitrow icon="import" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="language_list" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('languages') }}</xf:title>

<xf:pageaction>
	<xf:button href="{{ link('languages/add') }}" icon="add">{{ phrase('add_language') }}</xf:button>
	<xf:button href="{{ link('languages/import') }}" icon="import" />
</xf:pageaction>

<xf:macro name="language_list" arg-children="!" arg-defaultLanguageId="!" arg-depth="1">
	<xf:if is="$children is not empty">
		<xf:foreach loop="$children" value="$child">
			<xf:macro name="language_list_entry" arg-language="{$child.record}" arg-children="{$child.children}" arg-defaultLanguageId="{$defaultLanguageId}" arg-depth="{$depth}" />
		</xf:foreach>
	</xf:if>
</xf:macro>
<xf:macro name="language_list_entry" arg-language="!" arg-children="!" arg-defaultLanguageId="!" arg-depth="1">
	<xf:datarow>

		<xf:main
			hash="{$language.language_id}"
			href="{{ ($language.language_id ? link('languages/edit', $language) : '') }}"
			label="{$language.title}"
			class="dataList-cell--d{$depth}" />

		<xf:if is="$language.language_id">
			<xf:toggle name="default_language_id"
				type="radio"
				value="{$language.language_id}"
				selected="{{ $defaultLanguageId == $language.language_id ? 1 : 0 }}"
				class="dataList-cell--separated"
				submit="true" />
		<xf:else />
			<xf:cell>&nbsp;</xf:cell>
		</xf:if>

		<xf:if is="$language.canEdit()">
			<xf:action href="{{ link('languages/phrases', $language) }}" class="dataList-cell--responsiveMenuItem">{{ phrase('phrases') }}</xf:action>
		<xf:else />
			<xf:cell class="dataList-cell--alt dataList-cell--fauxResponsiveMenuItem">&nbsp;</xf:cell>
		</xf:if>

		<xf:if is="$language.language_id">
			<xf:action href="{{ link('languages/export', $language) }}" overlay="true" class="dataList-cell--responsiveMenuItem">{{ phrase('export') }}</xf:action>
		<xf:else />
			<xf:cell class="dataList-cell--alt dataList-cell--fauxResponsiveMenuItem">&nbsp;</xf:cell>
		</xf:if>

		<xf:if is="$language.canEdit()">
			<xf:popup class="dataList-cell--responsiveMenuTrigger" label="&#8226;&#8226;&#8226;">
				<div class="menu" data-menu="menu" aria-hidden="true" data-menu-builder="dataList">
					<div class="menu-content">
						<h3 class="menu-header">{{ phrase('more_options') }}</h3>
						<div class="js-menuBuilderTarget"></div>
					</div>
				</div>
			</xf:popup>
		<xf:else />
			<xf:cell class="dataList-cell--alt dataList-cell--fauxResponsiveMenuTrigger">&nbsp;</xf:cell>
		</xf:if>

		<xf:if is="$language.language_id">
			<xf:delete href="{{ link('languages/delete', $language) }}" />
		<xf:else />
			<xf:cell class="dataList-cell--alt">&nbsp;</xf:cell>
		</xf:if>

	</xf:datarow>
	<xf:macro name="language_list" arg-children="{$children}" arg-depth="{{ $depth + 1 }}" arg-defaultLanguageId="{$defaultLanguageId}" />
</xf:macro>

<xf:if is="$languageTree is not empty">
	<xf:form action="{{ link('languages/toggle') }}" class="block" ajax="true">
		<div class="block-outer">
			<xf:macro template="filter_macros" name="quick_filter" arg-key="languages" arg-class="block-outer-opposite" />
		</div>
		<div class="block-container">
			<div class="block-body">
				<xf:datalist>
					<xf:macro name="language_list" arg-children="{$languageTree}"
						arg-defaultLanguageId="{$xf.options.defaultLanguageId}" />
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($languageTree.getFlattened(0)) }}</span>
			</div>
		</div>
		<xf:hiddenval name="default_language_id_original">{$xf.options.defaultLanguageId}</xf:hiddenval>
	</xf:form>
</xf:if>]]></template>
  <template type="admin" title="language_macros" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro name="language_change_menu"
	arg-languageTree="!"
	arg-route="!"
	arg-routeParams="{{ {} }}"
	arg-currentLanguage="{{ null }}"
	arg-linkClass="button button--link">

	<a class="{$linkClass} menuTrigger"
		data-xf-click="menu"
		role="button"
		tabindex="0"
		aria-expanded="false"
		aria-haspopup="true">{{ phrase('language:') }} {$currentLanguage.title}</a>

	<div class="menu" data-menu="menu" aria-hidden="true">
		<div class="menu-content">
			<h3 class="menu-header">{{ phrase('languages') }}</h3>
			<xf:foreach loop="$languageTree.getFlattened()" value="$treeEntry">
				<a href="{{ link($route, $treeEntry.record, $routeParams) }}"
				   class="menu-linkRow {{ ($currentLanguage && $currentLanguage.language_id == $treeEntry.record.language_id) ? 'is-selected' : '' }}">
					<span class="u-depth{$treeEntry.depth}">{$treeEntry.record.title}</span>
				</a>
			</xf:foreach>
		</div>
	</div>
</xf:macro>

<xf:macro name="language_select"
	arg-languageTree="!"
	arg-languageId="!"
	arg-name="language_id"
	arg-row="{{ true }}"
	arg-class="">

	<xf:set var="$select">
		<xf:select name="{$name}" value="{$languageId}" class="{$class}">
			<xf:foreach loop="{{ $languageTree.getFlattened() }}" value="$treeEntry">
				<xf:option value="{$treeEntry.record.language_id}">{{ repeat('--', $treeEntry.depth) }} {$treeEntry.record.title}</xf:option>
			</xf:foreach>
		</xf:select>
	</xf:set>

	<xf:if is="$row">
		<xf:formrow label="{{ phrase('language') }}" rowtype="input">
			{$select|raw}
		</xf:formrow>
	<xf:else />
		{$select|raw}
	</xf:if>
</xf:macro>]]></template>
  <template type="admin" title="link_forum_delete" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link('link-forums/delete', $node) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('please_confirm_that_you_want_to_delete_following:') }}
				<strong><a href="{{ link('link-forums/edit', $node) }}">{$node.title}</a></strong>
			</xf:inforow>

			<xf:macro template="helper_node_delete_children" name="delete_row" arg-node="{$node}" arg-nodeTree="{$nodeTree}" />
		</div>
		<xf:submitrow rowtype="{{ !$node.hasChildren() ? 'simple' : '' }}" icon="delete" />
	</div>
	<xf:redirect />
</xf:form>]]></template>
  <template type="admin" title="link_forum_edit" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:if is="$node.isInsert()">
	<xf:title>{{ phrase('add_link_forum') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_link_forum:') }} {$node.title}</xf:title>
</xf:if>

<xf:pageaction if="$node.isUpdate()">
	<xf:button href="{{ link('link-forums/delete', $node) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('link-forums/save', $node) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:macro template="node_edit_macros" name="title" arg-node="{$node}" />
			<xf:macro template="node_edit_macros" name="description" arg-node="{$node}" />

			<xf:textboxrow name="link_url" value="{$link.link_url}"
				label="{{ phrase('link_url') }}"
				explain="{{ phrase('users_redirected_to_url_when_click_on_link_forum') }}" />

			<xf:macro template="node_edit_macros" name="position" arg-node="{$node}" arg-nodeTree="{$nodeTree}" />
		</div>
		<xf:submitrow sticky="true" icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="log_admin_list" version_id="2000170" version_string="2.0.1"><![CDATA[<xf:title>{{ phrase('admin_log') }}</xf:title>

<xf:form action="{{ link('logs/admin') }}" class="block">
	<div class="block-container">
		<div class="block-body block-row">
			<span>
				{{ phrase('filter_by_user:') }}
				<xf:select name="user_id" value="{$userId}" class="input--inline">
					<xf:option value="0">{{ phrase('any') }}</xf:option>
					<xf:options source="$logUsers" />
				</xf:select>
			</span>

			<xf:button type="submit">{{ phrase('filter') }}</xf:button>
		</div>
	</div>
</xf:form>

<xf:if is="$entries">
	<div class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:datalist data-xf-init="responsive-data-list">
					<xf:datarow rowtype="header">
						<xf:cell>{{ phrase('action') }}</xf:cell>
						<xf:cell>{{ phrase('user') }}</xf:cell>
						<xf:cell>{{ phrase('ip_address') }}</xf:cell>
						<xf:cell>{{ phrase('date_time') }}</xf:cell>
					</xf:datarow>
					<xf:foreach loop="$entries" value="$entry">
						<xf:datarow>
							<xf:cell class="u-ltr"><a href="{{ link('logs/admin', $entry) }}" data-xf-click="overlay">{$entry.request_url_short}</a></xf:cell>
							<xf:cell><xf:username user="$entry.User" href="{{ link('users/edit', $entry.User) }}" /></xf:cell>
							<xf:cell class="u-ltr">{{ $entry.ip_address ? $entry.ip_address|ip : '' }}</xf:cell>
							<xf:cell><xf:date time="{$entry.request_date}" /></xf:cell>
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($entries, $total) }}</span>
			</div>
		</div>
		<xf:pagenav page="{$page}" perpage="{$perPage}" total="{$total}"
			link="logs/admin" params="{$linkFilters}"
			wrapperclass="block-outer block-outer--after" />
	</div>
<xf:else />
	<div class="blockMessage">{{ phrase('no_entries_have_been_logged') }}</div>
</xf:if>]]></template>
  <template type="admin" title="log_admin_view" version_id="2000033" version_string="2.0.0 Beta 3"><![CDATA[<xf:title>{{ phrase('admin_log_entry') }}</xf:title>

<div class="block">
	<div class="block-container">
		<div class="block-body block-row">
			<span class="u-ltr">{$entry.request_url}</span>
			<ul class="listInline listInline--bullet u-muted">
				<li>{{ phrase('generated_by:') }} {{ $entry.User ? '<a href="' . link('users/edit', $entry) . '">' . $entry.User.username . '</a>' : phrase('unknown_account') }}</li>
				<li class="u-ltr">{{ $entry.ip_address ? $entry.ip_address|ip : '' }}</li>
				<li><xf:date time="{$entry.request_date}" /></li>
			</ul>
		</div>

		<h3 class="block-minorHeader">{{ phrase('request_state') }}</h3>
		<div class="block-body block-body--contained block-row" dir="ltr">
			{{ dump_simple($entry.request_data) }}
		</div>
	</div>
</div>]]></template>
  <template type="admin" title="log_email_bounce_list" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('email_bounce_log') }}</xf:title>

<div class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:datalist data-xf-init="responsive-data-list">
				<xf:datarow rowtype="header">
					<xf:cell>{{ phrase('recipient') }}</xf:cell>
					<xf:cell>{{ phrase('date') }}</xf:cell>
					<xf:cell>{{ phrase('type') }}</xf:cell>
					<xf:cell>{{ phrase('action') }}</xf:cell>
					<xf:cell class="dataList-cell--min">&nbsp;</xf:cell>
				</xf:datarow>

				<xf:foreach loop="$bounces" value="$bounce">
					<xf:datarow>
						<xf:cell>
							<xf:if is="$bounce.User">
								<a href="{{ link('users/edit', $bounce.User) }}"
									data-xf-init="tooltip"
									title="{$bounce.User.username}">{$bounce.recipient}</a>
								<xf:else />
								{$bounce.recipient}
							</xf:if>
						</xf:cell>
						<xf:cell>
							<xf:date time="{$bounce.log_date}" />
						</xf:cell>
						<xf:cell>
							<xf:if is="$bounce.message_type == 'bounce'">
								<span data-xf-init="tooltip" title="{$bounce.status_code}">{{ phrase('bounce') }}</span>
							<xf:elseif is="$bounce.message_type == 'delay'" />
								<span class="u-muted">{{ phrase('delay') }}</span>
							<xf:elseif is="$bounce.message_type == 'challenge'" />
								<span class="u-muted">{{ phrase('challenge') }}</span>
							<xf:elseif is="$bounce.message_type == 'autoreply'" />
								<span class="u-muted">{{ phrase('auto_reply') }}</span>
							<xf:elseif is="$bounce.message_type == 'unknown'" />
								{{ phrase('unknown') }}
							<xf:else />
								{$bounce.message_type}
							</xf:if>
						</xf:cell>
						<xf:cell>
							<xf:if is="$bounce.action_taken == 'hard'">
								{{ phrase('hard_bounce') }}
							<xf:elseif is="$bounce.action_taken == 'soft'" />
								{{ phrase('soft_bounce_logged') }}
							<xf:elseif is="$bounce.action_taken == 'soft_hard'" />
								{{ phrase('too_many_soft_bounces') }}
							<xf:elseif is="$bounce.action_taken == 'untrusted'" />
								<span class="u-muted">{{ phrase('skipped_untrusted') }}</span>
							<xf:elseif is="$bounce.action_taken == ''" />
								<span class="u-muted">{{ phrase('none') }}</span>
							<xf:else />
								{$bounce.action_taken}
							</xf:if>
						</xf:cell>
						<xf:action href="{{ link('logs/email-bounces', null, {'bounce_id': $bounce.bounce_id}) }}">
							{{ phrase('view') }}
						</xf:action>
					</xf:datarow>
					<xf:else />
					<xf:datarow>
						<xf:cell colspan="5">{{ phrase('no_entries_have_been_logged') }}</xf:cell>
					</xf:datarow>
				</xf:foreach>
			</xf:datalist>
		</div>
		<div class="block-footer">
			<span class="block-footer-counter">{{ display_totals($bounces, $total) }}</span>
		</div>
	</div>
	<xf:pagenav page="{$page}" perpage="{$perPage}" total="{$total}"
		link="logs/email-bounces" params="{$linkFilters}"
		wrapperclass="block-outer block-outer--after" />
</div>
]]></template>
  <template type="admin" title="log_image_proxy_list" version_id="2001070" version_string="2.0.10"><![CDATA[<xf:title>{{ phrase('image_proxy_log') }}</xf:title>

<xf:form action="{{ link('logs/image-proxy') }}" class="block">
	<div class="block-container">
		<div class="block-body block-row">
			<xf:textbox name="url" value="{$filters.url}"
				placeholder="{{ phrase('url_contains...') }}"
				class="input--inline" />
			<span>
				{{ phrase('ordered_by:') }}
				<xf:select name="order" value="{{ $filters.order ? $filters.order : 'last_request_date' }}"
					class="input--inline">
					<xf:option value="last_request_date">{{ phrase('last_requested') }}</xf:option>
					<xf:option value="first_request_date">{{ phrase('first_requested') }}</xf:option>
					<xf:option value="views">{{ phrase('hits') }}</xf:option>
					<xf:option value="file_size">{{ phrase('size') }}</xf:option>
				</xf:select>
			</span>

			<xf:button type="submit">{{ phrase('go') }}</xf:button>
		</div>
	</div>
</xf:form>

<xf:if is="$entries is not empty">
	<div class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:datalist data-xf-init="responsive-data-list">
					<xf:datarow rowtype="header">
						<xf:cell colspan="2">{{ phrase('image') }}</xf:cell>
						<xf:cell>{{ phrase('hits') }}</xf:cell>
					</xf:datarow>
					<xf:foreach loop="$entries" value="$entry">
						<xf:datarow>
							<xf:cell
								class="dataList-cell--min dataList-cell--alt dataList-cell--image dataList-cell--imageMediumWide"
								href="{{ link('logs/image-proxy', $entry) }}" overlay="true">
								<xf:if is="$entry.isValid()">
									<img src="{{ link('logs/image-proxy/image', $entry) }}" alt="" />
								<xf:else />
									<span class="dataList-imagePlaceholder"></span>
								</xf:if>
							</xf:cell>
							<xf:cell href="{{ link('logs/image-proxy', $entry) }}" overlay="true">
								<div class="dataList-textRow">{$entry.url}</div>
								<div class="dataList-subRow">
									<ul class="listInline listInline--bullet">
										<xf:if is="{$entry.file_size}"><li>{{ phrase('size:') }} {$entry.file_size|file_size}</li></xf:if>
										<li>{{ phrase('first_requested:') }} <xf:date time="{$entry.first_request_date}" /></li>
										<li>{{ phrase('last_requested:') }} <xf:date time="{$entry.last_request_date}" /></li>
									</ul>
								</div>
							</xf:cell>
							<xf:cell href="{{ link('logs/image-proxy', $entry) }}" class="dataList-cell--min"
								overlay="true">
								{$entry.views|number}
							</xf:cell>
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($entries, $total) }}</span>
			</div>
		</div>
		<xf:pagenav page="{$page}" perpage="{$perPage}" total="{$total}"
			link="logs/image-proxy" params="{$filters}"
			wrapperclass="block-outer block-outer--after" />
	</div>
<xf:else />
	<div class="blockMessage">{{ phrase('no_entries_have_been_logged') }}</div>
</xf:if>]]></template>
  <template type="admin" title="log_image_proxy_view" version_id="2000051" version_string="2.0.0 Release Candidate 1"><![CDATA[<xf:title>{{ phrase('image_proxy_details') }}</xf:title>

<div class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:formrow label="{{ phrase('image') }}">
				<div><img src="{{ link('logs/image-proxy/image', $image) }}" alt="" style="max-width: 100%; max-height: 300px; display: block; margin: auto" /></div>
				<a href="{$image.url}" target="_blank">{$image.url}</a>
			</xf:formrow>
			<xf:formrow label="{{ phrase('hits') }}">{$image.views|number}</xf:formrow>
			<xf:formrow label="{{ phrase('first_requested') }}"><xf:date time="{$image.first_request_date}" /></xf:formrow>
			<xf:formrow label="{{ phrase('last_requested') }}"><xf:date time="{$image.last_request_date}" /></xf:formrow>

			<xf:if is="{$xf.options.imageLinkProxyReferrer.enabled} AND $image.Referrers is not empty">
				<xf:datalist class="dataList--separatedTop" data-xf-init="responsive-data-list">
					<xf:datarow rowtype="header">
						<xf:cell>{{ phrase('referrer') }}</xf:cell>
						<xf:cell>{{ phrase('hits') }}</xf:cell>
						<xf:cell>{{ phrase('first_seen') }}</xf:cell>
						<xf:cell>{{ phrase('last_seen') }}</xf:cell>
					</xf:datarow>
					<xf:foreach loop="$image.Referrers" value="$referrer">
						<xf:datarow rowclass="dataList-row--noHover">
							<xf:cell dir="auto"><a href="{$referrer.referrer_url}" target="_blank">{$referrer.referrer_url}</a></xf:cell>
							<xf:cell>{$referrer.hits|number}</xf:cell>
							<xf:cell><xf:date time="{$referrer.first_date}" /></xf:cell>
							<xf:cell><xf:date time="{$referrer.last_date}" /></xf:cell>
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</xf:if>
		</div>
	</div>
</div>]]></template>
  <template type="admin" title="log_link_proxy_list" version_id="2000170" version_string="2.0.1"><![CDATA[<xf:title>{{ phrase('link_proxy_log') }}</xf:title>

<xf:form action="{{ link('logs/link-proxy') }}" class="block">
	<div class="block-container">
		<div class="block-body block-row">
			<xf:textbox name="url" value="{$filters.url}"
				placeholder="{{ phrase('url_contains...') }}"
				class="input--inline" />

			<span>
				{{ phrase('ordered_by:') }}
				<xf:select name="order" value="{{ $filters.order ? $filters.order : 'last_request_date' }}"
					class="input--inline">
					<xf:option value="last_request_date">{{ phrase('last_requested') }}</xf:option>
					<xf:option value="first_request_date">{{ phrase('first_requested') }}</xf:option>
					<xf:option value="hits">{{ phrase('hits') }}</xf:option>
				</xf:select>
			</span>

			<xf:button type="submit">{{ phrase('go') }}</xf:button>
		</div>
	</div>
</xf:form>

<xf:if is="$entries is not empty">
	<div class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:datalist data-xf-init="responsive-data-list">
					<xf:datarow rowtype="header">
						<xf:cell>{{ phrase('link') }}</xf:cell>
						<xf:cell>{{ phrase('hits') }}</xf:cell>
					</xf:datarow>
					<xf:foreach loop="$entries" value="$entry">
						<xf:datarow>
							<xf:cell href="{{ link('logs/link-proxy', $entry) }}" overlay="true">
								<div class="dataList-textRow">{$entry.url}</div>
								<div class="dataList-subRow">
									<ul class="listInline listInline--bullet">
										<li>{{ phrase('first_requested:') }} <xf:date time="{$entry.first_request_date}" /></li>
										<li>{{ phrase('last_requested:') }} <xf:date time="{$entry.last_request_date}" /></li>
									</ul>
								</div>
							</xf:cell>
							<xf:cell href="{{ link('logs/link-proxy', $entry) }}" class="dataList-cell--min"
								overlay="true">
								{$entry.hits|number}
							</xf:cell>
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($entries, $total) }}</span>
			</div>
		</div>
		<xf:pagenav page="{$page}" perpage="{$perPage}" total="{$total}"
			link="logs/link-proxy" params="{$filters}"
			wrapperclass="block-outer block-outer--after" />
	</div>
<xf:else />
	<div class="blockMessage">{{ phrase('no_entries_have_been_logged') }}</div>
</xf:if>]]></template>
  <template type="admin" title="log_link_proxy_view" version_id="2000051" version_string="2.0.0 Release Candidate 1"><![CDATA[<xf:title>{{ phrase('link_proxy_details') }}</xf:title>

<div class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:formrow label="{{ phrase('url') }}"><a href="{$link.url}" target="_blank">{$link.url}</a></xf:formrow>
			<xf:formrow label="{{ phrase('hits') }}">{$link.hits|number}</xf:formrow>
			<xf:formrow label="{{ phrase('first_requested') }}"><xf:date time="{$link.first_request_date}" /></xf:formrow>
			<xf:formrow label="{{ phrase('last_requested') }}"><xf:date time="{$link.last_request_date}" /></xf:formrow>

			<xf:if is="{$xf.options.imageLinkProxyReferrer.enabled} AND $link.Referrers is not empty">
				<xf:datalist class="dataList--separatedTop" data-xf-init="responsive-data-list">
					<xf:datarow rowtype="header">
						<xf:cell>{{ phrase('referrer') }}</xf:cell>
						<xf:cell>{{ phrase('hits') }}</xf:cell>
						<xf:cell>{{ phrase('first_seen') }}</xf:cell>
						<xf:cell>{{ phrase('last_seen') }}</xf:cell>
					</xf:datarow>
					<xf:foreach loop="$link.Referrers" value="$referrer">
						<xf:datarow rowclass="dataList-row--noHover">
							<xf:cell dir="auto"><a href="{$referrer.referrer_url}" target="_blank">{$referrer.referrer_url}</a></xf:cell>
							<xf:cell>{$referrer.hits|number}</xf:cell>
							<xf:cell><xf:date time="{$referrer.first_date}" /></xf:cell>
							<xf:cell><xf:date time="{$referrer.last_date}" /></xf:cell>
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</xf:if>
		</div>
	</div>
</div>]]></template>
  <template type="admin" title="log_moderator_list" version_id="2000170" version_string="2.0.1"><![CDATA[<xf:title>{{ phrase('moderator_log') }}</xf:title>

<xf:form action="{{ link('logs/moderator') }}" class="block">
	<div class="block-container">
		<div class="block-body block-row">
			<span>
				{{ phrase('filter_by_user:') }}
				<xf:select name="user_id" value="{$userId}" class="input--inline">
					<xf:option value="0">{{ phrase('any') }}</xf:option>
					<xf:options source="$logUsers" />
				</xf:select>
			</span>

			<xf:button type="submit">{{ phrase('filter') }}</xf:button>
		</div>
	</div>
</xf:form>

<xf:if is="$entries is not empty">
	<div class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:datalist data-xf-init="responsive-data-list">
					<xf:datarow rowtype="header">
						<xf:cell>{{ phrase('action') }}</xf:cell>
						<xf:cell>{{ phrase('user') }}</xf:cell>
						<xf:cell>{{ phrase('ip_address') }}</xf:cell>
						<xf:cell>{{ phrase('date') }}</xf:cell>
					</xf:datarow>
					<xf:foreach loop="$entries" value="$entry">
						<xf:datarow>
							<xf:cell>
								<div>
									<a href="{{ link('logs/moderator', $entry) }}" data-xf-click="overlay">{$entry.action_text}</a>
									<div class="dataList-subRow">{$entry.content_title}</div>
								</div>
							</xf:cell>
							<xf:cell><xf:username user="$entry.User" href="{{ link('users/edit', $entry.User) }}" /></xf:cell>
							<xf:cell class="u-ltr">{{ $entry.ip_address ? $entry.ip_address|ip : '' }}</xf:cell>
							<xf:cell><xf:date time="{$entry.log_date}" /></xf:cell>
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($entries, $total) }}</span>
			</div>
		</div>
		<xf:pagenav page="{$page}" perpage="{$perPage}" total="{$total}"
			link="logs/moderator" params="{$linkFilters}"
			wrapperclass="block-outer block-outer--after" />
	</div>
<xf:else />
	<div class="blockMessage">{{ phrase('no_entries_have_been_logged') }}</div>
</xf:if>]]></template>
  <template type="admin" title="log_moderator_view" version_id="2010170" version_string="2.1.1"><![CDATA[<xf:title>{{ phrase('moderator_log_entry') }}</xf:title>

<div class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:formrow label="{{ phrase('user') }}">
				<a href="{{ link('users/edit', $entry.User) }}">{$entry.User.username}</a>
			</xf:formrow>
			<xf:if is="$entry.ip_address">
				<xf:formrow label="{{ phrase('ip_address') }}">
					<a href="{{ link_type('public', 'misc/ip-info', null, {'ip': $entry.ip_address|ip}) }}" target="_blank" class="u-ltr">{$entry.ip_address|ip}</a>
				</xf:formrow>
			</xf:if>
			<xf:formrow label="{{ phrase('date') }}">
				<xf:date time="{$entry.log_date}" />
			</xf:formrow>
			<xf:formrow label="{{ phrase('action') }}">
				{$entry.action_text}
			</xf:formrow>
			<xf:formrow label="{{ phrase('content') }}">
				<a href="{{ base_url($entry.content_url) }}">{$entry.content_title}</a>
				<div class="u-muted">{{ phrase('by_user_x', {'name': $entry.content_username ?: phrase('n_a') }) }}</div>
			</xf:formrow>
		</div>
	</div>
</div>]]></template>
  <template type="admin" title="log_oembed_list" version_id="2000170" version_string="2.0.1"><![CDATA[<xf:title>{{ phrase('oembed_log') }}</xf:title>

<xf:form action="{{ link('logs/oembed') }}" class="block">
	<div class="block-container">
		<div class="block-body block-row">
			<span>
				<label>{{ phrase('media_provider_is:') }}
				<xf:select name="mediaSiteId" value="{$filters.mediaSiteId}}" class="input--inline">
					<xf:option value=""></xf:option>
					<xf:foreach loop="$mediaSites" value="$mediaSite">
						<xf:option value="{$mediaSite.media_site_id}">{$mediaSite.site_title}</xf:option>
					</xf:foreach>
				</xf:select></label>
			</span>
			<span>
				<label>{{ phrase('ordered_by:') }}
				<xf:select name="order" value="{{ $filters.order ? $filters.order : 'last_request_date' }}"
					class="input--inline">
					<xf:option value="last_request_date">{{ phrase('last_requested') }}</xf:option>
					<xf:option value="first_request_date">{{ phrase('first_requested') }}</xf:option>
					<xf:option value="views">{{ phrase('hits') }}</xf:option>
				</xf:select></label>
			</span>

			<xf:button type="submit">{{ phrase('go') }}</xf:button>
		</div>
	</div>
</xf:form>

<xf:if is="$entries is not empty">
	<div class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:datalist data-xf-init="responsive-data-list">
					<xf:datarow rowtype="header">
						<xf:cell>{{ phrase('media') }}</xf:cell>
						<xf:cell>{{ phrase('hits') }}</xf:cell>
					</xf:datarow>
					<xf:foreach loop="$entries" value="$entry">
						<xf:datarow>
							<xf:cell href="{{ link('logs/oembed', $entry) }}" overlay="true" overlaycache="false">
								<div class="dataList-textRow">
									<b>{$entry.BbCodeMediaSite.site_title}</b>:
									<span dir="auto">{{ $entry.title ? $entry.title : $entry.media_id }}</span>
								</div>
								<div class="dataList-subRow">
									<ul class="listInline listInline--bullet">
										<li>{{ phrase('first_requested:') }} <xf:date time="{$entry.first_request_date}" /></li>
										<li>{{ phrase('last_requested:') }} <xf:date time="{$entry.last_request_date}" /></li>
									</ul>
								</div>
							</xf:cell>
							<xf:cell href="{{ link('logs/oembed-item', $entry) }}" class="dataList-cell--min"
								overlay="true">
								{$entry.views|number}
							</xf:cell>
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
				<div class="block-footer">
					<span class="block-footer-counter">{{ display_totals($entries, $total) }}</span>
				</div>
			</div>
		</div>

		<xf:pagenav page="{$page}" perpage="{$perPage}" total="{$total}"
			link="logs/oembed" params="{$filters}"
			wrapperclass="block-outer block-outer--after" />
	</div>
<xf:else />
	<div class="blockMessage">{{ phrase('no_entries_have_been_logged') }}</div>
</xf:if>]]></template>
  <template type="admin" title="log_oembed_view" version_id="2000051" version_string="2.0.0 Release Candidate 1"><![CDATA[<xf:title>{{ phrase('oembed_media_details') }}</xf:title>

<xf:js src="xf/embed.js" min="1" />
<xf:page option="jsState.{$providerJs}" value="{{ true }}" />

<div class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:if is="$oembed.title">
				<xf:formrow label="{{ phrase('title') }}" explain="{$oembed.BbCodeMediaSite.site_title}: {$oembed.media_id}">
					{$oembed.title}
				</xf:formrow>
			<xf:else />
				<xf:formrow label="{{ phrase('title') }}">{$oembed.BbCodeMediaSite.site_title}: {$oembed.media_id}</xf:formrow>
			</xf:if>
			<xf:formrow label="{{ phrase('media') }}">
				<div>{$html|raw}</div>
				<a href="{$oembed.url}" target="_blank">{$oembed.url}</a>
			</xf:formrow>
			<xf:formrow label="{{ phrase('hits') }}">{$oembed.views|number}</xf:formrow>
			<xf:formrow label="{{ phrase('first_requested') }}"><xf:date time="{$oembed.first_request_date}" /></xf:formrow>
			<xf:formrow label="{{ phrase('last_requested') }}"><xf:date time="{$oembed.last_request_date}" /></xf:formrow>

			<xf:if is="{$xf.options.oEmbedRequestReferrer.enabled} AND $oembed.Referrers is not empty">
				<xf:datalist class="dataList--separatedTop" data-xf-init="responsive-data-list">
					<xf:datarow rowtype="header">
						<xf:cell>{{ phrase('referrer') }}</xf:cell>
						<xf:cell>{{ phrase('hits') }}</xf:cell>
						<xf:cell>{{ phrase('first_seen') }}</xf:cell>
						<xf:cell>{{ phrase('last_seen') }}</xf:cell>
					</xf:datarow>
					<xf:foreach loop="$oembed.Referrers" value="$referrer">
						<xf:datarow rowclass="dataList-row--noHover">
							<xf:cell dir="auto"><a href="{$referrer.referrer_url}" target="_blank">{$referrer.referrer_url}</a></xf:cell>
							<xf:cell>{$referrer.hits|number}</xf:cell>
							<xf:cell><xf:date time="{$referrer.first_date}" /></xf:cell>
							<xf:cell><xf:date time="{$referrer.last_date}" /></xf:cell>
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</xf:if>
		</div>
	</div>
</div>]]></template>
  <template type="admin" title="log_payment_provider_list" version_id="2000053" version_string="2.0.0 Release Candidate 3"><![CDATA[<xf:title>{{ phrase('payment_provider_log') }}</xf:title>

<xf:pageaction>
	<xf:button href="{{ link('logs/payment-provider/search') }}" icon="search">{{ phrase('search_logs') }}</xf:button>
</xf:pageaction>

<xf:if is="$entries is not empty">
	<div class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$entries" value="$entry">
						<xf:set var="$purchaseRequest" value="{$entry.PurchaseRequest}" />
						<xf:datarow>
							<xf:main href="{{ link('logs/payment-provider', $entry) }}" overlay="true">
								<xf:label>
									{{ $entry.log_type == 'payment' ? phrase('payment')
										: ($entry.log_type == 'info' ? phrase('information')
										: ($entry.log_type == 'error' ? phrase('error')
										: ($entry.log_type == 'cancel' ? phrase('cancellation')
										: ($entry.log_type))))
									}}{$xf.language.label_separator}
									<span dir="auto">{$entry.log_message}</span>
								</xf:label>
								<xf:explain>
									<ul class="listInline listInline--bullet">
										<li>{{ $purchaseRequest.PaymentProfile.title ?: phrase('unknown_payment_profile') }}</li>
										<li>{{ $purchaseRequest.Purchasable.title ?: phrase('unknown_purchasable') }}</li>
										<li><xf:date time="{$entry.log_date}" /></li>
										<li>{{ $purchaseRequest.User ? $purchaseRequest.User.username : phrase('unknown_user') }}</li>
									</ul>
								</xf:explain>
							</xf:main>
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($entries, $total) }}</span>
			</div>
		</div>
		<xf:pagenav page="{$page}" perpage="{$perPage}" total="{$total}"
			link="logs/payment-provider" params="{$linkParams}"
			wrapperclass="block-outer block-outer--after" />
	</div>
<xf:else />
	<div class="blockMessage">{{ phrase('no_entries_have_been_logged') }}</div>
</xf:if>]]></template>
  <template type="admin" title="log_payment_provider_search" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('payment_provider_log_search') }}</xf:title>

<xf:form action="{{ link('logs/payment-provider') }}" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:textboxrow name="purchase_request_key"
				label="{{ phrase('purchase_request_key') }}" />

			<xf:textboxrow name="transaction_id"
				label="{{ phrase('transaction_id') }}" />

			<xf:textboxrow name="subscriber_id"
				label="{{ phrase('subscriber_id') }}" />

			<xf:textboxrow name="username" ac="single"
				label="{{ phrase('user') }}" />

			<xf:selectrow name="payment_profile_id"
				label="{{ phrase('payment_profile') }}">

				<xf:option>{{ phrase('(any)') }}</xf:option>
				<xf:options source="$profiles" />
			</xf:selectrow>

			<xf:selectrow name="purchasable_type_id"
				label="{{ phrase('purchasable_type') }}">

				<xf:option label="{{ phrase('(any)') }}" />
				<xf:options source="$purchasables" />
			</xf:selectrow>
		</div>
		<xf:submitrow sticky="true" icon="search" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="log_payment_provider_view" version_id="2010170" version_string="2.1.1"><![CDATA[<xf:title>{{ phrase('payment_provider_log') }}</xf:title>

<div class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:formrow label="{{ phrase('action') }}">
				{{ $entry.log_type == 'payment' ? phrase('payment')
					: ($entry.log_type == 'info' ? phrase('information')
					: ($entry.log_type == 'error' ? phrase('error')
					: ($entry.log_type == 'cancel' ? phrase('cancellation')
					: ($entry.log_type))))
				}}{$xf.language.label_separator}
				<span dir="auto">{$entry.log_message}</span>
			</xf:formrow>

			<xf:formrow label="{{ phrase('user') }}">
				<xf:if is="$purchaseRequest.User">
					<xf:username user="$purchaseRequest.User" href="{{ link('logs/payment-provider', null, {'user_id': $purchaseRequest.User.user_id}) }}" />
				<xf:else />
					{{ phrase('unknown_user') }}
				</xf:if>
			</xf:formrow>

			<xf:formrow label="{{ phrase('date') }}">
				<xf:date time="{$entry.log_date}" />
			</xf:formrow>

			<xf:formrow label="{{ phrase('purchase_request_key') }}">
				<xf:if is="$entry.purchase_request_key">
					<a href="{{ link('logs/payment-provider', null, {'purchase_request_key': $entry.purchase_request_key}) }}">
						{$entry.purchase_request_key}
					</a>
				<xf:else />
					{{ phrase('n_a') }}
				</xf:if>
			</xf:formrow>

			<xf:formrow label="{{ phrase('transaction_id') }}">
				<xf:if is="$entry.transaction_id">
					<a href="{{ link('logs/payment-provider', null, {'transaction_id': $entry.transaction_id}) }}">
						{$entry.transaction_id}
					</a>
				<xf:else />
					{{ phrase('n_a') }}
				</xf:if>
			</xf:formrow>

			<xf:formrow label="{{ phrase('subscriber_id') }}">
				<xf:if is="$entry.subscriber_id">
					<a href="{{ link('logs/payment-provider', null, {'subscriber_id': $entry.subscriber_id}) }}">
						{$entry.subscriber_id}
					</a>
				<xf:else />
					{{ phrase('n_a') }}
				</xf:if>
			</xf:formrow>

			<xf:formrow label="{{ phrase('payment_profile') }}">
				<xf:if is="$purchaseRequest.PaymentProfile">
					<a href="{{ link('logs/payment-provider', null, {'payment_profile_id': $purchaseRequest.PaymentProfile.payment_profile_id}) }}">
						{$purchaseRequest.PaymentProfile.title}
					</a>
				<xf:else />
					{{ phrase('unknown_profile') }}
				</xf:if>
			</xf:formrow>
		</div>
	</div>
</div>

<xf:if is="$purchasable && $purchasableItem">
	<div class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:formrow label="{{ phrase('purchasable_details') }}">
					<a href="{{ link('logs/payment-provider', null, {'purchasable_type_id': {$purchasable.purchasable_type_id}}) }}">
						{$purchasable.title}
					</a>
				</xf:formrow>

				<xf:formrow label="{{ phrase('purchasable_item') }}">
					<a href="{$purchasableItem.link}">{$purchasableItem.title}</a>
				</xf:formrow>
			</div>
		</div>
	</div>
</xf:if>

<div class="block">
	<div class="block-container">
		<h2 class="block-header">{{ phrase('log_details') }}</h2>
		<div class="block-body block-body--contained block-row" dir="ltr">
			{{ dump_simple($entry.log_details) }}
		</div>
	</div>
</div>]]></template>
  <template type="admin" title="log_rejected_users_list" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('rejected_user_log') }}</xf:title>

<div class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:datalist data-xf-init="responsive-data-list">
				<xf:datarow rowtype="header">
					<xf:cell colspan="2">{{ phrase('rejected_user') }}</xf:cell>
					<xf:cell>{{ phrase('date') }}</xf:cell>
					<xf:cell>{{ phrase('rejected_by') }}</xf:cell>
					<xf:cell class="dataList-cell--min">&nbsp;</xf:cell>
				</xf:datarow>

				<xf:foreach loop="$rejections" value="$rejection">
					<xf:datarow>
						<xf:cell class="dataList-cell--min dataList-cell--image dataList-cell--imageSmall"
							href="{{ link('users/edit', $rejection.User) }}">
							<xf:avatar user="$rejection.User" size="s" href="" />
						</xf:cell>
						<xf:cell>
							<div>
								<xf:username user="$rejection.User" href="{{ link('users/edit', $rejection.User) }}" />
							</div>
						</xf:cell>
						<xf:cell>
							<xf:date time="{$rejection.reject_date}" />
						</xf:cell>
						<xf:cell>
							<xf:if is="$rejection.reject_user_id">
								<xf:username user="$rejection.RejectUser" href="{{ link('users/edit', $rejection.RejectUser) }}" />
							<xf:else />
								{{ phrase('n_a') }}
							</xf:if>
						</xf:cell>
						<xf:action href="{{ link('logs/rejected-users', $rejection.User) }}" overlay="true">
							{{ phrase('view') }}
						</xf:action>
					</xf:datarow>
					<xf:else />
					<xf:datarow>
						<xf:cell colspan="5">{{ phrase('no_entries_have_been_logged') }}</xf:cell>
					</xf:datarow>
				</xf:foreach>
			</xf:datalist>
		</div>
		<div class="block-footer">
			<span class="block-footer-counter">{{ display_totals($rejections, $total) }}</span>
		</div>
	</div>
	<xf:pagenav page="{$page}" perpage="{$perPage}" total="{$total}"
		link="logs/rejected-users" params="{$linkFilters}"
		wrapperclass="block-outer block-outer--after" />
</div>
]]></template>
  <template type="admin" title="log_rejected_users_view" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('rejected_user_log_entry') }}</xf:title>

<div class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:formrow label="{{ phrase('rejected_user') }}">
				<xf:username user="$entry.User" href="{{ link('users/edit', $entry.User) }}" />
			</xf:formrow>
			<xf:formrow label="{{ phrase('date') }}">
				<xf:date time="{$entry.reject_date}" />
			</xf:formrow>
			<xf:formrow label="{{ phrase('rejected_by') }}">
				<xf:if is="$entry.reject_user_id">
					<xf:username user="$entry.RejectUser" href="{{ link_type('users/edit', $entry.RejectUser) }}" />
				<xf:else />
					{{ phrase('n_a') }}
				</xf:if>
			</xf:formrow>
			<xf:formrow label="{{ phrase('reason') }}">
				<xf:if is="$entry.reject_reason">
					{$entry.reject_reason}
				<xf:else />
					{{ phrase('n_a') }}
				</xf:if>
			</xf:formrow>
		</div>
	</div>
</div>]]></template>
  <template type="admin" title="log_server_error_clear" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link('logs/server-errors/clear') }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('sure_you_want_to_clear_server_error_log') }}
			</xf:inforow>
		</div>
		<xf:submitrow submit="{{ phrase('clear') }}" rowtype="simple" icon="delete" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="log_server_error_list" version_id="2000033" version_string="2.0.0 Beta 3"><![CDATA[<xf:title>{{ phrase('server_error_logs') }}</xf:title>

<xf:pageaction if="$entries is not empty">
	<xf:button href="{{ link('logs/server-errors/clear') }}" icon="delete" overlay="true">
		{{ phrase('clear') }}
	</xf:button>
</xf:pageaction>

<xf:if is="$entries is not empty">
	<div class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$entries" value="$entry">
						<xf:datarow overlay="true"
							label="{{ $entry.message ?: '&nbsp;' }}"
							href="{{ link('logs/server-errors', $entry) }}"
							delete="{{ link('logs/server-errors/delete', $entry) }}"
							dir="auto">
							<xf:explain>
								<ul class="listInline listInline--bullet">
									<li><xf:date time="{$entry.exception_date}" /></li>
									<li>{$entry.filename}:{$entry.line}</li>
								</ul>
							</xf:explain>
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($entries, $total) }}</span>
			</div>
		</div>

		<xf:pagenav page="{$page}" perpage="{$perPage}" total="{$total}"
			link="logs/server-error"
			wrapperclass="block-outer block-outer--after" />
	</div>
<xf:else />
	<div class="blockMessage">{{ phrase('no_errors_have_been_logged') }}</div>
</xf:if>]]></template>
  <template type="admin" title="log_server_error_view" version_id="2000033" version_string="2.0.0 Beta 3"><![CDATA[<xf:title>{{ phrase('server_error_log') }}</xf:title>

<div class="block">
	<div class="block-container">
		<div class="block-body block-row">
			<ul class="listInline listInline--bullet u-ltr">
				<li><span class="u-dimmed">{$entry.exception_type}:</span> {$entry.message}</li>
				<li class="u-dimmed">{$entry.filename}:{$entry.line}</li>
			</ul>
			<ul class="listInline listInline--bullet u-muted">
				<li class="u-muted">{{ phrase('generated_by:') }} {{ $entry.User ? '<a href="' . link('users/edit', $entry.User) . '">' . $entry.User.username . '</a>' : phrase('unknown_account') }}</li>
				<li>{{ date_time($entry.exception_date) }}</li>
			</ul>
		</div>

		<h3 class="block-minorHeader">{{ phrase('stack_trace') }}</h3>
		<div class="block-body block-body--contained block-row" dir="ltr">
			<pre>{$entry.trace_string}</pre>
		</div>

		<h3 class="block-minorHeader">{{ phrase('request_state') }}</h3>
		<div class="block-body block-body--contained block-row" dir="ltr">
			{{ dump_simple($entry.request_state) }}
		</div>

		<div class="block-footer">
			<span class="block-footer-controls"><xf:button href="{{ link('logs/server-errors/delete', $entry) }}" icon="delete" overlay="true" /></span>
		</div>
	</div>
</div>]]></template>
  <template type="admin" title="log_sitemap_list" version_id="2000270" version_string="2.0.2"><![CDATA[<xf:title>{{ phrase('sitemap_log') }}</xf:title>

<xf:pageaction>
	<xf:button href="{{ base_url('sitemap.php') }}" icon="export">{{ phrase('download_sitemap') }}</xf:button>
</xf:pageaction>

<xf:if is="$entries is not empty">
	<div class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:datalist data-xf-init="responsive-data-list">
					<xf:datarow rowtype="header">
						<xf:cell>{{ phrase('start_date') }}</xf:cell>
						<xf:cell>{{ phrase('completion_date') }}</xf:cell>
						<xf:cell class="dataList-cell--min">{{ phrase('total_files') }}</xf:cell>
						<xf:cell class="dataList-cell--min">{{ phrase('total_urls') }}</xf:cell>
						<xf:cell class="dataList-cell--min">{{ phrase('compressed') }}</xf:cell>
					</xf:datarow>

					<xf:foreach loop="$entries" value="$entry">
						<xf:datarow rowclass="{{ $entry.is_active ? 'dataList-row--highlighted' : '' }}">
							<xf:cell>
								<xf:date time="{$entry.sitemap_id}" data-full-date="true" />
							</xf:cell>
							<xf:cell>
								<xf:if is="$entry.complete_date">
									<xf:date time="{$entry.complete_date}" data-full-date="true" />
								<xf:else />
									{{ phrase('n_a') }}
								</xf:if>
							</xf:cell>
							<xf:cell>{$entry.file_count|number}</xf:cell>
							<xf:cell>{$entry.entry_count|number}</xf:cell>
							<xf:cell>{{ $entry.is_compressed ? phrase('yes') : phrase('no') }}</xf:cell>
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($entries, $total) }}</span>
			</div>
		</div>
	</div>
<xf:else />
	<div class="blockMessage">{{ phrase('there_no_sitemap_logs_to_display') }}</div>
</xf:if>]]></template>
  <template type="admin" title="log_spam_cleaner_list" version_id="2000270" version_string="2.0.2"><![CDATA[<xf:title>{{ phrase('spam_cleaner_log') }}</xf:title>

<xf:if is="$entries is not empty">
	<div class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:datalist data-xf-init="responsive-data-list">
					<xf:datarow rowtype="header">
						<xf:cell>{{ phrase('user') }}</xf:cell>
						<xf:cell>{{ phrase('applied_by') }}</xf:cell>
						<xf:cell>{{ phrase('application_date') }}</xf:cell>
						<xf:cell>{{ phrase('restored') }}</xf:cell>
						<xf:cell class="dataList-cell--min">&nbsp;</xf:cell>
					</xf:datarow>

					<xf:foreach loop="$entries" value="$entry">
						<xf:datarow>
							<xf:cell>
								<xf:username user="$entry.User"
									defaultname="{$entry.username}"
									href="{{ $entry.User ? link('users/edit', $entry.User) : null }}" />
							</xf:cell>

							<xf:cell>
								<xf:username user="$entry.ApplyingUser"
									defaultname="{$entry.applying_username}"
									href="{{ $entry.ApplyingUser ? link_type('public', 'members', $entry.ApplyingUser) : null }}" />
							</xf:cell>

							<xf:cell>
								<xf:date time="$entry.application_date" />
							</xf:cell>

							<xf:cell>
								<xf:if is="$entry.restored_date">
									<xf:date time="$entry.restored_date" />
								<xf:else />
									{{ phrase('no') }}
								</xf:if>
							</xf:cell>

							<xf:cell href="{{ link('logs/spam-cleaner/restore', $entry) }}" overlay="true"
								class="dataList-cell--action">
								{{ phrase('restore') }}
							</xf:cell>
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($entries, $total) }}</span>
			</div>
		</div>
		<xf:pagenav page="{$page}" perpage="{$perPage}" total="{$total}"
			link="logs/spam-cleaner"
			wrapperclass="block-outer block-outer--after" />
	</div>
<xf:else />
	<div class="blockMessage">{{ phrase('no_entries_have_been_logged') }}</div>
</xf:if>]]></template>
  <template type="admin" title="log_spam_cleaner_restore" version_id="2000270" version_string="2.0.2"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link('logs/spam-cleaner/restore', $entry) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				<xf:if is="$entry.User">
					{{ phrase('please_confirm_that_you_want_to_restore_data_and_status_of_user:') }}
					<strong><a href="{{ link('users/edit', $entry.User) }}">{$entry.User.username}</a></strong>
				<xf:else />
					{{ phrase('please_confirm_that_you_want_to_restore_data_of_following_user:') }}
					<strong>{$entry.username}</strong>
				</xf:if>
			</xf:inforow>
		</div>
		<xf:submitrow submit="{{ phrase('restore') }}" rowtype="simple" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="log_spam_trigger_list" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('spam_trigger_log') }}</xf:title>

<xf:if is="$entries is not empty">
	<div class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$entries" value="$entry">
						<xf:datarow
							label="{{ $entry.User ? $entry.User.username : phrase('unknown_account') }} - {$entry.details}"
							href="{{ link('logs/spam-trigger', $entry) }}"
							overlay="true">
							<xf:explain>
								<ul class="listInline listInline--bullet">
									<li>{{ $entry.result == 'moderated' ? phrase('moderated') : phrase('rejected') }}</li>
									<li><xf:date time="$entry.log_date" /></li>
									<li>{{ phrase('content:') }} {$entry.content_type}</li>
								</ul>
							</xf:explain>
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($entries, $total) }}</span>
			</div>
		</div>
		<xf:pagenav page="{$page}" perpage="{$perPage}" total="{$total}"
			link="logs/spam-trigger"
			wrapperclass="block-outer block-outer--after" />
	</div>
<xf:else />
	<div class="blockMessage">{{ phrase('no_entries_have_been_logged') }}</div>
</xf:if>]]></template>
  <template type="admin" title="log_spam_trigger_view" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('spam_trigger_log') }}</xf:title>

<div class="block">
	<div class="block-container">
		<div class="block-body block-row">
			<ul class="listInline listInline--bullet">
				<li><span class="u-dimmed">{{ phrase('action:') }}</span> {{ $entry.result == 'moderated' ? phrase('moderated') : phrase('rejected') }}</li>
				<li class="u-dimmed">{$entry.details}</li>
			</ul>
			<ul class="listInline listInline--bullet u-muted">
				<li class="u-muted">{{ phrase('generated_by:') }} {{ $entry.User ? '<a href="' . link('users/edit', $entry.User) . '">' . $entry.User.username . '</a>' : phrase('unknown_account') }}</li>
				<li><xf:date time="$entry.log_date" /></li>
				<li>{{ phrase('content:') }} {$entry.content_type}</li>
			</ul>
		</div>

		<h3 class="block-minorHeader">{{ phrase('request_state') }}</h3>
		<div class="block-body block-body--contained block-row" dir="ltr">
			{{ dump_simple($entry.request_state) }}
		</div>
	</div>
</div>]]></template>
  <template type="admin" title="log_user_change_list" version_id="2000170" version_string="2.0.1"><![CDATA[<xf:title>{{ phrase('user_change_logs') }}</xf:title>

<xf:form action="{{ link('logs/user-change') }}" class="block">
	<div class="block-container">
		<div class="block-body block-row">
			<xf:textbox name="username" placeholder="{{ phrase('user_name...') }}" type="search" value="{{ $limitUser ? $limitUser.username : '' }}" class="input--inline" />
			<xf:button type="submit">{{ phrase('show_changes') }}</xf:button>
		</div>
	</div>
</xf:form>

<xf:if is="$changesGrouped">
	<div class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:macro template="user_change_log" name="change_log_list" arg-changesGrouped="{$changesGrouped}" />
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($totalChanges, $total) }}</span>
			</div>
		</div>

		<xf:pagenav page="{$page}" perpage="{$perPage}" total="{$total}"
			link="logs/user-change" params="{$linkFilters}"
			wrapperclass="block-outer block-outer--after" />
	</div>
<xf:else />
	<div class="blockMessage">{{ phrase('no_changes_have_been_logged') }}</div>
</xf:if>]]></template>
  <template type="admin" title="login_form" version_id="2010037" version_string="2.1.0 Beta 7"><![CDATA[<xf:page option="template">LOGIN_CONTAINER</xf:page>

<xf:form action="{{ link('login/login') }}" ajax="true" class="adminLogin-contentForm">
	<div><a href="{$xf.options.boardUrl}"><img src="{{ base_url('styles/default/xenforo/xenforo-logo.png') }}"
		srcset="{{ base_url('styles/default/xenforo/xenforo-logo2x.png 2x') }}" alt="XenForo Ltd." /></a></div>
	<!--<h1>{$xf.options.boardTitle}</h1>-->
	<dl class="adminLogin-row">
		<dt>{{ phrase('your_name_or_email_address:') }}</dt>
		<dd>
			<xf:textbox name="login" value="{$xf.visitor.username}"
				placeholder="{{ phrase('user_name_or_email...') }}"
				aria-label="{{ phrase('user_name_or_email') }}"
				autofocus="autofocus" />
			<xf:fa icon="fa-user" />
		</dd>
	</dl>
	<dl class="adminLogin-row">
		<dt>{{ phrase('password:') }}</dt>
		<dd>
			<xf:set var="$afterInput"><xf:fa icon="fa-key" /></xf:set>
			<xf:passwordbox name="password" placeholder="{{ phrase('password...') }}"
				aria-label="{{ phrase('password') }}"
				afterinputhtml="{$afterInput}" />
		</dd>
	</dl>
	<div class="adminLogin-row adminLogin-row--submit">
		<xf:button type="submit" icon="login">{{ phrase('admin_login') }}</xf:button>
		<div class="adminLogin-boardTitle">{$xf.options.boardTitle}</div>
	</div>
</xf:form>]]></template>
  <template type="admin" title="login_password_confirm" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('password_confirmation') }}</xf:title>

<xf:form action="{{ link('login/password-confirm') }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('to_access_this_page_you_must_first_confirm_your_password') }}
			</xf:inforow>

			<xf:formrow label="{{ phrase('user_name') }}">{$xf.visitor.username}</xf:formrow>

			<xf:passwordboxrow name="password" label="{{ phrase('password') }}" />
		</div>
		<xf:submitrow submit="{{ phrase('confirm') }}" />
	</div>
	<xf:redirect url="{{ $redirect ?: $xf.uri }}" />
</xf:form>]]></template>
  <template type="admin" title="login_two_step" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('two_step_verification_required') }}</xf:title>

<xf:page option="loginWide" value="{{ true }}" />

<xf:form action="{{ link('login/two-step') }}" ajax="true" class="block">
	<div class="block-container">
		<h2 class="block-tabHeader tabs hScroller" data-xf-init="h-scroller">
			<span class="hScroller-scroll">
			<xf:foreach loop="$providers" value="$tabProvider">
				<a href="{{ link('login/two-step', null, {'provider': $tabProvider.provider_id, 'remember': $remember ? 1 : null, '_xfRedirect': $redirect}) }}"
					class="tabs-tab {{ $tabProvider.provider_id == $providerId ? 'is-active' : '' }}">{$tabProvider.title}</a>
			</xf:foreach>
			</span>
		</h2>

		<div class="block-body">
			<xf:formrow label="{{ phrase('logging_in_as') }}">{$user.username}</xf:formrow>

			{{ $provider.render('login', $user, $providerData, $triggerData)|raw }}

			<xf:checkboxrow>
				<xf:option name="trust" value="1" hint="{{ phrase('trust_device_desc') }}" checked="{$trustChecked}">
					{{ phrase('trust_this_device_for_30_days') }}
				</xf:option>
			</xf:checkboxrow>
		</div>

		<xf:submitrow submit="{{ phrase('confirm') }}" />
	</div>

	<xf:hiddenval name="confirm">1</xf:hiddenval>
	<xf:hiddenval name="provider">{$providerId}</xf:hiddenval>
	<xf:hiddenval name="_xfRedirect">{$redirect}</xf:hiddenval>

</xf:form>]]></template>
  <template type="admin" title="logs" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('admin_navigation.logs') }}</xf:title>

<xf:macro template="section_nav_macros" name="section_nav" arg-section="logs" />]]></template>
  <template type="admin" title="member_stat_edit" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:if is="$memberStat.isInsert()">
	<xf:title>{{ phrase('add_member_stat') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_member_stat:') }} {$memberStat.title}</xf:title>
</xf:if>

<xf:pageaction if="$memberStat.isUpdate() AND $memberStat.canEdit()">
	<xf:button href="{{ link('member-stats/delete', $memberStat) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:if is="{{ !$memberStat.canEdit() }}">
	<div class="blockMessage blockMessage--important blockMessage--iconic">
		{{ phrase('only_limited_fields_in_item_may_be_edited') }}
	</div>
</xf:if>

<xf:form action="{{ link('member-stats/save', $memberStat) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:textboxrow name="title" value="{{ $memberStat.member_stat_id ? $memberStat.MasterTitle.phrase_text : '' }}"
				readonly="{{ !$memberStat.canEdit() }}"
				label="{{ phrase('title') }}" />

			<xf:textboxrow name="member_stat_key" value="{$memberStat.member_stat_key}"
				maxlength="{{ max_length($memberStat, 'member_stat_key') }}"
				readonly="{{ !$memberStat.canEdit() }}"
				label="{{ phrase('member_stat_key') }}" />

			<hr class="formRowSep" />

			<xf:radiorow name="user_criteria" readonly="{{ !$memberStat.canEdit() }}"
				label="{{ phrase('user_criteria') }}">
				<xf:option value="all" selected="!$memberStat.criteria"
					label="{{ phrase('all_valid_users') }}" />
				<xf:option value="searcher" selected="$memberStat.criteria"
					label="{{ phrase('searcher_criteria') }}"
					data-xf-init="disabler"
					data-container=".js-hiderContainer"
					data-hide="yes" />
			</xf:radiorow>

			<div class="js-hiderContainer">
				<hr class="formRowSep" />

				<xf:include template="helper_user_search_criteria">
					<xf:set var="$noSpecificUser" value="{{ true }}" />
					<xf:set var="$readOnly" value="{{ !$memberStat.canEdit() }}" />
				</xf:include>

				<hr class="formRowSep" />
			</div>

			<xf:if is="$memberStat.canEdit()">
				<xf:formrow label="{{ phrase('sort') }}" rowtype="input">
					<div class="inputPair">
						<xf:select name="sort_order" value="{$memberStat.sort_order}">
						<xf:options source="{$sortOrders}" />
					</xf:select>

					<xf:select name="sort_direction" value="{$memberStat.sort_direction}">
						<xf:option value="desc">{{ phrase('descending') }}</xf:option>
						<xf:option value="asc">{{ phrase('ascending') }}</xf:option>
					</xf:select>
					</div>
				</xf:formrow>
			<xf:else />
				<xf:formrow label="{{ phrase('sort') }}">
					{$sortOrders.{$memberStat.sort_order}}
					&middot;
					<xf:if is="$memberStat.sort_direction == 'desc'">
						{{ phrase('descending') }}
					<xf:else />
						{{ phrase('ascending') }}
					</xf:if>

					<xf:hiddenval name="sort_order">{$memberStat.sort_order}</xf:hiddenval>
					<xf:hiddenval name="sort_direction">{$memberStat.sort_direction}</xf:hiddenval>
				</xf:formrow>
			</xf:if>

			<xf:formrow rowtype="input"
				label="{{ phrase('php_callback') }}"
				explain="{{ phrase('member_stat_callback_explain') }}">

				<xf:macro template="helper_callback_fields" name="callback_fields"
					arg-data="{$memberStat}"
					arg-readOnly="{{ !$memberStat.canEdit() }}" />
			</xf:formrow>

			<hr class="formRowSep" />

			<xf:selectrow name="permission_limit" value="{$memberStat.permission_limit_}"
				disabled="{{ !$memberStat.canEdit() }}"
				readonly="{{ !$memberStat.canEdit() }}"
				label="{{ phrase('permission_limit') }}">
				<xf:option value="" label="{{ phrase('(none)') }}" />
				<xf:foreach loop="$permissionsData.interfaceGroups" key="$interfaceGroupId" value="$interfaceGroup">
					<xf:optgroup label="{$interfaceGroup.title}">
						<xf:foreach loop="{$permissionsData.permissionsGrouped.{$interfaceGroupId}}" value="{$permission}">
							<xf:option value="{$permission.permission_group_id}-{$permission.permission_id}">
								{$permission.title}
							</xf:option>
						</xf:foreach>
					</xf:optgroup>
				</xf:foreach>

				<xf:explain>{{ phrase('permission_limit_explain') }}</xf:explain>
			</xf:selectrow>

			<xf:checkboxrow label="{{ phrase('options') }}">
				<xf:option name="show_value" selected="$memberStat.show_value"
					readonly="{{ !$memberStat.canEdit() }}"
					label="{{ phrase('show_value') }}"
					hint="{{ phrase('if_enabled_and_provided_value_will_be_displayed_for_each_user') }}" />
				<xf:option name="overview_display" selected="$memberStat.overview_display"
					label="{{ phrase('show_on_overview_tab') }}"
					hint="{{
						phrase('if_enabled_top_5_members_of_this_stat_will_be_displayed_on_overview') . ' '
						. (($xf.development AND $memberStat.addon_id) ? phrase('field_value_maintained_addon_upgrade_explain') : '')
					}}" />
			</xf:checkboxrow>

			<xf:numberboxrow name="user_limit" value="{$memberStat.user_limit}" min="0" step="1"
				label="{{ phrase('user_limit') }}"
				explain="{{ ($xf.development AND $memberStat.addon_id) ? phrase('field_value_maintained_addon_upgrade_explain') : '' }}" />

			<xf:macro template="display_order_macros" name="row"
				arg-value="{$memberStat.display_order}"
				arg-explain="{{ ($xf.development AND $memberStat.addon_id) ? phrase('field_value_maintained_addon_upgrade_explain') : '' }}" />

			<xf:checkboxrow readonly="{{ !$memberStat.canEdit() }}">
				<xf:option selected="{$memberStat.cache_lifetime}"
					label="{{ phrase('enable_cache_and_cache_for_x_minutes:') }}">

					<xf:numberbox name="cache_lifetime" value="{{ $memberStat.cache_lifetime ?: 60 }}"
						min="0" readonly="{{ !$memberStat.canEdit() }}" />
				</xf:option>
			</xf:checkboxrow>

			<xf:checkboxrow>
				<xf:option name="active" selected="$memberStat.active"
					label="{{ phrase('member_stat_is_active') }}"
					hint="{{
						phrase('use_this_to_disable_member_stat_from_showing_on_members_page') . ' '
						. (($xf.development AND $memberStat.addon_id) ? phrase('field_value_maintained_addon_upgrade_explain') : '')
					}}" />
			</xf:checkboxrow>

			<xf:macro template="addon_macros" name="addon_edit" arg-addOnId="{$memberStat.addon_id}" />
		</div>

		<xf:submitrow icon="save" sticky="true" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="member_stat_list" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('member_stats') }}</xf:title>
<xf:description>{{ phrase('member_stats_description') }}</xf:description>

<xf:pageaction>
	<xf:button href="{{ link('member-stats/add') }}" icon="add">{{ phrase('add_member_stat') }}</xf:button>
</xf:pageaction>

<xf:if is="$memberStats is not empty">
	<xf:form action="{{ link('member-stats/toggle') }}" class="block" ajax="true">
		<div class="block-outer">
			<xf:macro template="filter_macros" name="quick_filter" arg-key="member_stats" arg-class="block-outer-opposite" />
		</div>
		<div class="block-container">
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$memberStats" value="$memberStat">
						<xf:datarow
							label="{$memberStat.title}"
							href="{{ link('member-stats/edit', $memberStat) }}"
							delete="{{ link('member-stats/delete', $memberStat) }}">

							<xf:toggle name="active[{$memberStat.member_stat_id}]" selected="$memberStat.active"
								class="dataList-cell--separated" submit="true"
								tooltip="{{ phrase('enable_disable_x', {'title': $memberStat.title}) }}" />
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($memberStats) }}</span>
			</div>
		</div>
	</xf:form>
<xf:else />
	<div class="blockMessage">{{ phrase('no_items_have_been_created_yet') }}</div>
</xf:if>]]></template>
  <template type="admin" title="message" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<div class="blockMessage">{$message|raw}</div>]]></template>
  <template type="admin" title="message_page" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<div class="blockMessage">{$message}</div>]]></template>
  <template type="admin" title="moderator_add_choice" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('add_moderator') }}</xf:title>

<xf:form action="{{ link('moderators/add') }}" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:textboxrow name="username" value="{$username}" type="search" ac="single"
				placeholder="{{ phrase('user_name...') }}"
				label="{{ phrase('moderator_user_name') }}" />

			<xf:radiorow name="type" value="{$type}"
				label="{{ phrase('type_of_moderator') }}">

				<xf:option value="_super" selected="true"
					label="{{ phrase('super_moderator') }}"
					hint="{{ phrase('super_moderator_can_moderate_entire_board') }}" />

				<xf:foreach loop="$typeChoices" key="$contentType" value="$options">
					<xf:option value="{$contentType}" label="{$options.label}">
						<xf:select name="{$options.name}" value="{$options.value}">
							<xf:foreach loop="$options.choices" value="$choice">
								<xf:option value="{$choice.value}" label="{$choice.label}" disabled="{$choice.disabled}" />
							</xf:foreach>
						</xf:select>
					</xf:option>
				</xf:foreach>
			</xf:radiorow>
		</div>
		<xf:submitrow submit="{{ phrase('add_moderator...') }}" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="moderator_edit" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('edit_moderator:') }} {$user.username}</xf:title>

<xf:pageaction if="$contentModerator ? $contentModerator.isUpdate() : $generalModerator.isUpdate()">
	<xf:if is="$contentModerator">
		<xf:button href="{{ link('moderators/content/delete', $contentModerator) }}" icon="delete" overlay="true" />
	<xf:else />
		<xf:button href="{{ link('moderators/super/delete', $generalModerator) }}" icon="delete" overlay="true" />
	</xf:if>
</xf:pageaction>

<xf:form action="{{ link('moderators/save') }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:formrow label="{{ phrase('type_of_moderator') }}">
				<xf:if is="$contentTitle">
					{$contentTitle}
					<xf:else />
					{{ phrase('super_moderator') }}
				</xf:if>
			</xf:formrow>

			<hr class="formRowSep" />

			<xf:checkboxrow>
				<xf:option name="is_staff" selected="$isStaff"
					label="{{ phrase('display_user_as_staff') }}"
					hint="{{ phrase('if_selected_this_user_will_be_listed_publicly_as_staff_member') }}" />
			</xf:checkboxrow>

			<xf:checkboxrow name="extra_user_group_ids[]" value="{{ $generalModerator.extra_user_group_ids }}"
				listclass="listColumns"
				rowid="addUserGroups"
				label="{{ phrase('add_moderator_to_user_groups') }}">

				<xf:hint>
					<xf:checkbox standalone="true">
						<xf:option check-all="#addUserGroups" label="{{ phrase('select_all') }}" />
					</xf:checkbox>
				</xf:hint>
				<xf:options source="$userGroups" />
			</xf:checkboxrow>

			<hr class="formRowSep" />

			<div id="piGroups">

				<xf:checkboxrow>
					<xf:option check-all="#piGroups" label="{{ phrase('select_all') }}" />
				</xf:checkboxrow>

				<xf:foreach loop="$interfaceGroups" key="$interfaceGroupId" value="$interfaceGroup">
					<xf:foreach loop="{$globalPermissions.{$interfaceGroupId}}" value="$permission">
						<xf:hiddenval
							name="globalPermissions[{$permission.permission_group_id}][{$permission.permission_id}]"
							value="unset" />
					</xf:foreach>
					<xf:foreach loop="{$contentPermissions.{$interfaceGroupId}}" value="$permission">
						<xf:hiddenval
							name="contentPermissions[{$permission.permission_group_id}][{$permission.permission_id}]"
							value="unset" />
					</xf:foreach>
				</xf:foreach>

				<xf:foreach loop="$interfaceGroups" key="$interfaceGroupId" value="$interfaceGroup">
					<xf:if is="{$globalPermissions.{$interfaceGroupId}}">
						<hr class="formRowSep" />

						<xf:checkboxrow listclass="listColumns"
							label="{$interfaceGroup.title}">
							<xf:hint>
								<xf:checkbox standalone="true">
									<xf:option check-all="< .formRow" label="{{ phrase('select_all') }}" />
								</xf:checkbox>
							</xf:hint>
							<xf:foreach loop="{$globalPermissions.{$interfaceGroupId}}" value="$permission">
								<xf:option name="globalPermissions[{$permission.permission_group_id}][{$permission.permission_id}]"
									value="allow"
									selected="{{ {$existingValues.{$permission.permission_group_id}.{$permission.permission_id}} == 'allow' }}"
									label="{$permission.title}" />
							</xf:foreach>
						</xf:checkboxrow>
					</xf:if>
				</xf:foreach>

				<xf:foreach loop="$interfaceGroups" key="$interfaceGroupId" value="$interfaceGroup">
					<xf:if is="{$contentPermissions.{$interfaceGroupId}}">
						<hr class="formRowSep" />

						<xf:checkboxrow listclass="listColumns"
							label="{$interfaceGroup.title}">
							<xf:hint>
								<xf:checkbox standalone="true">
									<xf:option check-all="< .formRow" label="{{ phrase('select_all') }}" />
								</xf:checkbox>
							</xf:hint>
							<xf:foreach loop="{$contentPermissions.{$interfaceGroupId}}" value="$permission">
								<xf:option name="contentPermissions[{$permission.permission_group_id}][{$permission.permission_id}]"
									value="content_allow"
									selected="{{ {$existingValues.{$permission.permission_group_id}.{$permission.permission_id}} == 'content_allow' }}"
									label="{$permission.title}" />
							</xf:foreach>
						</xf:checkboxrow>
					</xf:if>
				</xf:foreach>

			</div>
		</div>
		<xf:submitrow icon="save" />
	</div>

	<xf:hiddenval name="user_id">{$generalModerator.user_id}</xf:hiddenval>
	<xf:hiddenval name="content_type">{$contentModerator.content_type}</xf:hiddenval>
	<xf:hiddenval name="content_id">{$contentModerator.content_id}</xf:hiddenval>
</xf:form>]]></template>
  <template type="admin" title="moderator_list" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('moderators') }}</xf:title>

<xf:pageaction>
	<xf:button href="{{ link('moderators/add') }}" icon="add">{{ phrase('add_moderator') }}</xf:button>
</xf:pageaction>

<xf:if is="$superModerators OR $contentModerators">
	<xf:if is="$superModerators">
		<div class="block">
			<div class="block-container">
				<h2 class="block-header">{{ phrase('super_moderators') }}</h2>
				<div class="block-body">
					<xf:datalist>
						<xf:foreach loop="$superModerators" value="$superMod">
							<xf:datarow>
								<xf:cell class="dataList-cell--min dataList-cell--image dataList-cell--imageSmall"
									href="{{ link('moderators/super/edit', $superMod) }}">
									<xf:avatar user="$superMod.User" size="s" href="" />
								</xf:cell>
								<xf:main href="{{ link('moderators/super/edit', $superMod) }}"
									label="{$superMod.User.username}" />
								<xf:action href="{{ link('users/edit', $superMod.User) }}">{{ phrase('user_info') }}</xf:action>
								<xf:delete href="{{ link('moderators/super/delete', $superMod) }}" overlay="true" />
							</xf:datarow>
						</xf:foreach>
					</xf:datalist>
				</div>
			</div>
		</div>
	</xf:if>

	<xf:if is="$contentModerators">
		<div class="block">
			<div class="block-container">
				<h2 class="block-header">{{ phrase('content_moderators') }}</h2>
				<div class="block-body">
					<xf:datalist>
						<xf:foreach loop="$users" key="$userId" value="$user">
							<xf:if is="{$contentModerators.{$userId}}">
								<xf:datarow rowtype="subsection" rowclass="dataList-row--noHover">
									<xf:cell colspan="3">{$user.username}</xf:cell>
								</xf:datarow>
								<xf:foreach loop="{$contentModerators.{$userId}}" value="$contentMod">
									<xf:datarow>
										<xf:cell class="dataList-cell--min" />
										<xf:main href="{{ link('moderators/content/edit', $contentMod) }}"
											label="{$contentMod.getContentTitle()}" />
										<xf:delete href="{{ link('moderators/content/delete', $contentMod) }}" overlay="true" />
									</xf:datarow>
								</xf:foreach>
							</xf:if>
						</xf:foreach>
					</xf:datalist>
				</div>
			</div>
		</div>
	</xf:if>
<xf:else />
	<div class="blockMessage">{{ phrase('there_currently_no_moderators_use_link_create') }}</div>
</xf:if>]]></template>
  <template type="admin" title="moderator_super_delete" version_id="2010036" version_string="2.1.0 Beta 6"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{$confirmUrl}" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('please_confirm_that_you_want_to_remove_following_user_as_super_moderator:') }}
				<strong><a href="{$editUrl}">{$contentTitle}</a></strong>
				{{ phrase('if_user_is_content_moderator_as_well_moderation_privileges_removed') }}
			</xf:inforow>
		</div>
		<xf:submitrow rowtype="simple" icon="delete" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="navigation_delete" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link('navigation/delete', $navigation) }}" class="block" ajax="true">

	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('please_confirm_that_you_want_to_delete_following:') }}
				<strong><a href="{{ link('navigation/edit', $navigation) }}">{$navigation.title}</a></strong>
			</xf:inforow>

			<xf:if is="$hasChildren">
				<xf:inforow>
					<p class="block-rowMessage block-rowMessage--warning block-rowMessage--iconic">
						<strong>{{ phrase('note:') }}</strong>
						{{ phrase('deleting_parent_also_deletes_children') }}
					</p>
				</xf:inforow>
			</xf:if>
		</div>

		<xf:submitrow rowtype="simple" icon="delete" />
	</div>

	<xf:redirect />

</xf:form>]]></template>
  <template type="admin" title="navigation_edit" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:if is="$navigation.isInsert()">
	<xf:title>{{ phrase('add_navigation') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_navigation:') }} {$navigation.title}</xf:title>
</xf:if>

<xf:pageaction>
	<xf:if is="$navigation.canDelete()">
		<xf:button href="{{ link('navigation/delete', $navigation) }}" icon="delete" overlay="true" />
	</xf:if>
	<xf:if is="$navigation.is_customized">
		<xf:button href="{{ link('navigation/revert', $navigation) }}" overlay="true">{{ phrase('revert') }}</xf:button>
	</xf:if>
</xf:pageaction>

<xf:if is="$navigation.is_customized">
	<div class="blockMessage blockMessage--important blockMessage--iconic">
		{{ phrase('this_navigation_customized_your_changes_maintained') }}
	</div>
</xf:if>

<xf:if is="$xf.development AND $navigation.addon_id">
	<div class="blockMessage blockMessage--warning">
		{{ phrase('user_customizations_to_navigation_maintained_addon_upgrade') }}
	</div>
</xf:if>

<xf:form action="{{ link('navigation/save', $navigation) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:textboxrow name="navigation_id" value="{$navigation.navigation_id}" readonly="{{ !$navigation.canEdit() }}"
				maxlength="{{ max_length($navigation, 'navigation_id') }}"
				label="{{ phrase('navigation_id') }}"
				dir="ltr" />

			<xf:textboxrow name="title" value="{{ $navigation.exists() ? $navigation.MasterTitle.phrase_text : '' }}"
				readonly="{{ !$navigation.canEdit() }}"
				label="{{ phrase('title') }}" />

			<xf:selectrow name="parent_navigation_id" value="{$navigation.parent_navigation_id}"
				label="{{ phrase('parent_navigation_entry') }}">

				<xf:option value="">&nbsp;</xf:option>
				<xf:foreach loop="$navigationTree.getFlattened()" value="$treeEntry">
					<xf:option value="{$treeEntry.record.navigation_id}">{{ repeat('--', $treeEntry.depth) }}
						{$treeEntry.record.title}
					</xf:option>
				</xf:foreach>
			</xf:selectrow>

			<xf:macro template="display_order_macros" name="row"
				arg-value="{$navigation.display_order}" />

			<xf:radiorow name="navigation_type_id" value="{$selectedType}"
				label="{{ phrase('type') }}">

				<xf:foreach loop="$typeHandlers" key="$type" value="$handler">
					<xf:option value="{$type}" data-xf-init="disabler" data-container=".js-navTypeForm--{$type}" data-hide="true">{{ $handler.getTitle() }}</xf:option>
				</xf:foreach>
			</xf:radiorow>

			<hr class="formRowSep" />

			<xf:foreach loop="$typeHandlers" key="$type" value="$handler">
				<div class="js-navTypeForm js-navTypeForm--{$type}">
					{{ $handler.renderEditForm($navigation, $navigation.navigation_type_id == $type ? $navigation.type_config : [], 'config[' . $type . ']')|raw }}
				</div>
			</xf:foreach>

			<hr class="formRowSep" />

			<xf:checkboxrow>
				<xf:option name="enabled" selected="{$navigation.enabled}">{{ phrase('enabled') }}</xf:option>
			</xf:checkboxrow>

			<xf:macro template="addon_macros" name="addon_edit" arg-addOnId="{$navigation.addon_id}" />

		</div>

		<xf:submitrow sticky="true" icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="navigation_edit_type_basic" version_id="2000033" version_string="2.0.0 Beta 3"><![CDATA[<xf:textboxrow name="{$formPrefix}[link]" value="{$config.link}" code="true"
	label="{{ phrase('link') }}" />

<xf:textboxrow name="{$formPrefix}[display_condition]" value="{$config.display_condition}" code="true"
	label="{{ phrase('display_condition') }}"
	explain="{{ phrase('this_should_be_entered_as_template_style_expression') }}" />

<xf:formrow rowtype="input"
	label="{{ phrase('extra_attributes') }}">

	<ul class="listPlain inputGroup-container">
		<xf:foreach loop="{$config.extra_attributes}" key="$name" value="$value">
			<li class="inputGroup"dir="ltr" >
				<xf:textbox name="{$formPrefix}[extra_attr_names][]" value="{$name}" size="15" code="true"
					placeholder="{{ phrase('name') }}" />
				<span class="inputGroup-splitter"></span>
				<xf:textbox name="{$formPrefix}[extra_attr_values][]" value="{$value}" size="25" code="true"
					placeholder="{{ phrase('value') }}" />
			</li>
		</xf:foreach>
		<li class="inputGroup" data-xf-init="field-adder" dir="ltr" >
			<xf:textbox name="{$formPrefix}[extra_attr_names][]" size="15" code="true"
				placeholder="{{ phrase('name') }}" />
			<span class="inputGroup-splitter"></span>
			<xf:textbox name="{$formPrefix}[extra_attr_values][]" size="25" code="true"
				placeholder="{{ phrase('value') }}" />
		</li>
	</ul>
</xf:formrow>]]></template>
  <template type="admin" title="navigation_edit_type_callback" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:formrow rowtype="input"
	label="{{ phrase('callback') }}">

	<xf:macro template="helper_callback_fields" name="callback_fields"
		arg-className="{$formPrefix}[callback_class]"
		arg-methodName="{$formPrefix}[callback_method]"
		arg-classValue="{$config.callback.0}"
		arg-methodValue="{$config.callback.1}" />
</xf:formrow>

<xf:textboxrow name="{$formPrefix}[context]" value="{$config.context}"
	label="{{ phrase('context_value') }}"
	explain="{{ phrase('context_value_explain') }}" />]]></template>
  <template type="admin" title="navigation_edit_type_node" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:selectrow name="{$formPrefix}[node_id]" value="{$config.node_id}"
	label="{{ phrase('node') }}">

	<xf:option value="0">&nbsp;</xf:option>
	<xf:foreach loop="$nodeTree.getFlattened(0)" value="$treeEntry">
		<xf:option value="{$treeEntry.record.node_id}">{{ repeat('--', $treeEntry.depth) }} {$treeEntry.record.title}</xf:option>
	</xf:foreach>
</xf:selectrow>

<xf:checkboxrow>
	<xf:option name="{$formPrefix}[node_title]" selected="{$config.node_title}">
		{{ phrase('display_node_title_instead_of_navigation_entry_title') }}
	</xf:option>
	<xf:option name="{$formPrefix}[with_children]" selected="{$config.with_children}">
		{{ phrase('display_children_in_navigation') }}
	</xf:option>
</xf:checkboxrow>]]></template>
  <template type="admin" title="navigation_list" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('public_navigation') }}</xf:title>

<xf:pageaction>
	<div class="buttonGroup">
		<xf:button href="{{ link('navigation/add') }}" icon="add">{{ phrase('add_navigation') }}</xf:button>
		<xf:button href="{{ link('navigation/sort') }}" icon="sort" overlay="true" />
	</div>
</xf:pageaction>

<xf:form action="{{ link('navigation/toggle') }}" class="block" ajax="true">
	<div class="block-outer">
		<xf:macro template="filter_macros" name="quick_filter" arg-key="navigation" arg-class="block-outer-opposite" />
	</div>
	<div class="block-container">
		<div class="block-body">
			<xf:datalist>
				<xf:macro name="navigation_list" arg-children="{$tree}" />
			</xf:datalist>
		</div>
		<div class="block-footer">
			<span class="block-footer-counter">{{ display_totals($tree.getFlattened(0)) }}</span>
		</div>
	</div>
</xf:form>

<xf:macro name="navigation_list" arg-children="!" arg-depth="1">
	<xf:foreach loop="$children" value="$child">
		<xf:macro name="navigation_list_entry" arg-navigation="{$child.record}" arg-children="{$child.children}" arg-depth="{$depth}" />
	</xf:foreach>
</xf:macro>

<xf:macro name="navigation_list_entry" arg-navigation="!" arg-children="!" arg-depth="1" arg-defaultNavigationId="">
	<xf:if is="$depth == 1">
		<xf:datarow rowtype="subsection">
			<xf:if is="$navigation.navigation_id == $xf.app.defaultNavigationId">
				<xf:cell>{$navigation.title}</xf:cell>
				<xf:cell />
				<xf:cell />
				<xf:cell />
			<xf:else />
				<xf:cell href="{{ link('navigation/edit', $navigation) }}" hash="{$navigation.navigation_id}">{$navigation.title}</xf:cell>
				<xf:cell class="dataList-cell--min dataList-cell--hint">{$navigation.display_order}</xf:cell>
				<xf:toggle name="enabled[{$navigation.navigation_id}]" selected="$navigation.enabled"
					submit="true"
					tooltip="{{ phrase('enable_disable_x', {'title': $navigation.title}) }}" />
				<xf:delete href="{{ $navigation.canDelete() ? link('navigation/delete', $navigation) : '' }}" />
			</xf:if>
		</xf:datarow>
	<xf:else />
		<xf:datarow>
			<xf:cell href="{{ link('navigation/edit', $navigation) }}"
				hash="{$navigation.navigation_id}"
				class="dataList-cell--d{{ $depth - 1 }}">
				{$navigation.title}
			</xf:cell>
			<xf:cell class="dataList-cell--min dataList-cell--hint">{$navigation.display_order}</xf:cell>
			<xf:toggle name="enabled[{$navigation.navigation_id}]" selected="$navigation.enabled"
				class="dataList-cell--separated" submit="true"
				tooltip="{{ phrase('enable_disable_x', {'title': $navigation.title}) }}" />
			<xf:delete href="{{ $navigation.canDelete() ? link('navigation/delete', $navigation) : '' }}" />
		</xf:datarow>
	</xf:if>
	<xf:if is="$depth == 1 AND $children is empty">
		<xf:datarow rowclass="dataList-row--note dataList-row--noHover">
			<xf:cell colspan="3">{{ phrase('this_section_is_currently_empty') }}</xf:cell>
		</xf:datarow>
	<xf:else />
		<xf:macro name="navigation_list" arg-children="{$children}" arg-depth="{{ $depth + 1 }}" />
	</xf:if>
</xf:macro>]]></template>
  <template type="admin" title="navigation_revert" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link('navigation/revert', $navigation) }}" class="block" ajax="true">

	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('please_confirm_that_you_want_to_revert_the_following:') }}
				<strong><a href="{{ link('navigation/edit', $navigation) }}">{$navigation.title}</a></strong>
			</xf:inforow>
		</div>

		<xf:submitrow rowtype="simple" submit="{{ phrase('revert') }}" />
	</div>

	<xf:redirect />

</xf:form>]]></template>
  <template type="admin" title="navigation_sort" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('sort_navigation') }}</xf:title>

<xf:macro template="public:nestable_macros" name="setup" />

<xf:form action="{{ link('navigation/sort') }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<div class="nestable-container" data-xf-init="nestable" data-parent-id="">
				<xf:macro name="navigation_list" arg-children="{$navTree}" />
				<xf:hiddenval name="navigation" value="" />
			</div>
		</div>
		<xf:submitrow icon="save" rowtype="simple" />
	</div>
</xf:form>

<xf:macro name="navigation_list" arg-children="!">
	<ol class="nestable-list">
		<xf:foreach loop="$children" key="$id" value="$child">
			<xf:macro name="navigation_list_entry" arg-nav="{$child.record}" arg-children="{$child.children}" />
		</xf:foreach>
	</ol>
</xf:macro>

<xf:macro name="navigation_list_entry" arg-nav="!" arg-children="!">
	<li class="nestable-item" data-id="{$nav.navigation_id}">
		<div class="nestable-handle" aria-label="{{ phrase('drag_handle')|for_attr }}"><xf:fa icon="fa-bars" /></div>
		<div class="nestable-content">{$nav.title}</div>
		<xf:if is="$children is not empty">
			<xf:macro name="navigation_list" arg-children="{$children}" />
		</xf:if>
	</li>
</xf:macro>]]></template>
  <template type="admin" title="node_add" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('add_node') }}</xf:title>

<xf:form action="{{ link('nodes/add') }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:selectrow name="node_type_id"
				label="{{ phrase('node_type') }}">

				<xf:foreach loop="$nodeTypes" value="$nodeType">
					<xf:option value="{$nodeType.node_type_id}">{$nodeType.title}</xf:option>
				</xf:foreach>
			</xf:selectrow>
		</div>
		<xf:submitrow submit="{{ phrase('proceed...') }}" />
	</div>
	<xf:hiddenval name="parent_node_id">{$parentNodeId}</xf:hiddenval>
</xf:form>]]></template>
  <template type="admin" title="node_edit_macros" version_id="2000033" version_string="2.0.0 Beta 3"><![CDATA[<xf:macro name="title" arg-node="!">
	<xf:textboxrow name="node[title]" value="{$node.title}" label="{{ phrase('title') }}" />
</xf:macro>

<xf:macro name="description" arg-node="!">
	<xf:textarearow name="node[description]" value="{$node.description}" autosize="true"
		label="{{ phrase('description') }}"
		hint="{{ phrase('you_may_use_html') }}"
		explain="{{ phrase('node_description_explain') }}" />
</xf:macro>

<xf:macro name="node_name" arg-node="!" arg-optional="{{ true }}">
	<xf:textboxrow name="node[node_name]" value="{$node.node_name}"
		label="{{ phrase('url_portion') }}"
		hint="{{ $optional ? phrase('optional') : '' }}"
		explain="{{ $optional ? phrase('if_entered_url_to_forum_not_contain_id_change_breaks_urls') : '' }}"
		dir="ltr" />
</xf:macro>

<xf:macro name="position" arg-node="!" arg-nodeTree="!">
	<xf:selectrow name="node[parent_node_id]" value="{$node.parent_node_id}"
		label="{{ phrase('parent_node') }}">

		<xf:option value="0">{{ phrase('(none)') }}</xf:option>

		<xf:foreach loop="$nodeTree.getFlattened(0)" value="$treeEntry">
			<xf:option value="{$treeEntry.record.node_id}">{{ repeat('--', $treeEntry.depth) }} {$treeEntry.record.title}</xf:option>
		</xf:foreach>
	</xf:selectrow>

	<xf:macro template="display_order_macros" name="row"
		arg-name="node[display_order]"
		arg-value="{$node.display_order}"
		arg-explain="{{ phrase('position_of_this_item_relative_to_other_nodes_with_same_parent') }}" />

	<xf:checkboxrow>
		<xf:option name="node[display_in_list]" selected="$node.display_in_list"
			label="{{ phrase('display_in_node_list') }}"
			hint="{{ phrase('if_unselected_users_will_not_see_this_node_in_list') }}" />
	</xf:checkboxrow>
</xf:macro>

<xf:macro name="style" arg-node="!" arg-styleTree="!">
	<xf:checkboxrow>
		<xf:option name="style_override" selected="$node.style_id"
			label="{{ phrase('override_user_style_choice') }}"
			explain="{{ phrase('if_specified_all_visitors_view_using_selected_style') }}">

			<xf:select name="node[style_id]" value="{$node.style_id}">
				<xf:foreach loop="$styleTree.getFlattened(0)" value="$treeEntry">
					<xf:option value="{$treeEntry.record.style_id}">{{ repeat('--', $treeEntry.depth) }} {$treeEntry.record.title}</xf:option>
				</xf:foreach>
			</xf:select>

		</xf:option>
	</xf:checkboxrow>
</xf:macro>

<xf:macro name="navigation" arg-node="!" arg-navChoices="!">
	<xf:set var="$defaultValue" value="{{ $node.Parent.effective_navigation_id ?: 'forums' }}" />
	<xf:set var="$defaultNav" value="{$navChoices.{$defaultValue}}" />
	<xf:selectrow name="node[navigation_id]" value="{$node.navigation_id}"
		label="{{ phrase('navigation_section') }}"
		explain="{{ phrase('navigation_section_explain') }}">

		<xf:option value="">{{ phrase('default') . ($defaultNav ? ' (' . $defaultNav.title . ')' : '') }}</xf:option>

		<xf:foreach loop="$navChoices" value="$nav">
			<xf:if is="$nav.navigation_id != '_default'">
				<xf:option value="{$nav.navigation_id}">{$nav.title}</xf:option>
			</xf:if>
		</xf:foreach>
	</xf:selectrow>
</xf:macro>]]></template>
  <template type="admin" title="node_list" version_id="2000052" version_string="2.0.0 Release Candidate 2"><![CDATA[<xf:title>{{ phrase('nodes') }}</xf:title>

<xf:pageaction>
	<div class="buttonGroup">
		<xf:button href="{{ link('nodes/add') }}" icon="add" overlay="true">{{ phrase('add_node') }}</xf:button>
		<xf:button href="{{ link('nodes/sort') }}" icon="sort" overlay="true" />
	</div>
</xf:pageaction>

<xf:if is="$nodeTree.countChildren()">
	<div class="block">
		<div class="block-outer">
			<xf:macro template="filter_macros" name="quick_filter" arg-key="nodes" arg-class="block-outer-opposite" />
		</div>
		<div class="block-container">
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$nodeTree.getFlattened(0)" value="$treeEntry">
						<xf:set var="$node" value="{$treeEntry.record}" />
						<xf:datarow>
							<xf:cell class="dataList-cell--min"><i class="nodeIcon nodeIcon--{$node.NodeType.node_type_id}"></i></xf:cell>
							<xf:cell class="dataList-cell--link dataList-cell--main" hash="{$node.node_id}">
								<a href="{{ link('nodes/edit', $node) }}">
									<div class="u-depth{$treeEntry.depth}">
										<div class="dataList-mainRow">{$node.title} <span class="dataList-hint" dir="auto">{$node.NodeType.title}</span></div>
									</div>
								</a>
							</xf:cell>
							<xf:action
								class="{{ {$customPermissions.{$node.node_id}} ? 'dataList-cell--highlighted' : '' }}"
								href="{{ link('nodes/permissions', $node) }}">
								{{ phrase('permissions') }}
							</xf:action>
							<xf:if is="{$moderators.{$node.node_id}}">
								<xf:popup class="dataList-cell--action u-hideMedium"
									label="{{ phrase('moderators_count_x', {'moderators': count({$moderators.{$node.node_id}})}) }}">

									<div class="menu" data-menu="menu" aria-hidden="true">
										<div class="menu-content">
											<h3 class="menu-header">{{ phrase('moderators') }}</h3>
											<xf:foreach loop="{$moderators.{$node.node_id}}" value="$moderator">
												<a href="{{ link('moderators/content/edit', $moderator) }}" class="menu-linkRow">{$moderator.User.username}</a>
											</xf:foreach>
											<hr class="menu-separator" />
											<a href="{{ link('moderators/add', null, {'type': 'node', 'type_id': {'node': $node.node_id}}) }}" class="menu-linkRow">{{ phrase('add_moderator') }}</a>
										</div>
									</div>
								</xf:popup>
							<xf:else />
								<xf:action href="{{ link('moderators/add', null, {'type': 'node', 'type_id': {'node': $node.node_id}}) }}" class="u-hideMedium">{{ phrase('add_moderator') }}</xf:action>
							</xf:if>
							<xf:popup class="dataList-cell--action u-hideMedium"
								label="{{ phrase('add...') }}">

								<div class="menu" data-menu="menu" aria-hidden="true">
									<div class="menu-content">
										<h3 class="menu-header">{{ phrase('add...') }}</h3>
										<a href="{{ link('nodes/add', null, {'parent_node_id': $node.parent_node_id}) }}" class="menu-linkRow" data-xf-click="overlay">{{ phrase('sibling') }}</a>
										<a href="{{ link('nodes/add', null, {'parent_node_id': $node.node_id}) }}" class="menu-linkRow" data-xf-click="overlay">{{ phrase('child') }}</a>
									</div>
								</div>
							</xf:popup>
							<xf:delete href="{{ link('nodes/delete', $node) }}" />
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($nodeTree.getFlattened(0)) }}</span>
			</div>
		</div>
	</div>
<xf:else />
	<div class="blockMessage">{{ phrase('no_items_have_been_created_yet') }}</div>
</xf:if>]]></template>
  <template type="admin" title="node_permission_edit" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:if is="$userGroup">
	<xf:title>{$userGroup.title}</xf:title>
<xf:else />
	<xf:title>{$user.username}</xf:title>
</xf:if>

<xf:breadcrumb href="{{ link('nodes/permissions', $record) }}">{{ phrase('permissions:') }} {$record.title}</xf:breadcrumb>

<xf:macro template="permission_node_macros" name="edit"
	arg-node="{$record}"
	arg-permissionData="{$permissionData}"
	arg-typeEntries="{$typeEntries}"
	arg-routeBase="nodes/permissions"
	arg-saveParams="{$saveParams}" />]]></template>
  <template type="admin" title="node_permission_list" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('permissions:') }} {$record.title}</xf:title>

<xf:macro template="permission_node_macros" name="list"
	arg-node="{$record}"
	arg-isPrivate="{$isPrivate}"
	arg-userGroups="{$userGroups}"
	arg-users="{$users}"
	arg-entries="{$entries}"
	arg-routeBase="nodes/permissions" />]]></template>
  <template type="admin" title="node_permission_user" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{$node.title} - {$user.username} - {{ phrase('permissions') }}</xf:title>

<xf:form action="{{ link('nodes/permissions/user', $node, {'user_id': $user.user_id}) }}" ajax="true" class="block">
	<xf:macro template="permission_macros" name="edit_outer" arg-type="content" />

	<div class="block-container">
		<xf:macro template="permission_macros" name="content_edit_groups"
			arg-interfaceGroups="{$permissionData.interfaceGroups}"
			arg-permissionsGrouped="{$permissionData.permissionsGrouped}"
			arg-values="{$userEntries}" />
		<xf:submitrow sticky="true" icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="node_permission_user_group" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{$node.title} - {$userGroup.title} - {{ phrase('permissions') }}</xf:title>

<xf:form action="{{ link('nodes/permissions/user-group', $node, {'user_group_id': $userGroup.user_group_id}) }}"
	ajax="true" class="block">

	<xf:macro template="permission_macros" name="edit_outer" arg-type="content" />

	<div class="block-container">
		<xf:macro template="permission_macros" name="content_edit_groups"
			arg-permissionsGrouped="{$permissionData.permissionsGrouped}"
			arg-interfaceGroups="{$permissionData.interfaceGroups}"
			arg-values="{$groupEntries}" />
		<xf:submitrow sticky="true" icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="node_sort" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('sort_nodes') }}</xf:title>

<xf:macro template="public:nestable_macros" name="setup" />

<xf:form action="{{ link('nodes/sort') }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<div class="nestable-container" data-xf-init="nestable">
				<xf:macro name="node_list" arg-children="{$nodeTree}" />
				<xf:hiddenval name="nodes" value="" />
			</div>
		</div>
		<xf:submitrow icon="save" rowtype="simple" />
	</div>
</xf:form>

<xf:macro name="node_list" arg-children="!">
	<ol class="nestable-list">
		<xf:foreach loop="$children" key="$id" value="$child">
			<xf:macro name="node_list_entry" arg-node="{$child}" arg-children="{$child.children}" />
		</xf:foreach>
	</ol>
</xf:macro>

<xf:macro name="node_list_entry" arg-node="!" arg-children="!">
	<li class="nestable-item" data-id="{$node.id}">
		<div class="nestable-handle" aria-label="{{ phrase('drag_handle')|for_attr }}"><xf:fa icon="fa-bars" /></div>
		<div class="nestable-content">{$node.record.title}</div>
		<xf:if is="$node.children is not empty">
			<xf:macro name="node_list" arg-children="{$node.children}" />
		</xf:if>
	</li>
</xf:macro>]]></template>
  <template type="admin" title="notice_edit" version_id="2000036" version_string="2.0.0 Beta 6"><![CDATA[<xf:if is="$notice.isInsert()">
	<xf:title>{{ phrase('add_notice') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_notice:') }} {$notice.title}</xf:title>
</xf:if>

<xf:pageaction if="$notice.isUpdate()">
	<xf:button href="{{ link('notices/reset', $notice) }}" overlay="true">{{ phrase('reset') }}</xf:button>
	<xf:button href="{{ link('notices/delete', $notice) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('notices/save', $notice) }}" ajax="true" class="block">
	<div class="block-container">
		<h2 class="block-tabHeader tabs hScroller" data-xf-init="tabs h-scroller" role="tablist">
			<span class="hScroller-scroll">
				<a class="tabs-tab is-active" role="tab" tabindex="0" aria-controls="notice-options">{{ phrase('notice_options') }}</a>
				<xf:macro template="helper_criteria" name="user_tabs" />
				<xf:macro template="helper_criteria" name="page_tabs" />
			</span>
		</h2>

		<ul class="tabPanes block-body">
			<li class="is-active" role="tabpanel" id="notice-options">
				<xf:textboxrow name="title" value="{$notice.title}" maxlength="{{ max_length($notice, 'title') }}"
					label="{{ phrase('title') }}"
					explain="{{ phrase('notice_title_explain') }}" />

				<xf:codeeditorrow name="message" value="{$notice.message}"
					mode="html" data-line-wrapping="true"
					class="codeEditor--autoSize codeEditor--proportional"
					label="{{ phrase('message') }}"
					hint="{{ phrase('you_may_use_html') }}"
					explain="{{ phrase('the_message_to_be_shown_when_the_display_criteria_are_met') }}" />

				<hr class="formRowSep" />

				<xf:radiorow name="display_image" value="{$notice.display_image}"
					label="{{ phrase('display_image') }}">

					<xf:option value=""
						label="{{ phrase('no_image') }}" />
					<xf:option value="avatar"
						label="{{ phrase('show_visitors_avatar') }}" />
					<xf:option value="image"
						label="{{ phrase('specify_image:') }}">
						<xf:textbox name="image_url" value="{$notice.image_url}"
							maxlength="{{ max_length($notice, 'image_url') }}"
							dir="ltr" />
					</xf:option>
				</xf:radiorow>

				<xf:radiorow name="display_style" value="{$notice.display_style}"
					label="{{ phrase('display_styling') }}">

					<xf:option value="primary">{{ phrase('primary') }}</xf:option>
					<xf:option value="accent">{{ phrase('accent') }}</xf:option>
					<xf:option value="dark">{{ phrase('dark') }}</xf:option>
					<xf:option value="light">{{ phrase('light') }}</xf:option>
					<xf:option value="custom" label="{{ phrase('other_using_custom_css_class_name:') }}">
						<xf:textbox name="css_class" value="{$notice.css_class}"
							maxlength="{{ max_length($notice, 'css_class') }}"
							dir="ltr" />
					</xf:option>
				</xf:radiorow>

				<xf:radiorow name="visibility" value="{$notice.visibility}"
					label="{{ phrase('visibility') }}"
					explain="{{
						phrase('notice_visibility_explain',
						{
							'styleUrl': link(
								'styles/style-properties/group',
								{'style_id': $xf.options.defaultStyleId},
								{'group': 'page'}
							)
						})
					}}">

					<xf:option>{{ phrase('never_hide') }}</xf:option>
					<xf:option value="wide">{{ phrase('hide_wide', {'width': property('responsiveWide')}) }}</xf:option>
					<xf:option value="medium">{{ phrase('hide_medium', {'width': property('responsiveMedium')}) }}</xf:option>
					<xf:option value="narrow">{{ phrase('hide_narrow', {'width': property('responsiveNarrow')}) }}</xf:option>
				</xf:radiorow>

				<hr class="formRowSep" />

				<xf:radiorow name="notice_type" value="{$notice.notice_type}"
					label="{{ phrase('notice_type') }}"
					explain="{{ phrase('notice_display_type_desc') }}">

					<xf:foreach loop="$noticeTypes" key="$typeId" value="$typeValue">
						<xf:if is="$typeId == 'floating'">
							<xf:option value="{$typeId}"
								data-xf-init="disabler"
								data-container=".js-hiderContainer"
								data-hide="yes">{$typeValue}</xf:option>
						<xf:else />
							<xf:option value="{$typeId}">{$typeValue}</xf:option>
						</xf:if>
					</xf:foreach>

				</xf:radiorow>

				<div class="js-hiderContainer">

					<xf:numberboxrow name="display_duration" value="{$notice.display_duration}"
						min="0" max="3600000" step="100"
						label="{{ phrase('display_duration_milliseconds') }}"
						explain="{{ phrase('notice_display_length_desc') }}" />

					<xf:numberboxrow name="delay_duration" value="{$notice.delay_duration}"
						min="0" max="3600000" step="100"
						label="{{ phrase('delay_duration_milliseconds') }}"
						explain="{{ phrase('notice_fade_delay_desc') }}" />
				</div>

				<hr class="formRowSep" />

				<xf:checkboxrow label="{{ phrase('options') }}">
					<xf:option name="dismissible" selected="$notice.dismissible"
						label="{{ phrase('notice_may_be_dismissed') }}"
						hint="{{ phrase('users_may_hide_this_notice_when_they_have_read_it') }}">

						<xf:dependent>
							<xf:checkbox>
								<xf:option value="1" label="{{ phrase('automatically_dismiss_notice') }}"
									name="auto_dismiss" selected="$notice.auto_dismiss">
									<xf:hint>{{ phrase('automatically_dismiss_notice_explain') }}</xf:hint>
								</xf:option>
							</xf:checkbox>
						</xf:dependent>

					</xf:option>
					<xf:option name="active" selected="$notice.active"
						label="{{ phrase('notice_is_active') }}"
						hint="{{ phrase('use_this_to_temporarily_disable_this_notice') }}" />
				</xf:checkboxrow>

				<xf:macro template="display_order_macros" name="row"
					arg-value="{$notice.display_order}" />
			</li>

			<xf:macro template="helper_criteria" name="user_panes"
				arg-criteria="{{ $userCriteria.getCriteriaForTemplate() }}"
				arg-data="{{ $userCriteria.getExtraTemplateData() }}" />

			<xf:macro template="helper_criteria" name="page_panes"
				arg-criteria="{{ $pageCriteria.getCriteriaForTemplate() }}"
				arg-data="{{ $pageCriteria.getExtraTemplateData() }}" />

		</ul>

		<xf:submitrow sticky="true" icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="notice_list" version_id="2000670" version_string="2.0.6"><![CDATA[<xf:title>{{ phrase('notices') }}</xf:title>

<xf:pageaction>
	<xf:button href="{{ link('notices/add') }}" icon="add">{{ phrase('add_notice') }}</xf:button>
</xf:pageaction>

<xf:if is="$notices is not empty">
	<xf:if is="$invalidNotices">
		<div class="blockMessage blockMessage--important">
			{{ phrase('following_notices_may_contain_page_criteria_which_is_no_longer_matched:') }}
			<ul class="listInline listInline--comma">
				<xf:foreach loop="$invalidNotices" value="$invalidNotice">
					<li><a href="{{ link('notices/edit', $invalidNotice) }}">{$invalidNotice.title}</a></li>
				</xf:foreach>
			</ul>
		</div>
	</xf:if>

	<xf:form action="{{ link('notices/toggle') }}" class="block" ajax="true">
		<div class="block-outer">
			<xf:macro template="filter_macros" name="quick_filter" arg-key="notices" arg-class="block-outer-opposite" />
		</div>
		<div class="block-container">
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$noticeTypes" key="$typeId" value="$phrase" if="{$notices.{$typeId}} is not empty">
						<tbody class="dataList-rowGroup">
							<xf:datarow rowtype="subsection" rowclass="dataList-row--noHover">
								<xf:cell colspan="3">{$phrase}</xf:cell>
							</xf:datarow>
							<xf:foreach loop="{$notices.{$typeId}}" value="$notice">
								<xf:datarow
									label="{$notice.title}"
									href="{{ link('notices/edit', $notice) }}"
									delete="{{ link('notices/delete', $notice) }}">
									<xf:toggle name="active[{$notice.notice_id}]" selected="$notice.active"
										class="dataList-cell--separated" submit="true"
										tooltip="{{ phrase('enable_disable_x', {'title': $notice.title}) }}" />
								</xf:datarow>
							</xf:foreach>
						</tbody>
					</xf:foreach>
				</xf:datalist>
				<div class="block-footer">
					<span class="block-footer-counter">{{ display_totals($totalNotices) }}</span>
				</div>
			</div>
		</div>
	</xf:form>
<xf:else />
	<div class="blockMessage">{{ phrase('no_items_have_been_created_yet') }}</div>
</xf:if>

<xf:macro template="option_macros" name="option_form_block" arg-options="{$options}" />]]></template>
  <template type="admin" title="notice_reset" version_id="2000038" version_string="2.0.0 Beta 8"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link('notices/reset', $notice) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('please_confirm_that_you_want_to_reset_following_notice:') }}
				<strong><a href="{{ link('notices/edit', $notice) }}">{$notice.title}</a></strong>
				{{ phrase('resetting_notice_display_to_all_users_matching_not_restore_guests') }}
			</xf:inforow>
		</div>
		<xf:submitrow rowtype="simple" submit="{{ phrase('reset') }}" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="option_edit" version_id="2000033" version_string="2.0.0 Beta 3"><![CDATA[<xf:if is="$option.isInsert()">
	<xf:title>{{ phrase('add_option') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_option:') }} {$option.title}</xf:title>
</xf:if>

<xf:if is="$group">
	<xf:breadcrumb href="{{ link('options/groups', $group) }}">{$group.title}</xf:breadcrumb>
</xf:if>

<xf:pageaction if="$option.isUpdate()">
	<xf:button href="{{ link('options/delete', $option, {'_xfRedirect': $redirect}) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('options/save', $option) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">

			<xf:textboxrow name="option_id" value="{$option.option_id}"
				label="{{ phrase('option_id') }}"
				hint="{{ phrase('a_z_0_9_and_underscore_only') }}"
				dir="ltr" />

			<xf:macro template="addon_macros" name="addon_edit" arg-addOnId="{$option.addon_id}" />

			<hr class="formRowSep" />

			<xf:textboxrow name="title" value="{{ $option.exists() ? $option.MasterTitle.phrase_text : '' }}"
				label="{{ phrase('title') }}" />

			<xf:textarearow name="explain" value="{{ $option.exists() ? $option.MasterExplain.phrase_text : '' }}" autosize="true"
				label="{{ phrase('explanation') }}"
				hint="{{ phrase('you_may_use_html') }}" />

			<hr class="formRowSep" />

			<xf:selectrow name="edit_format" value="{$option.edit_format}"
				label="{{ phrase('edit_format') }}">

				<xf:option value="textbox">{{ phrase('text_box') }}</xf:option>
				<xf:option value="spinbox">{{ phrase('spin_box') }}</xf:option>
				<xf:option value="onoff">{{ phrase('on_off_check_box') }}</xf:option>
				<xf:option value="onofftextbox">{{ phrase('on_off_check_box_with_text_box') }}</xf:option>
				<xf:option value="radio">{{ phrase('radio_buttons') }}</xf:option>
				<xf:option value="select">{{ phrase('select_menu') }}</xf:option>
				<xf:option value="checkbox">{{ phrase('check_boxes') }}</xf:option>
				<xf:option value="template">{{ phrase('named_template') }}</xf:option>
				<xf:option value="callback">{{ phrase('php_callback') }}</xf:option>
				<xf:option value="username">{{ phrase('user_name_input') }}</xf:option>
			</xf:selectrow>

			<xf:textarearow name="edit_format_params" value="{$option.edit_format_params}" autosize="true"
				label="{{ phrase('format_parameters') }}"
				code="true" />

			<hr class="formRowSep" />

			<xf:selectrow name="data_type" value="{{ $option.data_type ?: 'string' }}"
				label="{{ phrase('data_type') }}">

				<xf:option value="boolean">{{ phrase('boolean') }}</xf:option>
				<xf:option value="string">{{ phrase('string') }}</xf:option>
				<xf:option value="integer">{{ phrase('integer') }}</xf:option>
				<xf:option value="unsigned_integer">{{ phrase('unsigned_integer') }}</xf:option>
				<xf:option value="positive_integer">{{ phrase('positive_integer') }}</xf:option>
				<xf:option value="numeric">{{ phrase('numeric') }}</xf:option>
				<xf:option value="unsigned_numeric">{{ phrase('unsigned_numeric') }}</xf:option>
				<xf:option value="array">{{ phrase('array') }}</xf:option>
			</xf:selectrow>

			<xf:textarearow name="default_value" value="{{ $option.data_type == 'array' ? $option.default_value|json : $option.default_value }}"
				autosize="true"
				label="{{ phrase('default_value') }}"
				code="true" />

			<xf:textarearow name="sub_options" autosize="true"
				value="{$option.sub_options|join('
')}"
				label="{{ phrase('array_sub_options') }}"
				dir="ltr" />

			<xf:formrow rowtype="input"
				label="{{ phrase('validation_callback') }}">
				<xf:macro template="helper_callback_fields" name="callback_fields"
					arg-namePrefix="validation"
					arg-data="{$option}" />
			</xf:formrow>

			<hr class="formRowSep" />

			<xf:checkboxrow listclass="listColumns"
				label="{{ phrase('display_in_groups') }}">

				<xf:foreach loop="$groups" value="$group">
					<xf:option name="relations[{$group.group_id}][selected]" selected="{$relations.{$group.group_id}} !== null"
						label="{$group.title}" data-hide="true">

						<xf:macro template="display_order_macros" name="input"
							arg-name="relations[{$group.group_id}][display_order]"
							arg-value="{$relations.{$group.group_id}|default(1)}" />
					</xf:option>
				</xf:foreach>

			</xf:checkboxrow>
		</div>
		<xf:submitrow icon="save" sticky="true" />
	</div>
	<xf:redirect url="{$redirect}" />
</xf:form>]]></template>
  <template type="admin" title="option_group_edit" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:if is="$group.isInsert()">
	<xf:title>{{ phrase('add_option_group') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_option_group:') }} {$group.title}</xf:title>
</xf:if>

<xf:if is="$group.isUpdate()">
	<xf:breadcrumb href="{{ link('options/groups', $group) }}">{$group.title}</xf:breadcrumb>

	<xf:pageaction>
		<xf:button href="{{ link('options/groups/delete', $group) }}" icon="delete" overlay="true" />
	</xf:pageaction>
</xf:if>

<xf:form action="{{ link('options/groups/save', $group) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">

			<xf:textboxrow name="group_id" value="{$group.group_id}"
				label="{{ phrase('group_id') }}"
				dir="ltr" />

			<hr class="formRowSep" />

			<xf:textboxrow name="title" value="{{ $group.exists() ? $group.MasterTitle.phrase_text : '' }}"
				label="{{ phrase('title') }}" />

			<xf:textarearow name="description" value="{{ $group.exists() ? $group.MasterDescription.phrase_text : '' }}"
				autosize="true"
				label="{{ phrase('description') }}"
				hint="{{ phrase('you_may_use_html') }}" />

			<xf:textboxrow name="icon" value="{$group.icon}"
				label="{{ phrase('icon') }}" />

			<hr class="formRowSep" />

			<xf:macro template="display_order_macros" name="row"
				arg-value="{$group.display_order}" />

			<xf:checkboxrow>
				<xf:option name="debug_only" selected="{$group.debug_only}">{{ phrase('display_this_group_in_debug_mode_only') }}</xf:option>
			</xf:checkboxrow>

			<xf:macro template="addon_macros" name="addon_edit" arg-addOnId="{$group.addon_id}" />
		</div>

		<xf:submitrow icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="option_group_list" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('options') }}</xf:title>

<xf:pageaction if="$canAdd">
	<xf:button href="{{ link('options/groups/add') }}" icon="add">{{ phrase('add_option_group') }}</xf:button>
</xf:pageaction>

<div class="block">
	<div class="block-outer">
		<xf:macro template="filter_macros" name="quick_filter" arg-key="options" arg-class="block-outer-opposite" />
	</div>
	<div class="block-container">
		<div class="block-body">
			<xf:datalist>
				<xf:foreach loop="$groups" value="$group">
					<xf:datarow
						icon="{{ $group.icon ?: 'fa-cogs' }}"
						label="{$group.title}"
						href="{{ link('options/groups', $group) }}"
						explain="{$group.description}"
						delete="{{ $group.canEdit() ? link('options/groups/delete', $group) : false }}"
						hash="{$group.group_id}">

						<xf:if is="$group.canEdit()">
							<xf:action href="{{ link('options/groups/edit', $group) }}">{{ phrase('edit') }}</xf:action>
						</xf:if>
					</xf:datarow>
				</xf:foreach>
			</xf:datalist>
		</div>
		<div class="block-footer">
			<span class="block-footer-counter">{{ display_totals($groups) }}</span>
		</div>
	</div>
</div>]]></template>
  <template type="admin" title="option_group_menu" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[<h3 class="menu-header">{{ phrase('options') }}</h3>
<ul class="listPlain listColumns listColumns--3 listColumns--together">
	<xf:foreach loop="$groups" key="$groupId" value="$group">
		<li>
			<a class="menu-linkRow" href="{{ link('options/groups', {'group_id': $groupId}) }}">
				<xf:if is="$group.icon">
					<xf:fa icon="{$group.icon} fa-fw" />
				<xf:else />
					<xf:fa icon="fa-cogs fa-fw" />
				</xf:if>
				{$group.title}
			</a>
		</li>
	</xf:foreach>
</ul>]]></template>
  <template type="admin" title="option_list" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{$group.title}</xf:title>
<xf:h1>
	<span class="menuTrigger" data-xf-click="menu" role="button" tabindex="0" aria-expanded="false" aria-haspopup="true">{$group.title}</span>
	<div class="menu menu--medium" data-menu="menu" aria-hidden="true">
		<div class="menu-content">
			<h3 class="menu-header">{{ phrase('options_groups') }}</h3>
			<div class="menu-scroller">
				<xf:foreach loop="$groups" value="$_group">
					<a href="{{ link('options/groups/', $_group) }}" class="menu-linkRow {{ $_group.group_id == $group.group_id ? 'is-selected' : '' }}">
						<xf:if is="$_group.icon">
							<xf:fa icon="{$_group.icon} fa-fw" />
						<xf:else />
							<xf:fa icon="fa-cogs fa-fw" />
						</xf:if>
						{$_group.title}
					</a>
				</xf:foreach>
			</div>
		</div>
	</div>
</xf:h1>
<xf:description>{$group.description}</xf:description>

<xf:pageaction><xf:trim>
	<xf:if is="$canAdd">
		<xf:button href="{{ link('options/add', null, {'group_id': $group.group_id}) }}" icon="add">{{ phrase('add_option') }}</xf:button>
	</xf:if>
	<xf:if is="$group.canEdit()">
		<xf:button href="{{ link('options/groups/edit', $group) }}" icon="edit">{{ phrase('edit_group') }}</xf:button>
	</xf:if>
</xf:trim></xf:pageaction>

<xf:macro template="option_macros" name="option_form_block" arg-group="{$group}" arg-options="{$group.Options}" />]]></template>
  <template type="admin" title="option_macros" version_id="2010132" version_string="2.1.1 Beta 2"><![CDATA[<xf:macro name="option_row" arg-group="" arg-option="!" arg-includeAddOnHint="{{ true }}">
	<xf:set var="$formatParams" value="{$option.formatParams}" />

	<xf:set var="$inputName"><xf:macro name="input_name" arg-id="{$option.option_id}" /></xf:set>
	<xf:set var="$listedHtml">
		<xf:macro name="listed_html" arg-id="{$option.option_id}" />
	</xf:set>
	<xf:set var="$hintHtml"><xf:trim>
		<xf:if is="$option.canEdit()">
			<xf:macro name="option_edit_link" arg-group="{$group}" arg-option="{$option}" />
		</xf:if>
		<xf:if is="$includeAddOnHint AND $group AND $option.addon_id AND $option.addon_id != $group.addon_id AND $option.addon_id != 'XF'">
			<span class="formRow-hint-featured">
				<a href="{{ link('add-ons/options', $option.AddOn) }}">{$option.AddOn.title}</a>
			</span>
		</xf:if>
	</xf:trim></xf:set>
	<xf:set var="$explainHtml">{$option.explain}</xf:set>

	<span class="u-anchorTarget" id="{$option.option_id}"></span>

	<xf:if is="$option.edit_format == 'onoff'">
		<xf:checkboxrow hint="{$hintHtml}">
			<xf:option name="{$inputName}" value="1" selected="$option.option_value == 1">
				<xf:label>{$option.title}</xf:label>
			</xf:option>
			<xf:explain>{$explainHtml}</xf:explain>
			<xf:finalhtml>{$listedHtml}</xf:finalhtml>
		</xf:checkboxrow>
	<xf:elseif is="$option.edit_format == 'onofftextbox'" />
		<xf:checkboxrow hint="{$hintHtml}">
			<xf:option name="{$inputName}[{$formatParams.onoff}]" value="1" selected="{$option.option_value.{$formatParams.onoff}}">
				<xf:label>{$option.title}</xf:label>
				<xf:dependent>
					<xf:if is="{$formatParams.type} == 'spinbox'">
						<xf:numberbox name="{$inputName}[{$formatParams.value}]" value="{{ $option.option_value.{$formatParams.onoff} ? $option.option_value.{$formatParams.value} : $formatParams.default|nl2nl }}" min="{$formatParams.min}" max="{$formatParams.max}" step="{$formatParams.step}" data-step="{$formatParams.stepOverride}" units="{$formatParams.units}" />
					<xf:elseif is="{$formatParams.type} == 'textarea'" />
						<xf:textarea name="{$inputName}[{$formatParams.value}]" value="{{ $option.option_value.{$formatParams.onoff} ? $option.option_value.{$formatParams.value} : $formatParams.default|nl2nl }}" maxlength="{$formatParams.maxlength}" rows="{$formatParams.rows}" autosize="true" />
					<xf:else />
						<xf:textbox name="{$inputName}[{$formatParams.value}]" value="{{ $option.option_value.{$formatParams.onoff} ? $option.option_value.{$formatParams.value} : $formatParams.default|nl2nl }}" placeholder="{$formatParams.placeholder}" maxlength="{$formatParams.maxlength}" />
					</xf:if>
				</xf:dependent>
			</xf:option>
			<xf:explain>{$explainHtml}</xf:explain>
			<xf:finalhtml>{$listedHtml}</xf:finalhtml>
		</xf:checkboxrow>
	<xf:elseif is="$option.edit_format == 'radio'" />
		<xf:radiorow name="{$inputName}" value="{$option.option_value}">
			<xf:options source="{$formatParams}" />
			<xf:label>{$option.title}</xf:label>
			<xf:hint>{$hintHtml}</xf:hint>
			<xf:explain>{$explainHtml}</xf:explain>
			<xf:finalhtml>{$listedHtml}</xf:finalhtml>
		</xf:radiorow>
	<xf:elseif is="$option.edit_format == 'select'" />
		<xf:selectrow name="{$inputName}" value="{$option.option_value}">
			<xf:options source="{$formatParams}" />
			<xf:label>{$option.title}</xf:label>
			<xf:hint>{$hintHtml}</xf:hint>
			<xf:explain>{$explainHtml}</xf:explain>
			<xf:finalhtml>{$listedHtml}</xf:finalhtml>
		</xf:selectrow>
	<xf:elseif is="$option.edit_format == 'checkbox'" />
		<xf:checkboxrow>
			<xf:foreach loop="$formatParams" key="$name" value="$text">
				<xf:option name="{$inputName}[{$name}]" selected="{$option.option_value.{$name}}">{$text}</xf:option>
			</xf:foreach>
			<xf:label>{$option.title}</xf:label>
			<xf:hint>{$hintHtml}</xf:hint>
			<xf:explain>{$explainHtml}</xf:explain>
			<xf:finalhtml>{$listedHtml}</xf:finalhtml>
		</xf:checkboxrow>
	<xf:elseif is="$option.edit_format == 'spinbox'" />
		<xf:numberboxrow name="{$inputName}" value="{$option.option_value}"
			min="{$formatParams.min}" max="{$formatParams.max}" step="{$formatParams.step}" data-step="{$formatParams.stepOverride}" units="{$formatParams.units}"
			label="{$option.title}"
			hint="{$hintHtml}"
			explain="{$explainHtml}"
			finalhtml="{$listedHtml}" />
	<xf:elseif is="$option.edit_format == 'callback'" />
		<xf:set var="$includeHtml">{{ $option.renderDisplayCallback({
				'explainHtml': $explainHtml,
				'hintHtml': $hintHtml,
				'listedHtml': $listedHtml,
				'inputName': $inputName
			})|raw }}</xf:set>
		<xf:if is="$includeHtml is empty">
			<xf:formrow>
				<div class="blockMessage blockMessage--error blockMessage--iconic">
					DEBUG: {{ $option.getDisplayCallbackError() }}
					{$hintHtml}
				</div>
			</xf:formrow>
		<xf:else />
			{$includeHtml}
		</xf:if>
	<xf:elseif is="$option.edit_format == 'template'" />
		<xf:set var="$includeHtml"><xf:include template="{$formatParams.template}" /></xf:set>
		<xf:if is="$includeHtml is empty">
			<xf:formrow>
				<div class="blockMessage blockMessage--error blockMessage--iconic">
					DEBUG: Template {$formatParams.template} not found.
					{$hintHtml}
				</div>

			</xf:formrow>
		<xf:else />
			{$includeHtml}
		</xf:if>
	<xf:elseif is="$option.edit_format == 'textbox' && $formatParams.rows && $formatParams.rows > 1" />
		<xf:textarearow name="{$inputName}" value="{$option.option_value}" rows="{$formatParams.rows}" autosize="true" class="{$formatParams.class}">
			<xf:label>{$option.title}</xf:label>
			<xf:hint>{$hintHtml}</xf:hint>
			<xf:explain>{$explainHtml}</xf:explain>
			<xf:finalhtml>{$listedHtml}</xf:finalhtml>
		</xf:textarearow>
	<xf:elseif is="$option.edit_format == 'textbox'" />
		<xf:textboxrow name="{$inputName}" value="{$option.option_value}" type="{$formatParams.type}" class="{$formatParams.class}">
			<xf:label>{$option.title}</xf:label>
			<xf:hint>{$hintHtml}</xf:hint>
			<xf:explain>{$explainHtml}</xf:explain>
			<xf:finalhtml>{$listedHtml}</xf:finalhtml>
		</xf:textboxrow>
	<xf:elseif is="$option.edit_format == 'username'" />
		<xf:set var="$singleUserName" value="{{ true }}" />
		<xf:if is="$option.isDataTypeNumeric()">
			<xf:set var="$user" value="{$xf.app.em.find('XF:User', $option.option_value)}" />
			<xf:set var="$value" value="{$user.username}" />
		<xf:elseif is="$option.data_type == 'array'" />
			<xf:set var="$users" value="{{ $xf.app.em.getRepository('XF:User').getUsersByIdsOrdered(is_array($option.option_value) ? $option.option_value : []) }}" />
			<xf:set var="$value" value="{$users.pluckNamed('username')|join(', ')}" />
			<xf:set var="$singleUserName" value="{{ false }}" />
		<xf:else />
			<xf:set var="$value" value="{$option.option_value}" />
		</xf:if>

		<xf:if is="$singleUserName">
			<xf:textboxrow name="{$inputName}" value="{$value}" ac="single" autocomplete="off"
				maxlength="{{ max_length($xf.visitor, 'username') }}">
				<xf:label>{$option.title}</xf:label>
				<xf:hint>{$hintHtml}</xf:hint>
				<xf:explain>{$explainHtml}</xf:explain>
				<xf:finalhtml>{$listedHtml}</xf:finalhtml>
			</xf:textboxrow>
		<xf:else />
			<xf:tokeninputrow name="{$inputName}" value="{$value}" href="{{ link('users/find') }}"
				explain="{{ phrase('separate_names_with_comma') }}">

				<xf:label>{$option.title}</xf:label>
				<xf:hint>{$hintHtml}</xf:hint>
				<xf:explain>{$explainHtml}</xf:explain>
				<xf:finalhtml>{$listedHtml}</xf:finalhtml>
			</xf:tokeninputrow>
		</xf:if>
	<xf:else />
		<xf:formrow>
			<div class="blockMessage blockMessage--error blockMessage--iconic">
				DEBUG: Unknown edit format {$option.edit_format}.
				{$hintHtml}
			</div>
		</xf:formrow>
	</xf:if>
</xf:macro>

<xf:macro name="input_name" arg-id="!">options[{$id}]</xf:macro>

<xf:macro name="listed_html" arg-id="!"><xf:hiddenval name="options_listed[]">{$id}</xf:hiddenval></xf:macro>

<xf:macro name="option_edit_link" arg-group="" arg-option="!">
	<xf:if is="$group">
		{$option.option_id} {$option.Relations.{$group.group_id}.display_order|parens}
	</xf:if>
	<a href="{{ link('options/edit', $option, $group ? {'group_id': $group.group_id} : {}) }}"
		title="{$option.option_id}{{ $group ? ' / ' . {$option.Relations.{$group.group_id}.display_order} : '' }}"
		data-xf-init="tooltip"
	>{{ phrase('edit') }}</a>
</xf:macro>

<xf:macro name="option_form" arg-group="" arg-options="!" arg-formClass="">
	<xf:form action="{{ link('options/update') }}" ajax="true" class="{$formClass}">
		<xf:foreach loop="$options" value="$option">
			<xf:macro  name="option_row" arg-group="{$group}" arg-option="{$option}" />
		</xf:foreach>
		<xf:submitrow sticky="true" icon="save" />
	</xf:form>
</xf:macro>

<xf:macro name="option_form_block" arg-group="" arg-options="!" arg-containerBeforeHtml="">

	<xf:set var="$hundred" value="0" />

	<xf:if is="$options is not empty">
		<xf:form action="{{ link('options/update') }}" ajax="true" class="block">
			<div class="block-container">
				{$containerBeforeHtml|raw}
				<div class="block-body">
					<xf:foreach loop="$options" value="$option">

						<xf:if is="$group">
							<xf:set var="$curHundred" value="{{ floor($option.Relations.{$group.group_id}.display_order / 100) }}" />
							<xf:if is="{{ $curHundred > $hundred }}">
								<xf:set var="$hundred" value="{$curHundred}" />
								<hr class="formRowSep" />
							</xf:if>
						</xf:if>

						<xf:macro name="option_row" arg-group="{$group}" arg-option="{$option}" />
					</xf:foreach>
				</div>
				<xf:submitrow sticky="true" icon="save" />
			</div>
		</xf:form>
	</xf:if>
</xf:macro>]]></template>
  <template type="admin" title="option_template_allowVideoUploads" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:checkboxrow
	hint="{$hintHtml}"
	explain="{$explainHtml}"
	html="{$listedHtml}">

	<xf:option name="{$inputName}[enabled]" selected="$option.option_value.enabled" label="{$option.title}">
		<xf:dependent>
			<div class="inputGroup">
				<xf:numberbox name="{$inputName}[size]" min="1" max="{$max}"
					value="{{ ($option.option_value.enabled ? $option.option_value.size : $xf.options.attachmentMaxFileSize) }}" />
				<span class="inputGroup--splitter"></span>
				<span class="inputGroup-text">{{ phrase('units_kb') }}</span>
			</div>
		</xf:dependent>
	</xf:option>
</xf:checkboxrow>]]></template>
  <template type="admin" title="option_template_attachmentMaxDimensions" version_id="2000051" version_string="2.0.0 Release Candidate 1"><![CDATA[<xf:formrow rowtype="input"
	label="{$option.title}"
	hint="{$hintHtml}"
	explain="{$explainHtml}"
	html="{$listedHtml}">

	<div class="inputGroup inputGroup--numbers">
		<xf:numberbox name="{$inputName}[width]" min="0" required="{{ false }}" value="{$option.option_value.width}" placeholder="{{ phrase('width') }}" />
		<span class="inputGroup-text">x</span>
		<xf:numberbox name="{$inputName}[height]" min="0" required="{{ false }}" value="{$option.option_value.height}" placeholder="{{ phrase('height') }}" />
		<span class="inputGroup-text">{{ phrase('units_pixels') }}</span>
	</div>
</xf:formrow>]]></template>
  <template type="admin" title="option_template_autoEmbedMedia" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:radiorow name="{$inputName}[embedType]" value="{$option.option_value.embedType}"
	label="{$option.title}"
	hint="{$hintHtml}"
	explain="{$explainHtml}"
	html="{$listedHtml}">

	<xf:option value="0" label="{{ phrase('do_not_auto_embed_media_links') }}" />
	<xf:option value="1" label="{{ phrase('auto_embed_media_links') }}" />
	<xf:option value="2" label="{{ phrase('auto_embed_media_and_add_link_in_this_bb_code') }}">
		<xf:dependent>
			<xf:textbox name="{$inputName}[linkBbCode]" value="{$option.option_value.linkBbCode}" size="30" code="true" />
			<dfn class="inputChoices-explain">{{ phrase('include_url_token') }}</dfn>
		</xf:dependent>
	</xf:option>
</xf:radiorow>]]></template>
  <template type="admin" title="option_template_automatedEmailHandler" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:checkboxrow
	label="{$option.title}"
	hint="{$hintHtml}"
	explain="{$explainHtml}"
	html="{$listedHtml}">

	<xf:option name="{$inputName}[enabled]" value="1" selected="$option.option_value.enabled"
		label="{{ phrase('enable_automated_email_handler') }}" data-hide="true">
		<xf:dependent>
			<div class="inputChoices-spacer">{{ phrase('connection_type') }}</div>
			<xf:radio name="{$inputName}[type]" value="{{ $option.option_value.type ? $option.option_value.type : 'pop3' }}">
				<xf:option value="pop3">POP3</xf:option>
				<xf:option value="imap">IMAP</xf:option>
			</xf:radio>

			<div class="inputChoices-spacer">{{ phrase('host') }}</div>
			<div class="inputGroup">
				<xf:textbox name="{$inputName}[host]" value="{$option.option_value.host}" placeholder="{{ phrase('host') }}" size="40" id="{$inputName}_host" />
				<span class="inputGroup-text">:</span>
				<xf:textbox name="{$inputName}[port]" value="{$option.option_value.port}" placeholder="{{ phrase('port') }}" size="5" />
			</div>

			<div class="inputChoices-spacer">{{ phrase('user_name_and_password') }}</div>
			<div class="inputGroup">
				<xf:textbox name="{$inputName}[username]" value="{$option.option_value.username}" placeholder="{{ phrase('user_name') }}" size="15" id="{$inputName}_username" />
				<span class="inputGroup-splitter"></span>
				<xf:passwordbox name="{$inputName}[password]" value="{$option.option_value.password}" size="15" hideshow="false" />
			</div>

			<div class="inputChoices-spacer">{{ phrase('encryption') }}</div>
			<xf:radio name="{$inputName}[encryption]" value="{{ $option.option_value.encryption ? $option.option_value.encryption : '' }}">
				<xf:option>{{ phrase('none') }}</xf:option>
				<xf:option value="tls">TLS</xf:option>
				<xf:option value="ssl">SSL</xf:option>
			</xf:radio>
		</xf:dependent>
	</xf:option>
</xf:checkboxrow>]]></template>
  <template type="admin" title="option_template_captcha" version_id="2001070" version_string="2.0.10"><![CDATA[<xf:set var="$extraKeysInput"><xf:macro template="option_macros" name="input_name" arg-id="extraCaptchaKeys" /></xf:set>
<xf:radiorow name="{$inputName}" value="{$option.option_value}"
	label="{$option.title}"
	hint="{$hintHtml}"
	explain="{$explainHtml}">

	<xf:option value="">{{ phrase('none') }}</xf:option>

	<!--[XF:captcha_after_none]-->

	<xf:option value="ReCaptcha" data-hide="true">
		<xf:label>{{ phrase('use_recaptcha') }}</xf:label>
		<xf:hint>{{ phrase('recaptcha_config_hint') }}</xf:hint>
		<xf:dependent>
			<div>{{ phrase('site_key:') }}</div>
			<xf:textbox name="{$extraKeysInput}[reCaptchaSiteKey]" value="{$xf.options.extraCaptchaKeys.reCaptchaSiteKey}" />
		</xf:dependent>
		<xf:dependent>
			<div>{{ phrase('secret_key:') }}</div>
			<xf:textbox name="{$extraKeysInput}[reCaptchaSecretKey]" value="{$xf.options.extraCaptchaKeys.reCaptchaSecretKey}" />
		</xf:dependent>
		<xf:dependent>
			<xf:checkbox>
				<xf:option name="{$extraKeysInput}[reCaptchaInvisible]" selected="{$xf.options.extraCaptchaKeys.reCaptchaInvisible}">{{ phrase('use_invisible_recaptcha') }}</xf:option>
			</xf:checkbox>
		</xf:dependent>
	</xf:option>

	<!--[XF:captcha_after_recaptcha]-->

	<xf:option value="Question">
		<xf:label>{{ phrase('use_question_captcha') }}</xf:label>
		<xf:hint><a href="{{ link('captcha-questions') }}">{{ phrase('define_your_questions') }}</a></xf:hint>
	</xf:option>
	<xf:option value="TextCaptcha" data-hide="true">
		<xf:label>{{ phrase('use_textcaptcha') }}</xf:label>
		<xf:hint><a href="http://textcaptcha.com/" target="_blank">http://textcaptcha.com/</a></xf:hint>
		<xf:dependent>
			<div>{{ phrase('api_key:') }}</div>
			<xf:textbox name="{$extraKeysInput}[textCaptchaApiKey]" value="{$xf.options.extraCaptchaKeys.textCaptchaApiKey}" />
		</xf:dependent>
	</xf:option>

	<!--[XF:captcha_after_question]-->

	<xf:option value="SolveMedia" data-hide="true">
		<xf:label>{{ phrase('use_solve_media') }}</xf:label>
		<xf:hint><a href="https://www.solvemedia.com/" target="_blank">https://www.solvemedia.com/</a></xf:hint>
		<xf:dependent>
			<div>{{ phrase('challenge_key:') }}</div>
			<xf:textbox name="{$extraKeysInput}[solveMediaCKey]" value="{$xf.options.extraCaptchaKeys.solveMediaCKey}" />
		</xf:dependent>
		<xf:dependent>
			<div>{{ phrase('verification_key:') }}</div>
			<xf:textbox name="{$extraKeysInput}[solveMediaVKey]" value="{$xf.options.extraCaptchaKeys.solveMediaVKey}" />
		</xf:dependent>
	</xf:option>

	<!--[XF:captcha_after_solvemedia]-->

	<xf:option value="KeyCaptcha" data-hide="true">
		<xf:label>{{ phrase('use_keycaptcha') }}</xf:label>
		<xf:hint><a href="https://www.keycaptcha.com/" target="_blank">https://www.keycaptcha.com/</a></xf:hint>
		<xf:dependent>
			<div>{{ phrase('user_id:') }}</div>
			<xf:textbox name="{$extraKeysInput}[keyCaptchaUserId]" value="{$xf.options.extraCaptchaKeys.keyCaptchaUserId}" />
		</xf:dependent>
		<xf:dependent>
			<div>{{ phrase('private_key:') }}</div>
			<xf:textbox name="{$extraKeysInput}[keyCaptchaPrivateKey]" value="{$xf.options.extraCaptchaKeys.keyCaptchaPrivateKey}" />
		</xf:dependent>
	</xf:option>

	<!--[XF:captcha_after_keycaptcha]-->

	<xf:html>
		{$listedHtml}
		<xf:macro template="option_macros" name="listed_html" arg-id="extraCaptchaKeys" />
	</xf:html>
</xf:radiorow>]]></template>
  <template type="admin" title="option_template_censorWords" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:formrow rowtype="input"
	label="{$option.title}"
	hint="{$hintHtml}"
	explain="{$explainHtml}"
	html="{$listedHtml}">

	<ul class="listPlain inputGroup-container">
		<xf:foreach loop="$choices" key="$counter" value="$choice">
			<li class="inputGroup">
				<xf:textbox name="{$inputName}[{$counter}][word]" value="{$choice.word}" placeholder="{{ phrase('word_or_phrase') }}" size="20" />
				<span class="inputGroup-splitter"></span>
				<xf:textbox name="{$inputName}[{$counter}][replace]" value="{$choice.replace}" placeholder="{{ phrase('replacement_optional') }}" size="20" />
			</li>
		</xf:foreach>

		<li class="inputGroup" data-xf-init="field-adder" data-increment-format="{$inputName}[{counter}]">
			<xf:textbox name="{$inputName}[{$nextCounter}][word]" placeholder="{{ phrase('word_or_phrase') }}" size="20" />
			<span class="inputGroup-splitter"></span>
			<xf:textbox name="{$inputName}[{$nextCounter}][replace]" placeholder="{{ phrase('replacement_optional') }}" size="20" />
		</li>
	</ul>
</xf:formrow>]]></template>
  <template type="admin" title="option_template_collectServerStats" version_id="2000170" version_string="2.0.1"><![CDATA[<xf:checkboxrow
	hint="{$hintHtml}"
	explain="{$explainHtml}"
	html="{$listedHtml}">

	<xf:option name="{$inputName}[enabled]" selected="$option.option_value.enabled" label="{$option.title}" />
</xf:checkboxrow>

<xf:hiddenval name="{$inputName}[configured]">1</xf:hiddenval>
<xf:hiddenval name="{$inputName}[installation_id]">{$option.option_value.installation_id}</xf:hiddenval>
<xf:hiddenval name="{$inputName}[last_sent]">{$option.option_value.last_sent}</xf:hiddenval>]]></template>
  <template type="admin" title="option_template_contactUrl" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:radiorow name="{$inputName}[type]" value="{$option.option_value.type}"
	label="{$option.title}"
	hint="{$hintHtml}"
	explain="{$explainHtml}"
	html="{$listedHtml}">

	<xf:option value="" label="{{ phrase('no_contact_url') }}" />

	<xf:option value="default" label="{{ phrase('default_url:') }} {{ link_type('public', 'canonical:misc/contact') }}" />

	<xf:option value="custom" label="{{ phrase('custom_url') }}">
		<xf:textbox name="{$inputName}[custom]" value="{$option.option_value.custom}" />
		<xf:dependent>
			<xf:checkbox standalone="true">
				<xf:option name="{$inputName}[overlay]" selected="{$option.option_value.overlay}" label="{{ phrase('open_in_overlay') }}" />
			</xf:checkbox>
		</xf:dependent>
	</xf:option>
</xf:radiorow>



]]></template>
  <template type="admin" title="option_template_emailBounceHandler" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:include template="option_template_automatedEmailHandler" />]]></template>
  <template type="admin" title="option_template_emailSoftBounceThreshold" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:formrow rowtype="inputLabelPair"
	label="{$option.title}"
	hint="{$hintHtml}"
	explain="{$explainHtml}"
	html="{$listedHtml}">

	<dl class="inputLabelPair">
		<dt><label for="{$inputName}_0">{{ phrase('minimum_number_of_bounces') }}</label></dt>
		<dd><xf:numberbox name="{$inputName}[bounce_total]" value="{$option.option_value.bounce_total}" id="{$inputName}_0" min="1" /></dd>
	</dl>
	<dl class="inputLabelPair">
		<dt><label for="{$inputName}_1">{{ phrase('minimum_number_of_days_with_bounces') }}</label></dt>
		<dd><xf:numberbox name="{$inputName}[unique_days]" value="{$option.option_value.unique_days}" id="{$inputName}_1" min="1" max="30" /></dd>
	</dl>
	<dl class="inputLabelPair">
		<dt><label for="{$inputName}_2">{{ phrase('minimum_number_of_days_between_oldest_and_newest_bounce') }}</label></dt>
		<dd><xf:numberbox name="{$inputName}[days_between]" value="{$option.option_value.days_between}" id="{$inputName}_2" min="0" max="30" /></dd>
	</dl>
</xf:formrow>]]></template>
  <template type="admin" title="option_template_emailTransport" version_id="2010131" version_string="2.1.1 Beta 1"><![CDATA[<xf:radiorow name="{$inputName}[{$option.option_id}]" value="{$option.option_value.{$option.option_id}}"
	label="{$option.title}"
	hint="{$hintHtml}"
	explain="{$explainHtml}"
	html="{$listedHtml}">

	<xf:option value="sendmail" label="{{ phrase('default') }}" data-hide="true">
		<xf:checkbox>
			<xf:option name="{$inputName}[sendmailReturnPath]" selected="$option.option_value.sendmailReturnPath">{{ phrase('set_return_path_with_f_parameter') }}</xf:option>
		</xf:checkbox>
	</xf:option>
	<xf:option value="smtp" label="SMTP" data-hide="true">
		<xf:dependent>
			<div class="inputGroup">
				<xf:textbox name="{$inputName}[smtpHost]" value="{$option.option_value.smtpHost}" placeholder="{{ phrase('host') }}" size="40" />
				<span class="inputGroup-text">:</span>
				<xf:textbox name="{$inputName}[smtpPort]" value="{$option.option_value.smtpPort}" placeholder="{{ phrase('port') }}" size="5" />
			</div>

			<div class="inputChoices-spacer">{{ phrase('authentication') }}</div>
			<xf:radio name="{$inputName}[smtpAuth]" value="{{ $option.option_value.smtpAuth ? $option.option_value.smtpAuth : 'none' }}">
				<xf:option value="none">{{ phrase('none') }}</xf:option>
				<xf:option value="login" label="{{ phrase('user_name_and_password') }}">
					<xf:dependent>
						<div class="inputGroup">
							<xf:textbox name="{$inputName}[smtpLoginUsername]" value="{$option.option_value.smtpLoginUsername}" placeholder="{{ phrase('user_name') }}" size="15" />
							<span class="inputGroup-splitter"></span>
							<xf:textbox name="{$inputName}[smtpLoginPassword]" value="{$option.option_value.smtpLoginPassword}" type="password" size="15" />
						</div>
					</xf:dependent>
				</xf:option>
			</xf:radio>

			<div class="inputChoices-spacer">{{ phrase('encryption') }}</div>
			<xf:radio name="{$inputName}[smtpEncrypt]" value="{{ $option.option_value.smtpEncrypt ? $option.option_value.smtpEncrypt : 'none' }}" listclass="indented">
				<xf:option value="none">{{ phrase('none') }}</xf:option>
				<xf:option value="tls">TLS</xf:option>
				<xf:option value="ssl">SSL</xf:option>
			</xf:radio>
		</xf:dependent>
	</xf:option>
</xf:radiorow>]]></template>
  <template type="admin" title="option_template_emojiSource" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:radiorow name="{$inputName}[source]" value="{$option.option_value.source}"
	label="{$option.title}"
	hint="{$hintHtml}"
	explain="{$explainHtml}"
	html="{$listedHtml}">

	<xf:option value="cdn" label="{{ phrase('serve_from_preferred_cdn') }}" />
	<xf:option value="local" label="{{ phrase('host_from_following_location') }}">
		<xf:dependent>
			<xf:textbox name="{$inputName}[path]" value="{$option.option_value.path}" size="30" />
			<dfn class="inputChoices-explain">{{ phrase('emoji_source_path_explain') }}</dfn>
		</xf:dependent>
	</xf:option>
</xf:radiorow>]]></template>
  <template type="admin" title="option_template_emojiStyle" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:set var="$shortcodes" value=":slight_smile:&nbsp;:bread:&nbsp;:heart_eyes:&nbsp;:coffee:&nbsp;:thumbsup:&nbsp;:grinning:&nbsp;:hamburger:&nbsp;:zany_face:" />

<xf:radiorow name="{$inputName}" value="{$option.option_value}"
	label="{$option.title}"
	hint="{$hintHtml}"
	explain="{$explainHtml}"
	html="{$listedHtml}">

	<xf:option value="emojione">
		<xf:label>{{ phrase('emojione_by_emojione') }}</xf:label>
		<xf:hint><span style="font-size: 15px">{{ short_to_emoji($shortcodes, 'emojione', true)|raw }}</span></xf:hint>
	</xf:option>

	<xf:option value="twemoji">
		<xf:label>{{ phrase('twemoji_by_twitter') }}</xf:label>
		<xf:hint><span style="font-size: 15px">{{ short_to_emoji($shortcodes, 'twemoji', true)|raw }}</span></xf:hint>
	</xf:option>

	<xf:option value="native">
		<xf:label>{{ phrase('native_device_emoji_where_supported') }}</xf:label>
		<xf:hint><span style="font-size: 18px">{{ short_to_emoji($shortcodes, 'native')|raw }}</span></xf:hint>
	</xf:option>
</xf:radiorow>]]></template>
  <template type="admin" title="option_template_enablePush" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:checkboxrow standalone="true"
	label=""
	hint="{$hintHtml}"
	explain="{$explainHtml}"
	html="{$listedHtml}">
	<xf:initialhtml>
		<xf:if is="$error">
			<div class="block-rowMessage block-rowMessage--error">{$error}</div>
		</xf:if>
	</xf:initialhtml>
	<xf:option name="{$inputName}" selected="{{ $option.option_value && $canEnablePush }}" disabled="{{ !$canEnablePush ? 'disabled' : false }}">{$option.title}</xf:option>
</xf:checkboxrow>]]></template>
  <template type="admin" title="option_template_enableTrophies" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:checkboxrow
	hint="{$hintHtml}"
	explain="{$explainHtml}"
	html="{$listedHtml}">

	<xf:option name="{$inputName}" selected="$option.option_value" class="js-enableTrophies">{$option.title}</xf:option>
</xf:checkboxrow>

<xf:js>
	$(document).ready(function()
	{
		processCheckBox();

		$('.js-enableTrophies').click(function()
		{
			processCheckBox();
		});

		function processCheckBox()
		{
			var $userTitle = $("input[name='options[userTitleLadderField]']:checked"),
				$trophyOption = $('.js-trophy_points'),
				$messageOption = $('.js-messages');

			if ($('.js-enableTrophies').is(':checked'))
			{
				$trophyOption.attr('disabled', false);
			}
			else
			{
				$trophyOption.attr('disabled', true);

				if ($userTitle.val() == 'trophy_points')
				{
					$messageOption.prop('checked', true);
				}
			}
		}
	});
</xf:js>]]></template>
  <template type="admin" title="option_template_forumsDefaultPage" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:radiorow name="{$inputName}" value="{$option.option_value}"
	label="{$option.title}"
	hint="{$hintHtml}"
	explain="{$explainHtml}"
	html="{$listedHtml}">

	<!--[XF:forumsDefaultPage:top]-->
	<xf:option value="forums" label="{{ phrase('forums') }}" />
	<!--[XF:forumsDefaultPage:middle]-->
	<xf:option value="new_posts" label="{{ phrase('new_posts') }}" />
	<!--[XF:forumsDefaultPage:bottom]-->
</xf:radiorow>]]></template>
  <template type="admin" title="option_template_imageLibrary" version_id="2000170" version_string="2.0.1"><![CDATA[<xf:radiorow name="{$inputName}" value="{$option.option_value}"
	label="{$option.title}"
	hint="{$hintHtml}"
	explain="{$explainHtml}"
	html="{$listedHtml}">

	<xf:option value="gd">{{ phrase('php_built_in_gd') }}</xf:option>
	<xf:option value="imPecl" disabled="{{ $noImagick ? 'disabled' : false }}">
		<xf:label>{{ phrase('imagemagick_pecl_extension') }}</xf:label>
		<xf:hint>{{ phrase('must_have_imagick_pecl_extension', {'link': 'https://pecl.php.net/package/imagick'}) }}</xf:hint>
	</xf:option>
</xf:radiorow>]]></template>
  <template type="admin" title="option_template_minMax" version_id="2010131" version_string="2.1.1 Beta 1"><![CDATA[<xf:formrow rowtype="input"
	label="{$option.title}"
	hint="{$hintHtml}"
	explain="{$explainHtml}"
	html="{$listedHtml}">

	<div class="inputGroup inputGroup--numbers">
		<xf:numberbox name="{$inputName}[min]" value="{$option.option_value.min}" placeholder="{{ phrase('minimum') }}" min="{{ $formatParams.min ?: 0 }}" max="{{ $formatParams.max ?: null }}" />
		<span class="inputGroup-text">{{ $formatParams.between ? $formatParams.between : '-' }}</span>
		<xf:numberbox name="{$inputName}[max]" value="{$option.option_value.max}" placeholder="{{ phrase('maximum') }}" min="{{ $formatParams.min ?: 0 }}" max="{{ $formatParams.max ?: null }}" />
		<xf:if is="{$formatParams.units}"><span class="inputGroup-text">{$formatParams.units}</span></xf:if>
	</div>
</xf:formrow>]]></template>
  <template type="admin" title="option_template_phrase" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:textboxrow name="{$inputName}" value="{$phrase.phrase_text}" type="{$formatParams.type}" class="{$formatParams.class}">
	<xf:label>{$option.title}</xf:label>
	<xf:hint>{$hintHtml}</xf:hint>
	<xf:explain>{$explainHtml}</xf:explain>
	<xf:finalhtml>{$listedHtml}</xf:finalhtml>
</xf:textboxrow>]]></template>
  <template type="admin" title="option_template_preventDiscouragedRegistration" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:checkboxrow hint="{$hintHtml}"
	explain="{{ phrase('option_explain.preventDiscouragedRegistration', {'link': link('banning/discouraged-ips')}) }}"
	html="{$listedHtml}">

	<xf:option name="{$inputName}" selected="$option.option_value">
		<xf:label>{$option.title}</xf:label>
	</xf:option>
</xf:checkboxrow>]]></template>
  <template type="admin" title="option_template_privacyPolicyUrl" version_id="2000631" version_string="2.0.6 Beta 1"><![CDATA[<xf:radiorow name="{$inputName}[type]"
	label="{$option.title}"
	hint="{$hintHtml}"
	explain="{$explainHtml}"
	html="{$listedHtml}">

	<xf:option selected="$option.option_value.type == ''"
		label="{{ phrase('no_privacy_policy') }}" />

	<xf:option value="default" selected="$option.option_value.type == 'default'"
		label="{{ phrase('default_url:') }} {{ link_type('public', 'canonical:help/privacy-policy') }}"/>

	<xf:option value="custom" selected="$option.option_value.type == 'custom'"
		label="{{ phrase('custom_url') }}">

		<xf:textbox name="{$inputName}[custom]" value="{$option.option_value.custom}" />
	</xf:option>
</xf:radiorow>]]></template>
  <template type="admin" title="option_template_registrationCheckDnsBl" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:checkboxrow
	label="{$option.title}"
	hint="{$hintHtml}"
	html="{$listedHtml}">

	<xf:option name="{$inputName}[check]" selected="$option.option_value.check" label="{{ phrase('check_dnsbl_on_registration') }}" hint="{$option.explain}" data-hide="true">
		<xf:dependent>
			<div>{{ phrase('project_honey_pot_key') }}</div>
			<xf:textbox name="{$inputName}[projectHoneyPotKey]" value="{$option.option_value.projectHoneyPotKey}" class="indented" />
			<dfn class="formRow-explain">{{ phrase('if_entered_project_honey_pot_http_blacklist_checked') }}</dfn>
		</xf:dependent>
		<xf:dependent>
			<div>{{ phrase('action:') }}</div>
			<xf:radio name="{$inputName}[action]" value="{{ $option.option_value.action ? $option.option_value.action : 'moderate' }}" listclass="choiceList indented">
				<xf:option value="moderate">{{ phrase('require_registration_manually_approved_admin') }}</xf:option>
				<xf:option value="block">{{ phrase('block_this_registration') }}</xf:option>
			</xf:radio>
		</xf:dependent>
	</xf:option>
</xf:checkboxrow>]]></template>
  <template type="admin" title="option_template_registrationDefaults" version_id="2000631" version_string="2.0.6 Beta 1"><![CDATA[<xf:formrow
	label="{$option.title}"
	hint="{$hintHtml}"
	explain="{$explainHtml}"
	html="{$listedHtml}">

	<xf:checkbox>
		<xf:option name="{$inputName}[visible]" selected="$option.option_value.visible">{{ phrase('show_online_status') }}</xf:option>
		<xf:option name="{$inputName}[activity_visible]" selected="$option.option_value.activity_visible">{{ phrase('show_current_activity') }}</xf:option>
		<xf:option name="{$inputName}[content_show_signature]" selected="$option.option_value.content_show_signature">{{ phrase('show_signatures_with_messages') }}</xf:option>
		<xf:option name="{$inputName}[show_dob_date]" selected="$option.option_value.show_dob_date">{{ phrase('show_day_and_month_of_birth') }}</xf:option>
		<xf:option name="{$inputName}[show_dob_year]" selected="$option.option_value.show_dob_year">{{ phrase('show_year_of_birth') }}</xf:option>
		<xf:option name="{$inputName}[receive_admin_email]" selected="$option.option_value.receive_admin_email">{{ phrase('receive_site_mailings_option') }}</xf:option>
		<xf:option name="{$inputName}[email_on_conversation]" selected="$option.option_value.email_on_conversation">{{ phrase('receive_email_when_new_conversation_message_is_received') }}</xf:option>
	</xf:checkbox>
	<div class="u-inputSpacer">
		<dl class="inputLabelPair">
			<dt><label for="{$inputName}_dws">{{ phrase('watch_content_on_creation') }}</label></dt>
			<dd><xf:select name="{$inputName}[creation_watch_state]" value="{$option.option_value.creation_watch_state}" id="{$inputName}_dws">
				<xf:option value="watch_no_email">{{ phrase('yes') }}</xf:option>
				<xf:option value="watch_email">{{ phrase('yes_with_email') }}</xf:option>
				<xf:option>{{ phrase('no') }}</xf:option>
			</xf:select></dd>
		</dl>
		<dl class="inputLabelPair">
			<dt><label for="{$inputName}_dws">{{ phrase('watch_content_on_interaction') }}</label></dt>
			<dd><xf:select name="{$inputName}[interaction_watch_state]" value="{$option.option_value.interaction_watch_state}" id="{$inputName}_dws">
				<xf:option value="watch_no_email">{{ phrase('yes') }}</xf:option>
				<xf:option value="watch_email">{{ phrase('yes_with_email') }}</xf:option>
				<xf:option>{{ phrase('no') }}</xf:option>
			</xf:select></dd>
		</dl>
		<dl class="inputLabelPair">
			<dt><label for="{$inputName}_avp">{{ phrase('view_this_users_profile_page_details') }}</label></dt>
			<dd><xf:select name="{$inputName}[allow_view_profile]" value="{$option.option_value.allow_view_profile}" id="{$inputName}_avp">
				<xf:option value="everyone">{{ phrase('all_visitors') }}</xf:option>
				<xf:option value="members">{{ phrase('members_only') }}</xf:option>
				<xf:option value="followed">{{ phrase('followed_members_only') }}</xf:option>
				<xf:option value="none">{{ phrase('nobody') }}</xf:option>
			</xf:select></dd>
		</dl>
		<dl class="inputLabelPair">
			<dt><label for="{$inputName}_app">{{ phrase('post_messages_on_this_users_profile_page') }}</label></dt>
			<dd><xf:select name="{$inputName}[allow_post_profile]" value="{$option.option_value.allow_post_profile}" id="{$inputName}_app">
				<xf:option value="members">{{ phrase('members_only') }}</xf:option>
				<xf:option value="followed">{{ phrase('followed_members_only') }}</xf:option>
				<xf:option value="none">{{ phrase('nobody') }}</xf:option>
			</xf:select></dd>
		</dl>
		<dl class="inputLabelPair">
			<dt><label for="{$inputName}_arnf">{{ phrase('receive_this_users_news_feed') }}</label></dt>
			<dd><xf:select name="{$inputName}[allow_receive_news_feed]" value="{$option.option_value.allow_receive_news_feed}" id="{$inputName}_arnf">
				<xf:option value="everyone">{{ phrase('all_visitors') }}</xf:option>
				<xf:option value="members">{{ phrase('members_only') }}</xf:option>
				<xf:option value="followed">{{ phrase('followed_members_only') }}</xf:option>
				<xf:option value="none">{{ phrase('nobody') }}</xf:option>
			</xf:select></dd>
		</dl>
		<dl class="inputLabelPair">
			<dt><label for="{$inputName}_aspc">{{ phrase('initiate_conversations_with_this_user') }}</label></dt>
			<dd><xf:select name="{$inputName}[allow_send_personal_conversation]" value="{$option.option_value.allow_send_personal_conversation}" id="{$inputName}_aspc">
				<xf:option value="members">{{ phrase('members_only') }}</xf:option>
				<xf:option value="followed">{{ phrase('followed_members_only') }}</xf:option>
				<xf:option value="none">{{ phrase('nobody') }}</xf:option>
			</xf:select></dd>
		</dl>
		<dl class="inputLabelPair">
			<dt><label for="{$inputName}_avi">{{ phrase('view_this_users_identities') }}</label></dt>
			<dd><xf:select name="{$inputName}[allow_view_identities]" id="{$inputName}_avi" value="{$option.option_value.allow_view_identities}">
				<xf:option value="everyone">{{ phrase('all_visitors') }}</xf:option>
				<xf:option value="members">{{ phrase('members_only') }}</xf:option>
				<xf:option value="followed">{{ phrase('followed_members_only') }}</xf:option>
				<xf:option value="none">{{ phrase('nobody') }}</xf:option>
			</xf:select></dd>
		</dl>
	</div>
</xf:formrow>]]></template>
  <template type="admin" title="option_template_registrationSetup" version_id="2000631" version_string="2.0.6 Beta 1"><![CDATA[<xf:checkboxrow
	label="{$option.title}"
	hint="{$hintHtml}"
	explain="{$explainHtml}"
	html="{$listedHtml}">

	<xf:option name="{$inputName}[enabled]" selected="$option.option_value.enabled"
		label="{{ phrase('enable_registration') }}" />

	<xf:option name="{$inputName}[emailConfirmation]" selected="$option.option_value.emailConfirmation"
		label="{{ phrase('enable_email_confirmation') }}"
		hint="{{ phrase('if_selected_users_click_link_email_before_registration_complete') }}" />

	<xf:option name="{$inputName}[moderation]" selected="$option.option_value.moderation"
		label="{{ phrase('enable_manual_approval') }}"
		hint="{{ phrase('if_selected_admin_manually_approve_users') }}" />

	<xf:option name="{$inputName}[requireDob]" selected="$option.option_value.requireDob"
		label="{{ phrase('require_date_of_birth') }}" />

	<xf:option selected="{{ $option.option_value.minimumAge ? true : false }}"
		label="{{ phrase('minimum_age:') }}">

		<xf:numberbox name="{$inputName}[minimumAge]" value="{{ $option.option_value.minimumAge ?: 13 }}"
			min="1"
			units="{{ phrase('units_years') }}" />
	</xf:option>

	<xf:option name="{$inputName}[requireEmailChoice]" selected="$option.option_value.requireEmailChoice"
		label="{{ phrase('require_email_choice') }}"
		hint="{{ phrase('require_email_choice_hint') }}" />

	<xf:option name="{$inputName}[requireLocation]" selected="$option.option_value.requireLocation"
		label="{{ phrase('require_location') }}" />
</xf:checkboxrow>]]></template>
  <template type="admin" title="option_template_registrationWelcome" version_id="2010132" version_string="2.1.1 Beta 2"><![CDATA[<xf:checkboxrow
	label="{$option.title}"
	hint="{$hintHtml}"
	explain="{$explainHtml}"
	html="{$listedHtml}">

	<xf:option name="{$inputName}[messageEnabled]" selected="$option.option_value.messageEnabled" data-hide="true"
		label="{{ phrase('start_welcome_conversation_on_registration') }}">

		<xf:dependent>
			<div>{{ phrase('other_participants:') }}</div>
			<xf:if is="$option.option_value.messageParticipants AND is_array($option.option_value.messageParticipants)">
				<xf:set var="$users" value="{{ $xf.app.em.getRepository('XF:User').getUsersByIdsOrdered($option.option_value.messageParticipants) }}" />
				<xf:set var="$value" value="{$users.pluckNamed('username')|join(', ')}" />
			<xf:else />
				<xf:set var="$value">{$xf.visitor.username}</xf:set>
			</xf:if>
			<xf:tokeninput name="{$inputName}[messageParticipants]" value="{$value}" href="{{ link('users/find') }}">
				<xf:explain>{{ phrase('list_usernames_of_users_who_will_be_invited_to_this_conversation') }}</xf:explain>
			</xf:tokeninput>
		</xf:dependent>

		<xf:dependent>
			<div>{{ phrase('conversation_title:') }}</div>
			<xf:textbox name="{$inputName}[messageTitle]" value="{$option.option_value.messageTitle}" placeholder="{{ phrase('conversation_title...') }}" maxlength="100" />
		</xf:dependent>

		<xf:dependent>
			<div>{{ phrase('conversation_message:') }}</div>
			<xf:textarea name="{$inputName}[messageBody]" value="{$option.option_value.messageBody}" rows="5" autosize="true" />
			<p class="formRow-explain">{{ phrase('following_placeholders_will_be_replaced_in_message_for_conversation') }} {{ phrase('you_may_also_use_phrase_title_which_will_be_replaced') }}</p>
		</xf:dependent>

		<xf:dependent>
			<div>{{ phrase('conversation_options:') }}</div>
			<xf:checkbox>
				<xf:option name="{$inputName}[messageOpenInvite]" value="1" selected="$option.option_value.messageOpenInvite">
					{{ phrase('allow_anyone_in_conversation_to_invite_others') }}
				</xf:option>
				<xf:option name="{$inputName}[messageLocked]" value="1" selected="$option.option_value.messageLocked">
					{{ phrase('lock_conversation_no_responses_will_be_allowed') }}
				</xf:option>
			</xf:checkbox>
		</xf:dependent>

		<xf:dependent>
			<div>{{ phrase('future_message_handling:') }}</div>
			<xf:radio name="{$inputName}[messageDelete]">
				<xf:option value="delete" selected="!$option.option_value.messageDelete OR $option.option_value.messageDelete == 'delete'"
					label="{{ phrase('leave_conversation_and_accept_future_messages') }}"
					explain="{{ phrase('should_conversation_receive_responses_restored_to_inbox') }}" />

				<xf:option value="delete_ignore" selected="$option.option_value.messageDelete == 'delete_ignore'"
					label="{{ phrase('leave_conversation_and_ignore_future_messages') }}"
					explain="{{ phrase('not_notified_of_responses_conversation_remain_deleted') }}" />

				<xf:option value="no_delete" selected="$option.option_value.messageDelete == 'no_delete'"
					label="{{ phrase('do_not_leave_conversation') }}"
					explain="{{ phrase('remain_in_inbox_and_notified_of_replies') }}" />
			</xf:radio>
		</xf:dependent>

	</xf:option>

	<xf:option name="{$inputName}[emailEnabled]" selected="$option.option_value.emailEnabled" data-hide="true"
		label="{{ phrase('send_welcome_email_on_registration') }}">

		<xf:dependent>
			<div>{{ phrase('from_name:') }}</div>
			<xf:textbox name="{$inputName}[emailFromName]" value="{{ $option.option_value.emailFromName ? $option.option_value.emailFromName : $xf.options.boardTitle }}" />
		</xf:dependent>

		<xf:dependent>
			<div>{{ phrase('from_email:') }}</div>
			<xf:textbox name="{$inputName}[emailFromEmail]" value="{{ $option.option_value.emailFromEmail ? $option.option_value.emailFromEmail : $xf.options.defaultEmailAddress }}" type="email" />
		</xf:dependent>

		<xf:dependent>
			<div>{{ phrase('email_title:') }}</div>
			<xf:textbox name="{$inputName}[emailTitle]" value="{$option.option_value.emailTitle}" />
		</xf:dependent>

		<xf:dependent>
			<div>{{ phrase('email_format:') }}</div>
			<xf:radio name="{$inputName}[emailFormat]" value="{$option.option_value.emailFormat}">
				<xf:option value="plain" label="{{ phrase('plain_text') }}" selected="!$option.option_value.emailFormat OR $option.option_value.emailFormat == 'plain'" />
				<xf:option value="html" label="{{ phrase('html') }}" />
			</xf:radio>
			<p class="formRow-explain">{{ phrase('note_that_email_clients_handle_html_in_widely_varying_ways') }}</p>
		</xf:dependent>

		<xf:dependent>
			<div>{{ phrase('email_body:') }}</div>
			<xf:textarea name="{$inputName}[emailBody]" value="{$option.option_value.emailBody}" rows="5" autosize="true" />
			<p class="formRow-explain">{{ phrase('following_placeholders_will_be_replaced_in_message_for_welcome_email') }} {{ phrase('you_may_also_use_phrase_title_which_will_be_replaced') }}</p>
		</xf:dependent>
	</xf:option>
</xf:checkboxrow>]]></template>
  <template type="admin" title="option_template_saveDrafts" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:checkboxrow
	hint="{$hintHtml}"
	explain="{$explainHtml}"
	html="{$listedHtml}">

	<xf:option name="{$inputName}[enabled]" selected="$option.option_value.enabled" label="{$option.title}">
		<xf:dependent>
			<dl class="inputLabelPair">
				<dt><label for="{$inputName}_h">{{ phrase('store_drafts_for_x_hours') }}</label></dt>
				<dd><xf:numberbox name="{$inputName}[lifetime]" id="{$inputName}_h" value="{{ $option.option_value.enabled ? $option.option_value.lifetime : '24' }}" min="1" /></dd>
			</dl>
			<dl class="inputLabelPair">
				<dt><label for="{$inputName}_s">{{ phrase('save_drafts_every_x_seconds') }}</label></dt>
				<dd><xf:numberbox name="{$inputName}[saveFrequency]" id="{$inputName}_s" value="{{ $option.option_value.enabled ? $option.option_value.saveFrequency : '60' }}" min="1" /></dd>
			</dl>
		</xf:dependent>
	</xf:option>
</xf:checkboxrow>]]></template>
  <template type="admin" title="option_template_spamPhrases" version_id="2000034" version_string="2.0.0 Beta 4"><![CDATA[<xf:formrow rowtype="input"
	label="{$option.title}"
	hint="{$hintHtml}"
	html="{$listedHtml}">

	<xf:textarea name="{$inputName}[phrases]" value="{$option.option_value.phrases}" rows="5" autosize="true" />
	<p class="formRow-explain">{$explainHtml}</p>

	<div class="u-inputSpacer">{{ phrase('action:') }}</div>
	<xf:radio name="{$inputName}[action]" value="{$option.option_value.action}">
		<xf:option value="moderate">{{ phrase('manually_approve') }}</xf:option>
		<xf:option value="reject">{{ phrase('reject') }}</xf:option>
	</xf:radio>
</xf:formrow>]]></template>
  <template type="admin" title="option_template_spamThreadAction" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:radiorow name="{$inputName}[action]" value="{$option.option_value.action}"
	label="{$option.title}"
	hint="{$hintHtml}"
	explain="{$explainHtml}"
	html="{$listedHtml}">

	<xf:option value="delete" label="{{ phrase('permanently_delete') }}" />
	<xf:option value="soft-delete" label="{{ phrase('remove_from_public_view') }}" />
	<xf:option value="move" label="{{ phrase('move_to_forum') }}">
		<xf:select name="{$inputName}[node_id]" value="{$option.option_value.node_id}">
			<xf:option value="0">&nbsp;</xf:option>
			<xf:foreach loop="$nodeTree.getFlattened()" value="$treeEntry">
				<xf:option value="{$treeEntry.record.node_id}" disabled="{{ $treeEntry.record.node_type_id != 'Forum' }}">
					{{ repeat('--', $treeEntry.depth) }} {$treeEntry.record.title}
				</xf:option>
			</xf:foreach>
			<xf:options source="$formatParams" />
		</xf:select>
	</xf:option>
</xf:radiorow>]]></template>
  <template type="admin" title="option_template_spamUserCriteria" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:formrow rowtype="inputLabelPair"
	label="{$option.title}"
	hint="{$hintHtml}"
	explain="{$explainHtml}"
	html="{$listedHtml}">

	<dl class="inputLabelPair">
		<dt><label for="spamuc_mc">{{ phrase('maximum_message_count') }}</label></dt>
		<dd><xf:numberbox name="{$inputName}[message_count]" value="{$option.option_value.message_count}" min="0" id="spamuc_mc" /></dd>
	</dl>
	<dl class="inputLabelPair">
		<dt><label for="spamuc_rd">{{ phrase('maximum_days_since_registration') }}</label></dt>
		<dd><xf:numberbox name="{$inputName}[register_date]" value="{$option.option_value.register_date}" min="0" id="spamuc_rd" /></dd>
	</dl>
	<dl class="inputLabelPair">
		<dt><label for="spamuc_tl">{{ phrase('maximum_reaction_score_received') }}</label></dt>
		<dd><xf:numberbox name="{$inputName}[reaction_score]" value="{$option.option_value.reaction_score}" min="0" id="spamuc_tl" /></dd>
	</dl>
</xf:formrow>]]></template>
  <template type="admin" title="option_template_stopForumSpam" version_id="2000052" version_string="2.0.0 Release Candidate 2"><![CDATA[<xf:checkboxrow
	label="{$option.title}"
	hint="{$hintHtml}"
	explain="{$explainHtml}"
	html="{$listedHtml}">

	<xf:option name="{$inputName}[enabled]" label="{{ phrase('stopforumspam_enable_registration_check') }}" value="1" selected="$option.option_value.enabled" data-hide="true">
		<xf:hint>{{ phrase('stopforumspam_enable_registration_check_explain') }}</xf:hint>
		<xf:checkbox>

			<xf:option name="_moderateThreshold" selected="$option.option_value.moderateThreshold">
				<xf:label>{{ phrase('stopforumspam_moderate_registration_threshold:') }}</xf:label>
				<xf:dependent>
					<xf:numberbox name="{$inputName}[moderateThreshold]" min="1" max="3" value="{$option.option_value.moderateThreshold}" />
					<p class="formRow-explain">{{ phrase('stopforumspam_moderate_registration_threshold_explain') }}</p>
				</xf:dependent>
			</xf:option>
			<xf:option name="_denyThreshold" selected="$option.option_value.denyThreshold">
				<xf:label>{{ phrase('stopforumspam_reject_registration_threshold:') }}</xf:label>
				<xf:dependent>
					<xf:numberbox name="{$inputName}[denyThreshold]" min="1" max="3" value="{$option.option_value.denyThreshold}" />
					<p class="formRow-explain">{{ phrase('stopforumspam_reject_registration_threshold_explain') }}</p>
				</xf:dependent>
			</xf:option>

			<xf:option name="_lastSeenCutOff" selected="$option.option_value.lastSeenCutOff">
				<xf:label>{{ phrase('stopforumspam_lastseencutoff_label:') }}</xf:label>
				<xf:dependent>
					<xf:numberbox name="{$inputName}[lastSeenCutOff]" min="0" value="{$option.option_value.lastSeenCutOff}" units="{{ phrase('units_days') }}" />
					<p class="formRow-explain">{{ phrase('stopforumspam_lastseencutoff_explain') }}</p>
				</xf:dependent>
			</xf:option>

			<xf:option name="_frequencyCutOff" selected="$option.option_value.frequencyCutOff">
				<xf:label>{{ phrase('stopforumspam_frequencycutoff_label:') }}</xf:label>
				<xf:dependent>
					<xf:numberbox name="{$inputName}[frequencyCutOff]" min="0" value="{$option.option_value.frequencyCutOff}" />
					<p class="formRow-explain">{{ phrase('stopforumspam_frequencycutoff_explain') }}</p>
				</xf:dependent>
			</xf:option>

			<xf:option name="{$inputName}[hashEmail]" selected="$option.option_value.hashEmail">
				<xf:label>{{ phrase('stopforumspam_hashemail_label') }}</xf:label>
				<xf:hint>{{ phrase('stopforumspam_hashemail_explain') }}</xf:hint>
			</xf:option>

		</xf:checkbox>
	</xf:option>
	<xf:option name="{$inputName}[submitRejections]" value="1" selected="$option.option_value.submitRejections">
		<xf:label>{{ phrase('stopforumspam_submit_information:') }}</xf:label>
		<xf:dependent>
			<xf:textbox name="{$inputName}[apiKey]" value="{$option.option_value.apiKey}" />
			<p class="formRow-explain">{{ phrase('stopforumspam_submit_information_explain') }}</p>
		</xf:dependent>
	</xf:option>
</xf:checkboxrow>]]></template>
  <template type="admin" title="option_template_tagValidation" version_id="2001070" version_string="2.0.10"><![CDATA[<xf:formrow
	label="{$option.title}"
	hint="{$hintHtml}"
	explain="{{ phrase('these_limits_only_apply_when_tag_is_created_existing_used') }}"
	html="{$listedHtml}">

	<ul class="inputChoices inputChoices--noChoice">
		<li class="inputChoices-choice">
			<div>{{ phrase('disallowed_words_in_tags:') }}</div>
			<xf:textarea name="{$inputName}[disallowedWords]" value="{$option.option_value.disallowedWords}" autosize="true" />
			<dfn class="inputChoices-explain">{{ phrase('words_or_phrases_in_this_field_not_allowed_in_tags') }}</dfn>
		</li>
		<li class="inputChoices-choice">
			<div>{{ phrase('tag_match_regular_expression:') }}</div>
			<xf:textbox name="{$inputName}[matchRegex]" value="{$option.option_value.matchRegex}" />
			<dfn class="inputChoices-explain">{{ phrase('this_requires_new_tags_to_match_given_regular_expression') }}</dfn>
		</li>
	</ul>
</xf:formrow>]]></template>
  <template type="admin" title="option_template_tosUrl" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:radiorow name="{$inputName}[type]"
	label="{$option.title}"
	hint="{$hintHtml}"
	explain="{$explainHtml}"
	html="{$listedHtml}">

	<xf:option selected="$option.option_value.type == ''"
		label="{{ phrase('no_terms_and_rules') }}" />

	<xf:option value="default" selected="$option.option_value.type == 'default'"
		label="{{ phrase('default_url:') }} {{ link_type('public', 'canonical:help/terms') }}"/>

	<xf:option value="custom" selected="$option.option_value.type == 'custom'"
		label="{{ phrase('custom_url') }}">

		<xf:textbox name="{$inputName}[custom]" value="{$option.option_value.custom}" />
	</xf:option>
</xf:radiorow>]]></template>
  <template type="admin" title="option_template_tweet" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:checkboxrow
	hint="{$hintHtml}"
	explain="{$explainHtml}"
	html="{$listedHtml}">

	<xf:option name="{$inputName}[enabled]" selected="$option.option_value.enabled" label="{$option.title}">
		<xf:textbox name="{$inputName}[via]" value="{$option.option_value.via}" placeholder="{{ phrase('via_twitter_account') }}" />
		<xf:textbox name="{$inputName}[related]" value="{$option.option_value.related}" placeholder="{{ phrase('related_twitter_account') }}" />
	</xf:option>
</xf:checkboxrow>]]></template>
  <template type="admin" title="option_template_uneditable" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:formrow
	label="{$option.title}"
	hint="{$hintHtml}">

	{$explainHtml}
</xf:formrow>]]></template>
  <template type="admin" title="option_template_userBanners" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:checkboxrow
	label="{$option.title}"
	hint="{$hintHtml}"
	explain="{$explainHtml}"
	html="{$listedHtml}">

	<xf:option name="{$inputName}[showStaff]" selected="$option.option_value.showStaff">
		<xf:label>{{ phrase('show_staff_banner') }}</xf:label>
		<xf:hint>{{ phrase('if_enabled_staff_members_automatically_have_banner_added') }}</xf:hint>
	</xf:option>
	<xf:option name="{$inputName}[displayMultiple]" selected="$option.option_value.displayMultiple">
		<xf:label>{{ phrase('allow_banner_stacking') }}</xf:label>
		<xf:hint>{{ phrase('if_enabled_all_banners_applicable_to_user_will_be_shown') }}</xf:hint>
	</xf:option>
	<xf:option name="{$inputName}[showStaffAndOther]" selected="$option.option_value.showStaffAndOther">
		<xf:label>{{ phrase('show_staff_and_group_banner') }}</xf:label>
		<xf:hint>{{ phrase('if_banner_stacking_disabled_staff_only_have_staff_banner') }}</xf:hint>
	</xf:option>
	<xf:option name="{$inputName}[hideUserTitle]" selected="$option.option_value.hideUserTitle">
		<xf:label>{{ phrase('hide_standard_user_title') }}</xf:label>
		<xf:hint>{{ phrase('if_enabled_user_title_hidden_when_banner_shown') }}</xf:hint>
	</xf:option>
</xf:checkboxrow>]]></template>
  <template type="admin" title="option_template_userTitleLadderField" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:radiorow name="{$inputName}" value="{$option.option_value}"
	label="{$option.title}"
	hint="{$hintHtml}"
	explain="{$explainHtml}"
	html="{$listedHtml}">

	<xf:option value="trophy_points" class="js-trophy_points">{{ phrase('trophy_points') }}</xf:option>
	<xf:option value="message_count" class="js-messages">{{ phrase('messages') }}</xf:option>
	<xf:option value="reaction_score" class="js-reactionScore">{{ phrase('reaction_score') }}</xf:option>
</xf:radiorow>]]></template>
  <template type="admin" title="option_template_usernameValidation" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:formrow
	label="{$option.title}"
	hint="{$hintHtml}"
	explain="{$explainHtml}"
	html="{$listedHtml}">

	<ul class="inputChoices inputChoices--noChoice">
		<li class="inputChoices-choice">
			<div>{{ phrase('disallowed_words_in_user_names:') }}</div>
			<xf:textarea name="{$inputName}[disallowedNames]" value="{$option.option_value.disallowedNames}" autosize="true" />
			<dfn class="inputChoices-explain">{{ phrase('words_or_phrases_in_field_not_allowed_in_user_names') }}</dfn>
		</li>
		<li class="inputChoices-choice">
			<div>{{ phrase('user_name_match_regular_expression:') }}</div>
			<xf:textbox name="{$inputName}[matchRegex]" value="{$option.option_value.matchRegex}" />
			<dfn class="inputChoices-explain">{{ phrase('requires_user_names_new_registrations_match_regex') }}</dfn>
		</li>
	</ul>
</xf:formrow>]]></template>
  <template type="admin" title="page_delete" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link('pages/delete', $node) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('please_confirm_that_you_want_to_delete_following:') }}
				<strong><a href="{{ link('pages/edit', $node) }}">{$node.title}</a></strong>
			</xf:inforow>

			<xf:macro template="helper_node_delete_children" name="delete_row" arg-node="{$node}" arg-nodeTree="{$nodeTree}" />
		</div>
		<xf:submitrow rowtype="{{ !$node.hasChildren() ? 'simple' : '' }}" icon="delete" />
	</div>
	<xf:redirect />
</xf:form>]]></template>
  <template type="admin" title="page_edit" version_id="2000052" version_string="2.0.0 Release Candidate 2"><![CDATA[<xf:if is="$page.isInsert()">
	<xf:title>{{ phrase('add_page') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_page:') }} {$node.title}</xf:title>
</xf:if>

<xf:pageaction if="$page.isUpdate()">
	<xf:button href="{{ link('pages/delete', $node) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('pages/save', $node) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:macro template="node_edit_macros" name="node_name" arg-node="{$node}" arg-optional="{{ false }}" />

			<xf:macro template="node_edit_macros" name="title" arg-node="{$node}" />
			<xf:macro template="node_edit_macros" name="description" arg-node="{$node}" />
			<xf:macro template="node_edit_macros" name="position" arg-node="{$node}" arg-nodeTree="{$nodeTree}" />
			<xf:macro template="node_edit_macros" name="navigation" arg-node="{$node}" arg-navChoices="{$navChoices}" />

			<xf:codeeditorrow name="template" value="{{ $page.isUpdate() ? $page.MasterTemplate.template : '' }}"
				mode="html"
				hint="{{ $page.isUpdate() ? $page.getTemplateName() : '' }}"
				class="codeEditor--short"
				label="{{ phrase('template_html') }}"
				explain="{{ phrase('you_may_use_xenforo_template_syntax_here') }}" />

			<xf:checkboxrow rowclass="surplusLabel"
				label="{{ phrase('optional_components') }}">

				<xf:option name="log_visits" selected="$page.log_visits"
					label="{{ phrase('log_and_count_visits_to_this_page') }}" />

				<xf:option name="list_siblings" selected="$page.list_siblings"
					label="{{ phrase('list_sibling_nodes') }}" />

				<xf:option name="list_children" selected="$page.list_children"
					label="{{ phrase('list_child_nodes') }}" />
			</xf:checkboxrow>

			<xf:formrow rowtype="input"
				label="{{ phrase('php_callback') }}"
				explain="{{ phrase('page_callback_explanation_html') }}">

				<xf:macro template="helper_callback_fields" name="callback_fields" arg-data="{$page}" />
			</xf:formrow>

			<xf:checkboxrow>
				<xf:option name="advanced_mode" value="1" selected="{$page.advanced_mode}"
					label="{{ phrase('advanced_mode') }}"
					hint="{{ phrase('if_enabled_html_for_your_page_will_not_be_contained_within_block') }}" />
			</xf:checkboxrow>

			<xf:macro template="node_edit_macros" name="style" arg-node="{$node}" arg-styleTree="{$styleTree}" />
		</div>

		<xf:submitrow sticky="true" icon="save" />
	</div>

</xf:form>]]></template>
  <template type="admin" title="page_nav" version_id="2000037" version_string="2.0.0 Beta 7"><![CDATA[<nav class="pageNavWrapper pageNavWrapper--{{ property('pageNavStyle') }} {$variantClass}">

<xf:set var="$hasSkipStart" value="{{ $startInner > 2 }}" />
<xf:set var="$hasSkipEnd" value="{{ $endInner + 1 < $totalPages }}" />
<div class="pageNav {{ $hasSkipStart ? 'pageNav--skipStart' : '' }} {{ $hasSkipEnd ? 'pageNav--skipEnd' : '' }}">
	<xf:if is="$prev">
		<a href="{$prev}" class="pageNav-jump pageNav-jump--prev">{{ phrase('prev') }}</a>
	</xf:if>

	<ul class="pageNav-main">
		<xf:macro name="page_link"
			arg-page="1"
			arg-current="{$current}"
			arg-link="{$link}"
			arg-data="{$data}"
			arg-params="{$params}"
			arg-pageParam="{$pageParam}" />

		<xf:if is="$hasSkipStart">
			<xf:if is="$startInner == 3">
				<xf:macro name="page_link"
					arg-page="2"
					arg-current="{$current}"
					arg-link="{$link}"
					arg-data="{$data}"
					arg-params="{$params}"
					arg-pageParam="{$pageParam}"
					arg-pageClass="pageNav-page--earlier" />
				<xf:else />
				<li class="pageNav-page pageNav-page--skip pageNav-page--skipStart">
					<a data-xf-init="tooltip" title="{{ phrase('go_to_page')|for_attr }}"
						data-xf-click="menu"
						role="button" tabindex="0" aria-expanded="false" aria-haspopup="true">{$xf.language.ellipsis}</a>
					<xf:macro name="page_jump_menu"
						arg-page="{{ $startInner - 1 }}"
						arg-totalPages="{$totalPages}"
						arg-link="{$link}"
						arg-data="{$data}"
						arg-params="{$params}"
						arg-pageParam="{$pageParam}" />
				</li>
			</xf:if>
		</xf:if>

		<xf:foreach loop="$innerPages" value="$page">
			<xf:macro name="page_link"
				arg-page="{$page}"
				arg-current="{$current}"
				arg-link="{$link}"
				arg-data="{$data}"
				arg-params="{$params}"
				arg-pageParam="{$pageParam}"
				arg-pageClass="{{ $page < $current ? 'pageNav-page--earlier' : ($page > $current ? 'pageNav-page--later' : '' ) }}" />
		</xf:foreach>

		<xf:if is="$hasSkipEnd">
			<xf:if is="$endInner + 2 == $totalPages">
				<xf:macro name="page_link"
					arg-page="{{ $totalPages - 1 }}"
					arg-current="{$current}"
					arg-link="{$link}"
					arg-data="{$data}"
					arg-params="{$params}"
					arg-pageParam="{$pageParam}"
					arg-pageClass="pageNav-page--later" />
			<xf:else />
				<li class="pageNav-page pageNav-page--skip pageNav-page--skipEnd">
					<a data-xf-init="tooltip" title="{{ phrase('go_to_page')|for_attr }}"
						data-xf-click="menu"
						role="button" tabindex="0" aria-expanded="false" aria-haspopup="true">{$xf.language.ellipsis}</a>
					<xf:macro name="page_jump_menu"
						arg-page="{{ $endInner + 1 }}"
						arg-totalPages="{$totalPages}"
						arg-link="{$link}"
						arg-data="{$data}"
						arg-params="{$params}"
						arg-pageParam="{$pageParam}" />
				</li>
			</xf:if>
		</xf:if>

		<xf:macro name="page_link"
			arg-page="{$totalPages}"
			arg-current="{$current}"
			arg-link="{$link}"
			arg-data="{$data}"
			arg-params="{$params}"
			arg-pageParam="{$pageParam}" />
	</ul>

	<xf:if is="$next">
		<a href="{$next}" class="pageNav-jump pageNav-jump--next">{{ phrase('next') }}</a>
	</xf:if>
</div>

<div class="pageNavSimple">
	<xf:if is="$current > 1">
		<a href="{{ link($link, $data, $params + {($pageParam): 1}) }}"
			class="pageNavSimple-el pageNavSimple-el--first"
			data-xf-init="tooltip" title="{{ phrase('first')|for_attr }}">
			<i aria-hidden="true"></i> <span class="u-srOnly">{{ phrase('first') }}</span>
		</a>
		<a href="{{ link($link, $data, $params + {($pageParam): $current - 1}) }}" class="pageNavSimple-el pageNavSimple-el--prev">
			<i aria-hidden="true"></i> {{ phrase('prev') }}
		</a>
	</xf:if>

	<a class="pageNavSimple-el pageNavSimple-el--current"
		data-xf-init="tooltip" title="{{ phrase('go_to_page')|for_attr }}"
		data-xf-click="menu" role="button" tabindex="0" aria-expanded="false" aria-haspopup="true">
		{{ phrase('x_of_y', {'current': $current, 'total': $totalPages}) }}
	</a>
	<xf:macro name="page_jump_menu"
		arg-page="{$current}"
		arg-totalPages="{$totalPages}"
		arg-link="{$link}"
		arg-data="{$data}"
		arg-params="{$params}"
		arg-pageParam="{$pageParam}" />

	<xf:if is="$current < $totalPages">
		<a href="{{ link($link, $data, $params + {($pageParam): $current + 1}) }}" class="pageNavSimple-el pageNavSimple-el--next">
			{{ phrase('next') }} <i aria-hidden="true"></i>
		</a>
		<a href="{{ link($link, $data, $params + {($pageParam): $totalPages}) }}"
			class="pageNavSimple-el pageNavSimple-el--last"
			data-xf-init="tooltip" title="{{ phrase('last')|for_attr }}">
			<i aria-hidden="true"></i> <span class="u-srOnly">{{ phrase('last') }}</span>
		</a>
	</xf:if>
</div>

</nav>

<xf:macro name="page_link"
	arg-page="!"
	arg-current="!"
	arg-link="!"
	arg-data="!"
	arg-params="!"
	arg-pageParam="!"
	arg-pageClass="">

	<xf:if is="$page == $current">
		<li class="pageNav-page pageNav-page--current {$pageClass}"><a href="{{ link($link, $data, $params + {($pageParam): ($page > 1 ? $page : null)}) }}">{$page}</a></li>
	<xf:else />
		<li class="pageNav-page {$pageClass}"><a href="{{ link($link, $data, $params + {($pageParam): ($page > 1 ? $page : null)}) }}">{$page}</a></li>
	</xf:if>
</xf:macro>

<xf:macro name="page_jump_menu"
	arg-page="!"
	arg-totalPages="!"
	arg-link="!"
	arg-data="!"
	arg-params="!"
	arg-pageParam="!">

	<div class="menu menu--pageJump" data-menu="menu" aria-hidden="true">
		<div class="menu-content">
			<h4 class="menu-header">{{ phrase('go_to_page') }}</h4>
			<div class="menu-row" data-xf-init="page-jump" data-page-url="{{ link($link, $data, $params + {($pageParam): '%page%'}) }}">
				<div class="inputGroup inputGroup--numbers">
					<xf:numberbox class="input input--numberNarrow js-pageJumpPage" value="{$page}" min="1" max="{$totalPages}" data-menu-autofocus="true" />
					<span class="inputGroup-text"><xf:button class="js-pageJumpGo">{{ phrase('go') }}</xf:button></span>
				</div>
			</div>
		</div>
	</div>
</xf:macro>]]></template>
  <template type="admin" title="payment_profile_braintree" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:textboxrow name="options[merchant_id]" value="{$profile.options.merchant_id}"
	label="{{ phrase('braintree_merchant_id') }}" />

<xf:textboxrow name="options[public_key]" value="{$profile.options.public_key}"
	label="{{ phrase('braintree_public_key') }}" />

<xf:textboxrow name="options[private_key]" value="{$profile.options.private_key}"
	label="{{ phrase('braintree_private_key') }}"
	explain="{{ phrase('braintree_api_keys_explain') }}" />

<xf:textboxrow name="options[merchant_account]" value="{$profile.options.merchant_account}"
	label="{{ phrase('braintree_merchant_account_id') }}"
	explain="{{ phrase('braintree_merchant_account_id_explain') }}" />

<xf:checkboxrow	explain="{{ phrase('braintree_plan_id_explain', {'boardUrl': $xf.options.boardUrl}) }}">
	<xf:option checked="{$profile.options.plan_id}"
		label="{{ phrase('braintree_plan_id:') }}">

		<xf:textbox name="options[plan_id]" value="{$profile.options.plan_id}" />
	</xf:option>
</xf:checkboxrow>

<hr class="formRowSep" />

<xf:checkboxrow
	explain="{{ phrase('enable_apple_pay_support_braintree_explain') }}">
	<xf:option name="options[apple_pay_enable]" selected="{$profile.options.apple_pay_enable}">
		{{ phrase('enable_apple_pay_support') }}
	</xf:option>
</xf:checkboxrow>

<xf:checkboxrow
	explain="{{ phrase('enable_paypal_support_braintree_explain') }}">
	<xf:option name="options[paypal_enable]" selected="{$profile.options.paypal_enable}">
		{{ phrase('enable_paypal_support') }}
	</xf:option>
</xf:checkboxrow>]]></template>
  <template type="admin" title="payment_profile_choose_provider" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('choose_payment_provider') }}</xf:title>

<xf:form action="{{ link('payment-profiles/add') }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:selectrow name="provider_id"
				label="{{ phrase('provider') }}">

				<xf:option />
				<xf:options source="$providers" />
			</xf:selectrow>
		</div>
		<xf:submitrow submit="{{ phrase('proceed...') }}" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="payment_profile_delete" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:if is="$profileUsed">
	<div class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:inforow rowtype="confirm">
					{{ phrase('this_payment_profile_cannot_be_deleted_because_it_is_in_use:') }}
					<ul class="listInline listInline--comma">
						<xf:foreach loop="$profileUsed" value="$purchasable"><xf:trim>
							<li><a href="{$purchasable.link}">{$purchasable.title}</a></li>
						</xf:trim></xf:foreach>
					</ul>
				</xf:inforow>
			</div>
		</div>
	</div>
<xf:else />
	<xf:form action="{{ link('payment-profiles/delete', $profile) }}" ajax="true" class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:inforow rowtype="confirm">
					<div class="blockMessage blockMessage--important blockMessage--iconic">{{ phrase('note_deleting_payment_profiles_will_not_affect_any_existing_purchases') }}</div>

					{{ phrase('please_confirm_that_you_want_to_delete_following:') }}
					<strong><a href="{{ link('payment-profiles/edit', $profile) }}">{$profile.title}</a></strong>
				</xf:inforow>
			</div>
			<xf:submitrow rowtype="simple" icon="delete" />
		</div>
	</xf:form>
</xf:if>]]></template>
  <template type="admin" title="payment_profile_edit" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:if is="$profile.isInsert()">
	<xf:title>{{ phrase('add_payment_profile:') }} {$provider.title}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_payment_profile:') }} {$provider.title} - {$profile.title}</xf:title>
</xf:if>

<xf:pageaction if="$profile.isUpdate()">
	<xf:button href="{{ link('payment-profiles/delete', $profile) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('payment-profiles/save', $profile) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:textboxrow name="title" value="{$profile.title}" maxlength="{{ max_length($profile, 'title') }}"
				label="{{ phrase('title') }}" />

			<xf:textboxrow name="display_title" value="{$profile.display_title}" maxlength="{{ max_length($profile, 'display_title') }}"
				label="{{ phrase('display_title') }}"
				explain="{{ phrase('payment_profile_display_title_explain') }}" />

			<hr class="formRowSep" />

			{{ $provider.renderConfig($profile)|raw }}

			<xf:submitrow sticky="true" icon="save" />
		</div>
	</div>

	<xf:hiddenval name="provider_id">{$provider.provider_id}</xf:hiddenval>
</xf:form>]]></template>
  <template type="admin" title="payment_profile_list" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('payment_profiles') }}</xf:title>

<xf:pageaction>
	<xf:button href="{{ link('payment-profiles/add') }}" icon="add" overlay="true">{{ phrase('add_payment_profile') }}</xf:button>
</xf:pageaction>

<xf:if is="!$xf.livePayments">
	<div class="blockMessage blockMessage--important blockMessage--iconic">
		{{ phrase('live_payments_have_been_disabled') }}
	</div>
</xf:if>

<xf:if is="$providers is not empty">
	<xf:form action="{{ link('payment-profiles/toggle') }}" class="block" ajax="true">
		<div class="block-outer">
			<xf:macro template="filter_macros" name="quick_filter" arg-key="payment-profiles" arg-class="block-outer-opposite" />
		</div>
		<div class="block-container">
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$providers" key="$providerId" value="$provider">
						<xf:if is="{$groupedProfiles.{$providerId}} is not empty">
							<xf:datarow rowtype="subsection" rowclass="dataList-row--noHover">
								<xf:cell colspan="3">{$provider.title}</xf:cell>
							</xf:datarow>
							<xf:foreach loop="{$groupedProfiles.{$providerId}}" value="$profile">
								<xf:datarow
									label="{$profile.title}"
									hint="{{ $profile.display_title ?: '' }}"
									href="{{ link('payment-profiles/edit', $profile) }}"
									delete="{{ link('payment-profiles/delete', $profile) }}" />
							</xf:foreach>
						</xf:if>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($totalProfiles) }}</span>
			</div>
		</div>
	</xf:form>
<xf:else />
	<div class="blockMessage">{{ phrase('no_items_have_been_created_yet') }}</div>
</xf:if>]]></template>
  <template type="admin" title="payment_profile_paypal" version_id="2000270" version_string="2.0.2"><![CDATA[<xf:textboxrow name="options[primary_account]" value="{$profile.options.primary_account}" type="email"
	label="{{ phrase('paypal_primary_account') }}"
	hint="{{ phrase('required') }}">

	<xf:explain>
		{{ phrase('paypal_primary_account_explain') }}
	</xf:explain>
</xf:textboxrow>

<xf:textarearow name="options[alternate_accounts]" value="{$profile.options.alternate_accounts}" autosize="true"
	label="{{ phrase('paypal_alternate_accounts') }}"
	explain="{{ phrase('paypal_alternate_accounts_explain') }}" />

<xf:checkboxrow>
	<xf:option name="options[require_address]" selected="$profile.options.require_address"
		label="{{ phrase('require_address') }}"
		hint="{{ phrase('require_address_hint') }}" />
</xf:checkboxrow>

<xf:hiddenval name="options[legacy]" value="{{ $profile.options.legacy ? 1 : 0 }}" />]]></template>
  <template type="admin" title="payment_profile_stripe" version_id="2010131" version_string="2.1.1 Beta 1"><![CDATA[<xf:textboxrow name="options[live_publishable_key]" value="{$profile.options.live_publishable_key}"
	label="{{ phrase('stripe_live_publishable_key') }}" />

<xf:textboxrow name="options[live_secret_key]" value="{$profile.options.live_secret_key}"
	label="{{ phrase('stripe_live_secret_key') }}"
	explain="{{ phrase('stripe_live_secret_key_explain') }}" />

<hr class="formRowSep" />

<xf:textboxrow name="options[test_publishable_key]" value="{$profile.options.test_publishable_key}"
	label="{{ phrase('stripe_test_publishable_key') }}"/>

<xf:textboxrow name="options[test_secret_key]" value="{$profile.options.test_secret_key}"
	label="{{ phrase('stripe_test_secret_key') }}"
	explain="{{ phrase('stripe_test_secret_key_explain') }}" />

<hr class="formRowSep" />

<xf:formrow label="">
	<div class="formRow-explain">
		{{ phrase('stripe_webhook_explain', {'boardUrl': $xf.options.boardUrl}) }}
	</div>
</xf:formrow>

<hr class="formRowSep" />

<xf:checkboxrow>
	<xf:option label="{{ phrase('stripe_verify_webhook_with_signing_secret:') }}" selected="$profile.options.signing_secret">
		<xf:textbox name="options[signing_secret]" value="{$profile.options.signing_secret}" />
	</xf:option>
	<xf:explain>{{ phrase('stripe_verify_webhook_with_signing_secret_explain') }}</xf:explain>
</xf:checkboxrow>

<hr class="formRowSep" />

<xf:checkboxrow
	explain="{{ phrase('enable_apple_pay_support_stripe_explain') }}">
	<xf:option name="options[apple_pay_enable]" selected="{$profile.options.apple_pay_enable}">
		{{ phrase('enable_apple_pay_support') }}
	</xf:option>
</xf:checkboxrow>]]></template>
  <template type="admin" title="payment_profile_twocheckout" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:textboxrow name="options[account_number]" value="{$profile.options.account_number}"
	label="{{ phrase('twocheckout_account_number') }}" />

<xf:textboxrow name="options[secret_word]" value="{$profile.options.secret_word}"
	label="{{ phrase('twocheckout_secret_word') }}"
	explain="{{ phrase('twocheckout_account_number_explain') }}" />

<xf:textboxrow name="options[api_username]" value="{$profile.options.api_username}"
	label="{{ phrase('twocheckout_api_username') }}"
	hint="{{ phrase('optional') }}" />

<xf:textboxrow name="options[api_password]" value="{$profile.options.api_password}"
	label="{{ phrase('twocheckout_api_password') }}"
	hint="{{ phrase('optional') }}"
	explain="{{ phrase('twocheckout_api_username_password_explain') }}" />]]></template>
  <template type="admin" title="permission.less" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[.formRow.formRow--permissionQuickSet
{
	> dt,
	> dd
	{
		padding-bottom: 0;
	}
}

.permissionChoices
{
	.m-listPlain();
	.m-clearFix();

	> li
	{
		float: left;
		margin-left: 1em;

		&:first-child
		{
			margin-left: 0;
		}
	}
}

.permissionChoices-choice
{
	border: 1px solid transparent;
	border-radius: @xf-borderRadiusMedium;

	&.is-selected
	{
		box-shadow: 1px 1px 5px rgba(0,0,0, .25);

		&.permissionChoices-choice--inherit
		{
			border-color: #c0c0c0;
			background: #ededed;
			color: #3c3c3c;
		}

		&.permissionChoices-choice--yes
		{
			border-color: #82ce85;
			background: #daf3d8;
			color: #3d793f;
		}

		&.permissionChoices-choice--no
		{
			border-color: #ecb25e;
			background: #fdf0cf;
			color: #9a6e30;
		}

		&.permissionChoices-choice--never
		{
			border-color: #eaa4a1;
			background: #fde9e9;
			color: #c84448;
		}
	}
}

.permissionChoices--flag
{
	label
	{
		display: block;
		min-width: 90px;
		text-align: center;
		padding: 0 @xf-paddingMedium;
	}

	.iconic i
	{
		position: relative;
		vertical-align: top;
	}
}

.permissionChoices--int
{
	.permissionChoices-choice--yes,
	.permissionChoices-choice--inherit
	{
		label
		{
			display: inline-block;
			line-height: 27px;
			padding: 0 @xf-paddingMedium;
			min-width: 90px;
			text-align: center;
		}

		.iconic i
		{
			position: relative;
			vertical-align: top;
		}
	}

	.inputGroup.inputGroup--joined
	{
		position: relative;

		.inputGroup-text
		{
			&.inputNumber-button
			{
				&.inputNumber-button--up
				{
					border-left: 0;
				}
			}
		}

		.input--number
		{
			display: inline;
			width: 80px;
			padding-top: @xf-paddingSmall;
			padding-bottom: @xf-paddingSmall;
		}
	}

	.permissionChoices-choice--int
	{
		&.is-disabled .inputGroup-text
		{
			.xf-inputDisabled(background);
		}

		&.is-disabled .permissionChoices-choiceIntLabel
		{
			display: block;
		}

		&.is-selected .input[type=number],
		&.is-selected .input[type=tel]
		{
			.xf-inputFocus();
		}
	}
}

.permissionChoices-choiceIntLabel
{
	display: none;
	position: absolute;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
}

@media (max-width: @xf-responsiveNarrow)
{
	.permissionChoices--flag,
	.permissionChoices--int .permissionChoices-choice--inherit
	{
		label
		{
			min-width: 0;
		}
	}
}]]></template>
  <template type="admin" title="permission_analyze" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('analyze_permissions') }}</xf:title>
<xf:description>{{ phrase('analyze_permissions_description') }}</xf:description>

<xf:if is="$analysis">
	<xf:set var="$interfaceGroups" value="{$permissionData.interfaceGroups}" />
	<xf:set var="$permissionsGrouped" value="{$permissionData.permissionsGrouped}" />

	<xf:foreach loop="$interfaceGroups" key="$interfaceGroupId" value="$interfaceGroup">
		<xf:if contentcheck="true">
			<div class="block">
				<div class="block-container">
					<h3 class="block-header">{$interfaceGroup.title}</h3>
					<div class="block-body">
			<xf:contentcheck>
			<xf:foreach loop="{$permissionsGrouped.{$interfaceGroupId}}" value="$permission">
				<xf:if is="{$analysis.{$permission.permission_group_id}.{$permission.permission_id}}">
					<xf:set var="$permAnalysis" value="{$analysis.{$permission.permission_group_id}.{$permission.permission_id}}" />
					<xf:formrow label="{$permission.title}">
						<xf:if is="$permission.permission_type == 'flag'">
							<xf:if is="$permAnalysis.final">
								{{ phrase('yes') }}
							<xf:else />
								{{ phrase('no') }}
							</xf:if>
						<xf:else />
							<xf:if is="$permAnalysis.final == -1">
								{{ phrase('unlimited') }}
							<xf:else />
								{$permAnalysis.final}
							</xf:if>
						</xf:if>
						<a data-xf-click="toggle" role="button" tabindex="0">{{ phrase('(details)') }}</a>

						<div class="toggleTarget">
						<xf:foreach loop="$permAnalysis.intermediates" value="$intermediate">
							<dl class="pairs pairs--columns">
								<dt><xf:trim>
									<xf:if is="$intermediate.type == 'system'">
										<xf:if is="$intermediate.contentId">
											{$intermediate.contentTitle} - {{ phrase('content_wide') }}
										<xf:else />
											{{ phrase('global_value') }}
										</xf:if>
									<xf:elseif is="$intermediate.type == 'group'" />
										<xf:if is="$intermediate.contentId">
											{$intermediate.contentTitle} - {$userGroupTitles.{$intermediate.typeId}}
										<xf:else />
											{$userGroupTitles.{$intermediate.typeId}}
										</xf:if>
									<xf:elseif is="$intermediate.type == 'user'" />
										<xf:if is="$intermediate.contentId">
											{$intermediate.contentTitle} - {{ phrase('user_value') }}
										<xf:else />
											{{ phrase('user_value') }}
										</xf:if>
									</xf:if>
								</xf:trim></dt>
								<dd>
									<xf:if is="$permission.permission_type == 'flag'">
										<xf:if is="$intermediate.value == 'deny'">{{ phrase('never') }}
										<xf:elseif is="$intermediate.value == 'content_allow'" />{{ phrase('yes') }}
										<xf:elseif is="$intermediate.value == 'reset'" />{{ phrase('no') }}
										<xf:elseif is="$intermediate.value == 'allow'" />{{ phrase('yes') }}
										<xf:elseif is="$intermediate.value == 'unset'" />{{ phrase('no') }}
										</xf:if>
									<xf:else />
										<xf:if is="$intermediate.value == -1">
											{{ phrase('unlimited') }}
										<xf:else />
											{$intermediate.value}
										</xf:if>
									</xf:if>
								</dd>
							</dl>
						</xf:foreach>
						</div>
					</xf:formrow>
				</xf:if>
			</xf:foreach>
			</xf:contentcheck>
					</div>
				</div>
			</div>
		</xf:if>
	</xf:foreach>

</xf:if>

<div class="block">
	<div class="block-container">
		<h2 class="block-tabHeader tabs hScroller" data-xf-init="tabs h-scroller" role="tablist">
			<span class="hScroller-scroll">
				<a class="tabs-tab {{ $contentType == '' ? 'is-active' : '' }}"
					role="tab" tabindex="0" aria-controls="analyze-global-permissions">{{ phrase('global_permissions') }}</a>

				<xf:foreach loop="$contentOptions" key="$_contentType" value="$_contentPermission" if="$_contentPermission.content">
					<a class="tabs-tab {{ $contentType == $_contentType ? 'is-active' : '' }}"
						role="tab" tabindex="0" aria-controls="analyze-{$contentType}">{$_contentPermission.title}</a>
				</xf:foreach>
			</span>
		</h2>

		<ul class="tabPanes">
			<li class="{{ $contentType == '' ? 'is-active' : '' }}" role="tabpanel" id="analyze-global-permissions">
				<xf:form action="{{ link('permissions/analyze') }}">
					<div class="block-body">
						<xf:textboxrow name="username" value="{$username}" ac="single"
							label="{{ phrase('user_name') }}" />
					</div>
					<xf:submitrow submit="{{ phrase('analyze') }}" />
				</xf:form>
			</li>
			<xf:foreach loop="$contentOptions" key="$_contentType" value="$_contentPermission" if="$_contentPermission.content">
				<li class="{{ $contentType == $_contentType ? 'is-active' : '' }}" role="tabpanel" id="analyze-{$_contentType}">
					<xf:form action="{{ link('permissions/analyze') }}">
						<div class="block-body">
							<xf:textboxrow name="username" value="{$username}" ac="single"
								label="{{ phrase('user_name') }}" />

							<xf:selectrow name="content_id" value="{{ $contentType == $_contentType ? $contentId : 0 }}"
								label="{{ phrase('content') }}">

								<xf:option value="0">&nbsp;</xf:option>
								<xf:options source="$_contentPermission.content" />
							</xf:selectrow>
						</div>

						<xf:submitrow submit="{{ phrase('analyze') }}" />
						<xf:hiddenval name="content_type">{$_contentType}</xf:hiddenval>
					</xf:form>
				</li>
			</xf:foreach>
		</ul>
	</div>
</div>]]></template>
  <template type="admin" title="permission_category_macros" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro name="list"
	arg-category="!"
	arg-isPrivate="!"
	arg-userGroups="!"
	arg-users="!"
	arg-entries="!"
	arg-routeBase="!">

	<xf:form action="{{ link($routeBase . '/save', $category) }}" ajax="true" class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:checkboxrow>
					<xf:option name="private" selected="{$isPrivate}"
						label="{{ phrase('private_category') }}"
						hint="{{ phrase('private_category_hint') }}" />
				</xf:checkboxrow>
			</div>
			<xf:submitrow icon="save" />
		</div>
		<xf:hiddenval name="type">private</xf:hiddenval>
	</xf:form>

	<div class="block">
		<div class="block-container">
			<h3 class="block-header">{{ phrase('user_groups') }}</h3>
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$userGroups" value="$userGroup">
						<xf:datarow
							label="{$userGroup.title}"
							href="{{ link($routeBase . '/edit', $category, {'user_group_id': $userGroup.user_group_id}) }}"
							rowclass="{{ {$entries.groups.{$userGroup.user_group_id}} ? 'dataList-row--custom' : '' }}" />
					</xf:foreach>
				</xf:datalist>
			</div>
		</div>
	</div>

	<xf:form action="{{ link($routeBase . '/edit', $category) }}" class="block">
		<div class="block-container">
			<h3 class="block-header">{{ phrase('users_with_permissions_set') }}</h3>
			<div class="block-body">
				<xf:if is="$users is not empty">
					<xf:datalist>
						<xf:foreach loop="$users" value="$user">
							<xf:datarow
								label="{$user.username}"
								href="{{ link($routeBase . '/edit', $category, {'user_id': $user.user_id}) }}"
								rowclass="dataList-row--custom" />
						</xf:foreach>
					</xf:datalist>
					<hr class="block-separator" />
				</xf:if>
				<xf:textboxrow name="username" ac="single"
					label="{{ phrase('set_permissions_for_user') }}" />
			</div>
			<xf:submitrow submit="{{ phrase('proceed...') }}" />
		</div>
		<xf:hiddenval name="type">user</xf:hiddenval>
	</xf:form>
</xf:macro>

<xf:macro name="edit"
	arg-category="!"
	arg-permissionData="!"
	arg-typeEntries="!"
	arg-routeBase="!"
	arg-saveParams="!">

	<xf:form action="{{ link($routeBase . '/save', $category, $saveParams) }}" ajax="true" class="block">
		<xf:macro template="permission_macros" name="edit_outer" arg-type="content" />

		<div class="block-container">
			<xf:macro template="permission_macros" name="content_edit_groups"
				arg-permissionsGrouped="{$permissionData.permissionsGrouped}"
				arg-interfaceGroups="{$permissionData.interfaceGroups}"
				arg-values="{$typeEntries}"
			/>
			<xf:submitrow sticky="true" icon="save" />
		</div>
	</xf:form>
</xf:macro>]]></template>
  <template type="admin" title="permission_definition_edit" version_id="2000033" version_string="2.0.0 Beta 3"><![CDATA[<xf:if is="$permission.isInsert()">
	<xf:title>{{ phrase('add_permission') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_permission:') }} {$permission.title}</xf:title>
</xf:if>

<xf:pageaction if="$permission.isUpdate()">
	<xf:button href="{{ link('permission-definitions/permissions/delete', $permission) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('permission-definitions/permissions/save', $permission) }}" ajax="true" class="block">

	<div class="block-container">
		<div class="block-body">
			<xf:textboxrow name="permission_group_id" value="{$permission.permission_group_id}"
				maxlength="{{ max_length($permission, 'permission_group_id') }}"
				label="{{ phrase('permission_group') }}"
				dir="ltr" />
			<xf:textboxrow name="permission_id" value="{$permission.permission_id}"
				maxlength="{{ max_length($permission, 'permission_id') }}"
				label="{{ phrase('permission_id') }}"
				dir="ltr" />

			<xf:textboxrow name="title" value="{{ $permission.exists() ? $permission.MasterTitle.phrase_text : '' }}"
				label="{{ phrase('title') }}" />

			<xf:textboxrow name="depend_permission_id" value="{$permission.depend_permission_id}"
				maxlength="{{ max_length($permission, 'depend_permission_id') }}"
				label="{{ phrase('depends_on_permission_id') }}"
				hint="{{ phrase('must_be_in_same_permission_group') }}" />

			<hr class="formRowSep" />

			<xf:radiorow name="permission_type" value="{$permission.permission_type}"
				label="{{ phrase('permission_type') }}">

				<xf:option value="flag">{{ phrase('flag') }}</xf:option>
				<xf:option value="integer">{{ phrase('integer') }}</xf:option>
			</xf:radiorow>

			<hr class="formRowSep" />

			<xf:selectrow name="interface_group_id" value="{$permission.interface_group_id}"
				label="{{ phrase('interface_group') }}">

				<xf:option value="" />
				<xf:foreach loop="$interfaceGroups" value="$interfaceGroup">
					<xf:option value="{$interfaceGroup.interface_group_id}">{$interfaceGroup.title}</xf:option>
				</xf:foreach>
			</xf:selectrow>

			<xf:macro template="display_order_macros" name="row"
				arg-value="{$permission.display_order}" />

			<hr class="formRowSep" />

			<xf:macro template="addon_macros" name="addon_edit" arg-addOnId="{$permission.addon_id}" />
		</div>
		<xf:submitrow sticky="true" icon="save" />
	</div>

</xf:form>]]></template>
  <template type="admin" title="permission_definition_list" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('permissions') }}</xf:title>

<xf:pageaction>
	<xf:button href="{{ link('permission-definitions/permissions/add') }}" icon="add">
		{{ phrase('add_permission') }}
	</xf:button>
	<xf:button href="{{ link('permission-definitions/interface-groups/add') }}" icon="add">
		{{ phrase('add_interface_group') }}
	</xf:button>
</xf:pageaction>

<xf:foreach loop="$interfaceGroups" key="$interfaceGroupId" value="$interfaceGroup">
	<div class="block">
		<div class="block-container">
			<h2 class="block-header">
				{{ anchor_target('interface_group_' . $interfaceGroup.interface_group_id) }}
				<a href="{{ link('permission-definitions/interface-groups/edit', $interfaceGroup) }}" class="u-pullRight">{{ phrase('edit') }}</a>
				{$interfaceGroup.title}
				<span class="block-desc">
					{$interfaceGroupId} ({$interfaceGroup.display_order})
				</span>
			</h2>
			<div class="block-body">
				<xf:if is="{$permissionsGrouped.{$interfaceGroupId}} is not empty">
					<xf:datalist>
						<xf:foreach loop="{$permissionsGrouped.{$interfaceGroupId}}" value="$permission">
							<xf:datarow
								href="{{ link('permission-definitions/permissions/edit', $permission) }}"
								label="{$permission.title}"
								hint="{$permission.permission_group_id} / {$permission.permission_id} ({$permission.display_order})"
								hash="{$permission.permission_group_id}_{$permission.permission_id}" />
						</xf:foreach>
					</xf:datalist>
				<xf:else />
					<div class="block-row">
						{{ phrase('no_permissions_have_been_created_for_interface_group_yet', {
							'link': link('permission-definitions/permissions/add', null, {
								'interface_group_id': $interfaceGroupId
							})
						}) }}
					</div>
				</xf:if>
			</div>
		</div>
	</div>
</xf:foreach>

<xf:set var="$ungroupedKey" value="" />
<xf:if is="{$permissionsGrouped.{$ungroupedKey}} is not empty">
	<div class="block">
		<div class="block-container">
			<h2 class="block-header">
				{{ phrase('ungrouped_permissions') }}
			</h2>
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="{$permissionsGrouped.{$ungroupedKey}}" value="$permission">
						<xf:datarow
							href="{{ link('permission-definitions/permissions/edit', $permission) }}"
							label="{$permission.title}"
							hint="{$permission.permission_group_id} / {$permission.permission_id}"
							hash="{$permission.permission_group_id}_{$permission.permission_id}" />
					</xf:foreach>
				</xf:datalist>
			</div>
		</div>
	</div>
</xf:if>]]></template>
  <template type="admin" title="permission_interface_group_edit" version_id="2000033" version_string="2.0.0 Beta 3"><![CDATA[<xf:if is="$interfaceGroup.isInsert()">
	<xf:title>{{ phrase('add_interface_group') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_interface_group:') }} {$interfaceGroup.title}</xf:title>
</xf:if>

<xf:pageaction if="$interfaceGroup.isUpdate()">
	<xf:button href="{{ link('permission-definitions/interface-groups/delete', $interfaceGroup) }}"
		icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('permission-definitions/interface-groups/save', $interfaceGroup) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:textboxrow name="interface_group_id" value="{$interfaceGroup.interface_group_id}"
				maxlength="{{ max_length($interfaceGroup, 'interface_group_id') }}"
				label="{{ phrase('interface_group_id') }}"
				dir="ltr" />

			<xf:textboxrow name="title" value="{{ $interfaceGroup.exists() ? $interfaceGroup.MasterTitle.phrase_text : '' }}"
				label="{{ phrase('title') }}" />

			<xf:macro template="display_order_macros" name="row"
				arg-value="{$interfaceGroup.display_order}" />

			<xf:checkboxrow name="is_moderator" value="{$interfaceGroup.is_moderator}">
				<xf:option value="1" label="{{ phrase('this_interface_group_contains_moderator_permissions') }}" />
			</xf:checkboxrow>

			<xf:macro template="addon_macros" name="addon_edit" arg-addOnId="{$interfaceGroup.addon_id}" />
		</div>
		<xf:submitrow sticky="true" icon="save" />
	</div>

</xf:form>]]></template>
  <template type="admin" title="permission_macros" version_id="2010037" version_string="2.1.0 Beta 7"><![CDATA[<xf:macro name="edit_outer" arg-type="!">
	<xf:js src="xf/permission.js" min="1" />
	<xf:css src="permission.less" />

	<div class="block-outer"
		data-xf-init="permission-form"
		data-form="< form"
		data-permission-type="{$type}">

		<div class="block-outer-main js-globalPermissionQuickSet">
			<xf:button class="button--link menuTrigger" data-xf-click="menu" aria-expanded="false" aria-haspopup="true">{{ phrase('quick_set') }}</xf:button>
			<xf:macro name="quick_set_menu" arg-type="{$type}" />
		</div>
		<div class="block-outer-opposite quickFilter">
			<input type="text" class="input js-permissionFilterInput" placeholder="{{ phrase('filter...')|for_attr }}" />
		</div>
	</div>

</xf:macro>

<xf:macro name="quick_set_menu" arg-type="!" arg-target="">
	<div class="menu" data-menu="menu" aria-hidden="true">
		<div class="menu-content">
			<h3 class="menu-header">{{ phrase('quick_set') }}</h3>
			<xf:if is="$type == 'global'">
				<a class="menu-linkRow js-permissionQuickSet" data-target="{$target}" data-value="allow" tabindex="0">
					{{ phrase('set_all_to_x', {'value': phrase('yes')}) }}
				</a>
				<a class="menu-linkRow js-permissionQuickSet" data-target="{$target}" data-value="unset" tabindex="0">
					{{ phrase('set_all_to_x', {'value': phrase('no')}) }}
				</a>
				<a class="menu-linkRow js-permissionQuickSet" data-target="{$target}" data-value="deny" tabindex="0">
					{{ phrase('set_all_to_x', {'value': phrase('never')}) }}
				</a>
			<xf:elseif is="$type == 'content'" />
				<a class="menu-linkRow js-permissionQuickSet" data-target="{$target}" data-value="unset" tabindex="0">
					{{ phrase('set_all_to_x', {'value': phrase('inherit')}) }}
				</a>
				<a class="menu-linkRow js-permissionQuickSet" data-target="{$target}" data-value="content_allow" tabindex="0">
					{{ phrase('set_all_to_x', {'value': phrase('yes')}) }}
				</a>
				<a class="menu-linkRow js-permissionQuickSet" data-target="{$target}" data-value="reset" tabindex="0">
					{{ phrase('set_all_to_x', {'value': phrase('no')}) }}
				</a>
				<a class="menu-linkRow js-permissionQuickSet" data-target="{$target}" data-value="deny" tabindex="0">
					{{ phrase('set_all_to_x', {'value': phrase('never')}) }}
				</a>
			</xf:if>
		</div>
	</div>
</xf:macro>

<xf:macro name="edit_groups" arg-interfaceGroups="!" arg-permissionsGrouped="!" arg-values="!">
	<xf:foreach loop="$interfaceGroups" key="$interfaceGroupId" value="$interfaceGroup">
		<xf:if is="{$permissionsGrouped.{$interfaceGroupId}} is not empty">
			<h3 class="block-formSectionHeader">
				<span class="collapseTrigger collapseTrigger--block is-active" data-xf-click="toggle" data-target="< :up:next">
					<span class="block-formSectionHeader-aligner">{$interfaceGroup.title}</span>
				</span>
			</h3>
			<div class="block-body block-body--collapsible is-active"
				data-moderator-permissions="{$interfaceGroup.is_moderator}"
				id="permGroup-{$interfaceGroupId}">

				<xf:if is="count({$permissionsGrouped.{$interfaceGroupId}}) > 2">
					<xf:formrow rowclass="formRow--permissionQuickSet">
						<xf:button class="button--link menuTrigger" data-xf-click="menu" aria-expanded="false" aria-haspopup="true">{{ phrase('quick_set') }}</xf:button>
						<xf:macro name="quick_set_menu" arg-type="global" arg-target="#permGroup-{$interfaceGroupId}" />
					</xf:formrow>
				</xf:if>
				<xf:foreach loop="{$permissionsGrouped.{$interfaceGroupId}}" value="$permission">
					<xf:macro name="edit_permission"
						arg-permission="{$permission}"
						arg-value="{$values.{$permission.permission_group_id}.{$permission.permission_id}}" />
				</xf:foreach>
			</div>
		</xf:if>
	</xf:foreach>
</xf:macro>

<xf:macro name="edit_permission" arg-permission="!" arg-value="!">
	<xf:set var="$inputName" value="permissions[{$permission.permission_group_id}][{$permission.permission_id}]" />
	<xf:formrow
		label="{$permission.title}"
		rowclass="js-permission"
		data-xf-init="permission-choice"
		data-permission-type="{$permission.permission_type}">

		<xf:if is="$permission.permission_type == 'flag'">
			<ul class="permissionChoices permissionChoices--flag">
				<li class="permissionChoices-choice permissionChoices-choice--yes">
					<xf:radio name="{$inputName}" value="{$value}" standalone="true">
						<xf:option value="allow"
							label="{{ phrase('yes') }}" />
					</xf:radio>
				</li>
				<li class="permissionChoices-choice permissionChoices-choice--no">
					<xf:radio name="{$inputName}" value="{{ ($value == 'unset' || !$value) ? 'unset' : '' }}" standalone="true">
						<xf:option value="unset"
							label="{{ phrase('no') }}" />
					</xf:radio>
				</li>
				<li class="permissionChoices-choice permissionChoices-choice--never">
					<xf:radio name="{$inputName}" value="{$value}" standalone="true">
						<xf:option value="deny"
							label="{{ phrase('never') }}" />
					</xf:radio>
				</li>
			</ul>
		<xf:else />
			<ul class="permissionChoices permissionChoices--int">
				<li class="permissionChoices-choice permissionChoices-choice--yes">
					<xf:radio name="{$inputName}" value="{$value}" standalone="true">
						<xf:option value="-1"
							label="{{ phrase('unlimited') }}" />
					</xf:radio>
				</li>
				<li class="permissionChoices-choice permissionChoices-choice--int">
					<div class="inputGroup inputGroup--inline inputGroup--joined inputNumber" data-xf-init="number-box">
						<span class="inputGroup-text">
							<xf:radio name="{$inputName}" value="{$value}" standalone="true">
								<xf:option value="0"
									selected="{{ $value >= 0 }}"
									data-xf-init="disabler"
									data-container="< li"
									label="{{ phrase('as_follows:') }}"
									hiddenlabel="true"
									id="perm_{$permission.permission_group_id}_{$permission.permission_id}_radio" />
							</xf:radio>
							<label class="permissionChoices-choiceIntLabel" for="perm_{$permission.permission_group_id}_{$permission.permission_id}_radio"></label>
						</span>
						<xf:textbox name="{$inputName}" value="{{ $value >= 0 ? $value|default(0) : 0 }}" type="number"
							class="input--number js-numberBoxTextInput js-permissionIntInput"
							min="0" pattern="\d*" />
					</div>
				</li>
			</ul>
		</xf:if>
	</xf:formrow>
</xf:macro>

<xf:macro name="content_edit_groups" arg-interfaceGroups="!" arg-permissionsGrouped="!" arg-values="!">
	<xf:foreach loop="$interfaceGroups" key="$interfaceGroupId" value="$interfaceGroup">
		<xf:if is="{$permissionsGrouped.{$interfaceGroupId}} is not empty">
			<h3 class="block-formSectionHeader">
				<span class="collapseTrigger collapseTrigger--block is-active" data-xf-click="toggle" data-target="< :up:next">
					<span class="block-formSectionHeader-aligner">{$interfaceGroup.title}</span>
				</span>
			</h3>
			<div class="block-body block-body--collapsible is-active"
				data-moderator-permissions="{$interfaceGroup.is_moderator}"
				id="permGroup-{$interfaceGroupId}">

				<xf:if is="count({$permissionsGrouped.{$interfaceGroupId}}) > 2">
					<xf:formrow rowclass="formRow--permissionQuickSet">
						<xf:button class="button--link menuTrigger" data-xf-click="menu" aria-expanded="false" aria-haspopup="true">{{ phrase('quick_set') }}</xf:button>
						<xf:macro name="quick_set_menu" arg-type="content" arg-target="#permGroup-{$interfaceGroupId}" />
					</xf:formrow>
				</xf:if>
				<xf:foreach loop="{$permissionsGrouped.{$interfaceGroupId}}" value="$permission">
					<xf:macro name="content_edit_permission"
						arg-permission="{$permission}"
						arg-value="{$values.{$permission.permission_group_id}.{$permission.permission_id}}" />
				</xf:foreach>
			</div>
		</xf:if>
	</xf:foreach>
</xf:macro>

<xf:macro name="content_edit_permission" arg-permission="!" arg-value="!">
	<xf:set var="$inputName" value="permissions[{$permission.permission_group_id}][{$permission.permission_id}]" />
	<xf:formrow
		label="{$permission.title}"
		rowclass="js-permission"
		data-xf-init="permission-choice"
		data-permission-type="{$permission.permission_type}">

		<xf:if is="$permission.permission_type == 'flag'">
			<ul class="permissionChoices permissionChoices--flag">
				<li class="permissionChoices-choice permissionChoices-choice--inherit">
					<xf:radio name="{$inputName}" value="{{ (!$value || $value == 'unset') ? 'unset' : '' }}" standalone="true">
						<xf:option value="unset"
							label="{{ phrase('inherit') }}" />
					</xf:radio>
				</li>
				<li class="permissionChoices-choice permissionChoices-choice--yes">
					<xf:radio name="{$inputName}" value="{$value}" standalone="true">
						<xf:option value="content_allow"
							label="{{ phrase('yes') }}" />
					</xf:radio>
				</li>
				<li class="permissionChoices-choice permissionChoices-choice--no">
					<xf:radio name="{$inputName}" value="{$value}" standalone="true">
						<xf:option value="reset"
							label="{{ phrase('no') }}" />
					</xf:radio>
				</li>
				<li class="permissionChoices-choice permissionChoices-choice--never">
					<xf:radio name="{$inputName}" value="{$value}" standalone="true">
						<xf:option value="deny"
							label="{{ phrase('never') }}" />
					</xf:radio>
				</li>
			</ul>
		<xf:else />
			<ul class="permissionChoices permissionChoices--int">
				<li class="permissionChoices-choice permissionChoices-choice--inherit">
					<xf:radio name="{$inputName}" value="{{ (!$value || $value == 0) ? 0 : null }}" standalone="true">
						<xf:option value="0"
							label="{{ phrase('inherit') }}" />
					</xf:radio>
				</li>
				<li class="permissionChoices-choice permissionChoices-choice--yes">
					<xf:radio name="{$inputName}" value="{$value}" standalone="true">
						<xf:option value="-1"
							label="{{ phrase('unlimited') }}" />
					</xf:radio>
				</li>
				<li class="permissionChoices-choice permissionChoices-choice--int">
					<div class="inputGroup inputGroup--inline inputGroup--joined inputNumber" data-xf-init="number-box">
						<span class="inputGroup-text">
							<xf:radio name="{$inputName}" standalone="true">
								<xf:option value="1"
									selected="{{ $value >= 1 }}"
									data-xf-init="disabler"
									data-container="< li"
									label="{{ phrase('as_follows:') }}"
									hiddenlabel="true"
									id="perm_{$permission.permission_group_id}_{$permission.permission_id}_radio" />
							</xf:radio>
							<label class="permissionChoices-choiceIntLabel" for="perm_{$permission.permission_group_id}_{$permission.permission_id}_radio"></label>
						</span>
						<xf:textbox type="number" name="{$inputName}" value="{{ $value >= 1 ? $value|default(1) : 1 }}"
							class="input--number js-numberBoxTextInput js-permissionIntInput"
							min="0" pattern="\d*" />
					</div>
				</li>
			</ul>
		</xf:if>
	</xf:formrow>
</xf:macro>]]></template>
  <template type="admin" title="permission_node_edit" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:if is="$userGroup">
	<xf:title>{$userGroup.title}</xf:title>
<xf:else />
	<xf:title>{$user.username}</xf:title>
</xf:if>

<xf:breadcrumb href="{{ link('permissions/nodes', $record) }}">{$record.title}</xf:breadcrumb>

<xf:macro template="permission_node_macros" name="edit"
	arg-node="{$record}"
	arg-permissionData="{$permissionData}"
	arg-typeEntries="{$typeEntries}"
	arg-routeBase="permissions/nodes"
	arg-saveParams="{$saveParams}" />]]></template>
  <template type="admin" title="permission_node_list" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{$record.title}</xf:title>

<xf:macro template="permission_node_macros" name="list"
	arg-node="{$record}"
	arg-isPrivate="{$isPrivate}"
	arg-userGroups="{$userGroups}"
	arg-users="{$users}"
	arg-entries="{$entries}"
	arg-routeBase="permissions/nodes" />]]></template>
  <template type="admin" title="permission_node_macros" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro name="list"
	arg-node="!"
	arg-isPrivate="!"
	arg-userGroups="!"
	arg-users="!"
	arg-entries="!"
	arg-routeBase="!">

	<xf:form action="{{ link($routeBase . '/save', $node) }}" ajax="true" class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:checkboxrow>
					<xf:option name="private" selected="{$isPrivate}"
						label="{{ phrase('private_node') }}"
						hint="{{ phrase('if_selected_users_only_view_node_if_granted_permissions') }}" />
				</xf:checkboxrow>
			</div>
			<xf:submitrow icon="save" />
		</div>
		<xf:hiddenval name="type">private</xf:hiddenval>
	</xf:form>

	<div class="block">
		<div class="block-container">
			<h3 class="block-header">{{ phrase('user_groups') }}</h3>
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$userGroups" value="$userGroup">
						<xf:datarow
							label="{$userGroup.title}"
							href="{{ link($routeBase . '/edit', $node, {'user_group_id': $userGroup.user_group_id}) }}"
							rowclass="{{ {$entries.groups.{$userGroup.user_group_id}} ? 'dataList-row--custom' : '' }}" />
					</xf:foreach>
				</xf:datalist>
			</div>
		</div>
	</div>

	<xf:form action="{{ link($routeBase . '/edit', $node) }}" class="block">
		<div class="block-container">
			<h3 class="block-header">{{ phrase('users_with_permissions_set') }}</h3>
			<div class="block-body">
				<xf:if is="$users is not empty">
					<xf:datalist>
						<xf:foreach loop="$users" value="$user">
							<xf:datarow
								label="{$user.username}"
								href="{{ link($routeBase . '/edit', $node, {'user_id': $user.user_id}) }}"
								rowclass="dataList-row--custom" />
						</xf:foreach>
					</xf:datalist>
					<hr class="block-separator" />
				</xf:if>
				<xf:textboxrow name="username" ac="single"
					label="{{ phrase('set_permissions_for_user') }}" />
			</div>
			<xf:submitrow submit="{{ phrase('proceed...') }}" />
		</div>
		<xf:hiddenval name="type">user</xf:hiddenval>
	</xf:form>
</xf:macro>

<xf:macro name="edit"
	arg-node="!"
	arg-permissionData="!"
	arg-typeEntries="!"
	arg-routeBase="!"
	arg-saveParams="!">

	<xf:form action="{{ link($routeBase . '/save', $node, $saveParams) }}"
		ajax="true" class="block">

		<xf:macro template="permission_macros" name="edit_outer" arg-type="content" />

		<div class="block-container">
			<xf:macro template="permission_macros" name="content_edit_groups"
				arg-permissionsGrouped="{$permissionData.permissionsGrouped}"
				arg-interfaceGroups="{$permissionData.interfaceGroups}"
				arg-values="{$typeEntries}" />
			<xf:submitrow sticky="true" icon="save" />
		</div>
	</xf:form>
</xf:macro>]]></template>
  <template type="admin" title="permission_node_overview" version_id="2000052" version_string="2.0.0 Release Candidate 2"><![CDATA[<xf:title>{{ phrase('node_permissions') }}</xf:title>

<xf:if is="$nodeTree.countChildren()">
	<div class="block">
		<div class="block-outer">
			<xf:macro template="filter_macros" name="quick_filter" arg-key="nodes" arg-class="block-outer-opposite" />
		</div>
		<div class="block-container">
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$nodeTree.getFlattened(0)" value="$treeEntry">
						<xf:set var="$node" value="{$treeEntry.record}" />
						<xf:datarow rowclass="{{ {$customPermissions.{$node.node_id}} ? 'dataList-row--custom' : '' }}">
							<xf:cell class="dataList-cell--min"><i class="nodeIcon nodeIcon--{$node.NodeType.node_type_id}"></i></xf:cell>
							<xf:cell class="dataList-cell--link dataList-cell--main" hash="{$node.node_id}">
								<a href="{{ link('permissions/nodes', $node) }}">
									<div class="u-depth{$treeEntry.depth}">
										<div class="dataList-mainRow">{$node.title} <span class="dataList-hint" dir="auto">{$node.NodeType.title}</span></div>
									</div>
								</a>
							</xf:cell>
							<xf:action href="{{ link('nodes/edit', $node) }}">{{ phrase('edit') }}</xf:action>
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($nodeTree.getFlattened(0)) }}</span>
			</div>
		</div>
	</div>
<xf:else />
	<div class="blockMessage">{{ phrase('no_items_have_been_created_yet') }}</div>
</xf:if>]]></template>
  <template type="admin" title="permission_user_edit" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{$user.username}</xf:title>

<xf:form action="{{ link('permissions/users/save', $user) }}" ajax="true" class="block">
	<xf:macro template="permission_macros" name="edit_outer" arg-type="global" />

	<div class="block-container">
		<xf:macro template="permission_macros" name="edit_groups"
			arg-interfaceGroups="{$permissionData.interfaceGroups}"
			arg-permissionsGrouped="{$permissionData.permissionsGrouped}"
			arg-values="{$userEntries}" />
		<xf:submitrow sticky="true" icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="permission_user_list" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('user_permissions') }}</xf:title>

<xf:if is="$users is not empty">
	<div class="block">
		<div class="block-outer">
			<xf:macro template="filter_macros" name="quick_filter" arg-key="user-permissions" arg-class="block-outer-opposite" />
		</div>
		<div class="block-container">
			<h3 class="block-header">{{ phrase('users_with_permissions_set') }}</h3>
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$users" value="$user">
						<xf:datarow
							label="{$user.username}"
							href="{{ link('permissions/users', $user) }}" />
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($users) }}</span>
			</div>
		</div>
	</div>
</xf:if>

<xf:form action="{{ link('permissions/users') }}" method="post" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:textboxrow name="username" ac="single"
				label="{{ phrase('set_permissions_for_user') }}" />
		</div>
		<xf:submitrow submit="{{ phrase('proceed...') }}" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="permissions_user_group_edit" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{$userGroup.title}</xf:title>

<xf:form action="{{ link('permissions/user-groups/save', $userGroup) }}" ajax="true" class="block">
	<xf:macro template="permission_macros" name="edit_outer" arg-type="global" />

	<div class="block-container">
		<xf:macro template="permission_macros" name="edit_groups"
			arg-interfaceGroups="{$permissionData.interfaceGroups}"
			arg-permissionsGrouped="{$permissionData.permissionsGrouped}"
			arg-values="{$permissionData.values}" />

		<xf:submitrow sticky="true" icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="permissions_user_group_list" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('user_group_permissions') }}</xf:title>

<xf:if is="$userGroups is not empty">
	<div class="block">
		<div class="block-outer">
			<xf:macro template="filter_macros" name="quick_filter" arg-key="user-groups" arg-class="block-outer-opposite" />
		</div>
		<div class="block-container">
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$userGroups" value="$userGroup">
						<xf:datarow>
							<xf:main hash="{$userGroup.user_group_id}"
								href="{{ link('permissions/user-groups', $userGroup) }}" label="{$userGroup.title}"
								hint="{$userGroup.user_title}" />
							<xf:action href="{{ link('user-groups/edit', $userGroup) }}">{{ phrase('group_info') }}
							</xf:action>
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($userGroups) }}</span>
			</div>
		</div>
	</div>
</xf:if>]]></template>
  <template type="admin" title="phrase_delete" version_id="2000038" version_string="2.0.0 Beta 8"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link('phrases/delete', $phrase) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				<xf:if is="$phrase.language_id">
					{{ phrase('please_confirm_that_you_want_to_revert_the_following:') }}
				<xf:else />
					{{ phrase('please_confirm_that_you_want_to_delete_following:') }}
				</xf:if>
				<strong>
					{{ $phrase.language_id ? '<em class="u-dimmed">' . $phrase.Language.title . ':</em> ' : '' }}
					<a href="{{ link('phrases/edit', $phrase) }}">{$phrase.title}</a>
				</strong>
			</xf:inforow>
		</div>
		<xf:submitrow submit="{{ $phrase.language_id ? phrase('revert') : phrase('button.delete') }}"
			rowtype="simple" icon="{{ !$phrase.language_id ? 'delete' : '' }}" />
	</div>
	<xf:redirect />
</xf:form>]]></template>
  <template type="admin" title="phrase_edit" version_id="2000170" version_string="2.0.1"><![CDATA[<xf:if is="$phrase.isInsert()">
	<xf:title>{{ phrase('add_phrase') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_phrase:') }} {$phrase.title}</xf:title>
</xf:if>

<xf:page option="breadcrumbPath" value="languages" />
<xf:breadcrumb href="{{ link('languages/phrases', $language) }}">{$language.title} - {{ phrase('phrases') }}</xf:breadcrumb>

<xf:pageaction if="$phrase.isUpdate() AND $phrase.language_id == $language.language_id">
	<xf:if is="$language.language_id">
		<xf:button href="{{ link('phrases/delete', $phrase, {'_xfRedirect': $redirect}) }}" overlay="true">{{ phrase('revert') }}</xf:button>
	<xf:else />
		<xf:button href="{{ link('phrases/delete', $phrase, {'_xfRedirect': $redirect}) }}" icon="delete" overlay="true" />
	</xf:if>
</xf:pageaction>

<xf:form action="{{ link('phrases/save', $phrase) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:formrow label="{{ phrase('language') }}">
				{$language.title}
				<xf:hiddenval name="language_id">{$language.language_id}</xf:hiddenval>
			</xf:formrow>

			<xf:textboxrow name="title" value="{$phrase.title}" maxlength="{{ max_length($phrase, 'title') }}"
				label="{{ phrase('title') }}"
				hint="{{ phrase('must_be_unique') }}"
				dir="ltr" />

			<xf:if is="$phrase.isUpdate() AND $language.language_id > 0">
				<xf:formrow label="{{ phrase('master_value') }}">
					<div class="u-ltr">
						{{ $phrase.language_id == 0 ? $phrase.phrase_text|nl2br : $phrase.Master.phrase_text|nl2br }}
					</div>
				</xf:formrow>
			</xf:if>

			<xf:if is="$language.text_direction == 'RTL'">
				<xf:textarearow name="phrase_text" value="{$phrase.phrase_text}" dir="rtl" style="text-align: right"
					label="{{ phrase('phrase_text') }}"
					explain="{{ phrase('phrase_text_explain') }}" />
			<xf:else />
				<xf:codeeditorrow name="phrase_text" value="{$phrase.phrase_text}"
					mode="html" data-line-wrapping="true" data-line-numbers="false"
					class="codeEditor--autoSize codeEditor--proportional"
					label="{{ phrase('phrase_text') }}"
					explain="{{ phrase('phrase_text_explain') }}" />
			</xf:if>

			<xf:if is="!$language.language_id">
				<xf:macro template="addon_macros" name="addon_edit" arg-addOnId="{$phrase.addon_id}" />
			<xf:else />
				<xf:hiddenval name="addon_id">{$phrase.addon_id}</xf:hiddenval>
			</xf:if>

			<xf:if is="!$language.language_id">
				<xf:checkboxrow>
					<xf:option name="global_cache" selected="{$phrase.global_cache}">{{ phrase('cache_this_phrase_globally') }}</xf:option>
				</xf:checkboxrow>
			</xf:if>
		</div>
		<xf:submitrow sticky="true" icon="save">
			<xf:html>
				<xf:button type="submit" icon="save" name="exit">{{ phrase('save_and_exit') }}</xf:button>
				<input type="hidden" name="_page" value="{$_page}" />
			</xf:html>
		</xf:submitrow>
	</div>
	<xf:redirect />
</xf:form>]]></template>
  <template type="admin" title="phrase_list" version_id="2000036" version_string="2.0.0 Beta 6"><![CDATA[<xf:title>{$language.title} - {{ phrase('phrases') }}</xf:title>

<xf:page option="breadcrumbPath" value="languages" />
<xf:page option="section" value="phrases" />

<xf:pageaction>
	<xf:button href="{{ link('phrases/add', null, {'language_id': $language.language_id}) }}" icon="add"
		data-xf-click="prefix-grabber"
		data-filter-element="[data-xf-init~=filter]">
		{{ phrase('add_phrase') }}
	</xf:button>
</xf:pageaction>

<div class="block">
	<div class="block-outer">
		<div class="block-outer-main">
			<xf:macro template="language_macros" name="language_change_menu"
				arg-languageTree="{$languageTree}"
				arg-currentLanguage="{$language}"
				arg-route="languages/phrases"
				arg-routeParams="{$linkParams}" />

			<xf:macro template="addon_macros" name="addon_change_menu"
				arg-addOns="{$addOns}"
				arg-currentAddOn="{$currentAddOn}"
				arg-route="languages/phrases"
				arg-routeData="{$language}"
				arg-routeParams="{$linkParams}" />
		</div>
		<xf:macro template="filter_macros" name="quick_filter"
			arg-key="phrases"
			arg-ajax="{{ link('languages/phrases', $language, $linkParams) }}"
			arg-class="block-outer-opposite" />
	</div>
	<div class="block-container">
		<xf:macro name="search_menu"
			arg-language="{$language}"
			arg-conditions="{{ {'addon_id': $currentAddOn ? $currentAddOn.addon_id : '_any', 'state': ['default', 'inherited', 'custom']} }}" />

		<div class="block-body">
			<xf:datalist>
				<xf:macro name="phrase_list" arg-phrases="{$phrases}" arg-language="{$language}" arg-page="{$page}" />
				<xf:if is="$filter AND $total > $perPage">
					<xf:datarow rowclass="dataList-row--note dataList-row--noHover js-filterForceShow">
						<xf:cell colspan="2">{{ phrase('more_records_matching_filter_more_specific') }}</xf:cell>
					</xf:datarow>
				</xf:if>
			</xf:datalist>
		</div>

		<div class="block-footer">
			<span class="block-footer-counter">{{ display_totals($phrases, $total) }}</span>
		</div>
	</div>

	<xf:pagenav
		page="{$page}" perpage="{$perPage}" total="{$total}"
		link="languages/phrases"
		params="{$linkParams}"
		data="{$language}"
		wrapperclass="js-filterHide block-outer block-outer--after" />
</div>

<xf:macro name="phrase_list" arg-phrases="!" arg-language="!" arg-page="">
	<xf:foreach loop="$phrases" value="$phrase">
		<xf:datarow rowclass="{{ ($phrase.language_id == 0 ? '' : ($phrase.language_id == $language.language_id ? 'dataList-row--custom' : 'dataList-row--parentCustom')) }}">
			<xf:main href="{{ link('phrases/edit', $phrase, {'language_id': $language.language_id}) }}"
				label="{$phrase.title}"
				hint="{{ ($phrase.addon_id && $phrase.addon_id != 'XF' && $phrase.AddOn) ? $phrase.AddOn.title : '' }}"
				colspan="{{ $phrase.language_id == $language.language_id ? 1 : 2 }}"
				hash="{$phrase.phrase_id}"
				dir="auto" />
			<xf:if is="$phrase.language_id == $language.language_id">
				<xf:delete href="{{ link('phrases/delete', $phrase) }}" tooltip="{{ $phrase.language_id ? phrase('revert') : phrase('delete') }}" />
			</xf:if>
		</xf:datarow>
	</xf:foreach>
</xf:macro>

<xf:macro name="search_menu" arg-language="!" arg-conditions="!">
	<div class="block-filterBar">
		<div class="filterBar">
			<a class="filterBar-menuTrigger" data-xf-click="menu" role="button" tabindex="0" aria-expanded="false" aria-haspopup="true">{{ phrase('refine_and_translate') }}</a>
			<div class="menu menu--wide" data-menu="menu" aria-hidden="true"
				data-href="{{ link('phrases/refine-search', null, {'language_id': $language.language_id} + $conditions) }}"
				data-load-target=".js-filterMenuBody">
				<div class="menu-content">
					<h4 class="menu-header">{{ phrase('refine_and_translate') }}</h4>
					<div class="js-filterMenuBody">
						<div class="menu-row">{{ phrase('loading...') }}</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</xf:macro>]]></template>
  <template type="admin" title="phrase_outdated" version_id="2000033" version_string="2.0.0 Beta 3"><![CDATA[<xf:title>{{ phrase('outdated_phrases') }}</xf:title>

<xf:if is="$total">
	<div class="block">
		<div class="block-outer">
			<xf:macro template="filter_macros" name="quick_filter" arg-key="outdated-phrases" arg-class="block-outer-opposite" />
		</div>
		<div class="block-container">
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$languageTree.getFlattened(0)" value="$treeEntry">
						<xf:set var="$language" value="{$treeEntry.record}" />
						<xf:set var="$outdatedForLang" value="{$outdatedGrouped.{$language.language_id}}" />
						<xf:if is="$outdatedForLang is not empty">
							<xf:datarow rowtype="subsection" rowclass="dataList-row--noHover">
								<xf:cell>{$language.title}</xf:cell>
							</xf:datarow>
							<xf:foreach loop="$outdatedForLang" value="$outdated">
								<xf:datarow>
									<xf:cell href="{{ link('phrases/edit', $outdated.phrase) }}" class="dataList-cell--main">
										<div class="dataList-mainRow" dir="auto">{$outdated.phrase.title}</div>
										<div class="dataList-subRow">
											<ul class="listInline listInline--bullet">
												<li>{{ phrase('custom_version:') }} {$outdated.phrase.version_string}</li>
												<li>{{ phrase('parent_version:') }} {$outdated.parent_version_string}</li>
											</ul>
										</div>
									</xf:cell>
								</xf:datarow>
							</xf:foreach>
						</xf:if>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($total) }}</span>
			</div>
		</div>
	</div>
<xf:else />
	<div class="blockMessage">{{ phrase('there_are_no_outdated_phrases') }}</div>
</xf:if>]]></template>
  <template type="admin" title="phrase_refine_search" version_id="2000033" version_string="2.0.0 Beta 3"><![CDATA[<xf:form action="{{ link('phrases/search') }}">
	<div class="menu-row">
		{{ phrase('language:') }}
		<div class="u-inputSpacer">
			<xf:macro template="language_macros" name="language_select"
				arg-languageTree="{$languageTree}"
				arg-languageId="{$language.language_id}"
				arg-row="{{ false }}" />
		</div>
	</div>

	<div class="menu-row menu-row--separated">
		{{ phrase('add_on:') }}
		<div class="u-inputSpacer">
			<xf:macro template="addon_macros" name="addon_select"
				arg-addOnId="{$conditions.addon_id}"
				arg-includeAny="{{ true }}"
				arg-row="{{ false }}" />
		</div>
	</div>

	<div class="menu-row">
		{{ phrase('title_contains:') }}
		<div class="u-inputSpacer">
			<xf:textbox name="title" type="search" value="{$conditions.title}" dir="ltr" />
		</div>
	</div>

	<div class="menu-row menu-row--separated">
		{{ phrase('text_contains:') }}
		<div class="u-inputSpacer">
			<ul class="inputList">
				<li>
					<xf:textarea name="text" value="{$conditions.text}" autosize="true" />
				</li>
				<li><xf:checkbox standalone="true"><xf:option name="text_cs" label="{{ phrase('case_sensitive') }}" selected="{$conditions.text_cs}" /></xf:checkbox></li>
			</ul>
		</div>
	</div>

	<div class="menu-row menu-row--separated">
		{{ phrase('phrase_status:') }}
		<div class="u-inputSpacer">
			<xf:checkbox name="state[]" value="{$conditions.state}">
				<xf:option value="default">{{ phrase('unmodified') }}</xf:option>
				<xf:option value="inherited">{{ phrase('modified_in_parent_language') }}</xf:option>
				<xf:option value="custom">{{ phrase('modified_in_this_language') }}</xf:option>
			</xf:checkbox>
		</div>
	</div>

	<div class="menu-footer">
		<span class="menu-footer-controls">
			<xf:if is="$translateOnly">
				<xf:button type="submit" icon="translate" name="translate" class="button--primary" />
			<xf:else />
				<xf:button type="submit" icon="search" class="button--primary">{{ phrase('refine_search') }}</xf:button>
				<xf:button type="submit" icon="translate" name="translate" />
			</xf:if>
		</span>
	</div>
	<xf:hiddenval name="search">1</xf:hiddenval>
</xf:form>]]></template>
  <template type="admin" title="phrase_search" version_id="2000033" version_string="2.0.0 Beta 3"><![CDATA[<xf:title>{{ phrase('search_phrases') }}</xf:title>

<xf:form action="{{ link('phrases/search') }}" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:macro template="language_macros" name="language_select"
				arg-languageTree="{$languageTree}"
				arg-languageId="{$languageId}" />

			<xf:macro template="addon_macros" name="addon_select" arg-addOnId="_any" arg-includeAny="{{ true }}" />

			<hr class="formRowSep" />

			<xf:textboxrow name="title" type="search"
				label="{{ phrase('title_contains') }}"
				dir="ltr" />

			<xf:formrow rowtype="input"
				label="{{ phrase('text_contains') }}">

				<ul class="inputList">
					<li><xf:textarea name="text" autosize="true" /></li>
					<li><xf:checkbox standalone="true">
						<xf:option name="text_cs" label="{{ phrase('case_sensitive') }}" />
					</xf:checkbox></li>
				</ul>
			</xf:formrow>

			<hr class="formRowSep" />

			<xf:checkboxrow name="state[]"
				label="{{ phrase('phrase_status') }}">

				<xf:option value="default" selected="true">{{ phrase('unmodified') }}</xf:option>
				<xf:option value="inherited" selected="true">{{ phrase('modified_in_parent_language') }}</xf:option>
				<xf:option value="custom" selected="true">{{ phrase('modified_in_this_language') }}</xf:option>
			</xf:checkboxrow>
		</div>
		<xf:submitrow sticky="true" icon="search">
			<xf:html><xf:button type="submit" icon="translate" name="translate" /></xf:html>
		</xf:submitrow>
	</div>

	<xf:hiddenval name="search">1</xf:hiddenval>
</xf:form>]]></template>
  <template type="admin" title="phrase_search_results" version_id="2000034" version_string="2.0.0 Beta 4"><![CDATA[<xf:title>{{ phrase('phrase_search_results:') }} {$language.title}</xf:title>

<div class="block">
	<div class="block-outer">
		<xf:macro template="filter_macros" name="quick_filter" arg-class="block-outer-opposite" />
	</div>
	<div class="block-container">
		<xf:macro template="phrase_list" name="search_menu" arg-language="{$language}" arg-conditions="{$conditions}" />
		<xf:if is="$phrases is not empty">
			<div class="block-body">
				<xf:datalist>
					<xf:macro template="phrase_list" name="phrase_list" arg-phrases="{$phrases}" arg-language="{$language}" />
					<xf:if is="$total > count($phrases)">
						<xf:datarow rowclass="dataList-row--note dataList-row--noHover">
							<xf:cell colspan="2">{{ phrase('more_records_matching_filter_more_specific') }}</xf:cell>
						</xf:datarow>
					</xf:if>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals(count($phrases), $total) }}</span>
			</div>
		<xf:else />
			<div class="block-body block-row">{{ phrase('no_results_found') }}</div>
		</xf:if>
	</div>
</div>]]></template>
  <template type="admin" title="phrase_translate" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro template="phrase_translate_macros" name="expanded" arg-phrase="{$phrase}" arg-language="{$language}" />]]></template>
  <template type="admin" title="phrase_translate.less" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[.block--phrase--custom
{
	.block-container
	{
		border-color: red;
		border-top-width: @xf-borderSizeFeature;
	}
}

.block--phrase--parentCustom
{
	.block-container
	{
		border-color: orange;
		border-top-width: @xf-borderSizeFeature;
	}
}]]></template>
  <template type="admin" title="phrase_translate_macros" version_id="2000370" version_string="2.0.3"><![CDATA[<xf:macro name="expanded" arg-phrase="!" arg-language="!">
	<xf:js src="xf/translation.js" min="1" />
	<xf:css src="phrase_translate.less" />

	<xf:form action="{{ link('phrases/translate', $phrase) }}" ajax="true" data-xf-init="translate-submit" class="block block--phrase {{ ($phrase.language_id == 0 ? '' : ($phrase.language_id == $language.language_id ? 'block--phrase--custom' : 'block--phrase--parentCustom')) }}">
		<div class="block-container">
			<div class="block-body">
				<xf:textboxrow name="title" rowtype="fullWidth" value="{$phrase.title}"
					label="{{ phrase('title') }}" />

				<xf:formrow rowtype="fullWidth noLabel">
					<ul class="listPlain inputGroup-container">
						<li>
							<div class="inputGroup">
								<span class="inputGroup-label">{{ phrase('phrase_text') }}</span>
								<span class="inputGroup-splitter"></span>
								<span class="inputGroup-label">{{ phrase('master_value') }}</span>
							</div>
						</li>
						<li>
							<div class="inputGroup">
								<xf:textarea name="phrase_text" rows="2" autosize="true" class="input--fitHeight--short" value="{$phrase.phrase_text}" />
								<span class="inputGroup-splitter"></span>
								<xf:textarea rows="2" autosize="true" readonly="true" tabindex="-1" class="input--fitHeight--short" value="{{ $phrase.language_id == 0 ? $phrase.phrase_text : $phrase.Master.phrase_text }}" />
							</div>
						</li>
					</ul>
				</xf:formrow>
			</div>
			<xf:submitrow icon="save" rowtype="simple"><xf:html>
				<xf:button type="submit" name="skip">{{ phrase('skip') }}</xf:button>
				<xf:if is="$language.language_id AND $phrase.isUpdate() AND $phrase.language_id == $language.language_id">
					<xf:button type="submit" name="revert">{{ phrase('revert') }}</xf:button>
				</xf:if>
			</xf:html></xf:submitrow>
		</div>
		<xf:hiddenval name="language_id">{$language.language_id}</xf:hiddenval>
		<xf:hiddenval name="addon_id">{$phrase.addon_id}</xf:hiddenval>
		<xf:hiddenval name="global_cache">{$phrase.global_cache}</xf:hiddenval>
	</xf:form>
</xf:macro>

<xf:macro name="collapsed" arg-phrase="!" arg-language="!">
	<xf:if is="$phrase">
		<xf:form action="{{ link('phrases/translate', $phrase) }}" ajax="true" data-xf-init="translate-submit" class="block block--phrase block block--phrase {{ ($phrase.language_id == 0 ? '' : ($phrase.language_id == $language.language_id ? 'block--phrase--custom' : 'block--phrase--parentCustom')) }}">
			<div class="block-outer">
				<div class="block-outer-opposite">
					<div class="buttonGroup">
						<xf:button type="submit" name="edit" icon="edit" class="button--link" />
						<xf:if is="$language.language_id AND $phrase.isUpdate() AND $phrase.language_id == $language.language_id">
							<xf:button type="submit" name="revert" class="button--link">{{ phrase('revert') }}</xf:button>
						</xf:if>
					</div>
				</div>
			</div>
			<div class="block-container">
				<div class="block-body">
					<xf:formrow rowtype="fullWidth">
						<dl class="pairs pairs--inline">
							<dt>{{ phrase('title') }}</dt>
							<dd>{$phrase.title}</dd>
						</dl>
					</xf:formrow>
					<xf:formrow rowtype="fullWidth">
						<dl class="pairs pairs--inline">
							<dt>{{ phrase('phrase_text') }}</dt>
							<dd>
								{$phrase.phrase_text|nl2br}
							</dd>
						</dl>
					</xf:formrow>
				</div>
			</div>
			<xf:hiddenval name="language_id">{$language.language_id}</xf:hiddenval>
		</xf:form>
	</xf:if>
</xf:macro>]]></template>
  <template type="admin" title="phrase_translate_results" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('translate_phrases:') }} {$language.title}</xf:title>

<div class="block">
	<div class="block-outer">
		<div class="block-outer-opposite">
			<div class="buttonGroup">
				<xf:button class="button--link menuTrigger" data-xf-click="menu" aria-expanded="false" aria-haspopup="true">{{ phrase('refine_search') }}</xf:button>
				<div class="menu menu--wide" data-menu="menu" aria-hidden="true"
					data-href="{{ link('phrases/refine-search', null, {'language_id': $language.language_id, 'translate_only': true} + $conditions) }}"
					data-load-target=".js-filterMenuBody">

					<div class="menu-content">
						<h4 class="menu-header">{{ phrase('refine_search') }}</h4>
						<div class="js-filterMenuBody">
							<div class="menu-row">{{ phrase('loading...') }}</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

<xf:if is="$phrases is not empty">
	<div>
		<div class="js-phraseTarget">
			<xf:foreach loop="$phrases" value="$phrase">
				<span class="u-anchorTarget" id="phrase-{$phrase.phrase_id}"></span>
				<xf:macro template="phrase_translate_macros" name="expanded" arg-phrase="{$phrase}" arg-language="{$language}" />
			</xf:foreach>
		</div>
		<div class="block js-phraseLoadMore">
			<div class="block-container">
				<!--<div class="block-body block-row block-row&#45;&#45;alt block-row&#45;&#45;minor block-row&#45;&#45;separated">-->
				<div class="block-footer block-footer--split">
					<span class="block-footer-counter">{{ display_totals($count, $total) }}</span>
					<xf:if is="$hasMore">
						<span class="block-footer-controls"><xf:button href="{{ link('phrases/translation', null, {'last_title': $last.title, 'last_count': $count, 'total': $total, 'language_id': $language.language_id} + $conditions) }}"
							data-xf-click="inserter"
							data-append=".js-phraseTarget"
							data-replace=".js-phraseLoadMore"
							data-scroll-target="#phrase-{$last.phrase_id}"
							data-animate-replace="false">
							{{ phrase('more') }}
						</xf:button></span>
					</xf:if>
				</div>
			</div>
		</div>
	</div>
<xf:else />
	<div class="blockMessage">{{ phrase('no_results_found') }}</div>
</xf:if>]]></template>
  <template type="admin" title="phrase_translated" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro template="phrase_translate_macros" name="collapsed" arg-phrase="{$phrase}" arg-language="{$language}" />]]></template>
  <template type="admin" title="quick_search_results" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:if is="$resultTypeSets is empty">
	<div class="menu-row">{{ phrase('no_results_found') }}</div>
<xf:else />
	<div>
	<xf:foreach loop="$resultTypeSets" value="$resultType">
		{{ $resultType.render( templater() ) }}
	</xf:foreach>
	</div>
</xf:if>]]></template>
  <template type="admin" title="quick_search_type" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<dl class="p-quickSearchResultSet">
	<dt>{$typeName}</dt>
	<dd>
		<ul class="p-quickSearchResultList">
		<xf:foreach loop="$results" value="$result">
			<li>
				<a href="{$result.link}">
					{$result.title}
					<xf:if is="$result.extra is not empty"><span>{$result.extra}</span></xf:if>
				</a>
			</li>
		</xf:foreach>
		</ul>
	</dd>
</dl>]]></template>
  <template type="admin" title="reaction_delete" version_id="2010132" version_string="2.1.1 Beta 2"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link('reactions/delete', $reaction) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('please_confirm_that_you_want_to_delete_following:') }}
				<strong><a href="{{ link('reactions/edit', $reaction) }}">{$reaction.title}</a></strong>
				<span>{{ phrase('this_will_delete_all_reactions_of_this_type') }}</span>
			</xf:inforow>
		</div>
		<xf:submitrow rowtype="simple" icon="delete" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="reaction_edit" version_id="2010035" version_string="2.1.0 Beta 5"><![CDATA[<xf:if is="$reaction.isInsert()">
	<xf:title>{{ phrase('add_reaction') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_reaction:') }} {$reaction.title}</xf:title>
</xf:if>

<xf:pageaction if="$reaction.isUpdate()">
	<xf:button href="{{ link('reactions/delete', $reaction) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('reactions/save', $reaction) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">

			<xf:textboxrow name="title" value="{{ $reaction.reaction_id ? $reaction.MasterTitle.phrase_text : ''  }}"
				label="{{ phrase('title') }}"/>

			<xf:set var="$explain">{{ phrase('reaction_text_color_explain') }}</xf:set>
			<xf:macro template="public:color_picker_macros" name="color_picker"
				arg-name="text_color"
				arg-value="{$reaction.text_color}"
				arg-allowPalette="true"
				arg-colorData="{$colorData}"
				arg-label="{{ phrase('text_color') }}"
				arg-explain="{$explain}" />

			<xf:radiorow name="reaction_score" label="{{ phrase('reaction_score') }}" value="{$reaction.reaction_score}">
				<xf:options source="{$reactionScores}" />
				<xf:option label="{{ phrase('custom_score') }}" value=""
					selected="{$reaction.is_custom_score}">
					<xf:numberbox name="custom_reaction_score" value="{$reaction.reaction_score}" step="1" />
				</xf:option>
			</xf:radiorow>

			<hr class="formRowSep" />

			<xf:macro template="display_order_macros" name="row"
				arg-value="{$reaction.display_order}" />

			<xf:checkboxrow>
				<xf:option name="active" selected="$reaction.active"
					label="{{ phrase('reaction_is_active') }}"
					hint="{{ phrase('reaction_active_hint') }}" />
			</xf:checkboxrow>

			<hr class="formRowSep" />

			<xf:textboxrow name="image_url" value="{$reaction.image_url}"
				maxlength="{{ max_length($reaction, 'image_url') }}"
				label="{{ phrase('image_replacement_url') }}"
				dir="ltr" />

			<xf:textboxrow name="image_url_2x" value="{$reaction.image_url_2x}"
				maxlength="{{ max_length($reaction, 'image_url_2x') }}"
				label="{{ phrase('2x_image_replacement_url') }}"
				hint="{{ phrase('optional') }}"
				explain="{{ phrase('2x_image_replacement_url_explain') }}"
				dir="ltr" />

			<xf:checkboxrow label="{{ phrase('sprite_mode') }}">
				<xf:option name="sprite_mode" selected="$reaction.sprite_mode"
					label="{{ phrase('enable_sprite_mode_with_following_parameters') }}" />
			</xf:checkboxrow>

			<xf:formrow rowtype="input"
				label="{{ phrase('sprite_dimensions') }}">

				<div class="inputGroup">
					<xf:numberbox name="sprite_params[w]" value="{$reaction.sprite_params.w}" min="1"
						title="{{ phrase('width')|for_attr }}"
						data-xf-init="tooltip" />
					<span class="inputGroup-text">x</span>
					<xf:numberbox name="sprite_params[h]" value="{$reaction.sprite_params.h}" min="1"
						title="{{ phrase('height')|for_attr }}"
						data-xf-init="tooltip" />
					<span class="inputGroup-text">{{ phrase('units_pixels') }}</span>
				</div>
			</xf:formrow>

			<xf:formrow rowtype="input"
				label="{{ phrase('sprite_position') }}">

				<div class="inputGroup">
					<xf:numberbox name="sprite_params[x]" value="{$reaction.sprite_params.x}"
						title="{{ phrase('background_position_x')|for_attr }}"
						data-xf-init="tooltip" />
					<span class="inputGroup-text">x</span>
					<xf:numberbox name="sprite_params[y]" value="{$reaction.sprite_params.y}"
						title="{{ phrase('background_position_y')|for_attr }}"
						data-xf-init="tooltip" />
					<span class="inputGroup-text">{{ phrase('units_pixels') }}</span>
				</div>
				<div class="formRow-explain">{{ phrase('reaction_sprite_params_explain') }}</div>
			</xf:formrow>

			<xf:textboxrow name="sprite_params[bs]" value="{$reaction.sprite_params.bs}"
				label="{{ phrase('background_size') }}"
				explain="{{ phrase('background_size_explain') }}"
				dir="ltr" />
		</div>

		<xf:submitrow sticky="true" icon="save" />

	</div>
</xf:form>]]></template>
  <template type="admin" title="reaction_list" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('reactions') }}</xf:title>

<xf:pageaction>
	<div class="buttonGroup">
		<xf:button href="{{ link('reactions/add') }}" icon="add">{{ phrase('add_reaction') }}</xf:button>
		<xf:button href="{{ link('reactions/sort') }}" icon="sort" overlay="true" />
	</div>
</xf:pageaction>

<xf:form action="{{ link('reactions/toggle') }}" ajax="true" class="block">
	<div class="block-outer">
		<xf:macro template="filter_macros" name="quick_filter" arg-key="reactions" arg-class="block-outer-opposite" />
	</div>
	<div class="block-container">

		<div class="block-body">
			<xf:datalist>
				<xf:foreach loop="$reactions" key="$reactionId" value="$reaction">
					<xf:datarow>
						<xf:cell href="{{ link('reactions/edit', $reaction) }}">
							<xf:reaction id="{$reaction}" showtitle="true" />
						</xf:cell>
						<xf:cell href="{{ link('reactions/edit', $reaction) }}">
							<span class="reactionScore">
								{$reaction.score_title}
								<xf:if is="$reaction.reaction_type == 'positive'">
									(+{$reaction.reaction_score})
								<xf:elseif is="$reaction.reaction_type == 'negative'" />
									({$reaction.reaction_score})
								</xf:if>
							</span>
						</xf:cell>
						<xf:if is="$reaction.canToggle()">
							<xf:toggle name="active[{$reaction.reaction_id}]" selected="$reaction.active"
								class="dataList-cell--separated" submit="true"
								tooltip="{{ phrase('enable_disable_x', {'title': $reaction.title}) }}" />
						<xf:else />
							<xf:cell class="dataList-cell--min dataList-cell--separated dataList-cell--alt" />
						</xf:if>
						<xf:if is="$reaction.canDelete()">
							<xf:delete href="{{ link('reactions/delete', $reaction) }}" />
						<xf:else />
							<xf:cell class="dataList-cell--min dataList-cell--alt" />
						</xf:if>
					</xf:datarow>
				<xf:else />
					<xf:datarow rowclass="dataList-row--noHover dataList-row--note">
						<xf:cell colspan="3" class="dataList-cell--noSearch">
							{{ phrase('no_reactions_have_been_added_yet') }}
						</xf:cell>
					</xf:datarow>
				</xf:foreach>
			</xf:datalist>
		</div>
		<div class="block-footer block-footer--split">
			<span class="block-footer-counter">{{ display_totals($reactions.count()) }}</span>
		</div>
	</div>
</xf:form>]]></template>
  <template type="admin" title="reaction_sort" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('sort_reactions') }}</xf:title>

<xf:macro template="public:nestable_macros" name="setup" />

<xf:form action="{{ link('reactions/sort') }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<div class="nestable-container" data-xf-init="nestable" data-max-depth="1" data-value-function="serialize">
				<xf:macro name="reaction_list" arg-reactions="{$reactions}" />
				<xf:hiddenval name="reactions" value="" />
			</div>
		</div>
		<xf:submitrow icon="save" rowtype="simple" />
	</div>
</xf:form>

<xf:macro name="reaction_list" arg-reactions="!">
	<ol class="nestable-list">
		<xf:foreach loop="$reactions" key="$id" value="$reaction">
			<li class="nestable-item" data-id="{$id}">
				<div class="nestable-handle" aria-label="{{ phrase('drag_handle')|for_attr }}"><xf:fa icon="fa-bars" /></div>
				<div class="nestable-content">
					<xf:reaction id="{$reaction}" showtitle="true" small="true" />
				</div>
			</li>
		</xf:foreach>
	</ol>
</xf:macro>]]></template>
  <template type="admin" title="route_edit" version_id="2000033" version_string="2.0.0 Beta 3"><![CDATA[<xf:if is="$route.isInsert()">
	<xf:title>{{ phrase('add_route') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_route:') }} {$route.unique_name}</xf:title>
</xf:if>

<xf:pageaction if="$route.isUpdate()">
	<xf:button href="{{ link('routes/delete', $route) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('routes/save', $route) }}" ajax="true" class="block">

	<div class="block-container">
		<div class="block-body">
			<xf:selectrow name="route_type" value="{$route.route_type}"
				label="{{ phrase('route_type') }}">

				<xf:option value="">&nbsp;</xf:option>
				<xf:foreach loop="$routeTypes" key="$routeTypeId" value="$routeType">
					<xf:option value="{$routeTypeId}">{$routeType}</xf:option>
				</xf:foreach>
			</xf:selectrow>

			<xf:textboxrow name="route_prefix" value="{$route.route_prefix}"
				maxlength="{{ max_length($route, 'route_prefix') }}"
				label="{{ phrase('route_prefix') }}"
				dir="ltr" />

			<xf:textboxrow name="sub_name" value="{$route.sub_name}"
				maxlength="{{ max_length($route, 'sub_name') }}"
				label="{{ phrase('sub_name') }}"
				dir="ltr" />

			<xf:textboxrow name="format" value="{$route.format}"
				maxlength="{{ max_length($route, 'format') }}"
				label="{{ phrase('route_format') }}"
				dir="ltr" />

			<xf:textboxrow name="context" value="{$route.context}"
				maxlength="{{ max_length($route, 'context') }}"
				label="{{ phrase('section_context') }}"
				dir="ltr" />

			<xf:macro template="helper_callback_fields" name="callback_row"
				arg-label="{{ phrase('link_building_callback') }}"
				arg-namePrefix="build"
				arg-data="{$route}" />

			<xf:textboxrow name="controller" value="{$route.controller}"
				maxlength="{{ max_length($route, 'controller') }}"
				label="{{ phrase('controller') }}"
				dir="ltr" />

			<xf:textboxrow name="action_prefix" value="{$route.action_prefix}"
				maxlength="{{ max_length($route, 'action_prefix') }}"
				label="{{ phrase('action_prefix') }}"
				dir="ltr" />

			<xf:macro template="addon_macros" name="addon_edit" arg-addOnId="{$route.addon_id}" />
		</div>
		<xf:submitrow sticky="true" icon="save" />
	</div>

</xf:form>]]></template>
  <template type="admin" title="route_filter_edit" version_id="2000051" version_string="2.0.0 Release Candidate 1"><![CDATA[<xf:if is="$routeFilter.isInsert()">
	<xf:title>{{ phrase('add_route_filter') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_route_filter:') }} {$routeFilter.find_route}</xf:title>
</xf:if>

<xf:pageaction if="$routeFilter.isUpdate()">
	<xf:button href="{{ link('route-filters/delete', $routeFilter) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('route-filters/save', $routeFilter) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">

			<xf:textboxrow name="find_route" value="{$routeFilter.find_route_readable}"
				maxlength="{{ max_length($routeFilter, 'find_route') }}"
				label="{{ phrase('find_route') }}"
				explain="{{ phrase('you_should_only_enter_route_part_of_url_here_example', {
						'fullUrl': $fullThreadLink,
						'route': $routeValue
					}) }}"
				dir="ltr" />

			<xf:textboxrow name="replace_route" value="{$routeFilter.replace_route_readable}"
				maxlength="{{ max_length($routeFilter, 'replace_route') }}"
				label="{{ phrase('replace_with') }}"
				explain="{{ phrase('route_filter_find_replace_fields_support_wildcards') }}"
				dir="ltr" />

			<xf:checkboxrow>
				<xf:option name="enabled" value="1" selected="$routeFilter.enabled"
					label="{{ phrase('enabled') }}" />
				<xf:option name="url_to_route_only" value="1" selected="$routeFilter.url_to_route_only"
					label="{{ phrase('incoming_url_conversion_only') }}"
					hint="{{ phrase('if_selected_this_filter_will_only_be_used_to_change_incoming_urls') }}" />
			</xf:checkboxrow>
		</div>

		<xf:submitrow sticy="true" icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="route_filter_list" version_id="2000051" version_string="2.0.0 Release Candidate 1"><![CDATA[<xf:title>{{ phrase('route_filters') }}</xf:title>
<xf:description>{{ phrase('route_filters_allow_you_to_change_standard_urls') }}</xf:description>

<xf:pageaction>
	<xf:button href="{{ link('route-filters/add') }}" icon="add">{{ phrase('add_route_filter') }}</xf:button>
</xf:pageaction>

<xf:if is="$routeFilters is not empty">
	<xf:form action="{{ link('route-filters/toggle') }}" class="block" ajax="true">
		<div class="block-outer">
			<xf:macro template="filter_macros" name="quick_filter" arg-key="route-filters" arg-class="block-outer-opposite" />
		</div>
		<div class="block-container">
			<div class="block-body">
				<xf:datalist>
					<xf:datarow rowtype="header">
						<xf:cell>{{ phrase('find') }}</xf:cell>
						<xf:cell>{{ phrase('replace') }}</xf:cell>
						<xf:cell>&nbsp;</xf:cell>
						<xf:cell>&nbsp;</xf:cell>
					</xf:datarow>
					<xf:foreach loop="$routeFilters" value="$routeFilter">
						<xf:datarow delete="{{ link('route-filters/delete', $routeFilter) }}">
							<xf:cell href="{{ link('route-filters/edit', $routeFilter) }}">
								{$routeFilter.find_route_readable}
							</xf:cell>
							<xf:cell href="{{ link('route-filters/edit', $routeFilter) }}">
								{$routeFilter.replace_route_readable}
							</xf:cell>
							<xf:toggle name="enabled[{$routeFilter.route_filter_id}]"
								selected="$routeFilter.enabled" class="dataList-cell--separated" submit="true"
								tooltip="{{ phrase('enable_disable_route_filter') }}" />
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($routeFilters) }}</span>
			</div>
		</div>
	</xf:form>
<xf:else />
	<div class="blockMessage">{{ phrase('no_items_have_been_created_yet') }}</div>
</xf:if>]]></template>
  <template type="admin" title="route_list" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('routes') }}</xf:title>

<xf:pageaction>
	<xf:button class="menuTrigger" data-xf-click="menu" aria-expanded="false" aria-haspopup="true">{{ phrase('add_route...') }}</xf:button>
		<div class="menu" data-menu="menu" aria-hidden="true">
			<div class="menu-content">
				<h3 class="menu-header">{{ phrase('add_route...') }}</h3>

				<xf:foreach loop="$routeTypes" key="$routeTypeId" value="$routeType">
					<a href="{{ link('routes/add', null, {'type': $routeTypeId}) }}"  class="menu-linkRow">{$routeType}</a>
				</xf:foreach>
			</div>
		</div>
</xf:pageaction>

<div class="block">
	<div class="block-container">
		<h2 class="block-tabHeader tabs hScroller" data-xf-init="tabs h-scroller" data-state="replace" role="tablist">
			<span class="hScroller-scroll">
			<xf:foreach loop="$routeTypes" key="$routeTypeId" value="$routeType">
				<a class="tabs-tab {{ $routeTypeId == $selectedTab ? 'is-active' : '' }}"
					role="tab"
					tabindex="0"
					aria-controls="route-{$routeTypeId}"
					id="{{ $routeTypeId != 'public' ? $routeTypeId : '' }}">{$routeType}</a>
			</xf:foreach>
			</span>
		</h2>
		<ul class="tabPanes">
			<xf:foreach loop="$routeTypes" key="$routeTypeId" value="$routeType">
				<li class="block-body {{ $routeTypeId == $selectedTab ? 'is-active' : '' }}"
					role="tabpanel" id="route-{$routeTypeId}">

					<xf:if is="{$routesGrouped.{$routeTypeId}} is not empty">
						<xf:datalist>
							<xf:foreach loop="{$routesGrouped.{$routeTypeId}}" value="$route">
								<xf:datarow
									hash="{$route.route_id}"
									href="{{ link('routes/edit', $route) }}"
									label="{$route.unique_name}"
									hint="{$route.route_prefix}/{$route.format}"
									delete="{{ link('routes/delete', $route) }}"
									dir="auto"/>
							</xf:foreach>
						</xf:datalist>
					<xf:else />
						<div class="block-row">{{ phrase('no_items_have_been_created_yet') }}</div>
					</xf:if>
				</li>
			</xf:foreach>
		</ul>
		<div class="block-footer">
			<span class="block-footer-counter">{{ display_totals($totalRoutes) }}</span>
		</div>
	</div>
</div>]]></template>
  <template type="admin" title="section_nav_macros" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:macro name="section_nav" arg-section="!">
	<xf:set var="$sectionNav" value="{{ $xf.app.get('navigation.admin').getTree($section) }}" />
	<xf:macro name="section_nav_block" arg-sectionNav="{$sectionNav}" />
</xf:macro>

<xf:macro name="section_nav_block" arg-sectionNav="!">
	<div class="block">
		<div class="block-container">
			<h2 class="block-header">{{ phrase('sub_sections') }}</h2>
			<div class="block-body">
				<xf:macro name="navigation_list" arg-children="{$sectionNav}" />
			</div>
		</div>
	</div>
</xf:macro>

<xf:macro name="navigation_list" arg-children="!" arg-depth="1">
	<xf:foreach loop="$children" value="$child">
		<xf:macro name="navigation_list_entry" arg-navigation="{$child.record}" arg-children="{$child.children}" arg-depth="{$depth}" />
	</xf:foreach>
</xf:macro>

<xf:macro name="navigation_list_entry" arg-navigation="!" arg-children="!" arg-depth="1">
	<xf:if is="$depth == 1 AND !$navigation.link">
		<div class="block-minorHeader">
			<div class="u-depth{{ $depth - 1 }}">
				<xf:if is="{$navigation.icon}"><xf:fa icon="fa-fw {$navigation.icon}" /></xf:if>
				{$navigation.title}
			</div>
		</div>
	<xf:else />
		<a href="{{ link($navigation.link) }}" class="blockLink">
			<div class="u-depth{{ $depth - 1 }}">{$navigation.title}</div>
		</a>
	</xf:if>
	<xf:macro name="navigation_list" arg-children="{$children}" arg-depth="{{ $depth + 1 }}" />
</xf:macro>]]></template>
  <template type="admin" title="setup" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('admin_navigation.setup') }}</xf:title>

<xf:macro template="section_nav_macros" name="section_nav" arg-section="setup" />]]></template>
  <template type="admin" title="smilie_category_delete" version_id="2010036" version_string="2.1.0 Beta 6"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{$confirmUrl}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('please_confirm_that_you_want_to_delete_following:') }}
				<strong><a href="{$editUrl}">{$contentTitle}</a></strong>
				<div class="blockMessage blockMessage--important blockMessage--iconic">{{ phrase('confirm_delete_smilie_category_footnote') }}</div>
			</xf:inforow>
		</div>
		<xf:submitrow rowtype="simple" icon="delete" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="smilie_category_edit" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:if is="$smilieCategory.isInsert()">
	<xf:title>{{ phrase('add_smilie_category') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_smilie_category:') }} {$smilieCategory.title}</xf:title>
</xf:if>

<xf:pageaction if="$smilieCategory.isUpdate()">
	<xf:button href="{{ link('smilie-categories/delete', $smilieCategory) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('smilie-categories/save', $smilieCategory) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:textboxrow name="title" value="{{ $smilieCategory.exists() ? $smilieCategory.MasterTitle.phrase_text : '' }}"
				label="{{ phrase('title') }}"/>

			<xf:macro template="display_order_macros" name="row"
				arg-value="{$smilieCategory.display_order}" />
		</div>

		<xf:submitrow icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="smilie_edit" version_id="2001070" version_string="2.0.10"><![CDATA[<xf:if is="$smilie.isInsert()">
	<xf:title>{{ phrase('add_smilie') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_smilie:') }} {$smilie.title}</xf:title>
</xf:if>

<xf:pageaction if="$smilie.isUpdate()">
	<xf:button href="{{ link('smilies/delete', $smilie) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('smilies/save', $smilie) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">

			<xf:textboxrow name="title" value="{$smilie.title}" maxlength="{{ max_length($smilie, 'title') }}"
				label="{{ phrase('title') }}" />
			<xf:textarearow name="smilie_text" value="{$smilie.smilie_text}" autosize="true"
				label="{{ phrase('text_to_replace') }}"
				explain="{{ phrase('enter_multiple_values_to_replace_on_separate_lines') }}" />

			<xf:textboxrow name="image_url" value="{$smilie.image_url}"
				maxlength="{{ max_length($smilie, 'image_url') }}"
				label="{{ phrase('image_replacement_url') }}"
				dir="ltr" />

			<xf:textboxrow name="image_url_2x" value="{$smilie.image_url_2x}"
				maxlength="{{ max_length($smilie, 'image_url_2x') }}"
				label="{{ phrase('2x_image_replacement_url') }}"
				hint="{{ phrase('optional') }}"
				explain="{{ phrase('2x_image_replacement_url_explain') }}"
				dir="ltr" />

			<hr class="formRowSep" />

			<xf:selectrow name="smilie_category_id" value="{$smilie.smilie_category_id}"
				label="{{ phrase('smilie_category') }}">

				<xf:option value="0" label="{{ phrase('(none)') }}" />
				<xf:options source="{$smilieCategories}" />
			</xf:selectrow>

			<xf:macro template="display_order_macros" name="row"
				arg-value="{$smilie.display_order}" />

			<xf:checkboxrow>
				<xf:option name="display_in_editor" selected="$smilie.display_in_editor"
					label="{{ phrase('show_this_smilie_in_the_text_editor') }}"
					explain="{{ phrase('hidden_smilies_hint') }}" />
			</xf:checkboxrow>

			<hr class="formRowSep" />

			<xf:checkboxrow label="{{ phrase('sprite_mode') }}">
				<xf:option name="sprite_mode" selected="$smilie.sprite_mode"
					label="{{ phrase('enable_sprite_mode_with_following_parameters') }}" />
			</xf:checkboxrow>

			<xf:formrow rowtype="input"
				label="{{ phrase('sprite_dimensions') }}">

				<div class="inputGroup">
					<xf:numberbox name="sprite_params[w]" value="{$smilie.sprite_params.w}" min="1"
						title="{{ phrase('width') }}"
						data-xf-init="tooltip" />
					<span class="inputGroup-text">x</span>
					<xf:numberbox name="sprite_params[h]" value="{$smilie.sprite_params.h}" min="1"
						title="{{ phrase('height') }}"
						data-xf-init="tooltip" />
					<span class="inputGroup-text">{{ phrase('units_pixels') }}</span>
				</div>
			</xf:formrow>

			<xf:formrow rowtype="input"
				label="{{ phrase('sprite_position') }}">

				<div class="inputGroup">
					<xf:numberbox name="sprite_params[x]" value="{$smilie.sprite_params.x}"
						title="{{ phrase('background_position_x') }}"
						data-xf-init="tooltip" />
					<span class="inputGroup-text">x</span>
					<xf:numberbox name="sprite_params[y]" value="{$smilie.sprite_params.y}"
						title="{{ phrase('background_position_y') }}"
						data-xf-init="tooltip" />
					<span class="inputGroup-text">{{ phrase('units_pixels') }}</span>
				</div>
			</xf:formrow>

			<xf:textboxrow name="sprite_params[bs]" value="{$smilie.sprite_params.bs}"
				label="{{ phrase('background_size') }}"
				explain="{{ phrase('background_size_explain') }}"
				dir="ltr" />
		</div>

		<xf:submitrow sticky="true" icon="save" />

	</div>
</xf:form>]]></template>
  <template type="admin" title="smilie_import" version_id="2000170" version_string="2.0.1"><![CDATA[<xf:title>{{ phrase('import_smilies') }}</xf:title>

<xf:form action="{{ link('smilies/import-form') }}" upload="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:radiorow name="mode" value="upload">
				<xf:option value="upload"
					label="{{ phrase('import_from_uploaded_xml_file') }}"
					hint="{{ phrase('smilie_pre_import_explain') }}">

					<xf:upload name="upload" accept=".xml" />
				</xf:option>
				<xf:if is="$smilieXmlFiles">
					<xf:option value="imported"
						label="{{ phrase('import_from_import_generated_xml') }}"
						hint="{{ phrase('import_from_import_generated_xml_explain') }}">
						<xf:select name="filename">
							<xf:options source="$smilieXmlFiles" />
						</xf:select>
					</xf:option>
				</xf:if>
				<xf:option value="directory"
					label="{{ phrase('import_from_directory_on_server') }}"
					hint="{{ phrase('smilie_pre_import_directory_explain') }}">

					<xf:textbox name="directory" placeholder="styles/default/xenforo/smilies..." />
				</xf:option>
			</xf:radiorow>
		</div>
		<xf:submitrow submit="{{ phrase('proceed...') }}" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="smilie_import_form" version_id="2001070" version_string="2.0.10"><![CDATA[<xf:title>{{ phrase('import_smilies') }}</xf:title>

<xf:form action="{{ link('smilies/import') }}" ajax="true" data-json-name="json" class="js-stickyParent">
	<xf:foreach loop="$smilies" key="$i" value="$smilie">
		<div class="block">
			<div class="block-container">
				<div class="block-body">
					<xf:macro name="smilie" arg-smilie="{$smilie}" arg-i="{$i}" />
				</div>
			</div>
		</div>
	</xf:foreach>

	<div class="block">
		<div class="block-container">
			<xf:submitrow icon="import" />
		</div>
	</div>

	<xf:foreach loop="$newCategories" key="$newCategoryId" value="$newCategory">
		<xf:hiddenval name="categories[{$newCategoryId}][title]">{$newCategory.title}</xf:hiddenval>
		<xf:hiddenval name="categories[{$newCategoryId}][display_order]">{$newCategory.display_order}</xf:hiddenval>
	</xf:foreach>
</xf:form>

<xf:macro name="smilie" arg-smilie="!" arg-i="!" global="true">
	<xf:formrow>
		<div>
			<xf:if is="$smilie.sprite_mode">
				<img src="{{ transparent_img() }}" alt="" class="smilie smilie--sprite" style="{{ $smilie.getSpriteCss() }}" />
			<xf:else />
				<img src="{$smilie.image_url}" class="smilie" alt="" />
			</xf:if>
		</div>
		<xf:checkbox standalone="true">
			<xf:option name="import[]" value="{$i}" selected="true"
				data-xf-init="disabler" data-hide="true" data-container=".js-importSmilie{$i}">
				{{ phrase('import_this_smilie') }}
			</xf:option>
		</xf:checkbox>
	</xf:formrow>

	<div class="js-importSmilie{$i}">
		<hr class="formRowSep" />

		<xf:textboxrow name="smilies[{$i}][title]" value="{$smilie.title}"
			label="{{ phrase('title') }}" />

		<xf:textarearow name="smilies[{$i}][smilie_text]" value="{$smilie.smilie_text}" autosize="true"
			label="{{ phrase('text_to_replace') }}" />

		<xf:if is="$uploadMode">
			<h3 class="block-formSectionHeader">
				<span class="collapseTrigger collapseTrigger--block" data-xf-click="toggle" data-target=".js-importSmilie{$i}Advanced">
					<span class="block-formSectionHeader-aligner">{{ phrase('more_options') }}</span>
				</span>
			</h3>
		</xf:if>

		<div class="js-importSmilie{$i}Advanced {{ $uploadMode ? 'u-hidden u-hidden--transition' : '' }}">

			<xf:if is="!$uploadMode">
				<hr class="formRowSep" />
			</xf:if>

			<xf:textboxrow name="smilies[{$i}][image_url]" value="{$smilie.image_url}"
				label="{{ phrase('image_replacement_url') }}" />

			<xf:textboxrow name="smilies[{$i}][image_url_2x]" value="{$smilie.image_url_2x}"
				label="{{ phrase('2x_image_replacement_url') }}"
				hint="{{ phrase('optional') }}"
				explain="{{ phrase('2x_image_replacement_url_explain') }}" />

			<xf:if is="$uploadMode">
				<xf:checkboxrow label="{{ phrase('sprite_mode') }}">

					<xf:option name="smilies[{$i}][sprite_mode]" selected="$smilie.sprite_mode">
						{{ phrase('enable_sprite_mode_with_following_parameters') }}
					</xf:option>
				</xf:checkboxrow>

				<xf:formrow rowtype="input"
					label="{{ phrase('sprite_dimensions') }}">

					<div class="inputGroup">
						<xf:numberbox name="smilies[{$i}][sprite_params][w]" value="{$smilie.sprite_params.w}"
							min="1"
							title="{{ phrase('width') }}"
							data-xf-init="tooltip" />
						<span class="inputGroup-splitter"></span>
						<xf:numberbox name="smilies[{$i}][sprite_params][h]" value="{$smilie.sprite_params.h}"
							min="1"
							title="{{ phrase('height') }}"
							data-xf-init="tooltip" />
						<span class="inputGroup-text">px</span>
					</div>
				</xf:formrow>

				<xf:formrow rowtype="input"
					label="{{ phrase('sprite_position') }}">

					<div class="inputGroup">
						<xf:numberbox name="smilies[{$i}][sprite_params][x]" value="{$smilie.sprite_params.x}"
							title="{{ phrase('background_position_x') }}"
							data-xf-init="tooltip" />
						<span class="inputGroup-splitter"></span>
						<xf:numberbox name="smilies[{$i}][sprite_params][y]" value="{$smilie.sprite_params.y}"
							title="{{ phrase('background_position_y') }}"
							data-xf-init="tooltip" />
						<span class="inputGroup-text">px</span>
					</div>
				</xf:formrow>

				<xf:textboxrow name="smilies[{$i}][sprite_params][bs]" value="{$smilie.sprite_params.bs}"
					label="{{ phrase('background_size') }}"
					explain="{{ phrase('background_size_explain') }}" />
			</xf:if>

			<hr class="formRowSep" />

			<xf:selectrow name="smilies[{$i}][smilie_category_id]"
				value="{{ $smilieCategoryMap.{$i} ?: 0 }}"
				label="{{ phrase('smilie_category') }}">

				<xf:option value="0" label="{{ phrase('(none)') }}" />
				<xf:optgroup label="{{ phrase('new') }}">
					<xf:options source="$newCategoryPairs" />
				</xf:optgroup>
				<xf:optgroup label="{{ phrase('existing') }}">
					<xf:options source="$categoryPairs" />
				</xf:optgroup>
			</xf:selectrow>

			<xf:macro template="display_order_macros" name="row"
				arg-name="smilies[{$i}][display_order]"
				arg-value="{$smilie.display_order}" />

			<xf:checkboxrow>
				<xf:option name="smilies[{$i}][display_in_editor]" selected="$smilie.display_in_editor">
					{{ phrase('show_this_smilie_in_the_text_editor') }}
				</xf:option>
			</xf:checkboxrow>

		</div>
	</div>
</xf:macro>]]></template>
  <template type="admin" title="smilie_list" version_id="2010037" version_string="2.1.0 Beta 7"><![CDATA[<xf:title>{{ phrase('smilies') }}</xf:title>

<xf:pageaction>
	<div class="buttonGroup">
		<xf:button href="{{ link('smilies/add') }}" icon="add">{{ phrase('add_smilie') }}</xf:button>
		<xf:button href="{{ link('smilie-categories/add') }}" icon="add" overlay="true">{{ phrase('add_category') }}</xf:button>

		<div class="buttonGroup-buttonWrapper">
			<xf:button class="menuTrigger" data-xf-click="menu" aria-expanded="false" aria-haspopup="true" title="{{ phrase('more_options') }}">&#8226;&#8226;&#8226;</xf:button>
			<div class="menu" data-menu="menu" aria-hidden="true">
				<div class="menu-content">
					<h4 class="menu-header">{{ phrase('more_options') }}</h4>
					<a href="{{ link('smilies/sort') }}" class="menu-linkRow" data-xf-click="overlay">{{ phrase('button.sort') }}</a>
					<a href="{{ link('smilies/import') }}" class="menu-linkRow">{{ phrase('button.import') }}</a>
					<a href="{{ link('smilies', {}, {'export': 1}) }}" class="menu-linkRow">{{ phrase('button.export') }}</a>
				</div>
			</div>
		</div>
	</div>
</xf:pageaction>

<xf:css src="public:help_page_smilies.less" />

<xf:form action="{{ link(($exportView ? 'smilies/export' : 'smilies/toggle')) }}"
	ajax="{{ $exportView ? false : true }}" class="block"

	data-xf-init="select-plus"
	data-sp-checkbox=".dataList-cell--toggle input:checkbox"
	data-sp-container=".dataList-row"
	data-sp-control=".dataList-cell--link a[href]"
data-sp-debug="{{ true }}">

	<div class="block-outer">
		<xf:macro template="filter_macros" name="quick_filter" arg-key="smilies" arg-class="block-outer-opposite" />
	</div>
	<div class="block-container">

		<h2 class="block-tabHeader tabs" role="tablist">
			<!--[XF:tabs:start]-->
			<a class="tabs-tab {{ $exportView ? '' : 'is-active' }}" role="tab" tabindex="0" aria-controls="smilie-list" href="{{ link('smilies') }}">{{ phrase('smilies') }}</a>
			<a class="tabs-tab {{ $exportView ? 'is-active' : '' }}" role="tab" tabindex="0" aria-controls="export-mode" href="{{ link('smilies', {}, {'export': 1}) }}">{{ phrase('export') }}</a>
			<!--[XF:tabs:end]-->
		</h2>

		<div class="block-body">
			<xf:datalist>
				<xf:foreach loop="$smilieData.smilieCategories" key="$smilieCategoryId" value="$smilieCategory">
					<tbody class="dataList-rowGroup">
					<xf:if is="{{ count($smilieData.smilieCategories) > 1 }}">
						<xf:datarow rowtype="subsection" rowclass="{{ !$smilieCategoryId ? 'dataList-row--noHover' : '' }}">
							<xf:if is="$exportView">
								<xf:cell><xf:checkbox standalone="true"><xf:option check-all="< .dataList-rowGroup" /></xf:checkbox></xf:cell>
							</xf:if>
							<xf:if is="{{ $smilieCategoryId > 0 }}">
								<xf:cell href="{{ link('smilie-categories/edit', $smilieCategory) }}"
									colspan="3" overlay="true">
									{{ $smilieCategory.title }}
								</xf:cell>
								<xf:if is="!$exportView">
									<xf:delete href="{{ link('smilie-categories/delete', $smilieCategory) }}" />
								</xf:if>
							<xf:else />
								<xf:cell colspan="4">{{ phrase('smilie_category_title.uncategorized') }}</xf:cell>
							</xf:if>
						</xf:datarow>
					</xf:if>

					<xf:foreach loop="{$smilieData.smilies.{$smilieCategoryId}}" key="$smilieId" value="$smilie">
						<xf:datarow>
							<xf:if is="$exportView">
								<xf:toggle name="export[]" value="{$smilie.smilie_id}" />
							</xf:if>
							<xf:cell href="{{ link('smilies/edit', $smilie) }}" class="dataList-cell--min">
								{{ smilie($smilie.smilie_text_options.0) }}
							</xf:cell>
							<xf:cell href="{{ link('smilies/edit', $smilie) }}">
								{$smilie.title}
							</xf:cell>
							<xf:cell href="{{ link('smilies/edit', $smilie) }}">
								<xf:foreach loop="$smilie.smilie_text_options" value="$smilieText">
									<span class="smilieText">{$smilieText}</span>
								</xf:foreach>
							</xf:cell>
							<xf:if is="!$exportView">
								<xf:delete href="{{ link('smilies/delete', $smilie) }}" />
							</xf:if>
						</xf:datarow>
					<xf:else />
						<xf:datarow rowclass="dataList-row--noHover dataList-row--note">
							<xf:cell colspan="4" class="dataList-cell--noSearch">
								<xf:if is="{{ count($smilieData.smilieCategories) > 1 }}">
									{{ phrase('no_smilies_have_been_added_to_this_category_yet') }}
								<xf:else />
									{{ phrase('no_smilies_have_been_added_yet') }}
								</xf:if>
							</xf:cell>
						</xf:datarow>
					</xf:foreach>
					</tbody>
				</xf:foreach>
			</xf:datalist>
		</div>
		<div class="block-footer block-footer--split">
			<span class="block-footer-counter">{{ display_totals($smilieData.totalSmilies) }}</span>
			<xf:if is="$exportView">
				<span class="block-footer-select"><xf:checkbox standalone="true"><xf:option check-all=".dataList" label="{{ phrase('select_all') }}" /></xf:checkbox></span>
				<span class="block-footer-controls"><xf:button type="submit" icon="export" /></span>
			</xf:if>
		</div>
	</div>
</xf:form>]]></template>
  <template type="admin" title="smilie_sort" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('sort_smilies') }}</xf:title>

<xf:macro template="public:nestable_macros" name="setup" />

<xf:form action="{{ link('smilies/sort') }}" class="block" ajax="true">
	<div class="block-container">
		<xf:foreach loop="$smilieData.smilieCategories" key="$smilieCategoryId" value="$smilieCategory">
			<xf:if is="{{ $smilieCategoryId > 0 }}">
				<h4 class="block-minorHeader">{$smilieCategory.title}</h4>
			<xf:else />
				<h4 class="block-minorHeader">{{ phrase('smilie_category_title.uncategorized') }}</h4>
			</xf:if>
			<div class="block-body">
				<div class="nestable-container" data-xf-init="nestable" data-parent-id="{$smilieCategoryId}" data-max-depth="1" data-value-target=".js-smilieData">
					<xf:if contentcheck="true">
						<ol class="nestable-list">
							<xf:contentcheck>
							<xf:foreach loop="{$smilieData.smilies.{$smilieCategoryId}}" key="$smilieId" value="$smilie" i="$i">
								<li class="nestable-item" data-id="{$smilieId}">
									<div class="nestable-handle nestable-handle--full" aria-label="{{ phrase('drag_handle')|for_attr }}"><xf:fa icon="fa-bars" /></div>
									<div class="nestable-content">{{ smilie($smilie.smilie_text_options.0) }} {$smilie.title} <xf:foreach loop="$smilie.smilie_text_options" value="$smilieText"><span class="smilieText">{$smilieText}</span> </xf:foreach></div>
								</li>
							</xf:foreach>
							</xf:contentcheck>
						</ol>
					</xf:if>
					<xf:hiddenval name="smilies[]" value="" class="js-smilieData" />
				</div>
			</div>
		</xf:foreach>
		<xf:submitrow icon="save" rowtype="simple" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="stats" version_id="2000052" version_string="2.0.0 Release Candidate 2"><![CDATA[<xf:title>{{ phrase('statistics') }}</xf:title>

<xf:css src="public:chartist.css" />
<xf:css src="stats.less" />

<xf:js prod="xf/stats-compiled.js" dev="vendor/chartist/chartist.min.js, xf/stats.js" />

<div class="block">
	<div class="block-container">
		<h2 class="block-header">
			<xf:if is="$grouping == 'daily'">
				{{ phrase('daily_statistics') }}
			<xf:elseif is="$grouping == 'weekly'" />
				{{ phrase('weekly_statistics') }}
			<xf:elseif is="$grouping == 'monthly'" />
				{{ phrase('monthly_statistics') }}
			</xf:if>
			<div class="block-desc">{{ date($start, 'absolute') }} - {{ date($end, 'absolute') }}</div>
		</h2>
		<div class="block-body">
			<div class="block-row">
				<div data-xf-init="stats">
					<script class="js-statsData" type="application/json">
						{$data|json|raw}
					</script>
					<script class="js-statsSeriesLabels" type="application/json">
						{$displayTypesPhrased|json|raw}
					</script>
					<div class="ct-chart ct-major-tenth js-statsChart"></div>
					<ul class="ct-legend js-statsLegend"></ul>
				</div>
			</div>
			<xf:if is="$grouping != 'daily'">
				<div class="block-row block-row--minor">
					{{ phrase('values_represent_daily_averages_within_each_time_period') }}
				</div>
			</xf:if>
		</div>
		<h3 class="block-header">
			<span class="collapseTrigger collapseTrigger--block" data-xf-click="toggle" data-target="< :up :next">
				{{ phrase('raw_statistics') }}
			</span>
		</h3>
		<div class="block-body block-body--collapsible">
			<xf:datalist class="dataList--contained" data-xf-init="responsive-data-list">
				<xf:datarow rowtype="header">
					<xf:cell>{{ phrase('period') }}</xf:cell>
					<xf:foreach loop="$displayTypes" value="$displayType">
						<xf:cell>{$displayTypesPhrased.{$displayType}}</xf:cell>
					</xf:foreach>
				</xf:datarow>
			<xf:foreach loop="$data" value="$stat">
				<xf:datarow>
					<xf:cell class="dataList-cell--alt">{$stat.label}</xf:cell>
					<xf:foreach loop="$displayTypes" value="$displayType">
						<xf:cell>{$stat.averages.{$displayType}|number($grouping == 'daily' ? 0 : 2)}</xf:cell>
					</xf:foreach>
				</xf:datarow>
			</xf:foreach>
			</xf:datalist>
		</div>
	</div>
</div>

<xf:form action="{{ link('stats') }}" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:formrow label="{{ phrase('date_range') }}" rowtype="input">
				<div class="inputGroup inputGroup--auto">
					<xf:dateinput name="start" value="{{ date($start, 'Y-m-d') }}" />
					<span class="inputGroup-text">-</span>
					<xf:dateinput name="end" value="{{ $endDisplay ? date($endDisplay, 'Y-m-d') : '' }}" />
					<span class="inputGroup-splitter"></span>
					<xf:select name="date_preset" class="js-presetChange input--autoSize">
						<xf:option value="-1">{{ phrase('date_presets:') }}</xf:option>
						<xf:optgroup>
							<xf:options source="{$datePresets}" />
							<xf:option value="1995-01-01">{{ phrase('all_time') }}</xf:option>
						</xf:optgroup>
					</xf:select>
				</div>
			</xf:formrow>

			<xf:radiorow name="grouping" value="{$grouping}"
				label="{{ phrase('grouping') }}">

				<xf:option value="daily">{{ phrase('daily') }}</xf:option>
				<xf:option value="weekly">{{ phrase('weekly') }}</xf:option>
				<xf:option value="monthly">{{ phrase('monthly') }}</xf:option>
			</xf:radiorow>

			<xf:checkboxrow name="display_types" value="{$displayTypes}"
				label="{{ phrase('display_statistics') }}">

				<xf:foreach loop="array_keys($statsTypeOptions)" value="$contentType">
					<xf:optgroup listclass="listColumns" label="{$contentTypePhrases.{$contentType}}">
						<xf:options source="{$statsTypeOptions.{$contentType}}" />
					</xf:optgroup>
				</xf:foreach>
			</xf:checkboxrow>
		</div>
		<xf:submitrow submit="{{ phrase('show') }}" sticky="true" />
	</div>
</xf:form>

<xf:js>
	$(function()
	{
		$('.js-presetChange').change(function(e)
		{
			var $ctrl = $(this),
				value = $ctrl.val(),
				$form = $ctrl.closest('form');

			if (value == -1)
			{
				return;
			}

			$form.find($ctrl.data('start') || 'input[name=start]').val(value);
			$form.find($ctrl.data('end') || 'input[name=end]').val('');
			$form.submit();
		});
	});
</xf:js>]]></template>
  <template type="admin" title="stats.less" version_id="2000052" version_string="2.0.0 Release Candidate 2"><![CDATA[.listColumns
{
	&.contentTypes
	{
		margin-bottom: 14px;
	}
}

.ct-chart
{
	svg
	{
		-webkit-backface-visibility: hidden;
	}

	.ct-series-a
	{
		.ct-line,
		.ct-point
		{
			stroke: @xf-paletteColor3;
		}
	}

	.ct-series-b
	{
		.ct-line,
		.ct-point
		{
			stroke: @xf-paletteAccent2;
		}
	}

	.ct-series-c
	{
		.ct-line,
		.ct-point
		{
			stroke: @xf-paletteColor5;
		}
	}

	.ct-series-d
	{
		.ct-line,
		.ct-point
		{
			stroke: @xf-paletteAccent3;
		}
	}

	.ct-grid
	{
		stroke: fade(@xf-textColor, 15%);
	}

	.ct-label
	{
		color: @xf-textColor;
		font-size: @xf-fontSizeSmallest;
	}

	.ct-line
	{
		stroke-width: 2px;
	}

	.ct-point
	{
		stroke-width: 8px;
	}

	.ct-label.ct-horizontal.ct-end
	{
		.m-transform(translateX(-50%));
		text-align: center;
		justify-content: center;
	}
}

.ct-chart--small
{
	.ct-point
	{
		opacity: 0;
	}
}

.ct-legend
{
	.m-listPlain();
	text-align: center;
	font-size: @xf-fontSizeSmaller;

	> li
	{
		display: inline-block;
		position: relative;
        padding-left: 16px;
		margin-right: 2em;

		&:last-child
		{
			margin-right: 0;
		}

		i
		{
			content: '';
			position: absolute;
			left: 0;
			top: 3px;
			width: 12px;
			height: 12px;
			border-radius: @xf-borderRadiusSmall;
			background: transparent;
		}
	}
}]]></template>
  <template type="admin" title="style_customized_components" version_id="2010037" version_string="2.1.0 Beta 7"><![CDATA[<xf:title>{{ phrase('customized_style_components:') }} {$style.title}</xf:title>

<xf:if is="$templates is not empty OR $properties is not empty">
	<xf:form action="{{ link('styles/mass-revert', $style) }}" ajax="true" class="block">
		<div class="block-outer">
			<div class="block-outer-main">
				<xf:macro template="style_macros" name="style_change_menu"
					arg-styleTree="{$styleTree}"
					arg-currentStyle="{$style}"
					arg-route="styles/customized-components" />
			</div>
			<div class="block-outer-opposite">
				<xf:macro template="filter_macros" name="quick_filter" arg-key="customized-components" arg-class="block-outer-opposite" />
			</div>
		</div>
		<div class="block-container">
			<div class="block-body">
				<xf:datalist>
					<xf:if is="$templates is not empty">
						<xf:datarow rowtype="subsection" rowclass="dataList-row--noHover">
							<xf:cell>{{ phrase('templates') }}</xf:cell>
							<xf:cell class="dataList-cell--min"><xf:checkbox standalone="true"><xf:option check-all=".dataList .js-checkAllTemplates >" /></xf:checkbox></xf:cell>
						</xf:datarow>
						<xf:foreach loop="$templates" value="$template">
							<xf:datarow rowclass="js-checkAllTemplates">
								<xf:main href="{{ link('templates/edit', $template) }}"
									label="{$template.title}"
									hint="{{ $template.version_string ? phrase('customized_in_version', {'version': $template.version_string}) : '' }}" />
								<xf:toggle name="template_ids[]" value="{$template.template_id}" />
							</xf:datarow>
						</xf:foreach>
					</xf:if>
					<xf:if is="$properties is not empty">
						<xf:datarow rowtype="subsection" rowclass="dataList-row--noHover">
							<xf:cell>{{ phrase('style_properties') }}</xf:cell>
							<xf:cell class="dataList-cell--min"><xf:checkbox standalone="true"><xf:option check-all=".dataList .js-checkAllProperties >" /></xf:checkbox></xf:cell>
						</xf:datarow>
						<xf:foreach loop="$properties" value="$property">
							<xf:datarow rowclass="js-checkAllProperties">
								<xf:main href="{{ link('styles/style-properties/group', $style, {'group': $property.group_name}) }}"
									label="{$property.title}"
									hint="{$property.property_name}" />
								<xf:toggle name="property_ids[]" value="{$property.property_id}" />
							</xf:datarow>
						</xf:foreach>
					</xf:if>
				</xf:datalist>
			</div>
			<div class="block-footer block-footer--split">
				<span class="block-footer-counter">{{ display_totals($itemCount) }}</span>
				<span class="block-footer-select"><xf:checkbox standalone="true"><xf:option check-all=".dataList >" label="{{ phrase('select_all') }}" /></xf:checkbox></span>
				<span class="block-footer-controls">
					<xf:button type="submit">{{ phrase('revert') }}</xf:button>
				</span>
			</div>
		</div>
	</xf:form>
<xf:else />
	<div class="block">
		<div class="block-outer">
			<xf:macro template="style_macros" name="style_change_menu"
				arg-styleTree="{$styleTree}"
				arg-currentStyle="{$style}"
				arg-route="styles/customized-components" />
		</div>
		<div class="block-container">
			<div class="block-body block-row">
				{{ phrase('style_contains_no_customized_templates_or_style_properties') }}
			</div>
		</div>
	</div>
</xf:if>]]></template>
  <template type="admin" title="style_edit" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:if is="$style.isInsert()">
	<xf:title>{{ phrase('add_style') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_style:') }} {$style.title}</xf:title>
</xf:if>

<xf:pageaction if="$style.isUpdate()">
	<xf:button href="{{ link('styles/delete', $style) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('styles/save', $style) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:textboxrow name="title" value="{$style.title}" maxlength="{{ max_length($style, 'title') }}"
				label="{{ phrase('title') }}" />

			<xf:textarearow name="description" value="{$style.description}" autosize="true"
				maxlength="{{ max_length($style, 'description') }}"
				label="{{ phrase('description') }}" />

			<xf:selectrow name="parent_id" value="{$style.parent_id}"
				label="{{ phrase('parent_style') }}">
				<xf:option value="0">{{ phrase('(no_parent)') }}</xf:option>
				<xf:foreach loop="$styleTree.getFlattened(1)" value="$treeEntry">
					<xf:option value="{$treeEntry.record.style_id}">
						{{ repeat('--', $treeEntry.depth) }} {$treeEntry.record.title}
					</xf:option>
				</xf:foreach>
			</xf:selectrow>

			<xf:checkboxrow>
				<xf:option name="user_selectable" selected="{$style.user_selectable}">
					{{ phrase('allow_user_selection') }}
				</xf:option>
			</xf:checkboxrow>
		</div>
		<xf:submitrow sticky="true" icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="style_export" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('export_style:') }} {$style.title}</xf:title>

<xf:set var="$styleRepo" value="{{ $xf.app.em.getRepository('XF:AddOn') }}" />

<xf:form action="{{ link('styles/export', $style) }}" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:formrow label="{{ phrase('style') }}">{$style.title}</xf:formrow>

			<xf:selectrow name="addon_id"
				label="{{ phrase('export_from_add_on') }}">

				<xf:option>{{ phrase('(all)') }}</xf:option>
				<xf:foreach loop="$styleRepo.findAddOnsForList().fetch()" value="$addOn">
					<xf:option value="{$addOn.addon_id}">{$addOn.title}</xf:option>
				</xf:foreach>
			</xf:selectrow>

			<xf:checkboxrow>
				<xf:option name="independent"
					label="{{ phrase('export_as_independent_style') }}"
					hint="{{ phrase('if_selected_customizations_in_parent_styles_will_be_included') }}" />
			</xf:checkboxrow>
		</div>
		<xf:submitrow icon="export" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="style_import" version_id="2010036" version_string="2.1.0 Beta 6"><![CDATA[<xf:title>{{ phrase('import_style') }}</xf:title>

<xf:form action="{{ link('styles/import') }}" upload="true" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:uploadrow name="upload" accept=".xml"
				label="{{ phrase('import_from_uploaded_xml_file') }}"/>

			<xf:radiorow name="target"
				label="{{ phrase('import_as') }}">

				<xf:option value="new" checked="checked"
					label="{{ phrase('child_of_style:') }}">

					<xf:select name="parent_style_id">
						<xf:option>{{ phrase('(no_parent)') }}</xf:option>
						<xf:foreach loop="$styleTree.getFlattened(0)" value="$treeEntry">
							<xf:option value="{$treeEntry.record.style_id}">
								{{ repeat('--', $treeEntry.depth) }} {$treeEntry.record.title}
							</xf:option>
						</xf:foreach>
					</xf:select>
				</xf:option>
				<xf:option value="overwrite"
					label="{{ phrase('overwrite_style') }}">

					<xf:select name="overwrite_style_id">
						<xf:foreach loop="$styleTree.getFlattened(0)" value="$treeEntry">
							<xf:option value="{$treeEntry.record.style_id}">{{ repeat('--', $treeEntry.depth) }}
								{$treeEntry.record.title}
							</xf:option>
						</xf:foreach>
					</xf:select>
				</xf:option>
			</xf:radiorow>

			<xf:checkboxrow>
				<xf:option name="force">
					<xf:label>{{ phrase('skip_import_checks') }}</xf:label>
					<xf:hint>{{ phrase('selecting_bypass_checks_made_by_import_prevent_accidents') }}</xf:hint>
				</xf:option>
			</xf:checkboxrow>

		</div>
		<xf:submitrow icon="import" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="style_list" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('styles') }}</xf:title>

<xf:pageaction>
	<xf:button href="{{ link('styles/add') }}" icon="add">{{ phrase('add_style') }}</xf:button>
	<xf:button href="{{ link('styles/import') }}" icon="import" />
</xf:pageaction>

<xf:macro name="style_list" arg-children="!" arg-defaultStyleId="!" arg-depth="1">
	<xf:if is="$children is not empty">
		<xf:foreach loop="$children" value="$child">
			<xf:macro name="style_list_entry" arg-style="{$child.record}" arg-children="{$child.children}" arg-defaultStyleId="{$defaultStyleId}" arg-depth="{$depth}" />
		</xf:foreach>
	</xf:if>
</xf:macro>

<xf:macro name="style_list_entry" arg-style="!" arg-children="!" arg-defaultStyleId="!" arg-depth="1">
	<xf:datarow>

		<xf:main
			hash="{$style.style_id}"
			href="{{ ($style.style_id ? link('styles/edit', $style) : '') }}"
			label="{$style.title}"
			explain="{$style.description}"
			class="dataList-cell--d{$depth}">

			<xf:hint><xf:if is="$xf.designer AND $style.designer_mode">
				{{ phrase('designer_mode_enabled:') }} {$style.designer_mode}
			</xf:if></xf:hint>
		</xf:main>

		<xf:if is="$style.style_id">
			<xf:toggle name="user_selectable[{$style.style_id}]"
				selected="$style.user_selectable"
				class="dataList-cell--separated u-hideMedium"
				submit="true"
				tooltip="{{ phrase('enable_disable_x', {'title': $style.title}) }}" />
			<xf:toggle name="default_style_id"
				type="radio"
				value="{$style.style_id}"
				selected="{{ $defaultStyleId == $style.style_id ? 1 : 0 }}"
				class="dataList-cell--separated"
				submit="true" />
		<xf:else />
			<xf:cell class="u-hideMedium">&nbsp;</xf:cell>
			<xf:cell>&nbsp;</xf:cell>
		</xf:if>

		<xf:if is="$style.canEdit()">
			<xf:action href="{{ link('styles/templates', $style) }}" class="dataList-cell--responsiveMenuItem">{{ phrase('templates') }}</xf:action>
			<xf:action href="{{ link('styles/style-properties', $style) }}" class="dataList-cell--responsiveMenuItem">{{ phrase('style_properties') }}</xf:action>
		<xf:else />
			<xf:cell class="dataList-cell--alt dataList-cell--fauxResponsiveMenuItem"> </xf:cell>
			<xf:cell class="dataList-cell--alt dataList-cell--fauxResponsiveMenuItem">&nbsp;</xf:cell>
		</xf:if>

		<xf:if is="$style.style_id">
			<xf:popup label="&#8226;&#8226;&#8226;">
				<div class="menu" data-menu="menu" aria-hidden="true" data-menu-builder="dataList">
					<div class="menu-content">
						<h3 class="menu-header">{{ phrase('more_options') }}</h3>
						<a href="{{ link('styles/export', $style) }}" class="menu-linkRow" data-xf-click="overlay">{{ phrase('export') }}</a>
						<a href="{{ link('styles/customized-components', $style) }}" class="menu-linkRow">{{ phrase('customized_components') }}</a>
						<div class="js-menuBuilderTarget u-showMediumBlock"></div>
					</div>
				</div>
			</xf:popup>
		<xf:else />
			<xf:cell class="dataList-cell--alt">&nbsp;</xf:cell>
		</xf:if>

		<xf:if is="$style.style_id">
			<xf:delete href="{{ link('styles/delete', $style) }}" />
		<xf:else />
			<xf:cell class="dataList-cell--alt">&nbsp;</xf:cell>
		</xf:if>

	</xf:datarow>
	<xf:macro name="style_list" arg-children="{$children}" arg-depth="{{ $depth + 1 }}" arg-defaultStyleId="{$defaultStyleId}" />
</xf:macro>

<xf:if is="$styleTree is not empty">
	<xf:form action="{{ link('styles/toggle') }}" class="block" ajax="true">
		<div class="block-outer">
			<xf:macro template="filter_macros" name="quick_filter" arg-key="styles" arg-class="block-outer-opposite" />
		</div>
		<div class="block-container">
			<div class="block-body">
				<xf:datalist>
					<xf:macro name="style_list" arg-children="{$styleTree}"
						arg-defaultStyleId="{$xf.options.defaultStyleId}" />
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($styleTree.getFlattened(0)) }}</span>
			</div>
		</div>
	</xf:form>
</xf:if>]]></template>
  <template type="admin" title="style_macros" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro name="style_change_menu"
	arg-styleTree="!"
	arg-route="!"
	arg-routeParams="{{ {} }}"
	arg-currentStyle="{{ null }}"
	arg-linkClass="button button--link">

	<a class="{$linkClass} menuTrigger"
		data-xf-click="menu"
		role="button"
		tabindex="0"
		aria-expanded="false"
		aria-haspopup="true">{{ phrase('style:') }} {$currentStyle.title}</a>

	<div class="menu" data-menu="menu" aria-hidden="true">
		<div class="menu-content">
			<h3 class="menu-header">{{ phrase('styles') }}</h3>
			<xf:foreach loop="$styleTree.getFlattened()" value="$treeEntry">
				<a href="{{ link($route, $treeEntry.record, $routeParams) }}"
					class="menu-linkRow {{ ($currentStyle && $currentStyle.style_id == $treeEntry.record.style_id) ? 'is-selected' : '' }}">
					<span class="u-depth{$treeEntry.depth}">{$treeEntry.record.title}</span>
				</a>
			</xf:foreach>
		</div>
	</div>
</xf:macro>

<xf:macro name="style_select"
	arg-styleTree="!"
	arg-styleId="!"
	arg-name="style_id"
	arg-row="{{ true }}">

	<xf:set var="$select">
		<xf:select name="{$name}" value="{$styleId}">
			<xf:foreach loop="{{ $styleTree.getFlattened() }}" value="$treeEntry">
				<xf:option value="{$treeEntry.record.style_id}">{{ repeat('--', $treeEntry.depth) }} {$treeEntry.record.title}</xf:option>
			</xf:foreach>
		</xf:select>
	</xf:set>

	<xf:if is="$row">
		<xf:formrow rowtype="input"
			label="{{ phrase('style') }}">

			{$select|raw}
		</xf:formrow>
	<xf:else />
		{$select|raw}
	</xf:if>
</xf:macro>]]></template>
  <template type="admin" title="style_mass_revert" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link('styles/mass-revert', $style) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('please_confirm_reversion_of_customized_components_from_style', {'numTemplates': count($templateIds), 'numProperties': count($propertyIds), 'style': $style.title}) }}
			</xf:inforow>
		</div>
		<xf:submitrow submit="{{ phrase('revert') }}" rowtype="simple" name="perform_revert" value="1" />
	</div>
	<xf:redirect />
	<xf:foreach loop="$templateIds" value="$templateId">
		<xf:hiddenval name="template_ids[]">{$templateId}</xf:hiddenval>
	</xf:foreach>
	<xf:foreach loop="$propertyIds" value="$propertyId">
		<xf:hiddenval name="property_ids[]">{$propertyId}</xf:hiddenval>
	</xf:foreach>
</xf:form>]]></template>
  <template type="admin" title="style_properties.less" version_id="2010031" version_string="2.1.0 Beta 1"><![CDATA[@_stylePropertiesInputWidth: 300px;

.cssCustomHighlight
{
	&.cssCustomHighlight--custom
	{
		color: red;
	}

	&.cssCustomHighlight--inherited
	{
		color: orange;
	}

	&.cssCustomHighlight--added
	{
		color: green;
	}
}

.cssPropertyWrapper
{
	.formRow-hint--customState
	{
		float: right;

		> span
		{
			font-size: @xf-fontSizeSmallest;
			font-weight: @xf-fontWeightHeavy;
			vertical-align: .3em;
		}
	}
}

.cssPropertyDescription
{
	.m-clearFix();

	font-size: @xf-fontSizeSmall;
	color: @xf-textColorDimmed;
}

.cssProperty
{
	margin: 0;
	padding: 0;
	list-style: none;
	display: flex;
	flex-wrap: wrap;

	> li
	{
		display: inline-block;
		vertical-align: top;
		margin-top: @xf-paddingLargest;
		margin-right: 20px;
		max-width: 100%;
	}
}

.cssPropertyExtra
{
	.cssPropertyHeader
	{
		margin-bottom: 3px;
	}

	.input,
	.codeEditor
	{
		width: 450px;
		max-width: 100%;
	}
}

.m-cssPropertyHeaderText()
{
	font-size: @xf-fontSizeLarge;
	font-weight: @xf-fontWeightNormal;
	color: @xf-textColorFeature;
}

.cssPropertyHeader
{
	margin: 0;
	padding: 0;
	.m-cssPropertyHeaderText();
	padding-bottom: 2px;
	border-bottom: 1px solid @xf-borderColor;
}

.cssPropertyRevert
{
	font-size: @xf-fontSizeSmaller;
	float: right;
}

table.cssPropertySet
{
	border: none;
	border-spacing: 0;
	border-collapse: collapse;

	td
	{
		padding: 3px;

		&:first-child
		{
			padding-left: 0;
		}

		&:last-child
		{
			padding-right: 0;
		}
	}
}

.cssPropertySet-headerRow
{
	th
	{
		font-size: @xf-fontSizeSmaller;
		font-weight: @xf-fontWeightNormal;
		text-align: left;
		vertical-align: baseline;
		padding: 0 4px;

		&.cssPropertySet-headerSetLabel
		{
			.m-cssPropertyHeaderText();
			padding-left: 0;
			padding-right: 6px;
		}
	}

	&.cssPropertySet-headerRow--separated th
	{
		border-bottom: 1px solid @xf-borderColor;
		padding-bottom: 2px;
	}
}

.cssPropertySet-rowLabel
{
	font-size: @xf-fontSizeSmall;
	font-weight: @xf-fontWeightNormal;
	text-align: right;
}

.input
{
	&.input--cssProp
	{
		font-size: @xf-fontSizeSmall;
		padding: @xf-paddingSmall;
	}

	&.input--cssLength
	{
		text-align: right;
		width: 120px;
	}

	&.input--colorWidthMatched
	{
		width: @_stylePropertiesInputWidth;
		max-width: 100%;
	}

	.p-styleProperties &.input--number
	{
		width: @_stylePropertiesInputWidth;
		max-width: 100%;
		text-align: left;

		&.js-numberBoxTextInput
		{
			width: (@_stylePropertiesInputWidth) - 70px;
		}
	}
}

.p-styleProperties .inputGroup--color
{
	//width: @_stylePropertiesInputWidth;

	.inputGroup-text--rgbTxt
	{
		width: 45px;
		font-size: @xf-fontSizeSmallest;
		font-weight: bold;
		color: @xf-textColorMuted;
		//background-color: @xf-contentAltBg;
		justify-content: center;
	}
}

.inputChoices
{
	&.inputChoices--cssTextOptions
	{
		> li
		{
			display: inline-block;
			margin-bottom: 0;
			margin-right: 10px;
			font-size: @xf-fontSizeSmall;

			&:last-child
			{
				margin-right: 0;
			}
		}
	}
}

.formRow
{
	.formRow-revert
	{
		margin-top: @xf-paddingMedium;
		font-size: @xf-fontSizeSmaller;
	}

	.formRow-hint--customState
	{
		display: block;
		font-size: @xf-fontSizeSmallest;

		.iconic-label
		{
			font-weight: @xf-fontWeightHeavy;
		}
	}
}

@media (max-width: @xf-responsiveNarrow)
{
	.p-styleProperties .inputGroup--color,
	.input.input--colorWidthMatched
	{
		width: 200px;
	}

	.cssProperty
	{
		display: block;

		> li
		{
			display: block;
			margin-right: 0;
		}
	}

	.cssPropertySet
	{
		width: 100%;

		.input--cssLength
		{
			width: 80px;
		}

		.inputGroup.inputGroup--colorSmall
		{
			width: 130px;
		}

		.colorPickerBox
		{
			width: 30px;
		}
	}

	.cssPropertyExtra .input,
	.cssPropertyExtra .codeEditor
	{
		width: ~'calc(100vw - 45px)';
	}
}]]></template>
  <template type="admin" title="style_property_edit" version_id="2000033" version_string="2.0.0 Beta 3"><![CDATA[<xf:if is="$property.isInsert()">
	<xf:title>{{ phrase('add_property') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_property:') }} {$property.master_title}</xf:title>
</xf:if>

<xf:pageaction if="$property.isUpdate()">
	<xf:button href="{{ link('style-properties/delete', $property) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('style-properties//save', $property) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:formrow label="{{ phrase('style') }}">

				{$style.title}
				<xf:hiddenval name="style_id">{$style.style_id}</xf:hiddenval>
			</xf:formrow>

			<xf:textboxrow name="property_name" value="{$property.property_name}"
				maxlength="{{ max_length($property, 'property_name') }}"
				label="{{ phrase('property_name') }}"
				explain="{{ phrase('this_is_how_you_will_refer_to_property_in_template') }}"
				dir="ltr" />

			<xf:textboxrow name="title" value="{$property.master_title}"
				maxlength="{{ max_length($property, 'title') }}"
				label="{{ phrase('title') }}" />

			<xf:textarearow name="description" value="{$property.master_description}" autosize="true"
				maxlength="{{ max_length($property, 'description') }}"
				label="{{ phrase('description') }}" />

			<hr class="formRowSep" />

			<xf:radiorow name="property_type" value="{{ $property.property_type ?: 'css' }}"
				label="{{ phrase('type') }}">

				<xf:option value="css" data-xf-init="disabler" data-container=".js-propertyTypeCss" data-hide="true">
					CSS</xf:option>
				<xf:option value="value" data-xf-init="disabler" data-container=".js-propertyTypeValue" data-hide="true">
					{{ phrase('value') }}</xf:option>

			</xf:radiorow>

			<div class="js-propertyTypeCss">
				<xf:checkboxrow name="css_components" value="{{ $property.css_components }}" listclass="listColumns"
					label="{{ phrase('css_components') }}">

					<xf:option value="text">{{ phrase('text') }}</xf:option>
					<xf:option value="background">{{ phrase('background') }}</xf:option>
					<xf:option value="border">{{ phrase('border') }}</xf:option>
					<xf:option value="border_radius">{{ phrase('border_radius') }}</xf:option>
					<xf:option value="border_width_simple">{{ phrase('simple_border_width') }}</xf:option>
					<xf:option value="border_color_simple">{{ phrase('simple_border_color') }}</xf:option>
					<xf:option value="border_radius_simple">{{ phrase('simple_border_radius') }}</xf:option>
					<xf:option value="padding">{{ phrase('padding') }}</xf:option>
					<xf:option value="extra">{{ phrase('extra') }}</xf:option>
					<xf:explain>{{ phrase('css_components_explain') }}</xf:explain>
				</xf:checkboxrow>
			</div>
			<div class="js-propertyTypeValue">
				<xf:radiorow name="value_type" value="{{ $property.value_type ?: 'string' }}" listclass="listColumns"
					label="{{ phrase('value_type') }}">

					<xf:option value="string">{{ phrase('string') }}</xf:option>
					<xf:option value="color">{{ phrase('color') }}</xf:option>
					<xf:option value="unit">{{ phrase('unit') }}</xf:option>
					<xf:option value="number">{{ phrase('number') }}</xf:option>
					<xf:option value="boolean">{{ phrase('boolean') }}</xf:option>
					<xf:option value="radio">{{ phrase('radio_buttons') }}</xf:option>
					<xf:option value="select">{{ phrase('select_menu') }}</xf:option>
					<xf:option value="template">{{ phrase('template') }}</xf:option>
				</xf:radiorow>

				<xf:textarearow name="value_parameters" value="{$property.value_parameters}" autosize="true"
					label="{{ phrase('value_formatting_parameters') }}"
					code="true" />

				<xf:textboxrow name="depends_on" value="{$property.depends_on}"
					maxlength="{{ max_length($property, 'depends_on') }}"
					label="{{ phrase('depends_on') }}"
					explain="{{ phrase('depends_on_explain') }}"
					dir="ltr" />

				<xf:textboxrow name="value_group" value="{$property.value_group}"
					maxlength="{{ max_length($property, 'value_group') }}"
					label="{{ phrase('value_grouping') }}"
					explain="{{ phrase('value_grouping_explain') }}"
					dir="ltr" />
			</div>

			<hr class="formRowSep" />

			<xf:selectrow name="group_name" value="{$property.group_name}"
				label="{{ phrase('group') }}">
				<xf:option value="">&nbsp;</xf:option>
				<xf:foreach loop="$groups" value="$group">
					<xf:option value="{$group.group_name}">{$group.title}</xf:option>
				</xf:foreach>
			</xf:selectrow>

			<xf:macro template="display_order_macros" name="row"
				arg-value="{$property.display_order}" />

			<xf:if is="$style.style_id == 0">
				<xf:macro template="addon_macros" name="addon_edit" arg-addOnId="{$property.addon_id}" />
			</xf:if>
		</div>
		<xf:submitrow icon="save" sticky="true" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="style_property_group_edit" version_id="2000033" version_string="2.0.0 Beta 3"><![CDATA[<xf:if is="$group.isInsert()">
	<xf:title>{{ phrase('add_property_group') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_property_group:') }} {$group.master_title}</xf:title>
</xf:if>

<xf:pageaction if="$group.isUpdate()">
	<xf:button href="{{ link('style-properties/groups/delete', $group) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('style-properties/groups/save', $group) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:formrow label="{{ phrase('style') }}">
				{$style.title}
				<xf:hiddenval name="style_id">{$style.style_id}</xf:hiddenval>
			</xf:formrow>

			<xf:textboxrow name="group_name" value="{$group.group_name}" maxlength="{{ max_length($group, 'group_name') }}"
				label="{{ phrase('group_name') }}"
				explain="{{ phrase('this_is_unique_identifier_for_this_group') }}"
				dir="ltr" />

			<xf:textboxrow name="title" value="{$group.master_title}" maxlength="{{ max_length($group, 'title') }}"
				label="{{ phrase('title') }}" />

			<xf:textarearow name="description" value="{$group.master_description}" maxlength="{{ max_length($group, 'description') }}"
				label="{{ phrase('description') }}" />

			<xf:macro template="display_order_macros" name="row"
				arg-value="{$group.display_order}" />

			<xf:if is="$style.style_id == 0">
				<xf:macro template="addon_macros" name="addon_edit" arg-addOnId="{$group.addon_id}" />
			</xf:if>
		</div>
		<xf:submitrow icon="save" sticky="true" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="style_property_group_list" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{$style.title} - {{ phrase('style_properties') }}</xf:title>

<xf:page option="breadcrumbPath" value="styles" />
<xf:page option="section" value="styleProperties" />

<xf:pageaction if="$style.canEditStylePropertyDefinitions()">
	<xf:button href="{{ link('style-properties/groups/add', null, {'style_id': $style.style_id}) }}" icon="add">
		{{ phrase('add_property_group') }}
	</xf:button>
</xf:pageaction>

<div class="block">
	<div class="block-outer">
		<xf:macro template="style_macros" name="style_change_menu"
			arg-styleTree="{$styleTree}"
			arg-currentStyle="{$style}"
			arg-route="styles/style-properties" />
	</div>
	<div class="block-container">
		<div class="block-body">
			<xf:datalist>
				<xf:foreach loop="$groups" value="$group">
					<xf:set var="$canEdit" value="{{ $group.canEdit() && $group.style_id == $style.style_id }}" />
					<xf:datarow
						label="{$group.title}"
						href="{{ link('styles/style-properties/group', $style, {'group': $group.group_name}) }}"
						explain="{$group.description}"
						delete="{{ $canEdit ? link('style-properties/groups/delete', $group) : false }}"
						hash="{$group.group_name}"
						colspan="{{ $canEdit ? 1 : 3 }}">

						<xf:if is="$canEdit">
							<xf:action href="{{ link('style-properties/groups/edit', $group) }}">{{ phrase('edit') }}</xf:action>
						</xf:if>
					</xf:datarow>
				</xf:foreach>

				<xf:if is="$hasUngrouped">
					<xf:datarow
						label="{{ phrase('ungrouped_properties') }}"
						href="{{ link('styles/style-properties/group', $style, {'ungrouped': 1}) }}"
						colspan="3" />
				</xf:if>
			</xf:datalist>
		</div>
	</div>
</div>]]></template>
  <template type="admin" title="style_property_group_view" version_id="2010035" version_string="2.1.0 Beta 5"><![CDATA[<xf:title>{{ $group ? $group.title : phrase('ungrouped_properties') }}</xf:title>
<xf:if is="$group">
	<xf:description>{$group.description}</xf:description>
</xf:if>

<xf:page option="breadcrumbPath" value="styles" />
<xf:page option="section" value="styleProperties" />

<xf:breadcrumb href="{{ link('styles/style-properties', $style) }}">{$style.title} - {{ phrase('style_properties') }}</xf:breadcrumb>

<xf:pageaction if="$style.canEditStylePropertyDefinitions() && $group">
	<xf:button href="{{ link('style-properties/add', null, {'style_id': $style.style_id, 'group': $group.group_name}) }}"
		icon="add">
		{{ phrase('add_property') }}
	</xf:button>

	<xf:button href="{{ link('style-properties/groups/edit', $group) }}" data-xf-click="overlay">
		{{ phrase('edit') }}
	</xf:button>
</xf:pageaction>

<xf:if is="$propertyMap is not empty">
	<xf:form action="{{ link('styles/style-properties/group', $style, $urlParams) }}"
		class="block p-styleProperties"
		ajax="true"
		data-json-name="json" data-json-opt-in="properties,properties_listed"
		autocomplete="off">

		<div class="block-outer">
			<div class="block-outer-main">
				<xf:macro template="style_macros" name="style_change_menu"
					arg-styleTree="{$styleTree}"
					arg-currentStyle="{$style}"
					arg-route="styles/style-properties/group"
					arg-routeParams="{{ {'group': $group.group_name} }}" />

				<xf:button class="button--link menuTrigger" data-xf-click="menu" aria-expanded="false" aria-haspopup="true">{{ phrase('group:') }} {$group.title}</xf:button>
				<div class="menu" data-menu="menu" aria-hidden="true">
					<div class="menu-content">
						<h3 class="menu-header">{{ phrase('groups') }}</h3>
						<div class="menu-scroller">
							<xf:foreach loop="$groups" value="$_group">
								<a href="{{ link('styles/style-properties/group', $style, {'group': $_group.group_name}) }}"
									class="menu-linkRow {{ ($group && $group.group_name == $_group.group_name) ? 'is-selected' : '' }}">{$_group.title}</a>
							</xf:foreach>
							<xf:if is="$hasUngrouped">
								<a href="{{ link('styles/style-properties/group', $style, {'ungrouped': 1}) }}"
									class="menu-linkRow {{ !$group ? 'is-selected' : '' }}">
									{{ phrase('ungrouped_properties') }}</a>
							</xf:if>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div class="block-container">
			<xf:set var="$hasActive" value="{{ false }}" />
			<xf:if contentcheck="true">
				<div data-toggle-wrapper="1">
					<h3 class="block-header">
						<span class="collapseTrigger collapseTrigger--block is-active"
							data-xf-click="toggle"
							data-target="< :up :next"
							data-xf-init="toggle-storage"
							data-storage-key="sp-settings-{$group.group_name}">
							{{ phrase('settings') }}
						</span>
					</h3>
					<div class="block-body block-body--collapsible is-active">
					<xf:contentcheck>
						<xf:set var="$propValueGroup" value="{{ null }}" />
						<xf:foreach loop="$propertyMap" value="$map" if="{$map.Property.property_type} == 'value'">
							<xf:if is="$propValueGroup != $map.Property.value_group">
								<xf:if is="$map.Property.value_group_title">
									<div class="block-formSectionHeader">
										<span class="block-formSectionHeader-aligner">
											{$map.Property.value_group_title}
										</span>
									</div>
								<xf:else />
									<hr class="formRowSep" />
								</xf:if>
							</xf:if>
							<xf:macro template="style_property_macros" name="property_edit"
								arg-property="{$map.Property}"
								arg-definitionEditable="{{ $map.isDefinitionEditable() }}"
								arg-customizationState="{{ $map.getCustomizationState() }}" />
							<xf:set var="$hasActive" value="{{ true }}" />
							<xf:set var="$propValueGroup" value="{$map.Property.value_group}" />
						</xf:foreach>
					</xf:contentcheck>
					</div>
				</div>
			</xf:if>

			<xf:foreach loop="$propertyMap" value="$map" if="{$map.Property.property_type} == 'css'">
				<xf:macro template="style_property_macros" name="property_edit"
					arg-property="{$map.Property}"
					arg-definitionEditable="{{ $map.isDefinitionEditable() }}"
					arg-customizationState="{{ $map.getCustomizationState() }}"
					arg-isActive="{{ $hasActive ? false : true }}" />
				<xf:set var="$hasActive" value="{{ true }}" />
			</xf:foreach>

			<xf:submitrow rowtype="simple" icon="save" sticky="true" />
		</div>
	</xf:form>
<xf:else />
	<div class="blockMessage">{{ phrase('this_group_does_not_have_any_style_properties') }}</div>
</xf:if>

<xf:macro template="public:color_picker_macros" name="color_picker_scripts" arg-colorData="{$colorData}" />]]></template>
  <template type="admin" title="style_property_macros" version_id="2010031" version_string="2.1.0 Beta 1"><![CDATA[<xf:macro name="property_edit"
	arg-property="!"
	arg-definitionEditable="{{ false }}"
	arg-isActive="{{ true }}"
	arg-customizationState=""
	arg-submitName="properties">

	<xf:if is="$property.property_type == 'css'">
		<xf:macro name="property_edit_css"
			arg-property="{$property}"
			arg-definitionEditable="{$definitionEditable}"
			arg-isActive="{$isActive}"
			arg-customizationState="{$customizationState}"
			arg-submitName="{$submitName}" />
	<xf:else />
		<xf:macro name="property_edit_value"
			arg-property="{$property}"
			arg-definitionEditable="{$definitionEditable}"
			arg-customizationState="{$customizationState}"
			arg-submitName="{$submitName}" />
	</xf:if>
</xf:macro>

<xf:macro name="property_edit_value"
	arg-property="!"
	arg-definitionEditable="!"
	arg-customizationState="!"
	arg-submitName="!">

	<xf:css src="style_properties.less" />

	<xf:set var="$titleHtml"><span class="u-anchorTarget" id="sp-{$property.property_name}"></span>{$property.title}</xf:set>

	<xf:set var="$formBaseKey" value="{$submitName}[{$property.property_name}]" />

	<xf:set var="$hintHtml"><xf:trim>
		<xf:if is="$xf.development">{$property.property_name} {$property.display_order|parens}</xf:if>
		<xf:if is="$definitionEditable">
			<a href="{{ link('style-properties/edit', $property) }}">{{ phrase('edit') }}</a>
		</xf:if>

		<xf:if is="$property.addon_id AND $property.Group AND $property.addon_id != $property.Group.addon_id AND $property.addon_id != 'XF'">
			<span class="formRow-hint-featured">
				{$property.AddOn.title}
			</span>
		</xf:if>

		<xf:macro name="customization_hint"
			arg-state="{$customizationState}"
			arg-submitName="{$submitName}"
			arg-property="{$property}"
			arg-checkbox="{{ true }}"/>

		<xf:hiddenval name="{$submitName}_listed[]" value="{$property.property_name}" />
	</xf:trim></xf:set>

	<xf:set var="$valueOptions" value="{{ $property.getValueOptions() }}" />

	<xf:set var="$rowClass" value="{{ $property.depends_on ? 'js-stylePropDependsOn-' . $property.depends_on : '' }} xf-{$property.property_name}" />

	<xf:if is="$property.value_type == 'boolean'">

		<!--boolean-->
		<xf:checkboxrow rowclass="{$rowClass}"
			hint="{$hintHtml}">

			<xf:option name="{$formBaseKey}"
				value="1"
				selected="$property.property_value == 1"
				data-xf-init="disabler"
				data-container=".js-stylePropDependsOn-{$property.property_name}"
				data-optional="true"
				data-hide="{{ $valueOptions.hideDependent ?: 'false' }}"
				label="{$titleHtml}"
				hint="{$property.description}"  />
		</xf:checkboxrow>


	<xf:elseif is="$property.value_type == 'radio'" />

		<xf:radiorow name="{$formBaseKey}" value="{$property.property_value}" rowclass="{$rowClass}"
			label="{$titleHtml}"
			hint="{$hintHtml}"
			explain="{$property.description}">

			<xf:options source="{$valueOptions}" />
		</xf:radiorow>


	<xf:elseif is="$property.value_type == 'select'" />

		<xf:selectrow name="{$formBaseKey}" value="{$property.property_value}" rowclass="{$rowClass}"
			label="{$titleHtml}"
			hint="{$hintHtml}"
			explain="{$property.description}">

			<xf:options source="{$valueOptions}" />
		</xf:selectrow>

	<xf:elseif is="$property.value_type == 'number'" />

		<xf:numberboxrow name="{$formBaseKey}" value="{$property.property_value}"
			min="{$valueOptions.min}"
			max="{$valueOptions.max}"
			step="{$valueOptions.step}"
			units="{$valueOptions.units}"
			rowclass="{$rowClass}" rowid="propRow_{$property.property_name}"
			label="{$titleHtml}"
			hint="{$hintHtml}"
			explain="{$property.description}" />

	<xf:elseif is="$property.value_type == 'color'" />

		<xf:macro template="public:color_picker_macros" name="color_picker"
			arg-name="{$formBaseKey}"
			arg-value="{$property.property_value}"
			arg-mapName="@xf-{$property.property_name}"
			arg-allowPalette="{{ $valueOptions.hidePalette ? 'false' : 'true'}}"
			arg-label="{$titleHtml}"
			arg-hint="{$hintHtml}"
			arg-explain="{$property.description}"
			arg-rowClass="formRow-styleProperty {$rowClass}" rowid="propRow_{$property.property_name}"
			arg-includeScripts="{{ false }}"
			arg-showTxt="{{ true }}"/>

	<xf:elseif is="$property.value_type == 'unit'" />

		<xf:textboxrow
			name="{$formBaseKey}"
			value="{$property.property_value}"
			class="input--number"
			rowclass="{$rowClass}"
			label="{$titleHtml}"
			hint="{$hintHtml}"
			explain="{$property.description}"
			dir="ltr" />

	<xf:elseif is="$property.value_type == 'template'" />

		<xf:if is="$valueOptions.template">
			<xf:set var="$includeHtml"><xf:include template="{$valueOptions.template}" /></xf:set>
			<xf:if is="$includeHtml is empty">
				<xf:formrow label="{$titleHtml}" hint="{$hintHtml}">
					<div class="blockMessage blockMessage--error blockMessage--iconic">{{ phrase('template_x_not_found', {'template': $valueOptions.template}) }}</div>
				</xf:formrow>
			<xf:else />
				{$includeHtml}
			</xf:if>
		<xf:else />
			<xf:formrow label="{$titleHtml}" hint="{$hintHtml}">
				<div class="blockMessage blockMessage--error blockMessage--iconic">{{ phrase('no_template_specified') }}</div>
			</xf:formrow>
		</xf:if>

	<xf:elseif is="$property.value_type == 'string' && $valueOptions.rows > 1" />


		<xf:textarearow name="{$formBaseKey}"
			value="{$property.property_value}"
			rows="{$valueOptions.rows}"
			autosize="true"
			class="{$valueOptions.class}"
			code="{$valueOptions.code}"
			rowclass="{$rowClass}"
			label="{$titleHtml}"
			hint="{$hintHtml}"
			explain="{$property.description}"
			dir="auto" />

	<xf:else />

		<xf:textboxrow name="{$formBaseKey}"
			value="{$property.property_value}"
			type="{$valueOptions.type}"
			class="{$valueOptions.class}"
			code="{$valueOptions.code}"
			rowclass="{$rowClass}"
			label="{$titleHtml}"
			hint="{$hintHtml}"
			explain="{$property.description}"
			dir="auto" />

	</xf:if>
</xf:macro>


<xf:macro name="property_edit_css"
	arg-property="!"
	arg-definitionEditable="!"
	arg-isActive="{{ true }}"
	arg-customizationState="!"
	arg-submitName="!">

	<xf:css src="style_properties.less" />
	<xf:css src="public:color_picker.less" />
	<xf:js src="xf/color_picker.js" min="1" />

	<xf:set var="$formBaseKey" value="{$submitName}[{$property.property_name}]" />

	<div class="cssPropertyWrapper" data-toggle-wrapper="1">
		<h3 class="block-header block-header--separated">
			<span class="collapseTrigger collapseTrigger--block {{ $isActive ? 'is-active' : '' }}"
				data-xf-click="toggle"
				data-target="< :up :next"
				data-xf-init="toggle-storage"
				data-storage-key="sp-{$property.property_name}">

				<xf:macro name="customization_hint"
					arg-state="{$customizationState}"
					arg-submitName="{$submitName}"
					arg-property="{$property}" />

				<span class="u-anchorTarget" id="sp-{$property.property_name}"></span><span>{$property.title}</span>
				<xf:if is="$property.description"><span class="block-desc">{$property.description}</span></xf:if>
			</span>
			<xf:hiddenval name="{$submitName}_listed[]" value="{$property.property_name}" />
		</h3>
		<div class="block-body block-body--collapsible {{ $isActive ? 'is-active' : '' }}">
			<div class="block-row">
				<xf:if contentcheck="true">
					<div class="cssPropertyDescription">
					<xf:contentcheck>
						<xf:if is="$customizationState == 'custom'">
							<span class="cssPropertyRevert" data-xf-init="tooltip" title="{{ phrase('revert_customizations')|for_attr }}">
								<xf:macro name="revert_code"
									arg-submitName="{$submitName}"
									arg-property="{$property}"
									arg-label="{{ phrase('revert_customized_value') }}"
									arg-container="< .block-row" />
							</span>
						</xf:if>
						<xf:if is="$definitionEditable">
							<span class="u-pullRight">
								<xf:button href="{{ link('style-properties/edit', $property) }}"
									class="button--link button--small" icon="edit" />
							</span>
						</xf:if>
						<xf:if is="$xf.development"><div class="u-muted">{$property.property_name} {$property.display_order|parens}</div></xf:if>
					</xf:contentcheck>
					</div>
				</xf:if>

				<ul class="cssProperty">
					<xf:if is="$property.isValidCssComponent('text')">
						<li>
							<h4 class="cssPropertyHeader">{{ phrase('text') }}</h4>
							<table class="cssPropertySet">
							<tr class="cssPropertySet-headerRow">
								<th>{{ phrase('size') }}</th>
								<th>{{ phrase('color') }}</th>
								<th>{{ phrase('weight') }}</th>
							</tr>
							<tr>
								<td><xf:textbox
									name="{$formBaseKey}[font-size]"
									value="{{ $property.getCssPropertyValue('font-size') }}"
									class="input--cssProp input--cssLength"
									dir="ltr" />
								</td>

								<td><div class="inputGroup inputGroup--joined inputGroup--colorSmall" data-xf-init="color-picker">
									<xf:textbox name="{$formBaseKey}[color]" value="{{ $property.getCssPropertyValue('color') }}" class="input--cssProp" dir="ltr" />
									<div class="inputGroup-text"><span class="colorPickerBox js-colorPickerTrigger"></span></div>
								</div></td>

								<td><xf:select name="{$formBaseKey}[font-weight]"
									value="{{ $property.getCssPropertyValue('font-weight') }}"
									class="input--cssProp">

									<xf:option value="">&nbsp;</xf:option>
									<xf:option value="@xf-fontWeightHeavy">{{ phrase('weight_bold') }}</xf:option>
									<xf:option value="@xf-fontWeightNormal">{{ phrase('weight_normal') }}</xf:option>
									<xf:option value="@xf-fontWeightLight">{{ phrase('weight_light') }}</xf:option>
								</xf:select></td>
							</tr>
							<tr>
								<td colspan="3">
									<xf:checkbox listclass="inputChoices--cssTextOptions">
										<xf:option name="{$formBaseKey}[font-style]" value="italic"
											selected="{{ $property.getCssPropertyValue('font-style') == 'italic' }}" >
											{{ phrase('italic') }}
										</xf:option>

										<xf:option name="{$formBaseKey}[text-decoration]" value="underline"
											selected="{{ $property.getCssPropertyValue('text-decoration') == 'underline' }}">
											{{ phrase('underline') }}
										</xf:option>

										<xf:option name="{$formBaseKey}[text-decoration]" value="none"
											selected="{{ $property.getCssPropertyValue('text-decoration') == 'none' }}">
											{{ phrase('no_text_decoration') }}
										</xf:option>
									</xf:checkbox>
								</td>
							</tr>
							</table>
						</li>
					</xf:if>

					<xf:if is="$property.isValidCssComponent('background')">
						<li>
							<h4 class="cssPropertyHeader">{{ phrase('background') }}</h4>
							<table class="cssPropertySet">
							<tr class="cssPropertySet-headerRow">
								<th>{{ phrase('color') }}</th>
							</tr>
							<tr>
								<td><div class="inputGroup inputGroup--joined inputGroup--color" data-xf-init="color-picker">
									<xf:textbox name="{$formBaseKey}[background-color]" value="{{ $property.getCssPropertyValue('background-color') }}" class="input--cssProp" dir="ltr" />
									<div class="inputGroup-text"><span class="colorPickerBox js-colorPickerTrigger"></span></div>
								</div></td>
							</tr>
							<tr class="cssPropertySet-headerRow">
								<th>{{ phrase('image') }}</th>
							</tr>
							<tr>
								<td><xf:textbox
									name="{$formBaseKey}[background-image]"
									value="{{ $property.getCssPropertyValue('background-image') }}"
									class="input--cssProp input--colorWidthMatched" dir="ltr" /></td>
							</tr>
							</table>
						</li>
					</xf:if>

					<xf:if is="$property.isValidCssComponent('border') OR $property.isValidCssComponent('border_radius')">
						<li>
							<table class="cssPropertySet">
							<tr class="cssPropertySet-headerRow cssPropertySet-headerRow--separated">
								<th class="cssPropertySet-headerSetLabel">{{ phrase('border') }}</th>
								<xf:if is="$property.isValidCssComponent('border')">
									<th>{{ phrase('width') }}</th>
									<th>{{ phrase('color') }}</th>
								</xf:if>
								<xf:if is="$property.isValidCssComponent('border_radius')">
									<th>{{ phrase('radius') }}</th>
								</xf:if>
							</tr>
							<tr>
								<td class="cssPropertySet-rowLabel">{{ phrase('all') }}</td>

								<xf:if is="$property.isValidCssComponent('border')">
									<td><xf:textbox name="{$formBaseKey}[border-width]"
										value="{{ $property.getCssPropertyValue('border-width') }}"
										class="input--cssProp input--cssLength" dir="ltr" /></td>

									<td><div class="inputGroup inputGroup--joined inputGroup--colorSmall" data-xf-init="color-picker">
										<xf:textbox name="{$formBaseKey}[border-color]" value="{{ $property.getCssPropertyValue('border-color') }}" class="input--cssProp" dir="ltr" />
										<div class="inputGroup-text"><span class="colorPickerBox js-colorPickerTrigger"></span></div>
									</div></td>
								</xf:if>

								<xf:if is="$property.isValidCssComponent('border_radius')">
									<td><xf:textbox name="{$formBaseKey}[border-radius]"
										value="{{ $property.getCssPropertyValue('border-radius') }}"
										class="input--cssProp input--cssLength"
										dir="ltr" />
									</td>
								</xf:if>
							</tr>
							<tr>
								<td class="cssPropertySet-rowLabel">{{ phrase('top') }}</td>

								<xf:if is="$property.isValidCssComponent('border')">
									<td><xf:textbox name="{$formBaseKey}[border-top-width]"
										value="{{ $property.getCssPropertyValue('border-top-width') }}"
										class="input--cssProp input--cssLength"
										dir="ltr" />
									</td>

									<td><div class="inputGroup inputGroup--joined inputGroup--colorSmall" data-xf-init="color-picker">
										<xf:textbox name="{$formBaseKey}[border-top-color]"	value="{{ $property.getCssPropertyValue('border-top-color') }}" class="input--cssProp" dir="ltr" />
										<div class="inputGroup-text"><span class="colorPickerBox js-colorPickerTrigger"></span></div>
									</div></td>
								</xf:if>

								<xf:if is="$property.isValidCssComponent('border_radius')">
									<td><xf:textbox name="{$formBaseKey}[border-top-left-radius]"
										value="{{ $property.getCssPropertyValue('border-top-left-radius') }}"
										class="input--cssProp input--cssLength"
										dir="ltr" />
									</td>
								</xf:if>
							</tr>
							<tr>
								<td class="cssPropertySet-rowLabel">{{ phrase('right') }}</td>

								<xf:if is="$property.isValidCssComponent('border')">
									<td><xf:textbox name="{$formBaseKey}[border-right-width]"
										value="{{ $property.getCssPropertyValue('border-right-width') }}"
										class="input--cssProp input--cssLength"
										dir="ltr" />
									</td>

									<td><div class="inputGroup inputGroup--joined inputGroup--colorSmall" data-xf-init="color-picker">
										<xf:textbox name="{$formBaseKey}[border-right-color]" value="{{ $property.getCssPropertyValue('border-right-color') }}" class="input--cssProp" dir="ltr" />
										<div class="inputGroup-text"><span class="colorPickerBox js-colorPickerTrigger"></span></div>
									</div></td>
								</xf:if>

								<xf:if is="$property.isValidCssComponent('border_radius')">
									<td><xf:textbox name="{$formBaseKey}[border-top-right-radius]"
										value="{{ $property.getCssPropertyValue('border-top-right-radius') }}"
										class="input--cssProp input--cssLength"
										dir="ltr" />
									</td>
								</xf:if>
							</tr>
							<tr>
								<td class="cssPropertySet-rowLabel">{{ phrase('bottom') }}</td>

								<xf:if is="$property.isValidCssComponent('border')">
									<td><xf:textbox name="{$formBaseKey}[border-bottom-width]"
										value="{{ $property.getCssPropertyValue('border-bottom-width') }}"
										class="input--cssProp input--cssLength"
										dir="ltr" />
									</td>

									<td><div class="inputGroup inputGroup--joined inputGroup--colorSmall" data-xf-init="color-picker">
										<xf:textbox name="{$formBaseKey}[border-bottom-color]"
											value="{{ $property.getCssPropertyValue('border-bottom-color') }}"
											class="input--cssProp"
											dir="ltr" />
										<div class="inputGroup-text"><span class="colorPickerBox js-colorPickerTrigger"></span></div>
									</div></td>
								</xf:if>

								<xf:if is="$property.isValidCssComponent('border_radius')">
									<td><xf:textbox name="{$formBaseKey}[border-bottom-right-radius]"
										value="{{ $property.getCssPropertyValue('border-bottom-right-radius') }}"
										class="input--cssProp input--cssLength"
										dir="ltr" />
									</td>
								</xf:if>
							</tr>
							<tr>
								<td class="cssPropertySet-rowLabel">{{ phrase('left') }}</td>

								<xf:if is="$property.isValidCssComponent('border')">
									<td><xf:textbox name="{$formBaseKey}[border-left-width]"
										value="{{ $property.getCssPropertyValue('border-left-width') }}"
										class="input--cssProp input--cssLength"
										dir="ltr" />
									</td>

									<td><div class="inputGroup inputGroup--joined inputGroup--colorSmall" data-xf-init="color-picker">
										<xf:textbox name="{$formBaseKey}[border-left-color]"
											value="{{ $property.getCssPropertyValue('border-left-color') }}"
											class="input--cssProp"
											dir="ltr" />
										<div class="inputGroup-text"><span class="colorPickerBox js-colorPickerTrigger"></span></div>
									</div></td>
								</xf:if>

								<xf:if is="$property.isValidCssComponent('border_radius')">
									<td><xf:textbox name="{$formBaseKey}[border-bottom-left-radius]"
										value="{{ $property.getCssPropertyValue('border-bottom-left-radius') }}"
										class="input--cssProp input--cssLength"
										dir="ltr" />
									</td>
								</xf:if>
							</tr>
							</table>
						</li>
					<xf:elseif is="$property.isValidCssComponent(['border_color_simple', 'border_width_simple', 'border_radius_simple'])" />
						<li>
							<h4 class="cssPropertyHeader">{{ phrase('border') }}</h4>
							<table class="cssPropertySet">
							<xf:if is="$property.isValidCssComponent('border_width_simple')">
								<tr class="cssPropertySet-headerRow">
									<th>{{ phrase('width') }}</th>
								</tr>
								<tr>
									<td><xf:textbox name="{$formBaseKey}[border-width]"
										value="{{ $property.getCssPropertyValue('border-width') }}"
										class="input--cssProp input--colorWidthMatched"
										dir="ltr" /></td>
								</tr>
							</xf:if>

							<xf:if is="$property.isValidCssComponent('border_color_simple')">
								<tr class="cssPropertySet-headerRow">
									<th>{{ phrase('color') }}</th>
								</tr>
								<tr>
									<td><div class="inputGroup inputGroup--joined inputGroup--color" data-xf-init="color-picker">
										<xf:textbox name="{$formBaseKey}[border-color]" value="{{ $property.getCssPropertyValue('border-color') }}" class="input--cssProp" dir="ltr" />
										<div class="inputGroup-text"><span class="colorPickerBox js-colorPickerTrigger"></span></div>
									</div></td>
								</tr>
							</xf:if>

							<xf:if is="$property.isValidCssComponent('border_radius_simple')">
								<tr class="cssPropertySet-headerRow">
									<th>{{ phrase('radius') }}</th>
								</tr>
								<tr>
									<td><xf:textbox name="{$formBaseKey}[border-radius]"
										value="{{ $property.getCssPropertyValue('border-radius') }}"
										class="input--cssProp input--colorWidthMatched"
										dir="ltr" /></td>
								</tr>
							</xf:if>
							</table>
						</li>
					</xf:if>

					<xf:if is="$property.isValidCssComponent('padding')">
						<li>
							<h4 class="cssPropertyHeader">{{ phrase('padding') }}</h4>
							<table class="cssPropertySet">
							<tr>
								<td class="cssPropertySet-rowLabel">{{ phrase('all') }}</td>

								<td><xf:textbox name="{$formBaseKey}[padding]"
									value="{{ $property.getCssPropertyValue('padding') }}"
									class="input--cssProp input--cssLength"
									dir="ltr" />
								</td>
							</tr>
							<tr>
								<td class="cssPropertySet-rowLabel">{{ phrase('top') }}</td>

								<td><xf:textbox name="{$formBaseKey}[padding-top]"
									value="{{ $property.getCssPropertyValue('padding-top') }}"
									class="input--cssProp input--cssLength"
									dir="ltr" />
								</td>
							</tr>
							<tr>
								<td class="cssPropertySet-rowLabel">{{ phrase('right') }}</td>

								<td><xf:textbox name="{$formBaseKey}[padding-right]"
									value="{{ $property.getCssPropertyValue('padding-right') }}"
									class="input--cssProp input--cssLength"
									dir="ltr" />
								</td>
							</tr>
							<tr>
								<td class="cssPropertySet-rowLabel">{{ phrase('bottom') }}</td>

								<td><xf:textbox name="{$formBaseKey}[padding-bottom]"
									value="{{ $property.getCssPropertyValue('padding-bottom') }}"
									class="input--cssProp input--cssLength"
									dir="ltr" />
								</td>
							</tr>
							<tr>
								<td class="cssPropertySet-rowLabel">{{ phrase('left') }}</td>

								<td><xf:textbox name="{$formBaseKey}[padding-left]"
									value="{{ $property.getCssPropertyValue('padding-left') }}"
									class="input--cssProp input--cssLength"
									dir="ltr" />
								</td>
							</tr>
							</table>
						</li>
					</xf:if>

					<xf:if is="$property.isValidCssComponent('extra')">
						<li class="cssPropertyExtra">
							<h4 class="cssPropertyHeader">{{ phrase('extra') }}</h4>
							<table class="cssPropertySet">
								<tr class="cssPropertySet-headerRow">
									<th>{{ phrase('freeform_css_code') }}</th>
								</tr>
								<tr>
									<td><xf:codeeditor name="{$formBaseKey}[extra]" value="{{ $property.getCssPropertyValue('extra') }}"
										mode="less"
										class="codeEditor--autoSize"
										label="{{ phrase('extra') }}" /></td>
								</tr>
							</table>
						</li>
					</xf:if>
				</ul>
			</div>
		</div>
	</div>
</xf:macro>





<xf:macro name="customization_hint"
	arg-state="!"
	arg-submitName="!"
	arg-property="!"
	arg-checkbox="{{ false }}">

	<xf:if contentcheck="true">
		<span class="formRow-hint--customState cssCustomHighlight cssCustomHighlight--{$state}">
		<xf:contentcheck>
			<xf:if is="$state == 'custom'">

				<span data-xf-init="tooltip" title="{{ phrase('property_customized_in_this_style')|for_attr }}">
					<xf:if is="$checkbox">
						<xf:macro name="revert_code"
							arg-submitName="{$submitName}"
							arg-property="{$property}"
							arg-label="{{ phrase('revert_customized_value') }}"
							arg-container="dl.xf-{$property.property_name} > dd" />
					<xf:else />
						{{ phrase('value_customized') }}
					</xf:if>
				</span>

			<xf:elseif is="$state == 'inherited'" />

				<span  data-xf-init="tooltip" title="{{ phrase('property_customized_in_parent_style')|for_attr }}">
					{{ phrase('value_inherited') }}</span>

			<xf:elseif is="$state == 'added'" />

				<span data-xf-init="tooltip" title="{{ phrase('property_created_in_this_style')|for_attr }}">
					{{ phrase('custom_property') }}</span>

			</xf:if>
		</xf:contentcheck>
		</span>
	</xf:if>
</xf:macro>

<xf:macro name="revert_code"
	arg-submitName="!"
	arg-property="!"
	arg-label="!"
	arg-container="< dl">

	<xf:checkbox standalone="true">
		<xf:option name="{$submitName}_revert[]" value="{$property.property_name}"
			labelclass="formRow-revert"
			class="js-disablerExemption"
			data-xf-init="disabler" data-container="{$container}" data-invert="true"
			label="{$label}" />
	</xf:checkbox>
</xf:macro>]]></template>
  <template type="admin" title="style_property_template_messageUserElements" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:checkboxrow rowclass="{$rowClass}"
	label="{$titleHtml}"
	hint="{$hintHtml}"
	explain="{$property.description}">

	<xf:option name="{$formBaseKey}[register_date]" selected="{$property.property_value.register_date}">
		{{ phrase('registration_date') }}
	</xf:option>
	<xf:option name="{$formBaseKey}[message_count]" selected="{$property.property_value.message_count}">
		{{ phrase('total_messages') }}
	</xf:option>
	<xf:option name="{$formBaseKey}[reaction_score]" selected="{$property.property_value.reaction_score}">
		{{ phrase('reaction_score') }}
	</xf:option>
	<xf:option name="{$formBaseKey}[trophy_points]" selected="{$property.property_value.trophy_points}">
		{{ phrase('trophy_points') }}
	</xf:option>
	<xf:option name="{$formBaseKey}[age]" selected="{$property.property_value.age}">
		{{ phrase('age') }}
	</xf:option>
	<xf:option name="{$formBaseKey}[location]" selected="{$property.property_value.location}">
		{{ phrase('location') }}
	</xf:option>
	<xf:option name="{$formBaseKey}[website]" selected="{$property.property_value.website}">
		{{ phrase('website') }}
	</xf:option>
	<xf:option name="{$formBaseKey}[custom_fields]" selected="{$property.property_value.custom_fields}">
		{{ phrase('custom_fields') }}
	</xf:option>
</xf:checkboxrow>]]></template>
  <template type="admin" title="tag_edit" version_id="2000033" version_string="2.0.0 Beta 3"><![CDATA[<xf:if is="$tag.isInsert()">
	<xf:title>{{ phrase('add_tag') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_tag:') }} {$tag.tag}</xf:title>
</xf:if>

<xf:pageaction if="$tag.isUpdate()">
	<xf:button href="{{ link('tags/delete', $tag) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('tags/save', $tag) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:textboxrow name="tag" value="{$tag.tag}" maxlength="{{ max_length($tag, 'tag') }}"
				label="{{ phrase('tag') }}" />

			<xf:textboxrow name="tag_url" value="{$tag.tag_url}"
				maxlength="{{ max_length($tag, 'tag_url') }}"
				label="{{ phrase('url_version') }}"
				explain="{{ phrase('this_uniquely_identify_this_tag_in_url') }}"
				dir="ltr" />

			<xf:checkboxrow>
				<xf:option name="permanent" selected="{$tag.permanent}"
					label="{{ phrase('permanent') }}"
					hint="{{ phrase('making_tag_permanent_prevents_it_from_being_removed') }}" />
			</xf:checkboxrow>
		</div>

		<xf:submitrow sticky="true" icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="tag_list" version_id="2000170" version_string="2.0.1"><![CDATA[<xf:title>{{ phrase('tags') }}</xf:title>

<xf:pageaction>
	<xf:button href="{{ link('tags/add') }}" icon="add">{{ phrase('add_tag') }}</xf:button>
</xf:pageaction>

<xf:form action="{{ link('tags') }}" class="block">
	<div class="block-outer">
		<span class="filterBlock">
			<xf:textbox name="containing" value="{$filters.containing}" placeholder="{{ phrase('tag_contains...') }}"
				class="input--inline filterBlock-input" />
			<span>
				<span class="filterBlock-label">{{ phrase('ordered_by:') }}</span>
				<xf:select name="order" value="{{ $filters.order ? $filters.order : 'tag' }}" class="input--inline filterBlock-input">
					<xf:option value="tag">{{ phrase('tag') }}</xf:option>
					<xf:option value="use_count">{{ phrase('total') }}</xf:option>
					<xf:option value="last_use_date">{{ phrase('last_used') }}</xf:option>
				</xf:select>
			</span>
			<xf:button type="submit">{{ phrase('go') }}</xf:button>
		</span>
	</div>
	<div class="block-container">
		<xf:if is="$tags is not empty">
			<div class="block-body">
				<xf:datalist data-xf-init="responsive-data-list">
					<xf:datarow rowtype="header">
						<xf:cell>{{ phrase('tag') }}</xf:cell>
						<xf:cell>{{ phrase('total') }}</xf:cell>
						<xf:cell>{{ phrase('last_used') }}</xf:cell>
						<xf:cell class="dataList-cell--min">&nbsp;</xf:cell>
						<xf:cell class="dataList-cell--min">&nbsp;</xf:cell>
						<xf:cell class="dataList-cell--min">&nbsp;</xf:cell>
					</xf:datarow>
					<xf:foreach loop="$tags" value="$tag">
						<xf:datarow>
							<xf:cell href="{{ link('tags/edit', $tag) }}">{$tag.tag}</xf:cell>
							<xf:cell href="{{ link('tags/edit', $tag) }}">{$tag.use_count|number}</xf:cell>
							<xf:cell href="{{ link('tags/edit', $tag) }}">
								<xf:if is="$tag.last_use_date">
									<xf:date time="{$tag.last_use_date}" />
									<xf:else />
									&nbsp;
								</xf:if>
							</xf:cell>
							<xf:action href="{{ link_type('public', 'tags', $tag) }}">{{ phrase('view') }}</xf:action>
							<xf:action href="{{ link('tags/merge', $tag) }}" overlay="true">{{ phrase('merge') }}</xf:action>
							<xf:delete href="{{ link('tags/delete', $tag) }}" />
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($tags, $total) }}</span>
			</div>
		<xf:else />
			<div class="block-body block-row">{{ phrase('no_results_found') }}</div>
		</xf:if>
	</div>

	<xf:pagenav page="{$page}" perpage="{$perPage}" total="{$total}"
		link="tags" params="{$filters}"
		wrapperclass="block-outer block-outer--after" />
</xf:form>]]></template>
  <template type="admin" title="tag_merge" version_id="2001070" version_string="2.0.10"><![CDATA[<xf:title>{{ phrase('merge_tags') }}</xf:title>

<xf:form action="{{ link('tags/merge', $tag) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:formrow explain="{{ phrase('this_tag_will_be_deleted') }}"
				label="{{ phrase('source_tag') }}">
				{$tag.tag}
			</xf:formrow>

			<xf:textboxrow name="target"
				ac="single"
				data-acurl="{{ link_type('public', 'misc/tag-auto-complete') }}"
				label="{{ phrase('target_tag') }}"
				explain="{{ phrase('all_content_tagged_with_x_will_now_be_tagged_with_this_tag', {'tag': $tag.tag}) }}" />
		</div>
		<xf:submitrow submit="{{ phrase('merge') }}" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="template_auto_merge" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link('templates/auto-merge') }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('this_feature_attempt_automatically_merge_custom_template_changes') }}
				<strong>{{ phrase('if_conflict_discovered_while_merging_no_automatic_merging') }}</strong>
			</xf:inforow>
		</div>
		<xf:submitrow submit="{{ phrase('merge') }}" rowtype="simple" />
	</div>
	<xf:redirect />
</xf:form>]]></template>
  <template type="admin" title="template_compare" version_id="2000033" version_string="2.0.0 Beta 3"><![CDATA[<xf:title>{{ phrase('custom_changes:') }} {$template.title}</xf:title>

<xf:css src="public:diff.less" />

<div class="block">
	<div class="block-container">
		<div class="block-body block-row block-body--contained" dir="ltr">
			<ol class="diffList diffList--code">
				<xf:foreach loop="$diffs" value="$diff">
					<xf:set var="$diffHtml">{{ $diff.1|join('<br />') }}</xf:set>
					<li class="diffList-line diffList-line--{$diff.0}">{{ trim($diffHtml) !== '' ? $diffHtml : '&nbsp;' }}</li>
				</xf:foreach>
			</ol>
		</div>
	</div>
</div>]]></template>
  <template type="admin" title="template_delete" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link('templates/delete', $template) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				<xf:if is="$template.style_id">
					{{ phrase('please_confirm_that_you_want_to_revert_the_following:') }}
				<xf:else />
					{{ phrase('please_confirm_that_you_want_to_delete_following:') }}
				</xf:if>
				<strong>
					{{ $template.style_id ? '<em class="u-dimmed">' . $template.Style.title . ':</em> ' : '' }}
					<a href="{{ link('templates/edit', $template) }}">{$template.title}</a>
				</strong>
			</xf:inforow>
		</div>
		<xf:submitrow submit="{{ $template.style_id ? phrase('revert') : phrase('button.delete') }}"
			rowtype="simple" icon="{{ !$template.style_id ? 'delete' : '' }}" />
	</div>
	<xf:redirect />
</xf:form>]]></template>
  <template type="admin" title="template_edit" version_id="2000170" version_string="2.0.1"><![CDATA[<xf:if is="$template.isInsert()">
	<xf:title>{{ phrase('add_template') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_template:') }} {$template.title}</xf:title>
</xf:if>

<xf:page option="breadcrumbPath" value="styles" />
<xf:breadcrumb href="{{ link('styles/templates', $style, {'type': $template.type}) }}">{$style.title} - {{ phrase('templates') }}</xf:breadcrumb>

<xf:pageaction if="$template.isUpdate() AND $template.style_id == $style.style_id">
	<xf:if is="$style.style_id">
		<xf:button href="{{ link('templates/compare', $template) }}" data-xf-click="overlay" data-cache="false">{{ phrase('view_custom_changes') }}</xf:button>
		<xf:button href="{{ link('templates/delete', $template, {'_xfRedirect': $redirect}) }}" overlay="true">{{ phrase('revert') }}</xf:button>
	<xf:else />
		<xf:button href="{{ link('templates/delete', $template, {'_xfRedirect': $redirect}) }}" icon="delete" overlay="true" />
	</xf:if>
</xf:pageaction>

<xf:form action="{{ link('templates/save', $template) }}" ajax="true" class="block">

	<xf:hiddenval name="style_id">{$style.style_id}</xf:hiddenval>
	<xf:hiddenval name="type">{$template.type}</xf:hiddenval>

	<div class="block-outer">
		<div class="block-outer-main">
			<xf:macro template="style_macros" name="style_change_menu"
				arg-styleTree="{$styleTree}"
				arg-currentStyle="{$style}"
				arg-route="{{ $template.isInsert() ? 'styles/add-template' : 'styles/edit-template' }}"
				arg-routeParams="{{ {'template_id': {$template.template_id}, 'type': {$template.type}} }}" />
		</div>
		<div class="block-outer-opposite"><span class="block-outer-hint">{{ phrase('template_type:') }} {$types.{$template.type}}</span></div>
	</div>

	<div class="block-container">

		<div class="block-body" data-xf-init="code-editor-switcher-container" data-template-suffix-mode="1">

			<xf:textboxrow name="title" value="{$template.title}" class="js-codeEditorSwitcher formRow--noLabel"
				rowtype="fullWidth"
				maxlength="{{ max_length($template, 'title') }}"
				autofocus="autofocus"
				label="{{ phrase('template_name') }}"
				hint="{{ phrase('must_be_unique') }}"
				dir="ltr" />

			<xf:codeeditorrow name="template" value="{$template.template}"
				mode="html"
				rowtype="fullWidth noLabel"
				rowclass="js-codeEditorContainer"
				data-submit-selector=".js-submitButton"
				label="{{ phrase('template') }}"
				explain="{{ phrase('you_may_use_xenforo_template_syntax_here') }}">
				<xf:finalhtml>
					<xf:if is="$hasHistory">
						<div class="js-historyTarget toggleTarget" data-href="trigger-href"></div>
					</xf:if>
				</xf:finalhtml>
			</xf:codeeditorrow>

			<xf:if is="!$style.style_id">
				<xf:macro template="addon_macros" name="addon_edit" arg-addOnId="{$template.addon_id}" />
			<xf:else />
				<xf:hiddenval name="addon_id">{$template.addon_id}</xf:hiddenval>
			</xf:if>
		</div>

		<xf:submitrow icon="save" class="js-submitButton"
			data-ajax-redirect="{{ ($template.isInsert() || $template.style_id != $style.style_id) ? '1' : '0' }}">
			<xf:html>
				<xf:button type="submit" name="exit" icon="save">{{ phrase('save_and_exit') }}</xf:button>
				<xf:if is="$hasHistory">
					<xf:button href="{{ link('templates/history', $template) }}" class="blockLink" icon="history"
						data-xf-click="toggle"
						data-target=".js-historyTarget">{{ phrase('view_history') }}</xf:button>
				</xf:if>
			</xf:html>
		</xf:submitrow>
	</div>
	<xf:redirect />
</xf:form>]]></template>
  <template type="admin" title="template_history" version_id="2000170" version_string="2.0.1"><![CDATA[<xf:title>{{ phrase('template_history') }}</xf:title>

<xf:form method="post" action="{{ link('templates/history', $template) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:datalist data-xf-init="responsive-data-list">
				<xf:datarow rowtype="header">
					<xf:cell class="dataList-cell--min">{{ phrase('old') }}</xf:cell>
					<xf:cell class="dataList-cell--min">{{ phrase('new') }}</xf:cell>
					<xf:cell>{{ phrase('edit_date') }}</xf:cell>
					<xf:cell />
				</xf:datarow>
				<xf:datarow>
					<xf:cell />
					<xf:cell><input type="radio" name="new" value="0" {{ $newId == 0 ? 'checked="checked"' : '' }} /></xf:cell>
					<xf:cell>{{ phrase('current_version') }}</xf:cell>
					<xf:cell />
				</xf:datarow>
				<xf:foreach loop="$list" value="$history">
					<xf:datarow>
						<xf:cell><input type="radio" name="old" value="{$history.template_history_id}" {{ $oldId == $history.template_history_id ? 'checked="checked"' : '' }} /></xf:cell>
						<xf:cell><input type="radio" name="new" value="{$history.template_history_id}" {{ $newId == $history.template_history_id ? 'checked="checked"' : '' }} /></xf:cell>
						<xf:cell><xf:date time="{$history.edit_date}" /></xf:cell>
						<xf:action href="{{ link('templates/history', $template, {'view': $history.template_history_id}) }}" overlay="true">{{ phrase('view_pre_edit_version') }}</xf:action>
					</xf:datarow>
				</xf:foreach>
			</xf:datalist>
		</div>
		<div class="block-footer">
			<span class="block-footer-controls"><xf:button type="submit">{{ phrase('compare') }}</xf:button></span>
		</div>
	</div>
</xf:form>]]></template>
  <template type="admin" title="template_history_compare" version_id="2000033" version_string="2.0.0 Beta 3"><![CDATA[<xf:title>{{ phrase('version_comparison') }}</xf:title>

<xf:css src="public:diff.less" />

<div class="block">
	<div class="block-container">
		<div class="block-body block-row block-body--contained" dir="ltr">
			<ol class="diffList diffList--code">
				<xf:foreach loop="$diffs" value="$diff">
					<xf:set var="$diffHtml">{{ $diff.1|join('<br />') }}</xf:set>
					<li class="diffList-line diffList-line--{$diff.0}">{{ trim($diffHtml) !== '' ? $diffHtml : '&nbsp;' }}</li>
				</xf:foreach>
			</ol>
		</div>
	</div>
</div>]]></template>
  <template type="admin" title="template_history_view" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('template_history') }}</xf:title>

<div class="block">
	<div class="block-container">
		<div class="block-body block-body--contained block-row" dir="ltr">
			<pre>{$history.template}</pre>
		</div>
	</div>
</div>]]></template>
  <template type="admin" title="template_list" version_id="2000036" version_string="2.0.0 Beta 6"><![CDATA[<xf:title>{$style.title} - {{ phrase('templates') }}</xf:title>

<xf:page option="breadcrumbPath" value="styles" />
<xf:page option="section" value="templates" />

<xf:pageaction>
	<xf:button href="{{ link('templates/add', null, {'style_id': $style.style_id, 'type': $type}) }}" icon="add"
		data-xf-click="prefix-grabber"
		data-filter-element="[data-xf-init~=filter]">
		{{ phrase('add_template') }}
	</xf:button>
</xf:pageaction>

<div class="block">
	<div class="block-outer">
		<div class="block-outer-main">
			<xf:macro template="style_macros" name="style_change_menu"
				arg-styleTree="{$styleTree}"
				arg-currentStyle="{$style}"
				arg-route="styles/templates"
				arg-routeParams="{$linkParams}" />

			<xf:macro template="addon_macros" name="addon_change_menu"
				arg-addOns="{$addOns}"
				arg-currentAddOn="{$currentAddOn}"
				arg-route="styles/templates"
				arg-routeData="{$style}"
				arg-routeParams="{$linkParams}" />
		</div>
		<xf:macro template="filter_macros" name="quick_filter"
			arg-key="templates"
			arg-ajax="{{ link('styles/templates', $style, $linkParams) }}"
			arg-class="block-outer-opposite" />
	</div>
	<div class="block-container">
		<h2 class="block-tabHeader tabs hScroller" data-xf-init="h-scroller">
			<span class="hScroller-scroll">
			<xf:foreach loop="$types" key="$typeId" value="$typeName">
				<a href="{{ link('styles/templates', $style, {'type': $typeId} + $linkParams) }}"
					class="tabs-tab {{ $typeId == $type ? 'is-active' : '' }}">{$typeName}</a>
			</xf:foreach>
			</span>
		</h2>

		<xf:macro name="search_menu"
			arg-style="{$style}"
			arg-conditions="{{ {'type': $type, 'addon_id': $currentAddOn ? $currentAddOn.addon_id : '_any', 'state': ['default', 'inherited', 'custom']} }}" />

		<div class="block-body">
			<xf:datalist>
				<xf:macro name="template_list" arg-templates="{$templates}" arg-style="{$style}" />
				<xf:if is="$filter AND $total > $perPage">
					<xf:datarow rowclass="dataList-row--note dataList-row--noHover js-filterForceShow">
						<xf:cell colspan="2">{{ phrase('more_records_matching_filter_more_specific') }}</xf:cell>
					</xf:datarow>
				</xf:if>
			</xf:datalist>
		</div>

		<div class="block-footer">
			<span class="block-footer-counter">{{ display_totals($templates, $total) }}</span>
		</div>
	</div>

	<xf:pagenav
		page="{$page}" perpage="{$perPage}" total="{$total}"
		link="styles/templates"
		params="{$linkParams}"
		data="{$style}"
		wrapperclass="js-filterHide block-outer block-outer--after" />
</div>

<xf:macro name="template_list" arg-templates="!" arg-style="!">
	<xf:foreach loop="$templates" value="$template">
		<xf:datarow
			rowclass="{{ ($template.style_id == 0 ? '' : ($template.style_id == $style.style_id ? 'dataList-row--custom' : 'dataList-row--parentCustom')) }}">
			<xf:main href="{{ link('templates/edit', $template, {'style_id': $style.style_id}) }}"
				label="{$template.title}"
				hint="{{ ($template.addon_id && $template.addon_id != 'XF' && $template.AddOn) ? $template.AddOn.title : '' }}"
				colspan="{{ $template.style_id == $style.style_id ? 1 : 2 }}"
				hash="{$template.template_id}"
				dir="auto" />
			<xf:if is="$template.style_id == $style.style_id">
				<xf:delete href="{{ link('templates/delete', $template) }}"
					tooltip="{{ $template.style_id ? phrase('revert') : phrase('delete') }} " />
			</xf:if>
		</xf:datarow>
	</xf:foreach>
</xf:macro>

<xf:macro name="search_menu" arg-style="!" arg-conditions="!">
	<div class="block-filterBar">
		<div class="filterBar">
			<a class="filterBar-menuTrigger" data-xf-click="menu" role="button" tabindex="0" aria-expanded="false" aria-haspopup="true">{{ phrase('refine_search') }}</a>
			<div class="menu menu--wide" data-menu="menu" aria-hidden="true"
				data-href="{{ link('templates/refine-search', null, {'style_id': $style.style_id} + $conditions) }}"
				data-load-target=".js-filterMenuBody">
				<div class="menu-content">
					<h4 class="menu-header">{{ phrase('refine_search') }}</h4>
					<div class="js-filterMenuBody">
						<div class="menu-row">{{ phrase('loading...') }}</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</xf:macro>]]></template>
  <template type="admin" title="template_merge_outdated" version_id="2000033" version_string="2.0.0 Beta 3"><![CDATA[<xf:title>{{ phrase('merge_template_changes:') }} {$template.title}</xf:title>

<xf:css src="public:diff.less" />

<xf:form action="{{ link('templates/merge-outdated', $template) }}" id="js-mergeForm" class="block">
	<div class="block-container">
		<div class="block-body">
			<div class="block-row block-row--separated">
				<div class="diffListContainer" dir="ltr">
					<ol class="diffList diffList--code diffList--wrapped diffList--editable">
					<xf:foreach loop="$diffs" value="$diff">
						<xf:set var="$diffHtml" value="{$diff.1|escape|join('<br />')}" />
						<xf:if is="$diff.0 == 'c'">
							<li class="diffList-conflict js-conflictContainer">
								<xf:set var="$parentHtml" value="{$diff.3|escape|join('<br />')}" />
								<div class="diffList-line js-diffParent"><xf:trim>
									<xf:if is="$diff.3">
										<span>{{ trim($parentHtml) !== '' ? $parentHtml|raw : '&nbsp;' }}</span><xf:hiddenval name="" value="{$diff.3|join("
")}" />
									<xf:else />
										<i>{{ phrase('deleted') }}</i>
									</xf:if>
								</xf:trim></div>
								<div class="diffList-resolve">

									<xf:button class="js-resolveButton" data-target=".js-diffParent">
										&uarr; {{ phrase('resolve_using_parent_version') }}
									</xf:button>
									<xf:button class="js-resolveButton" data-target=".js-diffParent, .js-diffCustom">
										{{ phrase('resolve_using_both') }}
									</xf:button>
									<xf:button class="js-resolveButton" data-target=".js-diffCustom">
										{{ phrase('resolve_using_custom_version') }} &darr;
									</xf:button>

									<xf:hiddenval name="merged[]" class="js-mergedInput" value="{{ $diff.3|join("
") }}" />
								</div>
								<div class="diffList-line js-diffCustom"><xf:trim>
									<xf:if is="$diff.1">
										<span>{{ trim($diffHtml) !== '' ? $diffHtml|raw : '&nbsp;' }}</span><xf:hiddenval name="" value="{{ $diff.1|join("
") }}" />
									<xf:else />
										<i>{{ phrase('deleted') }}</i>
									</xf:if>
								</xf:trim></div>
							</li>
						<xf:else />
							<li class="diffList-line diffList-line--{$diff.0}"><xf:trim>
								<xf:if is="$diff.1">
									<span>{{ trim($diffHtml) !== '' ? $diffHtml|raw : '&nbsp;' }}</span><xf:hiddenval name="merged[]" value="{{ $diff.1|join("
") }}" />
								<xf:else />
									<i>{{ phrase('deleted') }}</i>
								</xf:if>
							</xf:trim></li>
						</xf:if>
					</xf:foreach>
					</ol>
				</div>
			</div>
			<div class="block-row block-row--separated">
				{{ phrase('you_may_click_on_update_to_edit_it') }}
			</div>
		</div>
		<xf:submitrow submit="{{ phrase('merge') }}" rowtype="simple" icon="save" />
	</div>
</xf:form>

<xf:js>
	//<script>
		$(function()
		{
			var $form = $('#js-mergeForm');
			var $buttons = $form.find('.js-resolveButton');
			if ($buttons.length)
			{
				$form.find(':submit').addClass('is-disabled').prop('disabled', true);
				$buttons.click(function()
				{
					var $this = $(this);
					var $container = $this.closest('.js-conflictContainer');
					var $hidden = $container.find('.js-mergedInput');
					var $target = $container.find($this.data('target'));
					var $firstTarget = $target.first();

					var $selectedInput = $target.find('input[type=hidden]');

					if (!$selectedInput.length)
					{
						// deleted, so need to rename the input so it doesn't get sent through
						$hidden.attr('name', '');
					}
					else if ($selectedInput.length > 1)
					{
						var val = [];
						$selectedInput.each(function() {
							val.push($(this).val());
						});
						$hidden.val(val.join("\n"));
					}
					else
					{
						$hidden.val($selectedInput.val());
					}

					$container.children().hide();
					$container.addClass('is-resolved');
					$firstTarget.addClass('is-chosen').show();
					if ($hidden.length)
					{
						$firstTarget.html($('<span />').text($hidden.val()).append('<br />'));
					}

					if (!$buttons.filter(':visible').length)
					{
						$form.find(':submit').removeClass('is-disabled').prop('disabled', false);
					}

					if ($target.length > 1)
					{
						$firstTarget.click();
					}
				});
			}

			$form.on('click', '.diffList-line--u, .diffList-conflict.is-resolved .is-chosen', function() {
				var $this = $(this),
					$html = $this.find('span'),
					$textarea = $this.find('textarea'),
					$input = $this.find('input[type=hidden]');

				if (!$html.length)
				{
					return; // nothing to edit
				}

				if (!$input.length || !$input.attr('name'))
				{
					$input = $this.closest('.js-conflictContainer').find('.js-mergedInput');
				}
				if (!$input)
				{
					return;
				}

				$html.hide();
				if (!$textarea.length)
				{
					$textarea = $('<textarea class="input" rows="1" />').val($input.val());
					$textarea.insertAfter($html);
					XF.Element.applyHandler($textarea, 'textarea-handler');

					$textarea.on('blur', function() {
						$input.val($textarea.val());
						$html.text($textarea.val()).append('<br>');
						$html.show();
						$textarea.hide();
					});
				}

				$textarea.show().focus();
			});
		});
	//</script>
</xf:js>]]></template>
  <template type="admin" title="template_modification.less" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[.templateModContents
{
	border: 1px solid #ccc;
	border-radius: 5px;
	background: #f2f2f2;
	max-width: 100%;
	max-height: 250px;
	min-height: 15px;
	overflow: auto;
	white-space: pre;
	word-wrap: normal;
	font-family: @xf-fontFamilyCode;
	direction: ltr;
	margin: 0;
	padding: 4px;
}

.templateModApply
{
	&.is-active
	{
		font-weight: @xf-fontWeightHeavy;
		font-size: 120%;
	}

	&.templateModApply--ok { color: green; }
	&.templateModApply--notFound { color: grey;}
	&.templateModApply--error { color: red; }
}]]></template>
  <template type="admin" title="template_modification_edit" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:if is="$modification.isInsert()">
	<xf:title>{{ phrase('add_template_modification') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_template_modification:') }} {$modification.template}</xf:title>
</xf:if>

<xf:css src="template_modification.less" />

<xf:if is="!$modification.canEdit()">
	<div class="blockMessage blockMessage--important blockMessage--iconic">
		{{ phrase('only_limited_fields_in_item_may_be_edited') }}
	</div>
</xf:if>

<xf:pageaction if="$modification.isUpdate() && $modification.canEdit()">
	<xf:button href="{{ link('template-modifications/delete', $modification) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('template-modifications/save', $modification) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">

			<xf:formrow label="{{ phrase('template_modification_type') }}">
				{$types.{$modification.type}}
				<xf:hiddenval name="type">{$modification.type}</xf:hiddenval>
			</xf:formrow>

			<xf:textboxrow name="template" value="{$modification.template}" id="js-templateModificationTemplate"
				maxlength="{{ max_length($modification, 'template') }}"
				readonly="{{ !$modification.canEdit() }}"
				ac="single"
				data-acurl="{{ link('template-modifications/auto-complete', null, {'type': $modification.type}) }}"
				label="{{ phrase('template') }}"
				dir="ltr" />

			<xf:textboxrow name="modification_key" value="{$modification.modification_key}"
				maxlength="{{ max_length($modification, 'modification_key') }}"
				readonly="{{ !$modification.canEdit() }}"
				label="{{ phrase('modification_key') }}"
				explain="{{ phrase('this_is_used_to_uniquely_identify_modification_across_add_on_upgrades') }}"
				dir="ltr" />

			<xf:textboxrow name="description" value="{$modification.description}" readonly="{{ !$modification.canEdit() }}"
				label="{{ phrase('description') }}" />

			<hr class="formRowSep" />

			<div class="js-templateContentsContainer u-hidden u-hidden--transition">
				<xf:formrow rowtype="input"
					label="{{ phrase('template_contents') }}">

					<pre class="templateModContents"
						id="js-templateContents"
						data-contents-url="{{ link('template-modifications/contents', '', {'type': $modification.type}) }}"
					><!--
						--><i>{{ phrase('requested_template_not_found') }}</i><!--
					--></pre>
				</xf:formrow>
			</div>

			<xf:radiorow name="action" value="{$modification.action}" readonly="{{ !$modification.canEdit() }}"
				label="{{ phrase('search_type') }}">

				<xf:option value="str_replace"
					label="{{ phrase('simple_replacement') }}" />
				<xf:option value="preg_replace"
					label="{{ phrase('regular_expression') }}"
					hint="{{ phrase('search_text_must_contain_delimiters_modifiers_for_regex') }}" />
				<xf:option value="callback"
					label="{{ phrase('php_callback') }}"
					hint="{{ phrase('search_text_must_be_full_regular_expression') }}" />
			</xf:radiorow>

			<xf:codeeditorrow name="find" value="{$modification.find}" mode="html"
				readonly="{{ !$modification.canEdit() }}"
				class="codeEditor--short"
				label="{{ phrase('find') }}" />

			<xf:codeeditorrow name="replace" value="{$modification.replace}" mode="html"
				readonly="{{ !$modification.canEdit() }}"
				class="codeEditor--short"
				label="{{ phrase('replace') }}"
				explain="{{ phrase('template_modification_replace_description') }}" />

			<hr class="formRowSep" />

			<xf:numberboxrow name="execution_order" value="{$modification.execution_order}" min="0"
				readonly="{{ !$modification.canEdit() }}"
				label="{{ phrase('execution_order') }}" />

			<xf:checkboxrow>
				<xf:option name="enabled" value="1" selected="$modification.enabled"
					hint="{{ ($xf.development AND $modification.addon_id) ? phrase('field_value_maintained_addon_upgrade_explain') : '' }}">
					{{ phrase('automatically_apply_template_modification') }}
				</xf:option>
			</xf:checkboxrow>

			<xf:macro template="addon_macros" name="addon_edit" arg-addOnId="{$modification.addon_id}" />
		</div>
		<xf:submitrow sticky="true" icon="save"><xf:html>
			<xf:button type="submit" name="test" value="1">{{ phrase('test') }}</xf:button>
		</xf:html></xf:submitrow>
	</div>

</xf:form>

<xf:js>
	$(function() {
		var $templateInput = $('#js-templateModificationTemplate'),
				$contents = $('#js-templateContents'),
				$container = $contents.closest('.js-templateContentsContainer'),
				invalidContents = $contents.html();

		var updateContents = function(templateName)
		{
			if (templateName === '')
			{
				$container.removeClassTransitioned('is-active');
				return;
			}

			XF.ajax(
					'get',
					$contents.data('contents-url'),
					{ template: templateName },
					function(data)
					{
						if (data.template !== false)
						{
							$contents.text(data.template);
						}
						else
						{
							$contents.html(invalidContents);
						}

						$container.addClassTransitioned('is-active', function()
						{
							XF.layoutChange();
						});
					}
			);
		};

		if ($templateInput.val())
		{
			updateContents($templateInput.val());
		}

		var timer;

		$templateInput.on('change AutoComplete', function() {
			if (timer)
			{
				clearTimeout(timer);
			}
			timer = setTimeout(function() {
				updateContents($templateInput.val());
			}, 200);
		});
	});
</xf:js>]]></template>
  <template type="admin" title="template_modification_list" version_id="2000070" version_string="2.0.0"><![CDATA[<xf:title>{{ phrase('template_modifications') }}</xf:title>

<xf:page option="skipBreadcrumb" value="templateModifications" />

<xf:pageaction if="$canCreateModification">
	<xf:button href="{{ link('template-modifications/add', '', {'type': $type}) }}" icon="add">
		{{ phrase('add_template_modification') }}
	</xf:button>
</xf:pageaction>

<xf:css src="template_modification.less" />

<xf:form action="{{ link('template-modifications/toggle') }}" class="block" ajax="true">
	<div class="block-outer">
		<xf:macro template="filter_macros" name="quick_filter" arg-key="template-modifications" arg-class="block-outer-opposite" />
	</div>
	<div class="block-container">
		<h2 class="block-tabHeader tabs hScroller" data-xf-init="h-scroller">
			<span class="hScroller-scroll">
			<xf:foreach loop="$types" key="$typeId" value="$typeName">
				<a href="{{ link('template-modifications', '', {'type': $typeId}) }}"
					class="tabs-tab {{ $typeId == $type ? 'is-active' : '' }}">{$typeName}</a>
			</xf:foreach>
			</span>
		</h2>
		<xf:if is="$groupedModifications">
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$groupedModifications" key="$addOnId" value="$modifications">
						<tbody class="dataList-rowGroup">
							<xf:if is="$addOnId">
								<xf:datarow rowtype="subsection" rowclass="dataList-row--noHover">
									<xf:cell colspan="4">{$addOns.{$addOnId}.title}</xf:cell>
								</xf:datarow>
								<xf:else />
								<xf:datarow rowtype="subsection" rowclass="dataList-row--noHover">
									<xf:cell colspan="4">{{ phrase('custom_modifications') }}</xf:cell>
								</xf:datarow>
							</xf:if>
							<xf:foreach loop="$modifications" value="$modification">
								<xf:datarow
									label="{$modification.template}"
									hint="{$modification.description}"
									delete="{{ $modification.canEdit() ? link('template-modifications/delete', $modification) : null }}"
									href="{{ link('template-modifications/edit', $modification) }}">

									<xf:toggle name="enabled[{$modification.modification_id}]"
										selected="$modification.enabled"
										class="dataList-cell--separated" submit="true" />

									<xf:action href="{{ link('template-modifications/log', $modification) }}" overlay="true">
										<span class="templateModApply templateModApply--ok{{ $modification.log_summary.ok ? ' is-active' : '' }}">{$modification.log_summary.ok}</span>
										/ <span class="templateModApply templateModApply--notFound{{ $modification.log_summary.not_found ? ' is-active' : '' }}">{$modification.log_summary.not_found}</span>
										/ <span class="templateModApply templateModApply--error{{ $modification.log_summary.error ? ' is-active' : '' }}">{$modification.log_summary.error}</span>
									</xf:action>
								</xf:datarow>
							</xf:foreach>
						</tbody>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($modificationCount) }}</span>
			</div>
		<xf:else />
			<div class="block-body block-row">{{ phrase('no_template_modifications_have_been_defined_yet') }}</div>
		</xf:if>
	</div>
</xf:form>]]></template>
  <template type="admin" title="template_modification_log" version_id="2001070" version_string="2.0.10"><![CDATA[<xf:title>{{ phrase('template_modification_log') }}</xf:title>

<xf:if is="$modification.Logs is not empty">
	<div class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:datalist data-xf-init="responsive-data-list">
					<xf:datarow rowtype="header">
						<xf:cell>{{ phrase('template') }}</xf:cell>
						<xf:cell>{{ phrase('style') }}</xf:cell>
						<xf:cell>{{ phrase('status') }}</xf:cell>
						<xf:cell>{{ phrase('apply_count') }}</xf:cell>
					</xf:datarow>
					<xf:foreach loop="$modification.Logs" value="$log">
						<xf:datarow>
							<xf:cell>{$log.Template.title}</xf:cell>
							<xf:cell><xf:if is="$log.Template.style_id">{$log.Template.Style.title}<xf:else />{{ phrase('master_style') }}</xf:if></xf:cell>
							<xf:if is="$log.status == 'ok'">
								<xf:cell>OK</xf:cell>
								<xf:cell>{$log.apply_count}</xf:cell>
							<xf:else />
								<xf:cell>
									<xf:if is="$log.status == 'error_compile'">{{ phrase('compiler_error_may_be_from_another_template_modification') }}
										<xf:elseif is="$log.status == 'error_invalid_regex'" />{{ phrase('invalid_regular_expression') }}
										<xf:elseif is="$log.status == 'error_unknown_action'" />{{ phrase('unknown_action') }}
										<xf:elseif is="$log.status == 'error_invalid_callback'" />{{ phrase('invalid_callback') }}
										<xf:elseif is="$log.status == 'error_callback_failed'" />{{ phrase('callback_failed') }}
									</xf:if>
								</xf:cell>
								<xf:cell>-</xf:cell>
							</xf:if>
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
		</div>
	</div>
<xf:else />
	<div class="blockMessage">{{ phrase('this_template_modification_does_not_match_any_templates') }}</div>
</xf:if>]]></template>
  <template type="admin" title="template_modification_test" version_id="2000033" version_string="2.0.0 Beta 3"><![CDATA[<xf:title>{{ phrase('template_modification_test') }}</xf:title>

<xf:css src="public:diff.less" />

<div class="block">
	<div class="block-container">
		<div class="block-body block-row block-body--contained" dir="ltr">
			<ol class="diffList diffList--code">
				<xf:foreach loop="$diffs" value="$diff">
					<xf:set var="$diffHtml">{{ $diff.1|join('<br />') }}</xf:set>
					<li class="diffList-line diffList-line--{$diff.0}">{{ trim($diffHtml) !== '' ? $diffHtml : '&nbsp;' }}</li>
				</xf:foreach>
			</ol>
		</div>
	</div>
</div>]]></template>
  <template type="admin" title="template_outdated" version_id="2010131" version_string="2.1.1 Beta 1"><![CDATA[<xf:title>{{ phrase('outdated_templates') }}</xf:title>
<xf:description>{{ phrase('outdated_templates_desc') }}</xf:description>

<xf:if is="$autoMerged">
	<div class="blockMessage blockMessage--success blockMessage--iconic">
		{{ phrase('all_automatically_mergeable_templates_have_been_processed') }}
	</div>
</xf:if>

<xf:pageaction>
	<xf:button href="{{ link('styles/customized-components') }}">{{ phrase('customized_components') }}</xf:button>
	<xf:if is="$total">
		<xf:button href="{{ link('templates/auto-merge') }}" overlay="true">{{ phrase('automatically_merge') }}</xf:button>
	</xf:if>
</xf:pageaction>

<xf:if is="$total">
	<div class="block">
		<div class="block-outer">
			<xf:macro template="filter_macros" name="quick_filter" arg-key="outdated-templates" arg-class="block-outer-opposite" />
		</div>
		<div class="block-container">
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$styleTree.getFlattened(0)" value="$treeEntry">
						<xf:set var="$style" value="{$treeEntry.record}" />
						<xf:set var="$outdatedForStyle" value="{$outdatedGrouped.{$style.style_id}}" />
						<xf:if is="$outdatedForStyle is not empty">
							<xf:datarow rowtype="subsection" rowclass="dataList-row--noHover">
								<xf:cell colspan="2">{$style.title}</xf:cell>
							</xf:datarow>
							<xf:foreach loop="$outdatedForStyle" value="$outdated">
								<xf:datarow>
									<xf:cell href="{{ link('templates/edit', $outdated.template) }}" class="dataList-cell--main">
										<div class="dataList-mainRow" dir="auto">{$outdated.template.title}</div>
										<div class="dataList-subRow">
											<ul class="listInline listInline--bullet">
												<xf:if is="$outdated.outdated_by_date">
													<li>{{ phrase('last_edited:') }} <xf:date time="{$outdated.template.last_edit_date}" /></li>
													<li>{{ phrase('parent_last_edited:') }} <xf:date time="{$outdated.parent_last_edit_date}" /></li>
												<xf:elseif is="$outdated.outdated_by_version" />
													<li>{{ phrase('custom_version:') }} {$outdated.template.version_string}</li>
													<li>{{ phrase('parent_version:') }} {$outdated.parent_version_string}</li>
												</xf:if>
											</ul>
										</div>
									</xf:cell>
									<xf:action href="{{ link('templates/merge-outdated', $outdated.template) }}">{{ phrase('merge') }}</xf:action>
								</xf:datarow>
							</xf:foreach>
						</xf:if>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($total) }}</span>
			</div>
		</div>
	</div>
<xf:else />
	<div class="blockMessage">{{ phrase('there_are_no_outdated_templates') }}</div>
</xf:if>]]></template>
  <template type="admin" title="template_refine_search" version_id="2000033" version_string="2.0.0 Beta 3"><![CDATA[<xf:form action="{{ link('templates/search') }}">
	<div class="menu-row">
		{{ phrase('style:') }}
		<div class="u-inputSpacer">
			<xf:macro template="style_macros" name="style_select"
				arg-styleTree="{$styleTree}"
				arg-styleId="{$style.style_id}"
				arg-row="{{ false }}" />
		</div>
	</div>

	<div class="menu-row">
		{{ phrase('template_type:') }}
		<div class="u-inputSpacer">
			<xf:select name="type" value="{$conditions.type}">
				<xf:foreach loop="$types" key="$typeId" value="$type">
					<xf:option value="{$typeId}">{$type}</xf:option>
				</xf:foreach>
			</xf:select>
		</div>
	</div>

	<div class="menu-row menu-row--separated">
		{{ phrase('add_on:') }}
		<div class="u-inputSpacer">
			<xf:macro template="addon_macros" name="addon_select"
				arg-addOnId="{$conditions.addon_id}"
				arg-includeAny="{{ true }}"
				arg-row="{{ false }}" />
		</div>
	</div>

	<div class="menu-row">
		{{ phrase('title_contains:') }}
		<div class="u-inputSpacer">
			<xf:textbox name="title" type="search" value="{$conditions.title}" dir="ltr" />
		</div>
	</div>

	<div class="menu-row menu-row--separated">
		{{ phrase('text_contains:') }}
		<div class="u-inputSpacer">
			<ul class="inputList">
				<li>
					<xf:textarea name="template" value="{$conditions.template}" autosize="true" code="true" />
				</li>
				<li><xf:checkbox standalone="true"><xf:option name="template_cs" selected="{$conditions.template_cs}" label="{{ phrase('case_sensitive') }}" /></xf:checkbox></li>
			</ul>
		</div>
	</div>

	<div class="menu-row menu-row--separated">
		{{ phrase('template_status:') }}
		<div class="u-inputSpacer">
			<xf:checkbox name="state[]" value="{$conditions.state}">
				<xf:option value="default">{{ phrase('unmodified') }}</xf:option>
				<xf:option value="inherited">{{ phrase('modified_in_parent_style') }}
				</xf:option>
				<xf:option value="custom">{{ phrase('modified_in_this_style') }}</xf:option>
			</xf:checkbox>
		</div>
	</div>

	<div class="menu-footer">
		<span class="menu-footer-controls">
			<xf:button type="submit" icon="search" class="button--primary">{{ phrase('refine_search') }}</xf:button>
		</span>
	</div>
	<xf:hiddenval name="search">1</xf:hiddenval>
</xf:form>]]></template>
  <template type="admin" title="template_search" version_id="2000033" version_string="2.0.0 Beta 3"><![CDATA[<xf:title>{{ phrase('search_templates') }}</xf:title>

<xf:form action="{{ link('templates/search') }}" class="block">

	<div class="block-container">
		<div class="block-body">
			<xf:macro template="style_macros" name="style_select"
				arg-styleTree="{$styleTree}"
				arg-styleId="{$styleId}" />

			<xf:selectrow name="type" selected="public"
				label="{{ phrase('template_type') }}">

				<xf:foreach loop="$types" key="$typeId" value="$type">
					<xf:option value="{$typeId}">{$type}</xf:option>
				</xf:foreach>
			</xf:selectrow>

			<xf:macro template="addon_macros" name="addon_select" arg-addOnId="_any" arg-includeAny="{{ true }}" />

			<hr class="formRowSep" />

			<xf:textboxrow name="title"
				label="{{ phrase('title_contains') }}"
				dir="ltr" />

			<xf:formrow rowtype="input"
				label="{{ phrase('template_contains') }}">

				<ul class="inputList">
					<li><xf:textarea name="template" autosize="true" code="true" /></li>
					<li><xf:checkbox standalone="true"><xf:option name="template_cs" label="{{ phrase('case_sensitive') }}" /></xf:checkbox></li>
				</ul>
			</xf:formrow>

			<hr class="formRowSep" />

			<xf:checkboxrow name="state[]"
				label="{{ phrase('template_status') }}">

				<xf:option value="default" selected="1">{{ phrase('unmodified') }}</xf:option>
				<xf:option value="inherited" selected="1">{{ phrase('modified_in_parent_style') }}</xf:option>
				<xf:option value="custom" selected="1">{{ phrase('modified_in_this_style') }}</xf:option>
			</xf:checkboxrow>
		</div>
		<xf:submitrow sticky="true" icon="search" />
	</div>
	<xf:hiddenval name="search">1</xf:hiddenval>

</xf:form>]]></template>
  <template type="admin" title="template_search_results" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('template_search_results:') }} {$style.title}</xf:title>

<div class="block">
	<xf:if is="$templates is not empty">
		<div class="block-outer">
			<xf:macro template="filter_macros" name="quick_filter" arg-class="block-outer-opposite" />
		</div>
	</xf:if>
	<div class="block-container">
		<xf:macro template="template_list" name="search_menu" arg-style="{$style}" arg-conditions="{$conditions}" />
		<xf:if is="$templates is not empty">
			<div class="block-body">
				<xf:datalist>
					<xf:macro template="template_list" name="template_list" arg-templates="{$templates}" arg-style="{$style}" />
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($templates) }}</span>
			</div>
		<xf:else />
			<div class="block-body block-row">{{ phrase('no_results_found') }}</div>
		</xf:if>
	</div>
</div>]]></template>
  <template type="admin" title="thread_batch_update" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('batch_update_threads') }}</xf:title>

<xf:if is="$success">
	<div class="blockMessage blockMessage--success blockMessage--iconic">{{ phrase('batch_update_was_completed_successfully') }}</div>
</xf:if>

<xf:form action="{{ link('threads/batch-update/confirm') }}" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:include template="helper_thread_search_criteria" />
		</div>
		<xf:submitrow icon="search" sticky="true" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="thread_batch_update_confirm" version_id="2001070" version_string="2.0.10"><![CDATA[<xf:title>{{ phrase('batch_update_threads') }}</xf:title>

<xf:form action="{{ link('threads/batch-update/action') }}" class="block">
	<div class="block-container">
		<h2 class="block-header">{{ phrase('update_threads') }}</h2>
		<div class="block-body">
			<xf:formrow label="{{ phrase('matched_threads') }}">
				{$total|number}
				<xf:if is="!$threadIds">
					<span role="presentation" aria-hidden="true">&middot;</span>
					<a href="{{ link('threads/list', null, {'criteria': $criteria, 'all': true}) }}">{{ phrase('view_or_filter_matches') }}</a>
				</xf:if>
			</xf:formrow>

			<hr class="formRowSep" />

			<xf:selectrow name="actions[node_id]"
				label="{{ phrase('move_to_forum') }}">

				<xf:option value="0"></xf:option>
				<xf:foreach loop="$forums" value="$forum">
					<xf:option value="{$forum.value}" label="{$forum.label}" disabled="{$forum.disabled}" />
				</xf:foreach>
				<xf:explain><xf:if is="$hasPrefixes">
					{{ phrase('move_to_forum_prefixes_explain') }}
				</xf:if></xf:explain>
			</xf:selectrow>

			<xf:if is="$prefixes.prefixesGrouped">
				<xf:checkboxrow
					explain="{{ phrase('prefix_will_only_be_applied_if_valid_for_forum') }}">
					<xf:option name="actions[apply_thread_prefix]"
						label="{{ phrase('set_prefix') }}">

						<xf:dependent>
							<xf:macro template="public:prefix_macros" name="select"
								arg-prefixes="{$prefixes.prefixesGrouped}"
								arg-name="actions[prefix_id]"
								arg-type="thread" />
						</xf:dependent>
					</xf:option>
				</xf:checkboxrow>
			</xf:if>

			<hr class="formRowSep" />

			<xf:checkboxrow>
				<xf:option name="actions[stick]" value="stick">{{ phrase('stick_threads') }}</xf:option>
				<xf:option name="actions[unstick]" value="unstick">{{ phrase('unstick_threads') }}</xf:option>
				<xf:option name="actions[lock]" value="lock">{{ phrase('lock_threads') }}</xf:option>
				<xf:option name="actions[unlock]" value="unlock">{{ phrase('unlock_threads') }}</xf:option>
				<xf:option name="actions[approve]" value="approve">{{ phrase('approve_threads') }}</xf:option>
				<xf:option name="actions[unapprove]" value="unapprove">{{ phrase('unapprove_threads') }}</xf:option>
				<xf:option name="actions[soft_delete]" value="soft_delete">{{ phrase('soft_delete_threads') }}</xf:option>
			</xf:checkboxrow>

		</div>
		<xf:submitrow submit="{{ phrase('update_threads') }}" icon="save" />
	</div>

	<xf:if is="$threadIds">
		<xf:hiddenval name="thread_ids">{$threadIds|json}</xf:hiddenval>
	<xf:else />
		<xf:hiddenval name="criteria">{$criteria|json}</xf:hiddenval>
	</xf:if>
</xf:form>

<xf:form action="{{ link('threads/batch-update/action') }}" class="block">
	<div class="block-container">
		<h2 class="block-header">{{ phrase('delete_threads') }}</h2>
		<div class="block-body">
			<xf:checkboxrow>
				<xf:option name="actions[delete]">
					{{ phrase('confirm_deletion_of_x_threads', {'total': $total|number}) }}
				</xf:option>
			</xf:checkboxrow>
		</div>
		<xf:submitrow name="confirm_delete" icon="delete" />
	</div>

	<xf:if is="$threadIds">
		<xf:hiddenval name="thread_ids">{$threadIds|json}</xf:hiddenval>
	<xf:else />
		<xf:hiddenval name="criteria">{$criteria|json}</xf:hiddenval>
	</xf:if>
</xf:form>]]></template>
  <template type="admin" title="thread_field_delete" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:include template="base_custom_field_delete" />]]></template>
  <template type="admin" title="thread_field_edit" version_id="2000034" version_string="2.0.0 Beta 4"><![CDATA[<xf:include template="base_custom_field_edit">
	<xf:set var="$extraOptions">
		<xf:macro template="base_custom_field_macros" name="common_options"
			arg-field="{$field}"
			arg-supportsGroupEditable="{{ true }}"/>
	</xf:set>
	<xf:set var="$displayOptions">
		<xf:selectrow name="node_ids[]" value="{$nodeIds}" multiple="multiple" size="7"
			label="{{ phrase('applicable_forums') }}">

			<xf:option value="" selected="!{$nodeIds}">{{ phrase('(none)') }}</xf:option>
			<xf:foreach loop="$nodeTree.getFlattened(0)" value="$treeEntry">
				<xf:option value="{$treeEntry.record.node_id}" disabled="{{ $treeEntry.record.node_type_id != 'Forum' }}">{{ repeat('&nbsp;&nbsp;', $treeEntry.depth)|raw }} {$treeEntry.record.title}</xf:option>
			</xf:foreach>
		</xf:selectrow>
	</xf:set>
</xf:include>]]></template>
  <template type="admin" title="thread_field_list" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('custom_thread_fields') }}</xf:title>

<xf:include template="base_custom_field_list" />]]></template>
  <template type="admin" title="thread_list" version_id="2001070" version_string="2.0.10"><![CDATA[<xf:title>{{ phrase('threads') }}</xf:title>

<xf:if is="$threads is not empty">
	<xf:form action="{{ link('threads/batch-update/confirm') }}" class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:datalist class="dataList--contained" data-xf-init="responsive-data-list">
					<xf:datarow rowtype="header">
						<xf:if is="$showingAll">
							<xf:cell class="dataList-cell--min">
								<xf:checkbox standalone="true"><xf:option check-all=".dataList >" data-xf-init="tooltip" title="{{ phrase('select_all') }}" /></xf:checkbox>
							</xf:cell>
						</xf:if>
						<xf:cell colspan="1">{{ phrase('title') }}</xf:cell>
						<xf:cell class="dataList-cell--min">{{ phrase('forum') }}</xf:cell>
						<xf:cell class="dataList-cell--min">{{ phrase('thread_starter') }}</xf:cell>
						<xf:cell class="dataList-cell--min">{{ phrase('replies') }}</xf:cell>
						<xf:cell class="dataList-cell--min">{{ phrase('last_message') }}</xf:cell>
					</xf:datarow>
					<xf:foreach loop="$threads" value="$thread">
						<xf:datarow>
							<xf:if is="$showingAll">
								<xf:toggle name="thread_ids[]" value="{$thread.thread_id}" selected="true" />
							</xf:if>
							<xf:main href="{{ link_type('public', 'threads', $thread) }}" label="{$thread.title}" />
							<xf:cell class="dataList-cell--min">
								{$thread.Forum.title}
							</xf:cell>
							<xf:cell class="dataList-cell--min">
								{$thread.username}
							</xf:cell>
							<xf:cell class="dataList-cell--min">
								{$thread.reply_count|number}
							</xf:cell>
							<xf:cell class="dataList-cell--min">
								<xf:date time="{$thread.last_post_date}" />
							</xf:cell>
						</xf:datarow>
					</xf:foreach>
					<xf:if is="$filter AND $total > $perPage">
						<xf:datarow rowclass="dataList-row--note dataList-row--noHover js-filterForceShow">
							<xf:cell colspan="3">{{ phrase('more_records_matching_filter_more_specific') }}</xf:cell>
						</xf:datarow>
					</xf:if>
				</xf:datalist>
			</div>
			<div class="block-footer block-footer--split">
				<span class="block-footer-counter">{{ display_totals($threads, $total) }}</span>
				<span class="block-footer-select"><xf:checkbox standalone="true"><xf:option check-all=".dataList" label="{{ phrase('select_all') }}" /></xf:checkbox></span>
				<xf:if is="$showAll">
					<span class="block-footer-controls">
						<a href="{{ link('threads/list', null, {'criteria': $criteria, 'all': true}) }}">{{ phrase('show_all_matches') }}</a>
					</span>
				<xf:elseif is="$showingAll" />
					<span class="block-footer-controls"><xf:button type="submit">{{ phrase('batch_update') }}</xf:button></span>
				</xf:if>
			</div>
		</div>

		<xf:pagenav page="{$page}" perpage="{$perPage}" total="{$total}"
			link="threads/list"
			params="{{ {'criteria': $criteria, 'order': $order, 'direction': $direction} }}"
			wrapperclass="js-filterHide block-outer block-outer--after" />
	</xf:form>
<xf:else />
	<div class="blockMessage">{{ phrase('no_records_matched') }}</div>
</xf:if>]]></template>
  <template type="admin" title="thread_prefix_delete" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:include template="base_prefix_delete" />]]></template>
  <template type="admin" title="thread_prefix_edit" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:include template="base_prefix_edit">
	<xf:set var="$extraOptions">
		<xf:macro template="forum_selection_macros" name="select_forums"
			arg-nodeIds="{$nodeIds}"
			arg-nodeTree="{$nodeTree}" />
	</xf:set>
</xf:include>]]></template>
  <template type="admin" title="thread_prefix_group_delete" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:include template="base_prefix_group_delete" />]]></template>
  <template type="admin" title="thread_prefix_group_edit" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:include template="base_prefix_group_edit" />]]></template>
  <template type="admin" title="thread_prefix_list" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('thread_prefixes') }}</xf:title>

<xf:include template="base_prefix_list" />]]></template>
  <template type="admin" title="thread_prefix_quickset_chooser" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:include template="base_prefix_quickset_chooser">
	<xf:set var="$prefixType" value="thread" />
</xf:include>]]></template>
  <template type="admin" title="thread_prefix_quickset_editor" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:include template="base_prefix_quickset_editor">
	<xf:set var="$extraOptions">
		<xf:checkboxrow name="apply_node_ids"
			label="{{ phrase('applicable_forums') }}">

			<xf:option label="{{ phrase('apply_forum_options:') }}">
				<xf:dependent>
					<xf:macro template="forum_selection_macros" name="select_forums"
						arg-nodeIds="{$nodeIds}"
						arg-nodeTree="{$nodeTree}"
						arg-withRow="0" />
				</xf:dependent>
			</xf:option>
		</xf:checkboxrow>
	</xf:set>
</xf:include>]]></template>
  <template type="admin" title="thread_prompt_delete" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:include template="base_prompt_delete" />]]></template>
  <template type="admin" title="thread_prompt_edit" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:include template="base_prompt_edit">
	<xf:set var="$extraOptions">
		<xf:macro template="forum_selection_macros" name="select_forums"
			arg-nodeIds="{$nodeIds}"
			arg-nodeTree="{$nodeTree}" />
	</xf:set>
</xf:include>]]></template>
  <template type="admin" title="thread_prompt_group_delete" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:include template="base_prompt_group_delete" />]]></template>
  <template type="admin" title="thread_prompt_group_edit" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:include template="base_prompt_group_edit" />]]></template>
  <template type="admin" title="thread_prompt_list" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('thread_prompts') }}</xf:title>

<xf:include template="base_prompt_list" />

<div class="block">
	<div class="block-container">
		<h2 class="block-header">{{ phrase('default_thread_prompt') }}</h2>
		<div class="block-body">
			<xf:datalist>
				<xf:datarow>
					<xf:cell href="{{ link('phrases/edit-by-name', {}, {'title': 'thread_prompt.default'}) }}" class="dataList-cell">{{ phrase('thread_prompt.default') }}</xf:cell>
				</xf:datarow>
			</xf:datalist>
		</div>
	</div>
</div>]]></template>
  <template type="admin" title="thread_prompt_quickset_chooser" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:include template="base_prompt_quickset_chooser">
	<xf:set var="$prefixType" value="thread" />
</xf:include>]]></template>
  <template type="admin" title="thread_prompt_quickset_editor" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:include template="base_prompt_quickset_editor">
	<xf:set var="$extraOptions">
		<xf:checkboxrow name="apply_node_ids"
			label="{{ phrase('applicable_forums') }}">

			<xf:option label="{{ phrase('apply_forum_options:') }}">
				<xf:dependent>
					<xf:macro template="forum_selection_macros" name="select_forums"
						arg-nodeIds="{$nodeIds}"
						arg-nodeTree="{$nodeTree}"
						arg-withRow="0" />
				</xf:dependent>
			</xf:option>
		</xf:checkboxrow>
	</xf:set>
</xf:include>]]></template>
  <template type="admin" title="thread_reply_ban_list" version_id="2000170" version_string="2.0.1"><![CDATA[<xf:title>{{ phrase('thread_reply_bans') }}</xf:title>

<xf:if is="$bans is not empty">
	<xf:form action="{{ link('threads/reply-bans') }}" class="block">
		<div class="block-outer">
			<span class="filterBlock">
				<xf:textbox name="username" value="{$user.username}" class="input filterBlock-input" ac="single"
					 placeholder="{{ phrase('user_name...') }}" />

				<xf:button type="submit" class="button--small">{{ phrase('filter') }}</xf:button>
			</span>
		</div>
		<div class="block-container">
			<div class="block-body">
				<xf:datalist data-xf-init="responsive-data-list">
					<xf:datarow rowtype="header">
						<xf:cell>{{ phrase('user') }}</xf:cell>
						<xf:cell>{{ phrase('thread') }}</xf:cell>
						<xf:cell>{{ phrase('reason') }}</xf:cell>
						<xf:cell>{{ phrase('end_date') }}</xf:cell>
						<xf:cell></xf:cell>
					</xf:datarow>
					<xf:foreach loop="$bans" value="$ban">
						<xf:datarow rowclass="dataList-row--noHover">
							<xf:cell>
								<xf:username user="$ban.User" href="{{ link('users/edit', $ban.User) }}" />
							</xf:cell>
							<xf:cell>
								<a href="{{ link_type('public', 'threads', $ban.Thread) }}">{$ban.Thread.title}</a>
							</xf:cell>
							<xf:cell>
								<xf:if is="$ban.reason">
									{$ban.reason}
								<xf:else />
									{{ phrase('n_a') }}
								</xf:if>
							</xf:cell>
							<xf:cell>
								<xf:if is="$ban.expiry_date">
									<xf:date time="{$ban.expiry_date}" />
								<xf:else />
									{{ phrase('permanent') }}
								</xf:if>
							</xf:cell>
							<xf:delete href="{{ link('threads/reply-bans/delete', $ban) }}" overlay="true" />
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($bans, $total) }}</span>
			</div>
		</div>

		<xf:pagenav page="{$page}" perpage="{$perPage}" total="{$total}"
			link="threads/reply-bans" params="{$linkParams}"
			wrapperclass="block-outer block-outer--after" />
	</xf:form>
<xf:else />
	<div class="blockMessage">{{ phrase('no_results_found') }}</div>
</xf:if>]]></template>
  <template type="admin" title="tools" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('admin_navigation.tools') }}</xf:title>

<xf:macro template="section_nav_macros" name="section_nav" arg-section="tools" />]]></template>
  <template type="admin" title="tools_file_check" version_id="2000033" version_string="2.0.0 Beta 3"><![CDATA[<xf:title>{{ phrase('file_health_check') }}</xf:title>

<xf:form action="{{ link('tools/file-check') }}" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="close">{{ phrase('file_health_check_description', {'button': phrase('proceed')}) }}</xf:inforow>
		</div>
		<xf:submitrow submit="{{ phrase('proceed...') }}" rowtype="simple" />
	</div>
</xf:form>

<xf:if is="$fileChecks is not empty">
	<div class="block">
		<div class="block-container">
			<h3 class="block-header">{{ phrase('file_health_check_results') }}</h3>
			<div class="block-body">
				<xf:macro name="file_check_list" arg-fileChecks="{$fileChecks}" />
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($fileChecks, $total) }}</span>
			</div>
		</div>
		<xf:pagenav page="{$page}" perpage="{$perPage}" total="{$total}"
			link="tools/file-check"
			wrapperclass="block-outer block-outer--after" />
	</div>
</xf:if>

<xf:macro name="file_check_list" arg-fileChecks="!">
	<xf:datalist data-xf-init="responsive-data-list">
		<xf:datarow rowtype="header">
			<xf:cell>{{ phrase('check_date') }}</xf:cell>
			<xf:cell>{{ phrase('check_state') }}</xf:cell>
			<xf:cell>{{ phrase('missing') }}</xf:cell>
			<xf:cell>{{ phrase('unexpected_contents') }}</xf:cell>
			<xf:cell>{{ phrase('total_checked') }}</xf:cell>
			<xf:cell> </xf:cell>
		</xf:datarow>

		<xf:foreach loop="$fileChecks" value="$fileCheck" i="$i">
			<xf:datarow rowclass="{{ $i == 1 ? 'dataList-row--highlighted' : '' }}">
				<xf:cell>
					<xf:date time="$fileCheck.check_date" />
				</xf:cell>
				<xf:cell>
					<xf:if is="$fileCheck.check_state == 'success'">
						{{ phrase('success') }}
					<xf:elseif is="$fileCheck.check_state == 'failure'" />
						{{ phrase('failed') }}
					<xf:elseif is="$fileCheck.check_state == 'pending'" />
						{{ phrase('pending') }}
					</xf:if>
				</xf:cell>

				<xf:if is="$fileCheck.check_state == 'pending'">
					<xf:cell>{{ phrase('n_a') }}</xf:cell>
					<xf:cell>{{ phrase('n_a') }}</xf:cell>
					<xf:cell>{{ phrase('n_a') }}</xf:cell>
					<xf:action></xf:action>
				<xf:else />
					<xf:cell>{$fileCheck.total_missing|number}</xf:cell>
					<xf:cell>{$fileCheck.total_inconsistent|number}</xf:cell>
					<xf:cell>{$fileCheck.total_checked|number}</xf:cell>
					<xf:action href="{{ link('tools/file-check/results', $fileCheck) }}">{{ phrase('review') }}</xf:action>
				</xf:if>
			</xf:datarow>
		</xf:foreach>
	</xf:datalist>
</xf:macro>]]></template>
  <template type="admin" title="tools_file_check_result" version_id="2000570" version_string="2.0.5"><![CDATA[<xf:title>{{ phrase('file_health_check_results') }}</xf:title>

<xf:pageaction>
	<form action="{{ link('tools/file-check') }}" method="post" class="u-pullRight">
		<xf:button type="submit">{{ phrase('re_run_check') }}</xf:button>
		<xf:csrf />
	</form>
</xf:pageaction>

<xf:if is="$fileCheck.check_state == 'success'">
	<div class="blockMessage blockMessage--success blockMessage--iconic">
		{{ phrase('file_health_check_okay', {'numFiles': $fileCheck.total_checked|number}) }} {{ smilie(':)') }}
	</div>
<xf:else />
	<div class="blockMessage blockMessage--error blockMessage--iconic">
		{{ phrase('check_completed_on_x_files', {'total_checked': $fileCheck.total_checked|number})|nl2br }}
	</div>

	<xf:if is="$results">
		<div class="block">
			<div class="block-container">
				<div class="block-body">
					<xf:datalist>
						<xf:foreach loop="$addOns" key="$addOnId" value="$addOn">
							<xf:if is="{$results.missing.{$addOnId}} OR {$results.inconsistent.{$addOnId}}">
								<xf:datarow rowtype="subsection" rowclass="dataList-row--noHover">
									<xf:cell>{$addOn.title}</xf:cell>
								</xf:datarow>

								<xf:foreach loop="{$results.missing.{$addOnId}}" value="$path">
									<xf:datarow rowclass="dataList-row--noHover">
										<xf:cell dir="auto">
											{$path}
											<span class="label label--primary label--smallest" title="{{ phrase('file_not_found')|for_attr }}" data-xf-init="tooltip">
												{{ phrase('missing') }}
											</span>
										</xf:cell>
									</xf:datarow>
								</xf:foreach>

								<xf:foreach loop="{$results.inconsistent.{$addOnId}}" value="$path">
									<xf:datarow rowclass="dataList-row--noHover">
										<xf:cell dir="auto">
											{$path}
											<span class="label label--primary label--smallest" title="{{ phrase('file_contents_unexpected')|for_attr }}" data-xf-init="tooltip">
												{{ phrase('unexpected_contents') }}
											</span>
										</xf:cell>
									</xf:datarow>
								</xf:foreach>
							</xf:if>
						</xf:foreach>
					</xf:datalist>
				</div>
			</div>
		</div>
	<xf:else />
		<div class="blockMessage">{{ phrase('file_check_results_file_not_found_please_rerun') }}</div>
	</xf:if>
</xf:if>]]></template>
  <template type="admin" title="tools_rebuild" version_id="2010035" version_string="2.1.0 Beta 5"><![CDATA[<xf:title>{{ phrase('rebuild_caches') }}</xf:title>

<xf:if is="$success">
	<div class="blockMessage blockMessage--success blockMessage--iconic">{{ phrase('cache_rebuilt_successfully') }}</div>
</xf:if>

<xf:if is="$hasStoppedManualJobs">
	<div class="blockMessage blockMessage--important blockMessage--iconic">
		{{ phrase('there_manual_rebuild_jobs_awaiting_completion_continue_running', {'link': link('tools/run-job')}) }}
	</div>
</xf:if>

<!--[XF:rebuild_top]-->

<xf:set var="$searchBody">
	<xf:selectrow name="options[type]"
		label="{{ phrase('content_type') }}">

		<xf:option>{{ phrase('(all)') }}</xf:option>
		<xf:options source="{{ $xf.app.getContentTypePhrases(true, 'search_handler_class') }}" />
	</xf:selectrow>

	<xf:checkboxrow>
		<xf:option name="options[truncate]">{{ phrase('delete_index_before_rebuilding') }}</xf:option>
	</xf:checkboxrow>

	<xf:numberboxrow name="options[batch]" value="500" min="1"
		label="{{ phrase('items_to_process_per_page') }}" />
</xf:set>
<xf:macro name="rebuild_job"
	arg-header="{{ phrase('rebuild_search_index') }}"
	arg-body="{$searchBody}"
	arg-job="XF:SearchRebuild" />
<!--[XF:after_search]-->

<xf:set var="$threadBody">
	<xf:checkboxrow>
		<xf:option name="options[position_rebuild]" value="1"
			label="{{ phrase('rebuild_position_and_post_counters') }}"
			hint="{{ phrase('will_slow_process_down_only_needed_if_posts_in_incorrect_order') }}" />
	</xf:checkboxrow>
</xf:set>
<xf:macro name="rebuild_job"
	arg-header="{{ phrase('rebuild_threads') }}"
	arg-body="{$threadBody}"
	arg-job="XF:Thread" />
<!--[XF:after_thread]-->

<xf:macro name="rebuild_job"
	arg-header="{{ phrase('rebuild_forums') }}"
	arg-job="XF:Forum" />
<!--[XF:after_forums]-->

<xf:macro name="rebuild_job"
	arg-header="{{ phrase('rebuild_user_caches') }}"
	arg-job="XF:User" />
<!--[XF:after_users]-->

<xf:macro name="rebuild_job"
	arg-header="{{ phrase('rebuild_user_group_promotions') }}"
	arg-job="XF:UserGroupPromotion" />
<!--[XF:after_promotions]-->

<xf:macro name="rebuild_job"
	arg-header="{{ phrase('rebuild_trophies') }}"
	arg-job="XF:Trophy" />
<!--[XF:after_trophies]-->

<xf:macro name="rebuild_job"
	arg-header="{{ phrase('rebuild_reaction_score') }}"
	arg-job="XF:ReactionScore" />
<!--[XF:after_reactions]-->

<xf:set var="$likesContentTypes" value="{$xf.app.getContentTypePhrases(true, 'like_handler_class')}" />
<xf:if is="$likesContentTypes">
	<xf:set var="$likesCountedBody">
		<xf:selectrow name="options[type]"
			label="{{ phrase('content_type') }}">

			<xf:options source="{$likesContentTypes}" />
		</xf:selectrow>
	</xf:set>
	<xf:macro name="rebuild_job"
		arg-header="{{ phrase('rebuild_likes_counted_status') }}"
		arg-body="{$likesCountedBody}"
		arg-job="XF:LikeIsCounted" />
</xf:if>
<!--[XF:after_like_status]-->

<xf:set var="$reactionsCountedBody">
	<xf:selectrow name="options[type]"
		label="{{ phrase('content_type') }}">

		<xf:options source="{{ $xf.app.getContentTypePhrases(true, 'reaction_handler_class') }}" />
	</xf:selectrow>
</xf:set>
<xf:macro name="rebuild_job"
	arg-header="{{ phrase('rebuild_reactions_counted_status') }}"
	arg-body="{$reactionsCountedBody}"
	arg-job="XF:ReactionIsCounted" />
<!--[XF:after_reaction_status]-->

<xf:macro name="rebuild_job"
	arg-header="{{ phrase('rebuild_attachment_thumbnails') }}"
	arg-job="XF:AttachmentThumb" />
<!--[XF:after_thumbnails]-->

<xf:macro name="rebuild_job"
	arg-header="{{ phrase('rebuild_conversations') }}"
	arg-job="XF:Conversation" />
<!--[XF:after_conversations]-->

<xf:macro name="rebuild_job"
	arg-header="{{ phrase('rebuild_profile_posts') }}"
	arg-job="XF:ProfilePost" />
<!--[XF:after_profile_posts]-->

<xf:macro name="rebuild_job"
	arg-header="{{ phrase('rebuild_poll_information') }}"
	arg-job="XF:Poll" />
<!--[XF:after_polls]-->

<xf:set var="$statsBody">
	<xf:numberboxrow name="options[batch]" value="28" min="1"
		label="{{ phrase('days_to_process_per_page') }}" />

	<xf:checkboxrow>
		<xf:option name="options[delete]" value="1"
			label="{{ phrase('delete_existing_cached_data') }}"
			hint="{{ phrase('some_data_can_not_be_rebuilt') }}" />
	</xf:checkboxrow>
</xf:set>
<xf:macro name="rebuild_job"
	arg-header="{{ phrase('rebuild_daily_statistics') }}"
	arg-body="{$statsBody}"
	arg-job="XF:Stats" />
<!--[XF:after_stats]-->

<xf:form action="{{ link('tools/clean-up-permissions') }}" class="block">
	<div class="block-container">
		<h2 class="block-header">{{ phrase('clean_up_permissions') }}</h2>
		<div class="block-body">
			<xf:inforow>{{ phrase('this_will_clean_up_permission_combinations_no_longer_in_use') }}</xf:inforow>
		</div>
		<xf:submitrow submit="{{ phrase('run') }}" />
	</div>
</xf:form>
<!--[XF:after_permissions]-->

<xf:set var="$postMdBody">
	<xf:checkboxrow name="options[types]" listclass="listColumns">
		<xf:option value="attachments"
			label="{{ phrase('attachments') }}"
			selected="true" />
	</xf:checkboxrow>
</xf:set>
<xf:macro name="rebuild_job"
	arg-header="{{ phrase('rebuild_post_embed_metadata') }}"
	arg-body="{$postMdBody}"
	arg-job="XF:PostEmbedMetadata" />

<xf:set var="$conversationMdBody">
	<xf:checkboxrow name="options[types]" listclass="listColumns">
		<xf:option value="attachments"
			label="{{ phrase('attachments') }}"
			selected="true" />
	</xf:checkboxrow>
</xf:set>
<xf:macro name="rebuild_job"
	arg-header="{{ phrase('rebuild_conversation_embed_metadata') }}"
	arg-body="{$conversationMdBody}"
	arg-job="XF:ConversationEmbedMetadata" />
<!--[XF:after_metadata]-->

<xf:set var="$sitemapBody">
	<xf:inforow>{{ phrase('sitemap_contents_can_be_controlled_via_sitemap_options') }}</xf:inforow>
</xf:set>
<xf:macro name="rebuild_job"
	arg-header="{{ phrase('rebuild_sitemap') }}"
	arg-body="{$sitemapBody}"
	arg-job="XF:Sitemap" />
<!--[XF:after_sitemap]-->

<xf:set var="$gravatarBody">
	<xf:checkboxrow>
		<xf:option name="options[posters]" selected="1" label="{{ phrase('limit_to_users_who_have_posted') }}" />
		<xf:option name="options[import_table]" label="{{ phrase('limit_to_imported_users_logged_in_this_table:') }}">
			<xf:textbox name="options[import_table_name]" />
		</xf:option>
		<xf:explain>{{ phrase('fetch_gravatars_job_explain') }}</xf:explain>
	</xf:checkboxrow>
</xf:set>
<xf:macro name="rebuild_job"
	arg-header="{{ phrase('fetch_gravatars_for_users_with_no_avatar') }}"
	arg-body="{$gravatarBody}"
	arg-job="XF:Gravatar" />

<!--[XF:rebuild_bottom]-->

<xf:macro name="rebuild_job" arg-header="!" arg-body="" arg-submit="{{ phrase('rebuild_now') }}" arg-job="!">
	<xf:form action="{{ link('tools/rebuild') }}" class="block">
		<div class="block-container">
			<h2 class="block-header">{$header|raw}</h2>
			<xf:if is="$body"><div class="block-body">{$body|raw}</div></xf:if>
			<xf:submitrow submit="{$submit}" />
		</div>
		<xf:hiddenval name="job">{$job}</xf:hiddenval>
	</xf:form>
</xf:macro>]]></template>
  <template type="admin" title="tools_run_job" version_id="2000170" version_string="2.0.1"><![CDATA[<xf:title>{{ phrase('processing...') }}</xf:title>
<xf:page option="template">PAGE_RUN_JOB</xf:page>

<xf:if is="$canCancel">
	<xf:pageaction>
		<form action="{{ link('tools/run-job', null, {'cancel': $jobId}) }}" method="post" onsubmit="window.stop()" class="u-pullRight">
			<xf:button type="submit">{{ phrase('button.cancel') }}</xf:button>
			{{ redirect_input(null, null, false) }}
			<xf:csrf />
		</form>
	</xf:pageaction>
</xf:if>

<form action="{{ link('tools/run-job') }}" method="post" class="blockMessage" data-xf-init="auto-submit">

	<div><xf:if is="$status">{$status}<xf:else />{{ phrase('processing...') }}</xf:if></div>

	<div class="u-noJsOnly">
		<xf:button type="submit">{{ phrase('proceed...') }}</xf:button>
	</div>
	{{ redirect_input(null, null, false) }}
	<xf:csrf />
	<xf:hiddenval name="only_ids">{$onlyIds|join(',')}</xf:hiddenval>
</form>]]></template>
  <template type="admin" title="tools_test_image_proxy" version_id="2000033" version_string="2.0.0 Beta 3"><![CDATA[<xf:title>{{ phrase('test_image_proxy') }}</xf:title>
<xf:description>{{ phrase('tool_helps_diagnose_errors_relating_to_image_proxy_system') }}</xf:description>

<xf:if is="$results">
	<xf:if is="$results.valid">
		<div class="blockMessage blockMessage--success blockMessage--iconic">{{ phrase('url_x_was_fetched_successfully', {'url': $url}) }}</div>
	<xf:else />
		<div class="blockMessage blockMessage--error blockMessage--iconic">
			{{ phrase('url_x_could_not_be_fetched_or_is_not_valid_image_error_y', {'url': $url, 'error': $results.error}) }}
		</div>
	</xf:if>
</xf:if>

<xf:form action="{{ link('tools/test-image-proxy') }}" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:textboxrow name="url" value="{$url}" type="url"
				label="{{ phrase('url') }}"
				dir="ltr" />
		</div>
		<xf:submitrow submit="{{ phrase('run_test') }}" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="tools_test_mail" version_id="2000170" version_string="2.0.1"><![CDATA[<xf:title>{{ phrase('test_outbound_email') }}</xf:title>
<xf:description>{{ phrase('use_this_tool_to_diagnose_outbound_mail_transport_issues') }}</xf:description>

<xf:if is="$result">
	<xf:if is="$result.code > 0">
		<div class="blockMessage blockMessage--success">
			{{ phrase('email_was_sent_successfully_with_no_errors') }}
			<xf:if is="$transportClass == 'Swift_SendmailTransport'">
				{{ phrase('note_error_tracking_limited_with_sendmail_check_email_log') }}
			</xf:if>
		</div>
	<xf:else />
		<div class="blockMessage blockMessage--error">
			{{ phrase('errors_were_encountered_while_trying_to_send_email') }}
		</div>
	</xf:if>
	<xf:if is="$result.log">
		<div class="block">
			<div class="block-container">
				<h3 class="block-formSectionHeader">
					<span class="collapseTrigger collapseTrigger--block" data-xf-click="toggle" data-target="< :up:next">
						{{ phrase('expand_log_details') }}
					</span>
				</h3>
				<div class="block-body block-body--contained block-body--collapsible" tabindex="-1">
					<div class="block-row">
						<pre>{$result.log}</pre>
					</div>
				</div>
			</div>
		</div>
	</xf:if>
</xf:if>

<xf:form action="{{ link('tools/test-email') }}" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:textboxrow name="email" value="{$email}" type="email"
				label="{{ phrase('email') }}"
				dir="ltr" />

			<xf:formrow label="{{ phrase('email_transport_class') }}">
				<code>\{$transportClass}<xf:if is="$transportExtra"> ({$transportExtra})</xf:if></code>
			</xf:formrow>
		</div>
		<xf:submitrow submit="{{ phrase('run_test') }}" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="tools_test_url_unfurling" version_id="2010036" version_string="2.1.0 Beta 6"><![CDATA[<xf:title>{{ phrase('test_url_unfurling') }}</xf:title>
<xf:description>{{ phrase('this_tool_helps_diagnose_errors_relating_to_url_unfurl_system') }}</xf:description>

<xf:if is="$error">
	<div class="blockMessage blockMessage--error">
		{{ phrase('following_error_occurred_while_fetching_metadata_from_url_x', {'url': $url}) }}<br />
		<pre>{$error}</pre>
	</div>
</xf:if>

<xf:form action="{{ link('tools/test-url-unfurling') }}" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:textboxrow name="url" type="url"
				label="{{ phrase('url') }}" value="{$url}" />
		</div>
		<xf:submitrow submit="{{ phrase('run_test') }}" />
	</div>
</xf:form>

<xf:if contentcheck="true">
	<div class="block">
		<div class="block-container">
		<xf:contentcheck>
			<xf:if is="$results">
				<h2 class="block-header">{{ phrase('results') }}</h2>
				<div class="block-body">
					<xf:formrow label="{{ phrase('title') }}">
						{{ $results.title ?: phrase('n_a') }}
					</xf:formrow>

					<xf:formrow label="{{ phrase('description') }}">
						{{ $results.description ?: phrase('n_a') }}
					</xf:formrow>

					<xf:formrow label="{{ phrase('image') }}">
						<xf:if is="$results.image_url">
							<img src="{$results.image_url}" style="width: 100px" />
							<div class="formRow-explain">
								{{ phrase('url:') }} <a href="{$results.image_url}" target="_blank">{$results.image_url}</a>
							</div>
						<xf:else />
							{{ phrase('n_a') }}
						</xf:if>
					</xf:formrow>

					<xf:formrow label="{{ phrase('icon') }}">
						<xf:if is="$results.favicon_url">
							<img src="{$results.favicon_url}" style="width: 32px" />
							<div class="formRow-explain">
								{{ phrase('url:') }} <a href="{$results.favicon_url}" target="_blank">{$results.favicon_url}</a>
							</div>
						<xf:else />
							{{ phrase('n_a') }}
						</xf:if>
					</xf:formrow>
				</div>
			</xf:if>

			<xf:if is="$body">
				<xf:if is="$results">
					<h2 class="block-minorHeader">
						<span class="collapseTrigger collapseTrigger--block" data-xf-click="toggle" data-target="< :up :next">
							{{ phrase('raw_response') }}
						</span>
					</h2>
				<xf:else />
					<h2 class="block-header">{{ phrase('raw_response') }}</h2>
				</xf:if>
				<div class="block-body {{ $results ? 'block-body--collapsible' : '' }}">
					<xf:macro template="public:prism_macros" name="setup" />

					<xf:formrow label="{{ phrase('code_language.html') }}" rowtype="fullWidth noLabel">
						{{ phrase('following_html_is_what_was_fetched_within_default_time_and_size') }}

						<div class="bbCodeBlock bbCodeBlock--screenLimited bbCodeBlock--code">
							<div class="bbCodeBlock-content" dir="ltr">
								<pre class="bbCodeCode" dir="ltr"><code>{$body}</code></pre>
							</div>
						</div>
					</xf:formrow>
				</div>
			</xf:if>
		</xf:contentcheck>
		</div>
	</div>
</xf:if>
]]></template>
  <template type="admin" title="tools_transmogrifer" version_id="2000170" version_string="2.0.1"><![CDATA[<xf:title>{{ phrase('transmogrification_reset_control') }}</xf:title>

<xf:css>
	.transmogrifier
	{
		border: none;
		padding: 10px 0;
		width: 310px;
		margin: 30px auto;

		background-color: yellow;
		background-image: repeating-linear-gradient(-45deg, transparent, transparent 15px, rgb(0,0,0) 15px, rgb(0,0,0) 30px);
	}

	.transmogrifier div
	{
		padding: 20px 0;
		background-color: #f0f0f0;
		border: 1px solid black;
		width: 280px;
		text-align: center;
		margin: auto;
	}

	.transmogrifier button
	{
		width: 240px;
		background-color: white;
		border: 2px outset black;
		color: red;
		font-size: 12pt;
		font-weight: bold;
		text-transform: uppercase;
		padding: 10px;
		box-shadow: 2px 2px 10px 0px rgba(0,0,0,0.5);
	}

	.transmogrifier button:active
	{
		background-color: #ffff33;
		-webkit-box-shadow: 0 0 0 0 transparent;
		-moz-box-shadow: 0 0 0 0 transparent;
		-khtml-box-shadow: 0 0 0 0 transparent;
		box-shadow: 0 0 0 0 transparent;
		text-shadow: 0 0 0 transparent, 0 0 10px white;
	}

	.transmogrifier button:hover
	{
		background-color: #ffff77;
	}
</xf:css>

<xf:form action="{{ link('tools/transmogrifier-reset') }}" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('you_sure_you_want_to_issue_transmogrification_reset_imperative') }}
				<div class="transmogrifier">
					<div><xf:button type="submit" icon="confirm">{{ phrase('reset_transmogrifier') }}</xf:button></div>
				</div>
			</xf:inforow>
		</div>
	</div>
</xf:form>]]></template>
  <template type="admin" title="tools_transmogrifer_reset" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('transmogrification_reset_successful') }}</xf:title>

<div class="blockMessage blockMessage--success blockMessage--iconic" style="text-align: center">
	{{ phrase('transmogrification_reset_imperative_was_generated_and_executed') }}
	<div>
		<dl class="pairs pairs--inline">
			<dt>{{ phrase('transmogrification_count') }}</dt>
			<dd>{$count|number}</dd>
		</dl>
	</div>
</div>]]></template>
  <template type="admin" title="tools_upgrade_check" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('upgrade_check') }}</xf:title>

<xf:if is="$failed">
	<div class="blockMessage blockMessage--error">
		{{ phrase('last_upgrade_check_failed_see_log') }}
	</div>
</xf:if>

<xf:if is="$upgradeCheck">
	<xf:macro template="upgrade_check_macros" name="full_status"
		arg-upgradeCheck="{$upgradeCheck}"
		arg-showSuccess="{{ true }}"
	/>
</xf:if>

<xf:form action="{{ link('tools/upgrade-check') }}" class="block">
	<div class="block-container">
		<div class="block-body block-row">
			<xf:inforow rowtype="close">
				<xf:if is="$upgradeCheck.check_date">
					{{ phrase('last_upgrade_check_x', {'date': date_dynamic($upgradeCheck.check_date)}) }}
				<xf:else />
					{{ phrase('no_upgrade_check_has_been_performed') }}
				</xf:if>
			</xf:inforow>
		</div>
		<xf:submitrow submit="{{ phrase('check_now...') }}" rowtype="simple" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="tools_upgrade_xf" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('upgrade_xenforo') }}</xf:title>

<xf:form action="{{ link('tools/upgrade-xf') }}" class="block">
	<div class="block-container">
		<div class="block-body block-row">
			{{ phrase('xenforo_x_available_explain', {'version': $availableUpdate.version_string}) }}

			<div class="block-rowMessage block-rowMessage--important">
				<b>{{ phrase('note:') }}</b>
				{{ phrase('strongly_recommended_backup_database_and_files') }}
			</div>
		</div>
		<xf:submitrow icon="download" submit="{{ phrase('download_and_upgrade...') }}" rowtype="simple"/>
	</div>
	<xf:hiddenval name="confirm_version_id" value="{$availableUpdate.version_id}" />
</xf:form>]]></template>
  <template type="admin" title="tools_upgrade_xf_addon" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('upgrade_official_xenforo_add_ons') }}</xf:title>

<xf:form action="{{ link('tools/upgrade-xf-add-on') }}" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow>
				{{ phrase('updates_available_official_xenforo_add_on_explain') }}

				<div class="block-rowMessage block-rowMessage--important">
					<b>{{ phrase('note:') }}</b>
					{{ phrase('strongly_recommended_backup_database_and_files') }}
				</div>
			</xf:inforow>
			<xf:checkboxrow label="{{ phrase('available_upgrades') }}">
				<xf:foreach loop="$availableUpdates" key="$addOnId" value="$availableUpdate">
					<xf:option name="confirm_updates[{$addOnId}]" value="{$availableUpdate.version_id}">
						{$addOns.{$addOnId}.title} <span class="u-muted">{$availableUpdate.version_string}</span>
					</xf:option>
				</xf:foreach>
			</xf:checkboxrow>
		</div>
		<xf:submitrow icon="download" submit="{{ phrase('download_and_upgrade...') }}"/>
	</div>
</xf:form>]]></template>
  <template type="admin" title="tools_upgrade_xf_redirect" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('upgrade_xenforo') }}</xf:title>

<form action="{$upgraderUrl}" method="post" class="blockMessage" data-xf-init="auto-submit">

	<div>{{ phrase('starting_upgrade...') }}</div>

	<div class="u-noJsOnly">
		<xf:button type="submit">{{ phrase('proceed...') }}</xf:button>
	</div>

	<xf:csrf />
	<xf:hiddenval name="key" value="{$upgradeKey}" />
</form>]]></template>
  <template type="admin" title="trophy_edit" version_id="2001070" version_string="2.0.10"><![CDATA[<xf:if is="$trophy.isInsert()">
	<xf:title>{{ phrase('add_trophy') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_trophy:') }} {$trophy.title}</xf:title>
</xf:if>

<xf:pageaction if="$trophy.isUpdate()">
	<xf:button href="{{ link('trophies/delete', $trophy) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('trophies/save', $trophy) }}" ajax="true" class="block">
	<div class="block-container">
		<h2 class="block-tabHeader tabs hScroller" data-xf-init="h-scroller tabs" role="tablist">
			<span class="hScroller-scroll">
				<a class="tabs-tab is-active" role="tab" tabindex="0" aria-controls="trophy-options">{{ phrase('trophy_options') }}</a>
				<xf:macro template="helper_criteria" name="user_tabs" arg-userTabTitle="{{ phrase('award_this_trophy_if') }}" />
			</span>
		</h2>

		<ul class="block-body tabPanes">
			<li class="is-active" role="tabpanel" id="trophy-options">
				<xf:textboxrow name="title" value="{{ $trophy.trophy_id ? $trophy.MasterTitle.phrase_text : ''  }}"
					label="{{ phrase('title') }}"/>

				<xf:numberboxrow name="trophy_points" value="{$trophy.trophy_points}" min="0"
					label="{{ phrase('trophy_points') }}"
					explain="{{ phrase('points_can_be_used_track_progression_and_change_title') }}" />

				<xf:textarearow name="description" value="{{ $trophy.trophy_id ? $trophy.MasterDescription.phrase_text : ''  }}" autosize="true"
					label="{{ phrase('description') }}"
					hint="{{ phrase('you_may_use_html') }}"
					explain="{{ phrase('optionally_describe_trophy_and_criteria_user_needs_to_award') }}" />
			</li>

			<xf:macro template="helper_criteria" name="user_panes"
				arg-criteria="{{ $userCriteria.getCriteriaForTemplate() }}"
				arg-data="{{ $userCriteria.getExtraTemplateData() }}" />
		</ul>

		<xf:submitrow sticky="true" icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="trophy_list" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('trophies') }}</xf:title>

<xf:pageaction>
	<xf:button href="{{ link('trophies/add') }}" icon="add">{{ phrase('add_trophy') }}</xf:button>
</xf:pageaction>

<xf:if is="$trophies is not empty">
	<div class="block">
		<div class="block-outer">
			<xf:macro template="filter_macros" name="quick_filter" arg-key="trophies" arg-class="block-outer-opposite" />
		</div>
		<div class="block-container">
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$trophies" value="$trophy">
						<xf:datarow
							label="{$trophy.title}"
							hint="{{ phrase('points:') }} {$trophy.trophy_points}"
							href="{{ link('trophies/edit', $trophy) }}"
							delete="{{ link('trophies/delete', $trophy) }}" />
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($trophies) }}</span>
			</div>
		</div>
	</div>
<xf:else />
	<div class="blockMessage">{{ phrase('no_trophies_have_been_created_yet') }}</div>
</xf:if>

<xf:macro template="option_macros" name="option_form_block" arg-options="{$options}" />]]></template>
  <template type="admin" title="two_step_config_authy" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:textboxrow name="options[authy_api_key]" label="{{ phrase('authy_api_key') }}" value="{$provider.options.authy_api_key}">
	<xf:explain>{{ phrase('authy_api_key_explain') }}</xf:explain>
</xf:textboxrow>]]></template>
  <template type="admin" title="two_step_provider_edit" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('edit_provider:') }} {$provider.title}</xf:title>

<xf:if is="{{ !$provider.canEdit() }}">
	<div class="blockMessage blockMessage--important blockMessage--iconic">
		{{ phrase('only_limited_fields_in_item_may_be_edited') }}
	</div>
</xf:if>

<xf:form action="{{ link('two-step/save', $provider) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:formrow label="{{ phrase('provider_id') }}">
				{$provider.provider_id}
			</xf:formrow>

			<xf:formrow label="{{ phrase('provider_class') }}">
				{$provider.provider_class}
			</xf:formrow>

			<xf:formrow label="{{ phrase('title') }}">
				{$provider.title}
			</xf:formrow>

			<xf:formrow label="{{ phrase('description') }}">
				{$provider.description}
			</xf:formrow>

			<xf:macro template="display_order_macros" name="row"
				arg-name="priority" arg-value="{$provider.priority}" />

			<xf:if contentcheck="true">
				<hr class="formRowSep" />
				<xf:contentcheck>
					{$provider.renderOptions()|raw}
				</xf:contentcheck>
			</xf:if>
		</div>
		<xf:submitrow sticky="true" icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="two_step_provider_list" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('two_step_verification_providers') }}</xf:title>

<xf:form action="{{ link('two-step/toggle') }}" class="block" ajax="true">
	<div class="block-outer">
		<xf:macro template="filter_macros" name="quick_filter" arg-key="two-step" arg-class="block-outer-opposite" />
	</div>
	<div class="block-container">
		<xf:if is="$activeProviders is not empty">
			<div class="block-body">
				<xf:datalist>
					<xf:datarow rowtype="subsection" rowclass="dataList-row--noHover">
						<xf:cell>{{ phrase('active_providers') }}</xf:cell>
					</xf:datarow>
					<xf:foreach loop="$activeProviders" value="$provider">
						<xf:datarow label="{$provider.title}" href="{{ link('two-step/edit', $provider) }}" />
					</xf:foreach>
				</xf:datalist>
			</div>
		</xf:if>

		<xf:if is="$inactiveProviders is not empty">
			<div class="block-body">
				<xf:datalist>
					<xf:datarow rowtype="subsection" rowclass="dataList-row--noHover">
						<xf:cell>{{ phrase('inactive_providers') }}</xf:cell>
					</xf:datarow>
					<xf:foreach loop="$inactiveProviders" value="$provider">
						<xf:datarow label="{$provider.title}" href="{{ link('two-step/edit', $provider) }}" />
					</xf:foreach>
				</xf:datalist>
			</div>
		</xf:if>
		<div class="block-footer">
			<span class="block-footer-counter">{{ display_totals(count($activeProviders) + count($inactiveProviders)) }}</span>
		</div>
	</div>
</xf:form>]]></template>
  <template type="admin" title="upgrade_check_macros" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:macro name="serious_errors" arg-upgradeCheck="!">
	<xf:if contentcheck="true">
		<div class="blockMessage blockMessage--error blockMessage--iconic">
			{{ phrase('upgrade_check_errors_must_be_resolved', {'link': link('tools/upgrade-check')}) }}
			<ul>
			<xf:contentcheck>
				<xf:if is="$upgradeCheck.error_code">
					<li>{$upgradeCheck.error_message}</li>
				<xf:else />
					<xf:if is="!$upgradeCheck.branding_valid">
						<li>{{ phrase('default_copyright_notice_branding_has_been_removed') }}</li>
					</xf:if>
					<xf:foreach loop="$upgradeCheck.invalid_add_ons" key="$addOnId" value="$reason">
						<xf:if is="$reason == 'using_newer'">
							<li>{{ phrase('running_version_of_x_which_is_newer_than_permitted', {'title':
								{$upgradeCheck.RelevantAddOns.{$addOnId}.title}}) }}
							</li>
						<xf:elseif is="$reason == 'no_license'" />
							<li>{{ phrase('running_x_which_not_permitted', {'title':
								{$upgradeCheck.RelevantAddOns.{$addOnId}.title}}) }}
							</li>
						</xf:if>
					</xf:foreach>
				</xf:if>
			</xf:contentcheck>
			</ul>
		</div>
	</xf:if>
</xf:macro>

<xf:macro name="warnings" arg-upgradeCheck="!">
	<xf:if is="!$upgradeCheck.hasLicenseErrors()">
		<xf:if contentcheck="true">
			<div class="blockMessage blockMessage--warning blockMessage--iconic">
				{{ phrase('upgrade_check_warnings_should_be_resolved', {'link': link('tools/upgrade-check')}) }}
				<ul>
				<xf:contentcheck>
					<xf:if is="!$upgradeCheck.board_url_valid">
						<li>{{ phrase('board_url_option_not_match_license_url', {'link':
							link('options/groups/basicBoard/') . '#boardUrl'}) }}
						</li>
					</xf:if>
					<xf:if is="$upgradeCheck.license_expired">
						<li>{{ phrase('your_license_has_now_expired_explain') }}</li>
					</xf:if>
				</xf:contentcheck>
				</ul>
			</div>
		</xf:if>
	</xf:if>
</xf:macro>

<xf:macro name="updates" arg-upgradeCheck="!">
	<xf:if is="$xf.visitor.hasAdminPermission('upgradeXenForo') AND $upgradeCheck.available_updates AND !$upgradeCheck.hasLicenseErrors()">
		<xf:if contentcheck="true">
			<div class="blockMessage blockMessage--highlight blockMessage--iconic">
				<xf:contentcheck>
					<xf:if is="$upgradeCheck.hasAvailableUpdate('XF')">
						{{ phrase('xenforo_x_is_now_available', {'version': $upgradeCheck.available_updates.XF.version_string}) }}
						<div style="margin-top: .5em">
							<xf:button href="{{ link('tools/upgrade-xf') }}" class="button--link">{{ phrase('upgrade_now') }}
							</xf:button>
						</div>
					<xf:elseif is="$upgradeCheck.hasAvailableAddOnUpdate()" />
						{{ phrase('following_updates_official_add_ons_now_available') }}
						<ul class="listInline listInline--comma listInline--selfInline">
							<xf:foreach loop="$upgradeCheck.available_updates" key="$addOnId" value="$update" if="$upgradeCheck.hasAvailableUpdate($addOnId)">
								<li>{$upgradeCheck.RelevantAddOns.{$addOnId}.title} {$update.version_string}</li>
							</xf:foreach>
						</ul>
						<div style="margin-top: .5em">
							<xf:button href="{{ link('tools/upgrade-xf-add-on') }}" class="button--link">
								{{ phrase('upgrade_now') }}
							</xf:button>
						</div>
					</xf:if>
				</xf:contentcheck>
			</div>
		</xf:if>
	</xf:if>
</xf:macro>

<xf:macro name="full_status"
	arg-upgradeCheck="!"
	arg-showSeriousErrors="{{ false }}"
	arg-showWarnings="{{ true }}"
	arg-showUpdates="{{ true }}"
	arg-showSuccess="{{ false }}">

	<xf:if is="$showSeriousErrors">
		<xf:macro name="serious_errors" arg-upgradeCheck="{$upgradeCheck}" />
	</xf:if>
	<xf:if is="$showWarnings">
		<xf:macro name="warnings" arg-upgradeCheck="{$upgradeCheck}" />
	</xf:if>
	<xf:if is="$showUpdates">
		<xf:macro name="updates" arg-upgradeCheck="{$upgradeCheck}" />
	</xf:if>

	<xf:if is="$showSuccess AND !$upgradeCheck.hasNotice()">
		<div class="blockMessage blockMessage--success">
			{{ phrase('version_of_xenforo_and_official_add_ons_fully_up_to_date_no_issues') }}
		</div>
	</xf:if>
</xf:macro>]]></template>
  <template type="admin" title="user_alert" version_id="2000036" version_string="2.0.0 Beta 6"><![CDATA[<xf:title>{{ phrase('alert_users') }}</xf:title>
<xf:description>{{ phrase('alert_users_description') }}</xf:description>

<xf:if is="$sent">
	<div class="blockMessage blockMessage--success blockMessage--iconic">
		{{ phrase('your_alert_was_sent_to_x_users', {'sent': $sent|number}) }}
	</div>
</xf:if>

<xf:form action="{{ link('users/alert/confirm') }}" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:textboxrow name="from_user" value="{$xf.visitor.username}" ac="single"
				label="{{ phrase('from_user') }}"
				explain="{{ phrase('from_user_explain') }}" />

			<hr class="formRowSep" />

			<xf:textboxrow name="link_url" type="url"
				label="{{ phrase('link_url') }}"
				dir="ltr" />

			<xf:textboxrow name="link_title"
				label="{{ phrase('link_title') }}"
				explain="{{ phrase('link_title_explain') }}" />

			<xf:codeeditorrow name="alert_body"
				mode="html" data-line-wrapping="true"
				class="codeEditor--autoSize codeEditor--proportional"
				label="{{ phrase('alert_body') }}"
				hint="{{ phrase('you_may_use_html') }}"
				explain="{{ phrase('following_placeholders_will_be_replaced_in_message') }} {{ phrase('you_may_also_use_phrase_title_which_will_be_replaced') }}" />
		</div>

		<h2 class="block-formSectionHeader"><span class="block-formSectionHeader-aligner">{{ phrase('user_criteria') }}</span></h2>
		<div class="block-body">
			<xf:include template="helper_user_search_criteria" />
		</div>

		<xf:submitrow submit="{{ phrase('proceed...') }}" sticky="true" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="user_alert_confirm" version_id="2000170" version_string="2.0.1"><![CDATA[<xf:title>{{ phrase('confirm_sending_alert') }}</xf:title>

<xf:form action="{{ link('users/alert/send') }}" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:formrow label="{{ phrase('number_of_users_matching_criteria') }}">
				{$total|number}
				<span role="presentation" aria-hidden="true">&middot;</span>
				<a href="{{ link('users/list', null, {'criteria': $criteria}) }}">{{ phrase('view_full_list') }}</a>
			</xf:formrow>
			<xf:formrow label="{{ phrase('test') }}">
				<xf:button type="submit" name="test" value="1">{{ phrase('send_test') }}</xf:button>
			</xf:formrow>
		</div>
		<xf:submitrow submit="{{ phrase('send') }}" />
	</div>

	<xf:hiddenval name="json_criteria">{$criteria|json}</xf:hiddenval>

	<xf:hiddenval name="total">{$total}</xf:hiddenval>

	<xf:hiddenval name="from_user">{$user.username}</xf:hiddenval>

	<xf:hiddenval name="link_url">{$alert.link_url}</xf:hiddenval>
	<xf:hiddenval name="link_title">{$alert.link_title}</xf:hiddenval>
	<xf:hiddenval name="alert_body">{$alert.alert_body}</xf:hiddenval>
</xf:form>]]></template>
  <template type="admin" title="user_avatar" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('avatar') }}</xf:title>

<xf:form action="{{ link('users/avatar', $user) }}" upload="true" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:if is="$user.getAvatarUrl('s')">
				<xf:formrow label="{{ phrase('current_avatar') }}">
					<xf:avatar user="$user" size="l" />
					<div><br /><xf:checkbox standalone="true"><xf:option name="delete_avatar" label="{{ phrase('delete_current_avatar') }}" /></xf:checkbox></div>
				</xf:formrow>
			</xf:if>

			<xf:uploadrow name="upload" accept=".gif,.jpeg,.jpg,.jpe,.png"
				label="{{ phrase('upload_avatar') }}" />
		</div>
		<xf:submitrow icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="user_batch_update" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('batch_update_users') }}</xf:title>

<xf:if is="$success">
	<div class="blockMessage blockMessage--success blockMessage--iconic">{{ phrase('batch_update_was_completed_successfully') }}</div>
</xf:if>

<xf:form action="{{ link('users/batch-update/confirm') }}" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:include template="helper_user_search_criteria" />
		</div>
		<xf:submitrow submit="{{ phrase('proceed...') }}" sticky="true" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="user_batch_update_confirm" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('batch_update_users') }}</xf:title>

<xf:form action="{{ link('users/batch-update/action') }}" class="block">
	<div class="block-container">
		<h2 class="block-header">{{ phrase('update_users') }}</h2>
		<div class="block-body">
			<xf:formrow label="{{ phrase('matched_users') }}">
				{$total|number}
				<xf:if is="!$userIds">
					<span role="presentation" aria-hidden="true">&middot;</span>
					<a href="{{ link('users/list', null, {'criteria': $criteria, 'all': true}) }}">{{ phrase('view_or_filter_matches') }}</a>
				</xf:if>
			</xf:formrow>

			<hr class="formRowSep" />

			<xf:selectrow name="actions[set_primary_group_id]"
				label="{{ phrase('set_primary_user_group') }}">

				<xf:option></xf:option>
				<xf:foreach loop="$userGroups" value="$userGroup">
					<xf:option value="{$userGroup.user_group_id}">{$userGroup.title}</xf:option>
				</xf:foreach>
			</xf:selectrow>

			<xf:selectrow name="actions[add_group_id]"
				label="{{ phrase('add_secondary_user_group') }}">

				<xf:option></xf:option>
				<xf:foreach loop="$userGroups" value="$userGroup">
					<xf:option value="{$userGroup.user_group_id}">{$userGroup.title}</xf:option>
				</xf:foreach>
			</xf:selectrow>

			<xf:selectrow name="actions[remove_group_id]"
				label="{{ phrase('remove_secondary_user_group') }}">

				<xf:option></xf:option>
				<xf:foreach loop="$userGroups" value="$userGroup">
					<xf:option value="{$userGroup.user_group_id}">{$userGroup.title}</xf:option>
				</xf:foreach>
			</xf:selectrow>

			<xf:textboxrow name="actions[custom_title]"
				label="{{ phrase('set_custom_title') }}" />

			<xf:checkboxrow
				explain="{{ phrase('super_admins_will_not_be_updated') }}">

				<xf:option name="actions[discourage]">{{ phrase('discourage_users') }}</xf:option>
				<xf:option name="actions[undiscourage]">{{ phrase('undiscourage_users') }}</xf:option>
				<xf:option name="actions[ban]">{{ phrase('ban_users_permanently') }}</xf:option>
				<xf:option name="actions[unban]">{{ phrase('unban_users') }}</xf:option>
				<xf:option name="actions[remove_avatar]">{{ phrase('remove_avatars') }}</xf:option>
				<xf:option name="actions[remove_signature]">{{ phrase('remove_signatures') }}</xf:option>
				<xf:option name="actions[remove_website]">{{ phrase('remove_websites') }}</xf:option>
			</xf:checkboxrow>
		</div>
		<xf:submitrow submit="{{ phrase('update_users') }}" icon="save" />
	</div>

	<xf:if is="$userIds">
		<xf:hiddenval name="user_ids">{$userIds|json}</xf:hiddenval>
	<xf:else />
		<xf:hiddenval name="criteria">{$criteria|json}</xf:hiddenval>
	</xf:if>
</xf:form>

<xf:form action="{{ link('users/batch-update/action') }}" class="block">
	<div class="block-container">
		<h2 class="block-header">{{ phrase('delete_users') }}</h2>
		<div class="block-body">
			<xf:checkboxrow
				explain="{{ phrase('administrators_and_moderators_will_not_be_deleted') }}">

				<xf:option name="actions[delete]">{{ phrase('confirm_deletion_of_x_users', {'total': $total|number}) }}</xf:option>
			</xf:checkboxrow>
		</div>
		<xf:submitrow name="confirm_delete" icon="delete" />
	</div>

	<xf:if is="$userIds">
		<xf:hiddenval name="user_ids">{$userIds|json}</xf:hiddenval>
	<xf:else />
		<xf:hiddenval name="criteria">{$criteria|json}</xf:hiddenval>
	</xf:if>
</xf:form>]]></template>
  <template type="admin" title="user_change_log" version_id="2001070" version_string="2.0.10"><![CDATA[<xf:title>{{ phrase('user_change_logs:') }} {$user.username}</xf:title>

<xf:if is="$changesGrouped">
	<div class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:macro name="change_log_list" arg-changesGrouped="{$changesGrouped}" />
			</div>
		</div>
		<xf:pagenav page="{$page}" perpage="{$perPage}" total="{$total}"
			link="users/change-log" data="{$user}"
			wrapperclass="block-outer block-outer--after" />
	</div>
<xf:else />
	<div class="blockMessage">{{ phrase('no_changes_have_been_logged') }}</div>
</xf:if>

<xf:macro name="change_log_list" arg-changesGrouped="!">
	<xf:datalist data-xf-init="responsive-data-list">
	<thead>
		<xf:datarow rowtype="header">
			<xf:cell>{{ phrase('field_name') }}</xf:cell>
			<xf:cell>{{ phrase('old_value') }}</xf:cell>
			<xf:cell>{{ phrase('new_value') }}</xf:cell>
		</xf:datarow>
	</thead>
	<xf:foreach loop="$changesGrouped" value="$group">
		<tbody class="dataList-rowGroup">
			<xf:datarow rowtype="subsection" rowclass="dataList-row--noHover">
				<xf:cell href="{{ link('users/edit', $group.content) }}" colspan="3">
					<span class="u-pullRight"><xf:date time="{$group.date}" /></span>
					<ul class="listInline listInline--bullet">
						<li><xf:avatar user="$group.content" size="xxs" href="" /> {$group.content.username}</li>
						<xf:if is="$group.editUser && $group.editUser.user_id != $group.content_id">
							<li>{{ phrase('edited_by_x', {'name': $group.editUser.username}) }}</li>
						</xf:if>
					</ul>
				</xf:cell>
			</xf:datarow>
			<xf:foreach loop="$group.changes" value="$change">
				<xf:datarow rowclass="{{ $change.protected ? 'dataList-row--protected' : '' }}">
					<xf:cell>{$change.label}</xf:cell>
					<xf:cell class="dataList-cell--breakWord">{$change.old}</xf:cell>
					<xf:cell class="dataList-cell--breakWord">{$change.new}</xf:cell>
				</xf:datarow>
			</xf:foreach>
		</tbody>
	</xf:foreach>
	</xf:datalist>
</xf:macro>]]></template>
  <template type="admin" title="user_delete" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link('users/delete', $user) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('please_confirm_that_you_want_to_delete_following:') }}
				<strong><a href="{{ link('users/edit', $user) }}">{$user.username}</a></strong>
				<div class="blockMessage blockMessage--important"><b>{{ phrase('note:') }}</b> {{ phrase('this_will_not_remove_any_content_this_user_has_already_created') }}</div>
			</xf:inforow>
			<xf:if is="$user.is_super_admin">
				<xf:passwordboxrow name="visitor_password"
					label="{{ phrase('your_password') }}"
					explain="{{ phrase('you_must_enter_your_current_password_to_validate_this_request') }}" />
			</xf:if>
			<xf:radiorow name="rename">
				<xf:option value="0" selected="true">{{ phrase('do_not_rename_this_user') }}</xf:option>
				<xf:option value="1" label="{{ phrase('rename_this_user_to:') }}">
					<xf:textbox name="rename_to" value="{{ phrase('deleted_member') }} {$user.user_id}" maxlength="max_length($user, 'username')" />
				</xf:option>
				<xf:explain>{{ phrase('user_delete_rename_explain') }}</xf:explain>
			</xf:radiorow>
		</div>
		<xf:submitrow icon="delete" />
	</div>
	<xf:redirect />
</xf:form>]]></template>
  <template type="admin" title="user_delete_conversations" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link('users/delete-conversations', $user) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('this_will_delete_all_conversations_started_by_this_user') }}
			</xf:inforow>
		</div>
		<xf:submitrow rowtype="simple" icon="delete" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="user_edit" version_id="2010132" version_string="2.1.1 Beta 2"><![CDATA[<xf:if is="$user.isInsert()">
	<xf:title>{{ phrase('add_user') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_user:') }} {$user.username}</xf:title>
</xf:if>

<xf:pageaction if="$user.isUpdate()">
	<div>
		<xf:button href="{{ link('users/delete', $user) }}" icon="delete" overlay="true" />

		<xf:button class="menuTrigger" data-xf-click="menu" aria-expanded="false" aria-haspopup="true">{{ phrase('actions') }}</xf:button>
		<div class="menu" data-menu="menu" aria-hidden="true">
			<div class="menu-content">
				<h3 class="menu-header">{{ phrase('actions') }}</h3>
				<!--[XF:actions_menu:top]-->
				<a href="{{ link_type('public', 'members', $user) }}" class="menu-linkRow" target="_blank">{{ phrase('view_public_profile') }}</a>

				<xf:if is="$user.is_banned">
					<a href="{{ link('banning/users/lift', $user) }}" class="menu-linkRow" data-xf-click="overlay">{{ phrase('lift_ban') }}</a>
				<xf:elseif is="!$user.is_moderator AND !$user.is_admin" />
					<a href="{{ link('banning/users/add', $user) }}" class="menu-linkRow" data-xf-click="overlay">{{ phrase('ban_user') }}</a>
				</xf:if>

				<xf:if is="!$user.is_moderator AND !$user.is_admin">
					<a href="{{ link('users/merge', $user) }}" class="menu-linkRow" data-xf-click="overlay">{{ phrase('merge_with_user') }}</a>
					<a href="{{ link('users/delete-conversations', $user) }}" class="menu-linkRow" data-xf-click="overlay">{{ phrase('delete_conversations') }}</a>
				</xf:if>

				<xf:if is="!$user.is_super_admin AND $xf.options.editHistory.enabled">
					<a href="{{ link('users/revert-message-edit', $user) }}" class="menu-linkRow" data-xf-click="overlay">{{ phrase('revert_message_edits') }}</a>
				</xf:if>

				<xf:if is="!$user.is_super_admin">
					<a href="{{ link('users/remove-reactions', $user) }}" class="menu-linkRow" data-xf-click="overlay">{{ phrase('remove_reactions') }}</a>
					<a href="{{ link('users/manage-watched-threads', $user) }}" class="menu-linkRow" data-xf-click="overlay">{{ phrase('manage_watched_threads') }}</a>
				</xf:if>

				<xf:if is="$user.isAwaitingEmailConfirmation()">
					<a href="{{ link('users/resend-confirmation', $user) }}" class="menu-linkRow" data-xf-click="overlay">{{ phrase('resend_account_confirmation') }}</a>
				</xf:if>
				<!--[XF:actions_menu:bottom]-->
			</div>
		</div>
	</div>
</xf:pageaction>

<xf:if is="$success">
	<div class="blockMessage blockMessage--success blockMessage--iconic">{{ phrase('redirect_changes_saved_successfully') }}</div>
</xf:if>

<div class="block">
	<xf:if is="$user.user_id">
	<xf:if contentcheck="true">
		<div class="block-outer">
			<ul class="listInline listInline--bullet">
			<xf:contentcheck>
				<!--[XF:status_list:start]-->
				<xf:if is="$user.is_admin">
					<li><a href="{{ link('admins/edit', $user) }}">{{ $user.is_super_admin ?  phrase('super_administrator') : phrase('administrator') }}</a></li>
				</xf:if>
				<xf:if is="$user.is_moderator">
					<li><a href="{{ link('moderators') }}">{{ phrase('moderator') }}</a></li>
				</xf:if>
				<xf:if is="$user.Option.is_discouraged">
					<li>{{ phrase('discouraged') }}</li>
				</xf:if>
				<xf:if is="$user.is_banned">
					<li><a href="{{ link('banning/users/lift', $user) }}" data-xf-click="overlay">{{ phrase('banned') }}</a></li>
				</xf:if>
				<!--[XF:status_list:end]-->
			</xf:contentcheck>
			</ul>
		</div>
	</xf:if>
	</xf:if>

	<xf:form action="{{ link('users/save', $user) }}" ajax="true" class="block-container" novalidate="novalidate">
		<xf:if is="$user.is_super_admin">
			<div class="block-body">
				<xf:passwordboxrow name="visitor_password" label="{{ phrase('your_password') }}">
					<xf:explain>{{ phrase('you_must_enter_your_current_password_to_validate_this_request') }}</xf:explain>
				</xf:passwordboxrow>
			</div>
		</xf:if>

		<h2 class="block-tabHeader tabs hScroller" data-xf-init="tabs h-scroller" data-state="replace" role="tablist">
			<span class="hScroller-scroll">
				<!--[XF:tabs:start]-->
				<a class="tabs-tab is-active" role="tab" tabindex="0"
					id="user-details"
					aria-controls="user-details"
					href="{{ link('users/edit', $user) }}#user-details">{{ phrase('user_details') }}</a>
				<xf:if is="$user.user_id">
					<a class="tabs-tab" role="tab" tabindex="0"
						id="user-extras"
						aria-controls="user-extras"
						href="{{ link('users/edit', $user) }}#user-extras">{{ phrase('extra') }}</a>
					<a class="tabs-tab" role="tab" tabindex="0"
						id="user-ips"
						aria-controls="user-ips"
						href="{{ link('users/edit', $user) }}#user-ips">{{ phrase('ip_addresses') }}</a>
					<a class="tabs-tab" role="tab" tabindex="0"
						id="user-changes"
						aria-controls="user-changes"
						href="{{ link('users/edit', $user) }}#user-changes">{{ phrase('change_log') }}</a>
				</xf:if>
				<!--[XF:tabs:end]-->
			</span>
		</h2>

		<ul class="tabPanes">
			<!--[XF:tab_panes:start]-->
			<li class="is-active" role="tabpanel" aria-labelledby="user-details">
				<div class="block-body">
					<xf:textboxrow name="user[username]" value="{$user.username}"
						maxlength="{{ $xf.options.usernameLength.max ?: max_length($user, 'username') }}"
						label="{{ phrase('user_name') }}" />

					<xf:textboxrow name="user[email]" value="{$user.email}" type="email" dir="ltr"
						maxlength="{{ max_length($user, 'email') }}"
						label="{{ phrase('email') }}" />

					<xf:if is="$user.exists()">
						<xf:radiorow name="change_password"
							label="{{ phrase('password') }}">

							<xf:option value="" checked="checked"
								label="{{ phrase('do_not_change') }}" />
							<xf:option value="generate"
								label="{{ phrase('send_password_reset') }}"
								hint="{{ phrase('password_reset_confirmation_will_be_emailed_to_user') }}" />
							<xf:option value="change"
								label="{{ phrase('set_new_password:') }}">
								<xf:textbox name="password" autocomplete="off" />
							</xf:option>
						</xf:radiorow>
					<xf:else />
						<xf:textboxrow name="password" autocomplete="off"
							label="{{ phrase('password') }}" />
					</xf:if>

					<xf:if is="$user.user_id">
						<xf:formrow label="{{ phrase('two_step_verification') }}">
							<xf:if is="$user.Option.use_tfa">
								<ul class="inputChoices">
									<li class="inputChoices-choice inputChoices-plainChoice">{{ phrase('enabled') }}</li>
									<li class="inputChoices-choice"><xf:checkbox standalone="true"><xf:option name="disable_tfa"
										label="{{ phrase('disable_two_step_verification') }}" /></xf:checkbox></li>
								</ul>
							<xf:else />
								{{ phrase('disabled') }}
							</xf:if>
						</xf:formrow>

						<xf:formrow label="{{ phrase('avatar') }}">
							<xf:avatar user="$user" size="s" href="{{ link('users/avatar', $user) }}" data-xf-click="overlay" />
							<a href="{{ link('users/avatar', $user) }}" data-xf-click="overlay">{{ phrase('edit_avatar') }}</a>
						</xf:formrow>
						<xf:formrow label="{{ phrase('joined') }}">
							<xf:date time="{$user.register_date}" />
						</xf:formrow>
						<xf:if is="$user.last_activity">
							<xf:formrow label="{{ phrase('last_activity') }}">
								<xf:date time="{$user.last_activity}" />
							</xf:formrow>
						</xf:if>
					</xf:if>

					<hr class="formRowSep" />

					<xf:set var="$_userChangesHtml">
						<xf:if is="$user.user_id">
							<xf:if is="!$user.is_moderator"><a href="{{ link('moderators') }}">{{ phrase('make_this_user_moderator') }}</a></xf:if>
							<xf:if is="!$user.is_admin AND !$user.is_moderator">/</xf:if>
							<xf:if is="!$user.is_admin"><a href="{{ link('admins') }}">{{ phrase('make_this_user_administrator') }}</a></xf:if>
						</xf:if>
					</xf:set>

					<xf:selectrow name="user[user_group_id]" value="{$user.user_group_id}"
						label="{{ phrase('user_group') }}">
						<xf:options source="$userGroups" />
						<xf:explain>{$_userChangesHtml|raw}</xf:explain>
					</xf:selectrow>

					<xf:checkboxrow name="user[secondary_group_ids]" value="{$user.secondary_group_ids}"
						listclass="listColumns"
						label="{{ phrase('secondary_user_groups') }}">
						<xf:options source="$userGroups" />
					</xf:checkboxrow>

					<xf:checkboxrow>
						<xf:option name="user[is_staff]" selected="$user.is_staff"
							label="{{ phrase('display_user_as_staff') }}"
							hint="{{ phrase('if_selected_this_user_will_be_listed_publicly_as_staff_member') }}" />
					</xf:checkboxrow>

					<xf:selectrow name="user[user_state]" value="{$user.user_state}"
						label="{{ phrase('user_state') }}">

						<xf:option value="valid">{{ phrase('valid') }}</xf:option>
						<xf:option value="email_confirm">{{ phrase('awaiting_email_confirmation') }}</xf:option>
						<xf:option value="email_confirm_edit">{{ phrase('awaiting_email_confirmation_from_edit') }}</xf:option>
						<xf:option value="email_bounce">{{ phrase('email_invalid_bounced') }}</xf:option>
						<xf:option value="moderated">{{ phrase('awaiting_approval') }}</xf:option>
						<xf:option value="rejected">{{ phrase('rejected') }}</xf:option>
						<xf:option value="disabled">{{ phrase('disabled') }}</xf:option>
						<xf:explain>
							{{ phrase('when_user_state_non_x_users_receive_permissions_guest_group', {'valid_state': phrase('valid'), 'guest': '<a href="' . link('user-groups/edit', {'user_group_id': 1, 'title': $userGroups.1}) . '" target="_blank">' . $userGroups.1 . '</a>'}) }}
						</xf:explain>
					</xf:selectrow>

					<hr class="formRowSep" />

					<xf:checkboxrow>
						<xf:option name="option[is_discouraged]" selected="$user.Option.is_discouraged"
							hint="{{ phrase('discouraged_hint') }}">{{ phrase('discouraged') }}</xf:option>
						<xf:explain><a href="{{ link('banning/discouraged-ips') }}">{{ phrase('alternatively_use_ip_discouragement') }}</a></xf:explain>
					</xf:checkboxrow>
				</div>

				<h3 class="block-formSectionHeader">
					<span class="collapseTrigger collapseTrigger--block" data-xf-click="toggle" data-target="< :up:next">
						<span class="block-formSectionHeader-aligner">{{ phrase('personal_details') }}</span>
					</span>
				</h3>
				<div class="block-body block-body--collapsible">
					<xf:macro template="public:helper_user_dob_edit" name="dob_edit" arg-dobData="{$user.Profile}" />

					<hr class="formRowSep" />

					<xf:textboxrow name="profile[location]" value="{$user.Profile.location_}"
						label="{{ phrase('location') }}" />
					<xf:textboxrow name="profile[website]" value="{$user.Profile.website_}" type="url"
						label="{{ phrase('website') }}"
						dir="ltr" />
					<xf:macro template="public:custom_fields_macros" name="custom_fields_edit"
						arg-type="users" arg-group="personal" arg-set="{$user.Profile.custom_fields}" arg-editMode="admin" />
					<xf:textarearow name="profile[about]" value="{$user.Profile.about_}" autosize="true"
						label="{{ phrase('about') }}"
						hint="{{ phrase('you_may_use_bb_code') }}" />
				</div>

				<h3 class="block-formSectionHeader">
					<span class="collapseTrigger collapseTrigger--block" data-xf-click="toggle" data-target="< :up:next">
						<span class="block-formSectionHeader-aligner">{{ phrase('profile_info') }}</span>
					</span>
				</h3>
				<div class="block-body block-body--collapsible">
					<xf:textboxrow name="user[custom_title]" value="{$user.custom_title_}"
						maxlength="{{ max_length($user, 'custom_title') }}"
						label="{{ phrase('custom_title') }}" />
					<xf:textarearow name="profile[signature]" value="{$user.Profile.signature_}" autosize="true"
						label="{{ phrase('signature') }}"
						hint="{{ phrase('you_may_use_bb_code') }}" />

					<hr class="formRowSep" />

					<xf:numberboxrow name="user[message_count]" value="{$user.message_count}" min="0"
						label="{{ phrase('messages') }}" />
					<xf:numberboxrow name="user[reaction_score]" value="{$user.reaction_score}"
						label="{{ phrase('reaction_score') }}" />
					<xf:numberboxrow name="user[trophy_points]" value="{$user.trophy_points}" min="0"
						label="{{ phrase('trophy_points') }}" />
				</div>

				<h3 class="block-formSectionHeader">
					<span class="collapseTrigger collapseTrigger--block" data-xf-click="toggle" data-target="< :up:next">
						<span class="block-formSectionHeader-aligner">{{ phrase('additional_contact') }}</span>
					</span>
				</h3>
				<div class="block-body block-body--collapsible">
					<xf:macro template="public:custom_fields_macros" name="custom_fields_edit"
						arg-type="users" arg-group="contact" arg-set="{$user.Profile.custom_fields}" arg-editMode="admin" />
				</div>

				<h3 class="block-formSectionHeader">
					<span class="collapseTrigger collapseTrigger--block" data-xf-click="toggle" data-target="< :up:next">
						<span class="block-formSectionHeader-aligner">{{ phrase('preferences') }}</span>
					</span>
				</h3>
				<div class="block-body block-body--collapsible">
					<xf:selectrow name="user[style_id]" value="{$user.style_id}"
						label="{{ phrase('style') }}">

						<xf:option value="0">{{ phrase('(use_default_style)') }}</xf:option>
						<xf:foreach loop="$styleTree.getFlattened(0)" value="$treeEntry">
							<xf:option value="{$treeEntry.record.style_id}">{{ repeat('--', $treeEntry.depth) }} {$treeEntry.record.title}</xf:option>
						</xf:foreach>
					</xf:selectrow>

					<hr class="formRowSep" />

					<xf:selectrow name="user[language_id]" value="{$user.language_id}"
						label="{{ phrase('language') }}">

						<xf:foreach loop="$languageTree.getFlattened(0)" value="$treeEntry">
							<xf:option value="{$treeEntry.record.language_id}">{{ repeat('--', $treeEntry.depth) }}
								{$treeEntry.record.title}</xf:option>
						</xf:foreach>
					</xf:selectrow>

					<xf:selectrow name="user[timezone]" value="{$user.timezone}"
						label="{{ phrase('time_zone') }}">

						<xf:options source="$timeZones" />
					</xf:selectrow>

					<hr class="formRowSep" />

					<xf:checkboxrow>
						<xf:option name="option[content_show_signature]" selected="$user.Option.content_show_signature">
							{{ phrase('show_signatures_with_messages') }}</xf:option>
						<xf:option name="option[email_on_conversation]" selected="$user.Option.email_on_conversation">
							{{ phrase('receive_email_when_new_conversation_message_is_received') }}</xf:option>
					</xf:checkboxrow>

					<xf:selectrow name="option[creation_watch_state]" value="{$user.Option.creation_watch_state}"
						label="{{ phrase('watch_content_on_creation') }}">

						<xf:option value="watch_no_email">{{ phrase('yes') }}</xf:option>
						<xf:option value="watch_email">{{ phrase('yes_with_email') }}</xf:option>
						<xf:option value="">{{ phrase('no') }}</xf:option>
					</xf:selectrow>

					<xf:selectrow name="option[interaction_watch_state]" value="{$user.Option.interaction_watch_state}"
						label="{{ phrase('watch_content_on_interaction') }}">

						<xf:option value="watch_no_email">{{ phrase('yes') }}</xf:option>
						<xf:option value="watch_email">{{ phrase('yes_with_email') }}</xf:option>
						<xf:option value="">{{ phrase('no') }}</xf:option>
					</xf:selectrow>

					<xf:macro template="public:custom_fields_macros" name="custom_fields_edit"
						arg-type="users"
						arg-group="preferences"
						arg-set="{$user.Profile.custom_fields}"
						arg-editMode="admin" />
				</div>

				<h3 class="block-formSectionHeader">
					<span class="collapseTrigger collapseTrigger--block" data-xf-click="toggle" data-target="< :up:next">
						<span class="block-formSectionHeader-aligner">{{ phrase('privacy') }}</span>
					</span>
				</h3>
				<div class="block-body block-body--collapsible">
					<xf:checkboxrow label="{{ phrase('general_privacy') }}">
						<xf:option name="user[visible]" selected="$user.visible">
							{{ phrase('show_online_status') }}
						</xf:option>
						<xf:option name="user[activity_visible]" selected="$user.activity_visible">
							{{ phrase('show_current_activity') }}
						</xf:option>
						<xf:option name="option[receive_admin_email]" selected="$user.Option.receive_admin_email">
							{{ phrase('receive_site_mailings_option') }}
						</xf:option>
						<xf:option name="option[show_dob_date]" selected="$user.Option.show_dob_date">
							{{ phrase('show_day_and_month_of_birth') }}
						</xf:option>
						<xf:option name="option[show_dob_year]" selected="$user.Option.show_dob_year">
							{{ phrase('show_year_of_birth') }}
						</xf:option>
					</xf:checkboxrow>

					<hr class="formRowSep" />

					<!--[XF:privacy_select:allow_view_profile]-->
					<xf:macro name="privacy_select"
						arg-name="allow_view_profile"
						arg-label="{{ phrase('view_this_users_profile_page_details') }}"
						arg-user="{$user}" />

					<!--[XF:privacy_select:allow_post_profile]-->
					<xf:macro name="privacy_select"
						arg-name="allow_post_profile"
						arg-label="{{ phrase('post_messages_on_this_users_profile_page') }}"
						arg-user="{$user}"
						arg-hideEveryone="{{true}}" />

					<!--[XF:privacy_select:allow_receive_news_feed]-->
					<xf:macro name="privacy_select"
						arg-name="allow_receive_news_feed"
						arg-label="{{ phrase('receive_this_users_news_feed') }}"
						arg-user="{$user}" />

					<hr class="formRowSep" />

					<!--[XF:privacy_select:allow_send_personal_conversation]-->
					<xf:macro name="privacy_select"
						arg-name="allow_send_personal_conversation"
						arg-label="{{ phrase('initiate_conversations_with_this_user') }}"
						arg-user="{$user}"
						arg-hideEveryone="{{true}}" />

					<!--[XF:privacy_select:allow_view_identities]-->
					<xf:macro name="privacy_select"
						arg-name="allow_view_identities"
						arg-label="{{ phrase('view_this_users_identities') }}"
						arg-user="{$user}" />
				</div>

				<xf:submitrow icon="save" sticky="true" />
			</li>

			<xf:if is="$user.user_id">
				<li data-href="{{ link('users/extra', $user) }}" role="tabpanel" aria-labelledby="user-extras">
					<div class="block-body block-row">{{ phrase('loading...') }}</div>
				</li>
			</xf:if>

			<xf:if is="$user.user_id">
				<li data-href="{{ link('users/user-ips', $user) }}" role="tabpanel" aria-labelledby="user-ips">
					<div class="block-body block-row">{{ phrase('loading...') }}</div>
				</li>
			</xf:if>

			<xf:if is="$user.user_id">
				<li data-href="{{ link('users/change-log', $user) }}" role="tabpanel" aria-labelledby="user-changes">
					<div class="block-body block-row">{{ phrase('loading...') }}</div>
				</li>
			</xf:if>
			<!--[XF:tab_panes:end]-->
		</ul>
	</xf:form>
</div>

<xf:macro name="privacy_select" arg-name="!" arg-label="!" arg-user="!" arg-hideEveryone="{{false}}">
	<xf:selectrow name="privacy[{$name}]" value="{$user.Privacy.{$name}}"
		label="{$label}">

		<xf:option value="none">{{ phrase('nobody') }}</xf:option>
		<xf:if is="!$hideEveryone">
			<xf:option value="everyone">{{ phrase('all_visitors') }}</xf:option>
		</xf:if>
		<xf:option value="members">{{ phrase('members_only') }}</xf:option>
		<xf:option value="followed">{{ phrase('people_x_follows', {'name': ($user.username ? $user.username : '[' . phrase('user') . ']')}) }}</xf:option>
	</xf:selectrow>
</xf:macro>]]></template>
  <template type="admin" title="user_email" version_id="2000038" version_string="2.0.0 Beta 8"><![CDATA[<xf:title>{{ phrase('email_users') }}</xf:title>
<xf:description>{{ phrase('email_users_description') }}</xf:description>

<xf:if is="$sent">
	<div class="blockMessage blockMessage--success blockMessage--iconic">
		{{ phrase('your_email_was_sent_to_x_users', {'sent': $sent|number}) }}
	</div>
</xf:if>

<xf:form action="{{ link('users/email/confirm') }}" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:checkboxrow>
				<xf:option name="list_only">{{ phrase('only_generate_list_of_email_addresses') }}</xf:option>
			</xf:checkboxrow>

			<xf:textboxrow name="from_name" value="{{ $xf.options.emailSenderName ? $xf.options.emailSenderName : $xf.options.boardTitle }}"
				label="{{ phrase('from_name') }}" />

			<xf:textboxrow name="from_email" value="{$xf.options.defaultEmailAddress}" type="email"
				label="{{ phrase('from_email') }}"/>

			<hr class="formRowSep" />

			<xf:textboxrow name="email_title"
				label="{{ phrase('email_title') }}" />

			<xf:radiorow name="email_format"
				label="{{ phrase('email_format') }}">

				<xf:option value="" selected="true"
					label="{{ phrase('plain_text') }}" />
				<xf:option value="html"
					label="HTML"
					hint="{{ phrase('note_that_email_clients_handle_html_in_widely_varying_ways') }}" />
			</xf:radiorow>

			<xf:codeeditorrow name="email_body"
				mode="html" data-line-wrapping="true"
				class="codeEditor--autoSize codeEditor--proportional"
				label="{{ phrase('email_body') }}"
				explain=" {{ phrase('following_placeholders_will_be_replaced_in_message_for_email') }} {{ phrase('you_may_also_use_phrase_title_which_will_be_replaced') }}" />

			<xf:checkboxrow>
				<xf:option name="email_wrapped" selected="true"
					label="{{ phrase('include_default_email_wrapper') }}"
					hint="{{ phrase('include_default_email_wrapper_explain') }}" />
				<xf:option name="email_unsub" selected="true"
					label="{{ phrase('automatically_include_unsubscribe_link') }}"
					hint="{{ phrase('automatically_include_unsubscribe_link_desc') }}" />
			</xf:checkboxrow>
		</div>

		<h2 class="block-formSectionHeader"><span class="block-formSectionHeader-aligner">{{ phrase('user_criteria') }}</span></h2>
		<div class="block-body">
			<xf:checkboxrow>
				<xf:option name="criteria[Option][receive_admin_email]" selected="true">
					{{ phrase('only_send_to_users_opting_to_receive_emails_from_admin') }}
				</xf:option>
			</xf:checkboxrow>

			<xf:include template="helper_user_search_criteria" />
		</div>

		<xf:submitrow submit="{{ phrase('proceed...') }}" sticky="true" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="user_email_confirm" version_id="2000170" version_string="2.0.1"><![CDATA[<xf:title>{{ phrase('confirm_sending_email') }}</xf:title>

<xf:if is="$tested">
	<div class="blockMessage blockMessage--success blockMessage--iconic">{{ phrase('test_email_sent_to_x', {'email': $xf.visitor.email}) }}</div>
</xf:if>

<xf:form action="{{ link('users/email/send') }}" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:formrow label="{{ phrase('number_of_users_matching_criteria') }}">
				{$total|number}
				<span role="presentation" aria-hidden="true">&middot;</span>
				<a href="{{ link('users/list', null, {'criteria': $criteria}) }}">{{ phrase('view_full_list') }}</a>
			</xf:formrow>
			<xf:formrow label="{{ phrase('test') }}">
				<xf:button type="submit" name="test" value="1" class="button">{{ phrase('send_test') }}</xf:button>
			</xf:formrow>
		</div>
		<xf:submitrow submit="{{ phrase('send') }}" />
	</div>

	<xf:hiddenval name="json_criteria">{$criteria|json}</xf:hiddenval>

	<xf:hiddenval name="total">{$total}</xf:hiddenval>

	<xf:hiddenval name="from_name">{$email.from_name}</xf:hiddenval>
	<xf:hiddenval name="from_email">{$email.from_email}</xf:hiddenval>

	<xf:hiddenval name="email_title">{$email.email_title}</xf:hiddenval>
	<xf:hiddenval name="email_format">{$email.email_format}</xf:hiddenval>
	<xf:hiddenval name="email_body">{$email.email_body}</xf:hiddenval>
	<xf:hiddenval name="email_wrapped">{$email.email_wrapped}</xf:hiddenval>
	<xf:hiddenval name="email_unsub">{$email.email_unsub}</xf:hiddenval>
</xf:form>]]></template>
  <template type="admin" title="user_email_list" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('email_list') }}</xf:title>

<div class="block">
	<div class="block-container">
		<div class="block-body block-row">
			<pre style="max-height: 400px; overflow: auto;"><xf:foreach loop="$users" value="$user" if="$user.email">{$user.email}	{$user.username}
</xf:foreach></pre>
		</div>
	</div>
</div>]]></template>
  <template type="admin" title="user_extra" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{$user.username}</xf:title>

<div class="block">
	<div class="block-container">
		<h3 class="block-minorHeader">{{ phrase('active_user_upgrades') }}</h3>
		<div class="block-body">
			<xf:if is="$upgrades is not empty">
				<xf:datalist data-xf-init="responsive-data-list">
					<xf:datarow rowtype="header">
						<xf:cell>{{ phrase('upgrade_title') }}</xf:cell>
						<xf:cell>{{ phrase('start_date') }}</xf:cell>
						<xf:cell>{{ phrase('end_date') }}</xf:cell>
						<xf:cell></xf:cell>
						<xf:cell></xf:cell>
					</xf:datarow>
					<xf:foreach loop="$upgrades" value="$upgrade">
						<xf:datarow rowclass="dataList-row--noHover">
							<xf:cell>{$upgrade.Upgrade.title}</xf:cell>
							<xf:cell><xf:date time="{$upgrade.start_date}" /></xf:cell>
							<xf:cell>{{ $upgrade.end_date ? date($upgrade.end_date) : phrase('permanent') }}</xf:cell>
							<xf:action overlay="true" href="{{ link('user-upgrades/edit-active', null, {'user_upgrade_record_id': $upgrade.user_upgrade_record_id}) }}">{{ phrase('edit') }}</xf:action>
							<xf:action overlay="true" href="{{ link('user-upgrades/downgrade', null, {'user_upgrade_record_id': $upgrade.user_upgrade_record_id}) }}">{{ phrase('downgrade') }}</xf:action>
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			<xf:else />
				<div class="block-row">{{ phrase('none') }}</div>
			</xf:if>
		</div>

		<h3 class="block-minorHeader">{{ phrase('connected_accounts') }}</h3>
		<div class="block-body block-row">
			<xf:foreach loop="$connectedProviders" value="$provider" if="{$provider.isAssociated($user)}">
				<dl class="pairs pairs--columns pairs--fixedSmall">
					<dt>{$provider.title}</dt>
					<dd>{$provider.renderAssociated($user)|raw}</dd>
				</dl>
			<xf:else />
				{{ phrase('none') }}
			</xf:foreach>
		</div>
	</div>
</div>]]></template>
  <template type="admin" title="user_field_delete" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:include template="base_custom_field_delete" />]]></template>
  <template type="admin" title="user_field_edit" version_id="2000034" version_string="2.0.0 Beta 4"><![CDATA[<xf:include template="base_custom_field_edit">
	<xf:set var="$extraOptions">
		<xf:macro template="base_custom_field_macros" name="common_options"
			arg-field="{$field}"
			arg-supportsUserEditable="{{ true }}"
			arg-supportsEditableOnce="{{ true }}"
			arg-supportsModeratorEditable="{{ true }}" />

		<xf:checkboxrow>
			<xf:option name="show_registration" selected="$field.show_registration"
				label="{{ phrase('show_during_registration') }}"
				hint="{{ phrase('required_fields_will_always_be_shown_during_registration') }}" />
			<xf:option name="viewable_profile" selected="$field.viewable_profile"
				label="{{ phrase('viewable_on_profile_pages') }}"
				hint="{{ phrase('this_does_not_apply_to_fields_displayed_within_preferences_page') }}" />
			<xf:option name="viewable_message" selected="$field.viewable_message"
				label="{{ phrase('viewable_in_message_user_info') }}"
				hint="{{ phrase('dependent_upon_show_custom_fields_style_property') }}" />
		</xf:checkboxrow>
	</xf:set>
</xf:include>]]></template>
  <template type="admin" title="user_field_list" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('custom_user_fields') }}</xf:title>

<xf:include template="base_custom_field_list" />]]></template>
  <template type="admin" title="user_group_edit" version_id="2000036" version_string="2.0.0 Beta 6"><![CDATA[<xf:if is="$userGroup.isInsert()">
	<xf:title>{{ phrase('add_user_group') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_user_group:') }} {$userGroup.title}</xf:title>
</xf:if>

<xf:pageaction if="$userGroup.isUpdate()">
	<xf:button href="{{ link('user-groups/delete', $userGroup) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('user-groups/save', $userGroup) }}" ajax="true" class="block"
	data-xf-init="permission-form"
	data-permission-type="global">

	<div class="block-container">
		<div class="block-body">
			<xf:textboxrow name="title" value="{$userGroup.title}" maxlength="{{ max_length($userGroup, 'title') }}"
				label="{{ phrase('title') }}" />

			<xf:numberboxrow name="display_style_priority" value="{$userGroup.display_style_priority}" min="0"
				label="{{ phrase('display_styling_priority') }}"
				explain="{{ phrase('if_usermultiple_groups_user_title_from_highest_priority') }}" />

			<xf:radiorow name="user_title_override" value="{{ $userGroup.user_title ? 1 : 0 }}"
				label="{{ phrase('user_title_override') }}"
				explain="{{ phrase('you_may_use_html') }}">

				<xf:option value="0" label="{{ phrase('use_default_user_title_ladder') }}" />
				<xf:option value="1" label="{{ phrase('use_following_user_title:') }}">
					<xf:textbox name="user_title" value="{$userGroup.user_title}"
						maxlength="{{ max_length($userGroup, 'user_title') }}" size="50" />
				</xf:option>
			</xf:radiorow>

			<xf:codeeditorrow name="username_css" value="{$userGroup.username_css}"
				mode="css" data-line-wrapping="true"
				class="codeEditor--autoSize"
				label="{{ phrase('user_name_css') }}" />

			<xf:css src="public:app_user_banners.less" />
			<xf:textboxrow name="banner_text" value="{$userGroup.banner_text}" maxlength="{{ max_length($userGroup, 'banner_text') }}"
				label="{{ phrase('user_banner_text') }}"
				explain="{{ phrase('banner_displayed_under_name_of_members_of_this_group') }}" />

			<xf:formrow label="{{ phrase('user_banner_styling') }}">
				<xf:radio name="banner_css_class"
					value="{{ $userGroup.banner_css_class ? $userGroup.banner_css_class : 'userBanner userBanner--primary' }}"
					listclass="listColumns">

					<xf:foreach loop="$displayStyles" value="$class">
						<xf:option value="{$class}">
							<span title="{$class}" class="{$class}" data-xf-init="tooltip" style="display: inline">{{ phrase('banner') }}</span>
						</xf:option>
					</xf:foreach>

					<xf:option value="" selected="$userGroup.banner_css_class AND !in_array($userGroup.banner_css_class, $displayStyles)"
						label="{{ phrase('other_using_custom_css_class_name') }}">

						<xf:textbox name="banner_css_class_other"
							value="{{ ($userGroup.banner_css_class AND !in_array($userGroup.banner_css_class, $displayStyles)) ? $userGroup.banner_css_class : '' }}"
							maxlength="{{ max_length($userGroup, 'banner_css_class') }}" />
					</xf:option>
				</xf:radio>
			</xf:formrow>
		</div>

		<xf:js src="xf/permission.js" min="1" />
		<xf:css src="permission.less" />

		<xf:macro template="permission_macros" name="edit_groups"
			arg-interfaceGroups="{$permissionData.interfaceGroups}"
			arg-permissionsGrouped="{$permissionData.permissionsGrouped}"
			arg-values="{$permissionData.values}" />

		<xf:submitrow icon="save" sticky="true" />
	</div>

</xf:form>]]></template>
  <template type="admin" title="user_group_list" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('user_groups') }}</xf:title>

<xf:pageaction>
	<xf:button href="{{ link('user-groups/add') }}" icon="add">
		{{ phrase('add_user_group') }}
	</xf:button>
</xf:pageaction>

<xf:form action="{{ link('user-groups/toggle') }}" class="block" ajax="true">
	<div class="block-outer">
		<xf:macro template="filter_macros" name="quick_filter" arg-key="user-groups" arg-class="block-outer-opposite" />
	</div>
	<div class="block-container">
		<div class="block-body">
			<xf:datalist>
				<xf:foreach loop="$userGroups" value="$userGroup">
					<xf:datarow>
						<xf:main hash="{$userGroup.user_group_id}"
							href="{{ link('user-groups/edit', $userGroup) }}" label="{$userGroup.title}"
							hint="{$userGroup.user_title}" />
						<xf:delete href="{{ link('user-groups/delete', $userGroup) }}" />
					</xf:datarow>
				</xf:foreach>
			</xf:datalist>
		</div>
		<div class="block-footer">
			<span class="block-footer-counter">{{ display_totals(count($userGroups)) }}</span>
		</div>
	</div>
</xf:form>]]></template>
  <template type="admin" title="user_group_promotion_demote" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link('user-group-promotions/demote', null, {'promotion_id': $promotion.promotion_id, 'user_id': $promotionLog.user_id}) }}"
	ajax="true" class="block">

	<div class="block-container">
		<xf:if is="$isDemotion">
			<div class="block-body">
				<xf:inforow rowtype="confirm">
					{{ phrase('please_confirm_want_remove_user_from_promotion:') }}
					<strong>{$user.username} - {$promotion.title}</strong>
					{{ phrase('this_user_not_receive_promotion_even_if_meets_requirements') }}
				</xf:inforow>
			</div>
			<xf:submitrow submit="{{ phrase('demote_user') }}" rowtype="simple" />
		<xf:else />
			<div class="block-body">
				<xf:inforow rowtype="confirm">
					{{ phrase('please_confirm_want_enable_promotion_for_user:') }}
					<strong>{$user.username} - {$promotion.title}</strong>
					{{ phrase('this_user_will_receive_promotion_when_meets_requirements') }}
				</xf:inforow>
			</div>
			<xf:submitrow submit="{{ phrase('enable_promotion_for_user') }}" />
		</xf:if>
	</div>

	<xf:redirect />
</xf:form>]]></template>
  <template type="admin" title="user_group_promotion_edit" version_id="2001070" version_string="2.0.10"><![CDATA[<xf:if is="$userGroupPromotion.isInsert()">
	<xf:title>{{ phrase('add_promotion') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_promotion:') }} {$userGroupPromotion.title}</xf:title>
</xf:if>

<xf:pageaction if="$userGroupPromotion.isUpdate()">
	<xf:button href="{{ link('user-group-promotions/delete', $userGroupPromotion) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('user-group-promotions/save', $userGroupPromotion) }}" ajax="true" class="block">
	<div class="block-container">
		<h2 class="block-tabHeader tabs hScroller" data-xf-init="tabs h-scroller" role="tablist">
			<span class="hScroller-scroll">
				<a class="tabs-tab is-active" role="tab" tabindex="0" aria-controls="promotion-options">{{ phrase('promotion_options') }}</a>
				<xf:macro template="helper_criteria" name="user_tabs"
					arg-userTabTitle="{{ phrase('apply_this_promotion_while') }}" />
			</span>
		</h2>

		<ul class="tabPanes block-body">
			<li class="is-active" role="tabpanel" id="promotion-options">
				<xf:textboxrow name="title" value="{$userGroupPromotion.title}"
					maxlength="{{ max_length($userGroupPromotion, 'title') }}"
					label="{{ phrase('title') }}" />

				<xf:checkboxrow>
					<xf:option name="active" selected="$userGroupPromotion.active">{{ phrase('promotion_is_active') }}</xf:option>
				</xf:checkboxrow>

				<hr class="formRowSep" />

				<xf:checkboxrow rowid="addUserGroups" name="extra_user_group_ids[]" value="{$userGroupPromotion.extra_user_group_ids}"
					listclass="listColumns"
					label="{{ phrase('add_user_to_user_groups') }}">

					<xf:hint>
						<xf:checkbox standalone="true">
							<xf:option check-all="#addUserGroups" label="{{ phrase('select_all') }}" />
						</xf:checkbox>
					</xf:hint>
					<xf:options source="$userGroups" />
				</xf:checkboxrow>
			</li>

			<xf:macro template="helper_criteria" name="user_panes"
				arg-criteria="{{ $userCriteria.getCriteriaForTemplate() }}"
				arg-data="{{ $userCriteria.getExtraTemplateData() }}" />
		</ul>

		<xf:submitrow sticky="true" icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="user_group_promotion_history" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('promotion_history') }}</xf:title>

<xf:if is="$entries is not empty">
	<div class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$entries" value="$entry">
						<xf:datarow
							label="{$entry.User.username}"
							hint="{$entry.Promotion.title}"
							delete="{{ link('user-group-promotions/demote', null, {'promotion_id': $entry.promotion_id, 'user_id': $entry.user_id}) }}">

							<xf:explain>
								<xf:date time="$entry.promotion_date" />
								<xf:if is="$entry.promotion_state == 'manual'">
									- {{ phrase('manually_applied') }}
								<xf:elseif is="$entry.promotion_state == 'disabled'" />
									- {{ phrase('promotion_disabled') }}
								<xf:else />
									- {{ phrase('automatically_promoted') }}
								</xf:if>
							</xf:explain>
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
		</div>

		<xf:pagenav page="{$page}" perpage="{$perPage}" total="{$totalEntries}"
			link="user-group-promotions/history" params="{$linkParams}"
			wrapperclass="block-outer block-outer--after" />
	</div>
<xf:else />
	<div class="blockMessage">{{ phrase('no_promotion_history_meeting_criteria_found') }}</div>
</xf:if>]]></template>
  <template type="admin" title="user_group_promotion_list" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('user_group_promotions') }}</xf:title>

<xf:pageaction>
	<xf:button href="{{ link('user-group-promotions/manage') }}">{{ phrase('manage_promoted_users') }}</xf:button>
	<xf:button href="{{ link('user-group-promotions/add') }}" icon="add">{{ phrase('add_promotion') }}</xf:button>
</xf:pageaction>

<xf:if is="$userGroupPromotions is not empty">
	<xf:form action="{{ link('user-group-promotions/toggle') }}" ajax="true" class="block">
		<div class="block-outer">
			<xf:macro template="filter_macros" name="quick_filter" arg-key="promotions" arg-class="block-outer-opposite" />
		</div>
		<div class="block-container">
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$userGroupPromotions" value="$userGroupPromotion">
						<xf:datarow
							label="{$userGroupPromotion.title}"
							href="{{ link('user-group-promotions/edit', $userGroupPromotion) }}"
							delete="{{ link('user-group-promotions/delete', $userGroupPromotion) }}">

							<xf:toggle name="active[{$userGroupPromotion.promotion_id}]"
								selected="$userGroupPromotion.active" class="dataList-cell--separated" submit="true"
								tooltip="{{ phrase('enable_disable_x', {'title': $userGroupPromotion.title}) }}" />

						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($userGroupPromotions) }}</span>
			</div>
		</div>
	</xf:form>
<xf:else />
	<div class="blockMessage">{{ phrase('no_promotions_have_been_defined') }}</div>
</xf:if>]]></template>
  <template type="admin" title="user_group_promotion_manage" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('manage_promoted_users') }}</xf:title>

<xf:form action="{{ link('user-group-promotions/history') }}" class="block">
	<div class="block-container">
		<h2 class="block-header">{{ phrase('search_promotion_history') }}</h2>
		<div class="block-body">
			<xf:textboxrow hint="{{ phrase('you_may_leave_this_blank') }}" name="username" ac="single"
				label="{{ phrase('user_name') }}" />

			<xf:selectrow name="promotion_id"
				label="{{ phrase('promotion') }}">

				<xf:option value="0">{{ phrase('(any)') }}</xf:option>
				<xf:options source="$userGroupPromotions" />
			</xf:selectrow>
		</div>
		<xf:submitrow icon="search" />
	</div>
</xf:form>

<xf:form action="{{ link('user-group-promotions/manual') }}" class="block">
	<div class="block-container">
		<h2 class="block-header">{{ phrase('manually_promote_user') }}</h2>
		<div class="block-body">
			<xf:textboxrow name="username" ac="single"
				label="{{ phrase('user_name') }}" />

			<xf:selectrow name="promotion_id"
				label="{{ phrase('promotion') }}">

				<xf:option value="0">{{ phrase('(any)') }}</xf:option>
				<xf:options source="$userGroupPromotions" />
			</xf:selectrow>

			<xf:radiorow name="action"
				label="{{ phrase('action') }}">

				<xf:option value="promote" selected="true">{{ phrase('promote_this_user') }}</xf:option>
				<xf:option value="demote">{{ phrase('prevent_this_user_from_receiving_this_promotion_automatically') }}</xf:option>
			</xf:radiorow>
		</div>
		<xf:submitrow icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="user_ip_list" version_id="2000370" version_string="2.0.3"><![CDATA[<xf:title>{{ phrase('ip_addresses_logged_for_x', {'name': $user.username}) }}</xf:title>

<xf:if is="$ips is not empty">
	<div class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:datalist data-xf-init="responsive-data-list">
					<xf:datarow rowtype="header">
						<xf:cell>{{ phrase('ip') }}</xf:cell>
						<xf:cell>{{ phrase('total') }}</xf:cell>
						<xf:cell>{{ phrase('earliest') }}</xf:cell>
						<xf:cell>{{ phrase('latest') }}</xf:cell>
						<xf:cell>&nbsp;</xf:cell>
						<xf:cell>&nbsp;</xf:cell>
					</xf:datarow>
					<xf:foreach loop="$ips" value="$ip">
						<xf:datarow rowclass="dataList-row--noHover">
							<xf:cell href="{{ link_type('public', 'misc/ip-info', null, {'ip': $ip.ip|ip}) }}" target="_blank">{$ip.ip|ip}</xf:cell>
							<xf:cell>{$ip.total|number}</xf:cell>
							<xf:cell><xf:date time="{$ip.first_date}" /></xf:cell>
							<xf:cell><xf:date time="{$ip.last_date}" /></xf:cell>
							<xf:action href="{{ link('users/ip-users', null, {'ip': $ip.ip|ip}) }}" overlay="true">{{ phrase('more_users') }}</xf:action>
							<xf:popup label="&#8226;&#8226;&#8226;" class="dataList-cell--separated">
								<div class="menu" data-menu="menu" aria-hidden="true" data-menu-builder="dataList">
									<div class="menu-content">
										<h3 class="menu-header">{{ phrase('more_options') }}</h3>
										<a href="{{ link('banning/ips/add', null, {'ip': $ip.ip|ip}) }}" class="menu-linkRow" data-xf-click="overlay">{{ phrase('ban') }}</a>
										<a href="{{ link('banning/discouraged-ips/add', null, {'ip': $ip.ip|ip}) }}" class="menu-linkRow" data-xf-click="overlay">{{ phrase('discourage') }}</a>
										<div class="js-menuBuilderTarget u-showMediumBlock"></div>
									</div>
								</div>
							</xf:popup>
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
		</div>
	</div>
<xf:else />
	<div class="blockMessage">{{ phrase('no_ip_logs_for_requested_user') }}</div>
</xf:if>]]></template>
  <template type="admin" title="user_list" version_id="2000370" version_string="2.0.3"><![CDATA[<xf:title>{{ phrase('users') }}</xf:title>

<xf:if is="$users is not empty">
	<xf:form action="{{ link('users/batch-update/confirm') }}" class="block">
		<xf:if is="!$showingAll">
			<div class="block-outer">
				<div class="block-outer-main">
					<xf:button class="button--link menuTrigger" data-xf-click="menu" aria-expanded="false" aria-haspopup="true">
						{{ phrase('sort_by:') }} {{ $sortOptions.{$order} ?: phrase('user_name') }}
					</xf:button>

					<div class="menu" data-menu="menu" aria-hidden="true">
						<div class="menu-content">
							<h3 class="menu-header">{{ phrase('sort_by...') }}</h3>
							<xf:foreach loop="$sortOptions" key="$sortKey" value="$sortName">
								<a href="{{ link('users/list', null, {'criteria': $criteria, 'order': $sortKey}) }}"
									class="menu-linkRow {{ $order == $sortKey ? 'is-selected' : '' }}">
									{$sortName}
								</a>
							</xf:foreach>
						</div>
					</div>
				</div>
				<xf:macro template="filter_macros" name="quick_filter" arg-key="users"
					arg-ajax="{{ link('users/list', null, {'criteria': $criteria, 'order': $order, 'direction': $direction}) }}"
					arg-class="block-outer-opposite" />
			</div>
		</xf:if>
		<div class="block-container">
			<div class="block-body">
				<xf:datalist>
					<xf:if is="$showingAll">
						<xf:datarow rowtype="header" rowclass="dataList-row--noHover">
							<xf:if is="$showingAll">
								<xf:cell colspan="4">
									<xf:checkbox standalone="true"><xf:option value="{$user.user_id}" check-all=".dataList >" label="{{ phrase('select_all') }}" /></xf:checkbox>
								</xf:cell>
							</xf:if>
						</xf:datarow>
					</xf:if>
					<xf:foreach loop="$users" value="$user">
						<xf:datarow>
							<xf:if is="$showingAll">
								<xf:toggle name="user_ids[]" value="{$user.user_id}" selected="true" />
							</xf:if>
							<xf:cell class="dataList-cell--min dataList-cell--image dataList-cell--imageSmall"
								href="{{ link('users/edit', $user) }}">
								<xf:avatar user="$user" size="s" href="" />
							</xf:cell>
							<xf:main href="{{ link('users/edit', $user) }}" label="{$user.username}"
								hint="{$user.email}" />
							<xf:delete href="{{ link('users/delete', $user) }}" />
						</xf:datarow>
					</xf:foreach>
					<xf:if is="$filter AND $total > $perPage">
						<xf:datarow rowclass="dataList-row--note dataList-row--noHover js-filterForceShow">
							<xf:cell colspan="3">{{ phrase('more_records_matching_filter_more_specific') }}
							</xf:cell>
						</xf:datarow>
					</xf:if>
				</xf:datalist>
			</div>
			<div class="block-footer block-footer--split">
				<span class="block-footer-counter">{{ display_totals($users, $total) }}</span>
				<xf:if is="$showAll">
					<span class="block-footer-controls"><a href="{{ link('users/list', null, {'criteria': $criteria, 'all': true}) }}">{{
						phrase('show_all_matches') }}</a></span>
				<xf:elseif is="$showingAll" />
					<span class="block-footer-select"><xf:checkbox standalone="true"><xf:option check-all=".dataList" label="{{ phrase('select_all') }}" /></xf:checkbox></span>
					<span class="block-footer-controls"><xf:button type="submit">{{ phrase('batch_update') }}</xf:button></span>
				</xf:if>
			</div>
		</div>

		<xf:pagenav page="{$page}" perpage="{$perPage}" total="{$total}"
			link="users/list"
			params="{{ {'criteria': $criteria, 'order': $order, 'direction': $direction} }}"
			wrapperclass="js-filterHide block-outer block-outer--after" />
	</xf:form>
<xf:else />
	<div class="blockMessage">{{ phrase('no_records_matched') }}</div>
</xf:if>]]></template>
  <template type="admin" title="user_manage_watched_threads" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('manage_watched_threads:') }} {$user.username}</xf:title>

<xf:form action="{{ link('users/manage-watched-threads', $user) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:radiorow name="action"
				label="{{ phrase('action') }}">

				<xf:option value="watch_no_email" checked="checked">{{ phrase('disable_email_notification') }}</xf:option>
				<xf:option value="">{{ phrase('stop_watching_threads') }}</xf:option>
			</xf:radiorow>
		</div>
		<xf:submitrow icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="user_merge" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('merge_users') }}</xf:title>

<xf:form action="{{ link('users/merge', $user) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:formrow
				label="{{ phrase('source_user') }}"
				explain="{{ phrase('this_user_will_be_deleted') }}">
				{$user.username}
			</xf:formrow>

			<xf:textboxrow name="username" ac="single"
				label="{{ phrase('target_user') }}"
				explain="{{ phrase('x_will_be_merged_into_this_user_and_all_of_xs_content_moved', {'name': $user.username, 'name1': $user.username}) }}" />
		</div>
		<xf:submitrow submit="{{ phrase('merge') }}" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="user_message" version_id="2001170" version_string="2.0.11"><![CDATA[<xf:title>{{ phrase('message_users') }}</xf:title>
<xf:description>{{ phrase('message_users_description') }}</xf:description>

<xf:if is="$sent">
	<div class="blockMessage blockMessage--success blockMessage--iconic">
		{{ phrase('your_conversation_was_started_with_x_users', {'sent': $sent|number}) }}
	</div>
</xf:if>

<xf:form action="{{ link('users/message/confirm') }}" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:textboxrow name="from_user" value="{$xf.visitor.username}" ac="single"
				label="{{ phrase('from_user') }}">

				<xf:explain>
					<p>{{ phrase('enter_name_of_existing_user_conversation_should_be_started_by') }}</p>
					<p><b>{{ phrase('note:') }}</b> {{ phrase('you_cannot_start_conversation_with_yourself') }}</p>
				</xf:explain>
			</xf:textboxrow>

			<hr class="formRowSep" />

			<xf:textboxrow name="message_title" maxlength="100"
				label="{{ phrase('conversation_title') }}"
				required="true" />

			<xf:textarearow name="message_body" rows="5" autosize="true"
				label="{{ phrase('conversation_message') }}"
				required="true"
				hint="{{ phrase('you_may_use_bb_code') }}"
				explain="{{ phrase('following_placeholders_will_be_replaced_in_message_for_conversation') }} {{ phrase('you_may_also_use_phrase_title_which_will_be_replaced') }}" />

			<hr class="formRowSep" />

			<xf:checkboxrow label="{{ phrase('conversation_options') }}">
				<xf:option name="open_invite" value="1">{{ phrase('allow_anyone_in_conversation_to_invite_others') }}</xf:option>
				<xf:option name="conversation_locked" value="1">{{ phrase('lock_conversation_no_responses_will_be_allowed') }}</xf:option>
			</xf:checkboxrow>

			<xf:radiorow name="delete_type"
				label="{{ phrase('future_message_handling') }}">

				<xf:option selected="true"
					label="{{ phrase('do_not_leave_conversation') }}"
					explain="{{ phrase('remain_in_inbox_and_notified_of_replies') }}" />
				<xf:option value="deleted"
					label="{{ phrase('leave_conversation_and_accept_future_messages') }}"
					explain="{{ phrase('should_conversation_receive_responses_restored_to_inbox') }}" />
				<xf:option value="deleted_ignored"
					label="{{ phrase('leave_conversation_and_ignore_future_messages') }}"
					explain="{{ phrase('not_notified_of_responses_conversation_remain_deleted') }}" />
			</xf:radiorow>
		</div>

		<h2 class="block-formSectionHeader"><span class="block-formSectionHeader-aligner">{{ phrase('user_criteria') }}</span></h2>
		<div class="block-body">
			<xf:include template="helper_user_search_criteria" />
		</div>

		<xf:submitrow submit="{{ phrase('proceed...') }}" sticky="true" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="user_message_confirm" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('confirm_sending_message') }}</xf:title>

<xf:form action="{{ link('users/message/send') }}" class="block" preview="{{ link('users/message/preview') }}">
	<div class="block-container">
		<div class="block-body">
			<xf:formrow label="{{ phrase('number_of_users_matching_criteria') }}">
				{$total|number}
				<span role="presentation" aria-hidden="true">&middot;</span>
				<a href="{{ link('users/list', null, {'criteria': $criteria}) }}">{{ phrase('view_full_list') }}</a>
			</xf:formrow>
			<xf:formrow label="{{ phrase('test') }}">
				<xf:button type="submit" name="preview" value="1" class="js-previewButton" icon="preview" />
			</xf:formrow>
		</div>
		<xf:submitrow submit="{{ phrase('send_message') }}" />
	</div>

	<xf:hiddenval name="json_criteria">{$criteria|json}</xf:hiddenval>

	<xf:hiddenval name="total">{$total}</xf:hiddenval>

	<xf:hiddenval name="from_user">{$user.username}</xf:hiddenval>

	<xf:hiddenval name="message_title">{$message.message_title}</xf:hiddenval>
	<xf:hiddenval name="message_body">{$message.message_body}</xf:hiddenval>

	<xf:hiddenval name="open_invite">{$message.open_invite}</xf:hiddenval>
	<xf:hiddenval name="conversation_locked">{$message.conversation_locked}</xf:hiddenval>

	<xf:hiddenval name="delete_type">{$message.delete_type}</xf:hiddenval>
</xf:form>]]></template>
  <template type="admin" title="user_message_preview" version_id="2000038" version_string="2.0.0 Beta 8"><![CDATA[<xf:title>{$title}</xf:title>

<div class="blockMessage">{{ bb_code($content, 'conversation_message', $xf.visitor) }}</div>]]></template>
  <template type="admin" title="user_remove_reactions" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('remove_reactions') }}</xf:title>

<xf:form action="{{ link('users/remove-reactions', $user) }}" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:formrow label="{{ phrase('user') }}">{$user.username}</xf:formrow>
			<xf:formrow rowtype="input"
				label="{{ phrase('remove_reactions_within_last') }}">

				<div class="inputGroup">
					<xf:numberbox name="cutoff[amount]" value="1" min="0" />
					<span class="inputGroup-splitter"></span>
					<xf:select name="cutoff[unit]" value="days" class="input--inline">
						<xf:option value="hours">{{ phrase('hours') }}</xf:option>
						<xf:option value="days">{{ phrase('days') }}</xf:option>
						<xf:option value="weeks">{{ phrase('weeks') }}</xf:option>
						<xf:option value="months">{{ phrase('months') }}</xf:option>
					</xf:select>
				</div>
			</xf:formrow>
		</div>
		<xf:submitrow icon="delete" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="user_revert_message_edit" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('revert_message_edits') }}</xf:title>

<xf:form action="{{ link('users/revert-message-edit', $user) }}" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:formrow label="{{ phrase('user') }}">{$user.username}</xf:formrow>
			<xf:formrow rowtype="input"
				label="{{ phrase('revert_edits_within_last') }}"
				explain="{{ phrase('only_edits_within_last_x_days_will_be_reverted', {'count': $xf.options.editHistory.length}) }}">

				<div class="inputGroup">
					<xf:numberbox name="cutoff[amount]" value="1" min="0" />
					<span class="inputGroup-splitter"></span>
					<xf:select name="cutoff[unit]" value="days" class="input--inline">
						<xf:option value="hours">{{ phrase('hours') }}</xf:option>
						<xf:option value="days">{{ phrase('days') }}</xf:option>
						<xf:option value="weeks">{{ phrase('weeks') }}</xf:option>
						<xf:option value="months">{{ phrase('months') }}</xf:option>
					</xf:select>
				</div>
			</xf:formrow>
		</div>
		<xf:submitrow submit="{{ phrase('revert_edits') }}" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="user_search" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('search_for_users') }}</xf:title>

<xf:pageaction>
	<xf:button href="{{ link('users/add') }}" icon="add">{{ phrase('add_user') }}</xf:button>
</xf:pageaction>

<xf:if is="$lastUser">
	<div class="blockMessage blockMessage--highlight">
		<div class="contentRow">
			<span class="contentRow-figure">
				<xf:avatar user="$lastUser" size="s" />
			</span>
			<div class="contentRow-main">
				<h2 class="contentRow-title">{{ phrase('changes_saved') }}</h2>
				<a href="{{ link('users/edit', $lastUser) }}">{{ phrase('edit_x_again', {'name': $lastUser.username}) }}</a>
			</div>
		</div>
	</div>
</xf:if>

<div class="block">
	<div class="block-container">
		<h2 class="block-tabHeader tabs" data-xf-init="tabs" role="tablist">
			<a class="tabs-tab is-active" role="tab" tabindex="0" aria-controls="user-search">{{ phrase('standard_search') }}</a>
			<a class="tabs-tab" role="tab" tabindex="0" aria-controls="ip-search">{{ phrase('search_by_ip_address') }}</a>
		</h2>

		<ul class="tabPanes">
			<li class="is-active" role="tabpanel" id="user-search">
				<xf:form action="{{ link('users/list') }}">
					<div class="block-body">
						<xf:include template="helper_user_search_criteria" />

						<hr class="formRowSep" />

						<xf:formrow rowtype="input"
							label="{{ phrase('sort') }}">

							<div class="inputPair">
								<xf:select name="order">
									<xf:options source="{$sortOrders}" />
								</xf:select>
								<xf:select name="direction">
									<xf:option value="asc">{{ phrase('ascending') }}</xf:option>
									<xf:option value="desc">{{ phrase('descending') }}</xf:option>
								</xf:select>
							</div>
						</xf:formrow>
					</div>
					<xf:submitrow sticky="true" icon="search" />
				</xf:form>
			</li>
			<li role="tabpanel" id="ip-search">
				<xf:form action="{{ link('users/ip-users') }}">
					<div class="block-body">
						<xf:textboxrow name="ip"
							label="{{ phrase('ip_address') }}"
							explain="{{ phrase('ip_search_explain') }}" />
					</div>
					<xf:submitrow icon="search" />
				</xf:form>
			</li>
		</ul>
	</div>
</div>]]></template>
  <template type="admin" title="user_title_ladder_list" version_id="2000270" version_string="2.0.2"><![CDATA[<xf:title>{{ phrase('user_title_ladder') }}</xf:title>

<xf:form action="{{ link('user-title-ladder/update') }}" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:datalist data-xf-init="responsive-data-list">
				<colgroup>
					<col style="width: 1%" />
					<col />
					<col style="width: 130px" />
				</colgroup>
				<xf:datarow rowtype="header">
					<xf:cell>{{ phrase('delete') }}</xf:cell>
					<xf:cell>{{ phrase('title') }}</xf:cell>
					<xf:cell>{{ phrase('minimum_value') }}</xf:cell>
				</xf:datarow>
				<xf:foreach loop="$ladder" value="$title">
					<xf:set var="$maxLength" value="{{ max_length($title, 'title') }}" />
					<xf:datarow>
						<xf:toggle name="delete[]" value="{$title.minimum_level}" />
						<xf:cell>
							<xf:textbox name="update[{$title.minimum_level}][title]" value="{$title.title}" maxlength="{{ max_length($title, 'title') }}" />
						</xf:cell>
						<xf:cell>
							<xf:numberbox name="update[{$title.minimum_level}][minimum_level]"min="0"
								value="{$title.minimum_level}" />
						</xf:cell>
					</xf:datarow>
				</xf:foreach>
				<xf:datarow>
					<xf:cell data-hide-label="true">{{ phrase('new:') }}</xf:cell>
					<xf:cell>
						<xf:textbox name="title" maxlength="{$maxLength}" />
					</xf:cell>
					<xf:cell>
						<xf:numberbox name="minimum_level" min="0" value="0" />
					</xf:cell>
				</xf:datarow>
			</xf:datalist>
		</div>
		<div class="block-footer block-footer--split">
			<span class="block-footer-counter">{{ display_totals($ladder) }}</span>
			<span class="block-footer-select"><xf:checkbox standalone="true"><xf:option check-all="< .block-container" label="{{ phrase('select_all') }}" /></xf:checkbox></span>
			<span class="block-footer-controls"><xf:button type="submit">{{ phrase('update_user_titles') }}</xf:button></span>
		</div>
	</div>
</xf:form>

<xf:macro template="option_macros" name="option_form_block" arg-options="{$options}" />]]></template>
  <template type="admin" title="user_upgrade_active_downgrade" version_id="2000270" version_string="2.0.2"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link('user-upgrades/downgrade', null, {'user_upgrade_record_id': $activeUpgrade.user_upgrade_record_id}) }}"
	ajax="true" data-force-flash-message="on" class="block">

	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('please_confirm_that_you_want_to_downgrade_following_user:') }}
				<strong>
					{$activeUpgrade.User.username}
					<span role="presentation" aria-hidden="true">&middot;</span>
					{$activeUpgrade.Upgrade.title}
				</strong>
			</xf:inforow>
		</div>
		<xf:submitrow submit="{{ phrase('downgrade') }}" rowtype="simple" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="user_upgrade_active_edit" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('edit_active_user_upgrade') }}</xf:title>

<xf:form action="{{ link('user-upgrades/edit-active', null, {'user_upgrade_record_id': $activeUpgrade.user_upgrade_record_id}) }}"
	ajax="true" class="block">

	<div class="block-container">
		<div class="block-body">
			<xf:formrow label="{{ phrase('user_name') }}">{$activeUpgrade.User.username}</xf:formrow>

			<xf:formrow label="{{ phrase('upgrade_title') }}">{$activeUpgrade.Upgrade.title}</xf:formrow>

			<xf:radiorow name="end_type"
				label="{{ phrase('upgrade_ends') }}">

				<xf:option value="permanent" selected="!{$activeUpgrade.end_date}">{{ phrase('permanent') }}</xf:option>
				<xf:option value="date" selected="{$activeUpgrade.end_date}" label="{{ phrase('date:') }}">
					<xf:dateinput name="end_date" value="{{ $activeUpgrade.end_date ? date($activeUpgrade.end_date, 'picker') : date($xf.time, 'picker') }}" />
				</xf:option>
			</xf:radiorow>
		</div>
		<xf:submitrow sticky="true" icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="user_upgrade_active_list" version_id="2000170" version_string="2.0.1"><![CDATA[<xf:title>{{ phrase('active_user_upgrades') }}{{ $userUpgrade ? ': ' . $userUpgrade.title : '' }}</xf:title>

<xf:form action="{{ link('user-upgrades/active', $userUpgrade) }}" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:formrow label="{{ phrase('filter_by_user') }}" rowtype="input">
				<xf:textbox name="username" class="input--inline" ac="single" />
				<xf:button type="submit">{{ phrase('filter') }}</xf:button>
			</xf:formrow>
		</div>
	</div>
</xf:form>

<xf:if is="$activeUpgrades is not empty">
	<div class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:datalist data-xf-init="responsive-data-list">
					<xf:datarow rowtype="header">
						<xf:cell><a href="{{ link('user-upgrades/active', $userUpgrade, {'order': 'username', 'direction': ''} + $linkParams) }}">{{ phrase('user') }}</a></xf:cell>
						<xf:cell>{{ phrase('upgrade_title') }}</xf:cell>
						<xf:cell>{{ phrase('payment_profile') }}</xf:cell>
						<xf:cell><a href="{{ link('user-upgrades/active', $userUpgrade, {'order': 'start_date', 'direction': 'desc'} + $linkParams) }}">{{ phrase('start_date') }}</a></xf:cell>
						<xf:cell><a href="{{ link('user-upgrades/active', $userUpgrade, {'order': 'end_date', 'direction': 'desc'} + $linkParams) }}">{{ phrase('end_date') }}</a></xf:cell>
						<xf:cell colspan="2" />
					</xf:datarow>
					<xf:foreach loop="$activeUpgrades" value="$activeUpgrade">
						<xf:datarow rowclass="dataList-row--noHover">
							<xf:cell>
								<xf:username user="{$activeUpgrade.User}" defaultname="{{ phrase('unknown_user') }}" href="{{ link('users/edit', $activeUpgrade.User) }}" />
							</xf:cell>
							<xf:cell>
								<a href="{{ link('user-upgrades/edit', $activeUpgrade.Upgrade) }}">{$activeUpgrade.Upgrade.title}</a>
							</xf:cell>
							<xf:cell>
								<xf:set var="$paymentProfile" value="{$activeUpgrade.PurchaseRequest.PaymentProfile}" />
								<xf:if is="$paymentProfile">
									<a href="{{ link('payment-profiles/edit', $paymentProfile) }}">{$paymentProfile.title}</a>
								<xf:else />
									{{ phrase('n_a') }}
								</xf:if>
							</xf:cell>
							<xf:cell><xf:date time="{$activeUpgrade.start_date}" /></xf:cell>
							<xf:cell>{{ $activeUpgrade.end_date ? date($activeUpgrade.end_date) : phrase('permanent') }}</xf:cell>
							<xf:action overlay="true" href="{{ link('user-upgrades/edit-active', null, {'user_upgrade_record_id': $activeUpgrade.user_upgrade_record_id}) }}">{{ phrase('edit') }}</xf:action>
							<xf:action overlay="true" href="{{ link('user-upgrades/downgrade', null, {'user_upgrade_record_id': $activeUpgrade.user_upgrade_record_id}) }}">{{ phrase('downgrade') }}</xf:action>
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($activeUpgrades, $totalActive) }}</span>
			</div>
		</div>

		<xf:pagenav page="{$page}" perpage="{$perPage}" total="{$totalActive}"
			link="user-upgrades/active" data="{$userUpgrade}" params="{$linkParams}"
			wrapperclass="block-outer block-outer--after" />
	</div>
<xf:else />
	<div class="blockMessage">{{ phrase('no_results_found') }}</div>
</xf:if>]]></template>
  <template type="admin" title="user_upgrade_edit" version_id="2010037" version_string="2.1.0 Beta 7"><![CDATA[<xf:if is="$upgrade.isInsert()">
	<xf:title>{{ phrase('add_user_upgrade') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_user_upgrade:') }} {$upgrade.title}</xf:title>
</xf:if>

<xf:pageaction if="$upgrade.isUpdate()">
	<xf:button href="{{ link('user-upgrades/delete', $upgrade) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('user-upgrades/save', $upgrade) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:textboxrow name="title" value="{$upgrade.title}" maxlength="{{ max_length($upgrade, 'title') }}"
				label="{{ phrase('title') }}" />

			<xf:textarearow name="description" value="{$upgrade.description}" autosize="true"
				label="{{ phrase('description') }}"
				hint="{{ phrase('you_may_use_html') }}" />

			<xf:macro template="display_order_macros" name="row"
				arg-value="{{ $upgrade.display_order ?: 1 }}" />

			<xf:formrow rowtype="input"
				label="{{ phrase('cost') }}">

				<div class="inputGroup">
					<xf:textbox name="cost_amount" value="{{ $upgrade.cost_amount ?: 5 }}" style="width: 120px" />
					<span class="inputGroup-splitter"></span>
					<xf:macro template="public:currency_macros" name="currency_list"
						arg-value="{{ $upgrade.cost_currency ?: 'USD' }}"
						arg-class="input--autoSize" />
				</div>

				<div class="formRow-explain">{{ phrase('cost_currency_explain') }}</div>
			</xf:formrow>

			<xf:radiorow name="length_type" label="{{ phrase('length') }}">
				<xf:option value="permanent" selected="$upgrade.length_unit == ''">{{ phrase('permanent') }}</xf:option>
				<xf:option value="timed" selected="$upgrade.length_unit != ''" label="{{ phrase('for_length:') }}">
					<xf:dependent>
						<div class="inputGroup">
							<xf:numberbox name="length_amount" value="{{ $upgrade.length_amount ?: 1 }}" min="1" />
							<span class="inputGroup-splitter"></span>
							<xf:select name="length_unit" value="{{ ($upgrade.length_unit == 'permanent' OR !$upgrade.length_amount) ? 'months' : $upgrade.length_unit }}" class="input--inline">
								<xf:option value="day">{{ phrase('days') }}</xf:option>
								<xf:option value="month">{{ phrase('months') }}</xf:option>
								<xf:option value="year">{{ phrase('years') }}</xf:option>
							</xf:select>
						</div>

					</xf:dependent>
					<xf:dependent>
						<xf:checkbox>
							<xf:option name="recurring" value="1" selected="$upgrade.recurring"
								label="{{ phrase('recurring_payments') }}"
								hint="{{ phrase('recurring_payments_explain') }}" />
						</xf:checkbox>
					</xf:dependent>
				</xf:option>
			</xf:radiorow>

			<xf:checkboxrow name="payment_profile_ids" value="{$upgrade.payment_profile_ids}"
				label="{{ phrase('payment_profile') }}">

				<xf:foreach loop="$profiles" key="$profileId" value="$profile">
					<xf:option value="{$profileId}" label="{{ $profile.Provider.title !== $profile.title ? $profile.Provider.title . ' - ' . $profile.title : $profile.Provider.title }}" />
				</xf:foreach>
			</xf:checkboxrow>

			<xf:checkboxrow name="extra_group_ids" value="{$upgrade.extra_group_ids}" listclass="listColumns"
				label="{{ phrase('additional_user_groups') }}"
				explain="{{ phrase('additional_user_groups_explain') }}">
				<xf:options source="$userGroups" />
			</xf:checkboxrow>

			<xf:if is="$upgrades is not empty">
				<xf:checkboxrow name="disabled_upgrade_ids" value="{$upgrade.disabled_upgrade_ids}" listclass="listColumns"
					label="{{ phrase('disabled_user_upgrades') }}"
					explain="{{ phrase('disabled_user_upgrades_explain') }}">
					<xf:options source="$upgrades" />
				</xf:checkboxrow>
			</xf:if>

			<xf:checkboxrow>
				<xf:option name="can_purchase" selected="$upgrade.can_purchase">{{ phrase('can_be_purchased') }}</xf:option>
			</xf:checkboxrow>
		</div>
		<xf:submitrow icon="save" sticky="true" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="user_upgrade_expired_list" version_id="2010170" version_string="2.1.1"><![CDATA[<xf:title>{{ phrase('expired_user_upgrades') }}{{ $userUpgrade ? ': ' . $userUpgrade.title : '' }}</xf:title>

<xf:form action="{{ link('user-upgrades/expired', $userUpgrade) }}" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:formrow label="{{ phrase('filter_by_user') }}" rowtype="input">
				<xf:textbox name="username" class="input--inline" ac="single" />
				<xf:button type="submit">{{ phrase('filter') }}</xf:button>
			</xf:formrow>
		</div>
	</div>
</xf:form>

<xf:if is="$expiredUpgrades is not empty">
	<div class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:datalist data-xf-init="responsive-data-list">
					<xf:datarow rowtype="header">
						<xf:cell><a href="{{ link('user-upgrades/expired', $userUpgrade, {'order': 'username', 'direction': ''} + $linkParams) }}">{{ phrase('user') }}</a></xf:cell>
						<xf:cell>{{ phrase('upgrade_title') }}</xf:cell>
						<xf:cell>{{ phrase('payment_profile') }}</xf:cell>
						<xf:cell><a href="{{ link('user-upgrades/expired', $userUpgrade, {'order': 'start_date', 'direction': 'desc'} + $linkParams) }}">{{ phrase('start_date') }}</a></xf:cell>
						<xf:cell><a href="{{ link('user-upgrades/expired', $userUpgrade, {'order': 'end_date', 'direction': 'desc'} + $linkParams) }}">{{ phrase('end_date') }}</a></xf:cell>
					</xf:datarow>
					<xf:foreach loop="$expiredUpgrades" value="$expiredUpgrade">
						<xf:datarow rowclass="dataList-row--noHover">
							<xf:cell>
								<xf:username user="{$expiredUpgrade.User}" defaultname="{{ phrase('unknown_user') }}" href="{{ link('users/edit', $expiredUpgrade.User) }}" />
							</xf:cell>
							<xf:cell>
								<a href="{{ link('user-upgrades/edit', $expiredUpgrade.Upgrade) }}">{$expiredUpgrade.Upgrade.title}</a>
							</xf:cell>
							<xf:cell>
								<xf:set var="$paymentProfile" value="{$expiredUpgrade.PurchaseRequest.PaymentProfile}" />
								<xf:if is="$paymentProfile">
									<a href="{{ link('payment-profiles/edit', $paymentProfile) }}">{$paymentProfile.title}</a>
								<xf:else />
									{{ phrase('n_a') }}
								</xf:if>
							</xf:cell>
							<xf:cell><xf:date time="{$expiredUpgrade.start_date}" /></xf:cell>
							<xf:cell>{{ $expiredUpgrade.end_date ? date($expiredUpgrade.end_date) : phrase('permanent') }}</xf:cell>
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($expiredUpgrades, $totalExpired) }}</span>
			</div>
		</div>

		<xf:pagenav page="{$page}" perpage="{$perPage}" total="{$totalExpired}"
			link="user-upgrades/expired" data="{$userUpgrade}" params="{$linkParams}"
			wrapperclass="block-outer block-outer--after" />
	</div>
<xf:else />
	<div class="blockMessage">{{ phrase('no_results_found') }}</div>
</xf:if>]]></template>
  <template type="admin" title="user_upgrade_list" version_id="2010170" version_string="2.1.1"><![CDATA[<xf:title>{{ phrase('user_upgrades') }}</xf:title>

<xf:pageaction>
	<xf:button href="{{ link('user-upgrades/add') }}" icon="add">{{ phrase('add_user_upgrade') }}</xf:button>
</xf:pageaction>

<xf:if is="!$xf.livePayments">
	<div class="blockMessage blockMessage--important blockMessage--iconic">
		{{ phrase('live_payments_have_been_disabled') }}
	</div>
</xf:if>

<xf:if is="$upgrades is not empty">
	<xf:form action="{{ link('user-upgrades/toggle') }}" class="block" ajax="true">
		<div class="block-outer">
			<xf:macro template="filter_macros" name="quick_filter"
				arg-key="user-upgrades"
				arg-class="block-outer-opposite" />
		</div>
		<div class="block-container">
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$upgrades" value="$upgrade">
						<xf:datarow
								label="{$upgrade.title}"
								hint="{$upgrade.cost_phrase}"
								href="{{ link('user-upgrades/edit', $upgrade) }}"
								delete="{{ link('user-upgrades/delete', $upgrade) }}">

							<xf:toggle name="can_purchase[{$upgrade.user_upgrade_id}]" selected="$upgrade.can_purchase"
								class="dataList-cell--separated" submit="true"
								tooltip="{{ phrase('enable_disable_x', {'title': $upgrade.title}) }}"/>

							<xf:popup class="dataList-cell--action">
								<div class="menu" data-menu="menu" aria-hidden="true">
									<div class="menu-content">
										<h3 class="menu-header">{{ phrase('actions') }}</h3>
										<a href="{{ link('user-upgrades/active', $upgrade) }}" class="menu-linkRow">{{ phrase('view_users') }}</a>
										<a href="{{ link('user-upgrades/expired', $upgrade) }}" class="menu-linkRow">{{ phrase('view_expired_upgrades') }}</a>
										<a href="{{ link('user-upgrades/manual', $upgrade) }}" class="menu-linkRow">{{ phrase('manually_upgrade_user') }}</a>
									</div>
								</div>
							</xf:popup>

						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($upgrades) }}</span>
			</div>
		</div>
	</xf:form>

	<div class="block">
		<div class="block-container">
			<h2 class="block-header"><a href="{{ link('user-upgrades/active') }}">{{ phrase('active_user_upgrades') }}</a></h2>
			<xf:if is="$activeUpgrades is not empty">
				<div class="block-body">
					<xf:macro name="upgrade_list" arg-upgrades="{$activeUpgrades}" arg-active="1" />
				</div>
				<div class="block-footer block-footer--split">
					<span class="block-footer-counter">{{ display_totals($activeUpgrades) }}</span>
					<span class="block-footer-controls"><xf:button href="{{ link('user-upgrades/active') }}">{{ phrase('view_more...') }}</xf:button></span>
				</div>
			<xf:else />
				<div class="block-body block-row">{{ phrase('no_results_found') }}</div>
			</xf:if>
		</div>
	</div>

	<div class="block">
		<div class="block-container">
			<h2 class="block-header"><a href="{{ link('user-upgrades/expired') }}">{{ phrase('expired_user_upgrades') }}</a></h2>
			<xf:if is="$expiredUpgrades is not empty">
				<div class="block-body">
					<xf:macro name="upgrade_list" arg-upgrades="{$expiredUpgrades}" arg-active="0" />
				</div>
				<div class="block-footer block-footer--split">
					<span class="block-footer-counter">{{ display_totals($expiredUpgrades) }}</span>
					<span class="block-footer-controls"><xf:button href="{{ link('user-upgrades/expired') }}">{{ phrase('view_more...') }}</xf:button></span>
				</div>
			<xf:else />
				<div class="block-body block-row">{{ phrase('no_results_found') }}</div>
			</xf:if>
		</div>
	</div>
<xf:else />
	<div class="blockMessage">{{ phrase('no_items_have_been_created_yet') }}</div>
</xf:if>

<xf:macro name="upgrade_list"
	arg-upgrades="!"
	arg-viewMoreUrl=""
	arg-active="1">
	
	<xf:datalist data-xf-init="responsive-data-list">
		<xf:datarow rowtype="header">
			<xf:cell>{{ phrase('user') }}</xf:cell>
			<xf:cell>{{ phrase('upgrade_title') }}</xf:cell>
			<xf:cell>{{ phrase('payment_profile') }}</xf:cell>
			<xf:cell>{{ phrase('start_date') }}</xf:cell>
			<xf:cell colspan="{{ $active ? 3 : 1 }}">{{ phrase('end_date') }}</xf:cell>
		</xf:datarow>
		<xf:foreach loop="$upgrades" value="$upgrade">
			<xf:datarow rowclass="dataList-row--noHover">
				<xf:cell>
					<xf:username user="{$upgrade.User}" defaultname="{{ phrase('unknown_user') }}" href="{{ link('users/edit', $upgrade.User) }}" />
				</xf:cell>
				<xf:cell>
					<a href="{{ link('user-upgrades/edit', $upgrade.Upgrade) }}">{$upgrade.Upgrade.title}</a>
				</xf:cell>
				<xf:cell>
					<xf:set var="$paymentProfile" value="{$upgrade.PurchaseRequest.PaymentProfile}" />
					<xf:if is="$paymentProfile">
						<a href="{{ link('payment-profiles/edit', $paymentProfile) }}">{$paymentProfile.title}</a>
					<xf:else />
						{{ phrase('n_a') }}
					</xf:if>
				</xf:cell>
				<xf:cell><xf:date time="{$upgrade.start_date}" /></xf:cell>
				<xf:cell>{{ $upgrade.end_date ? date($upgrade.end_date) : phrase('permanent') }}</xf:cell>
				<xf:if is="$active">
					<xf:action overlay="true" href="{{ link('user-upgrades/edit-active', null, {'user_upgrade_record_id': $upgrade.user_upgrade_record_id}) }}">{{ phrase('edit') }}</xf:action>
					<xf:action overlay="true" href="{{ link('user-upgrades/downgrade', null, {'user_upgrade_record_id': $upgrade.user_upgrade_record_id}) }}">{{ phrase('downgrade') }}</xf:action>
				</xf:if>
			</xf:datarow>
		</xf:foreach>
	</xf:datalist>
</xf:macro>]]></template>
  <template type="admin" title="user_upgrade_manual" version_id="2000270" version_string="2.0.2"><![CDATA[<xf:title>{{ phrase('manually_upgrade_user') }}</xf:title>

<xf:form action="{{ link('user-upgrades/manual', $upgrade) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:textboxrow name="username" ac="single"
				label="{{ phrase('user_name') }}" />

			<xf:formrow label="{{ phrase('upgrade_to_apply') }}">{$upgrade.title}</xf:formrow>

			<xf:comment><xf:dateinputrow name="end_date" value="{{ !$endDate ?: date($endDate, 'picker') }}"
				label="{{ phrase('upgrade_ends') }}" /></xf:comment>

			<xf:radiorow name="end_type"
				label="{{ phrase('upgrade_ends') }}">

				<xf:option value="permanent" selected="!{$endDate}">{{ phrase('permanent') }}</xf:option>
				<xf:option value="date" selected="{$endDate}" label="{{ phrase('date:') }}">
					<xf:dateinput name="end_date" value="{{ $endDate ? date($endDate, 'picker') : date($xf.time, 'picker') }}" />
				</xf:option>
			</xf:radiorow>
		</div>
		<xf:submitrow submit="{{ phrase('upgrade') }}" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="users" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('admin_navigation.users') }}</xf:title>

<xf:macro template="section_nav_macros" name="section_nav" arg-section="users" />]]></template>
  <template type="admin" title="warning_action_edit" version_id="2000070" version_string="2.0.0"><![CDATA[<xf:if is="$action.isInsert()">
	<xf:title>{{ phrase('add_warning_action') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_warning_action:') }} {{ phrase('points:') }} {$action.points}</xf:title>
</xf:if>

<xf:pageaction if="$action.isUpdate()">
	<xf:button href="{{ link('warnings/actions/delete', $action) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('warnings/actions/save', $action) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:numberboxrow name="points" value="{$action.points}" min="1"
				label="{{ phrase('points_threshold') }}"
				explain="{{ phrase('warning_action_applied_crossing_threshold') }}" />

			<xf:radiorow name="action" value="{$action.action}"
				label="{{ phrase('action_to_take') }}">

				<xf:option value="ban"
					label="{{ phrase('ban') }}" />
				<xf:option value="discourage"
					label="{{ phrase('discourage') }}" />
				<xf:option value="groups"
					label="{{ phrase('add_to_selected_groups') }}">

					<xf:checkbox name="extra_user_group_ids" value="{$action.extra_user_group_ids}">
						<xf:options source="$userGroups" />
					</xf:checkbox>
				</xf:option>
			</xf:radiorow>

			<xf:radiorow name="action_length_type_base" value="{$action.action_length_type}"
				label="{{ phrase('for_time_period') }}">

				<xf:option value="points">{{ phrase('while_at_or_above_points_threshold') }}</xf:option>
				<xf:option value="permanent">{{ phrase('permanent') }}</xf:option>
				<xf:option value="temporary" selected="$action.action_length_type != 'permanent' AND $action.action_length_type != 'points'" label="{{ phrase('temporary') }}">
					<xf:dependent>
						<div class="inputGroup">
							<xf:numberbox name="action_length" value="{{ $action.action_length ?: 1 }}" min="1" />
							<span class="inputGroup-splitter"></span>
							<xf:select name="action_length_type" value="{{ ($action.action_length_type == 'permanent' OR $action.action_length_type == 'points') ? 'months' : $action.action_length_type }}" class="input--inline">
								<xf:option value="days">{{ phrase('days') }}</xf:option>
								<xf:option value="weeks">{{ phrase('weeks') }}</xf:option>
								<xf:option value="months">{{ phrase('months') }}</xf:option>
								<xf:option value="years">{{ phrase('years') }}</xf:option>
							</xf:select>
						</div>
					</xf:dependent>
				</xf:option>
			</xf:radiorow>
		</div>
		<xf:submitrow sticky="true" icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="warning_edit" version_id="2000035" version_string="2.0.0 Beta 5"><![CDATA[<xf:if is="$warning.isInsert()">
	<xf:title>{{ phrase('add_warning') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_warning:') }} {$warning.title}</xf:title>
</xf:if>

<xf:pageaction if="$warning.isUpdate()">
	<xf:button href="{{ link('warnings/delete', $warning) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('warnings/save', $warning) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:textboxrow name="title" value="{$warning.MasterTitle.phrase_text}" maxlength="{{ max_length($warning, 'title') }}"
				label="{{ phrase('title') }}" />

			<xf:numberboxrow name="points_default" value="{$warning.points_default}" min="0" max="65535"
				label="{{ phrase('warning_points') }}" />

			<xf:radiorow name="expiry_type_base"
				label="{{ phrase('points_expiry') }}">

				<xf:option value="never" selected="$warning.expiry_type == 'never'">{{ phrase('never') }}</xf:option>
				<xf:option value="other" selected="$warning.expiry_type != 'never'" label="{{ phrase('after_time:') }}">
					<xf:dependent>
						<div class="inputGroup">
							<xf:numberbox name="expiry_default" value="{{ $warning.expiry_default ? $warning.expiry_default : 1 }}" min="0" />
							<span class="inputGroup-splitter"></span>
							<xf:select name="expiry_type" value="{{ $warning.expiry_type == 'never' ? 'months' : $warning.expiry_type }}" class="input--inline">
								<xf:option value="days">{{ phrase('days') }}</xf:option>
								<xf:option value="weeks">{{ phrase('weeks') }}</xf:option>
								<xf:option value="months">{{ phrase('months') }}</xf:option>
								<xf:option value="years">{{ phrase('years') }}</xf:option>
							</xf:select>
						</div>

					</xf:dependent>
				</xf:option>
			</xf:radiorow>

			<xf:checkboxrow>
				<xf:option name="is_editable" selected="$warning.is_editable">{{ phrase('points_and_expiry_time_editable_when_giving_warning') }}</xf:option>
			</xf:checkboxrow>

			<xf:checkboxrow name="extra_user_group_ids" value="{$warning.extra_user_group_ids}"
				label="{{ phrase('extra_user_groups') }}"
				explain="{{ phrase('user_receiving_warning_can_be_added_to_groups_until_expiry') }}">

				<xf:options source="$userGroups" />
			</xf:checkboxrow>
		</div>

		<h3 class="block-formSectionHeader"><span class="block-formSectionHeader-aligner">{{ phrase('conversation_settings') }}</span></h3>
		<div class="block-body">
			<xf:textboxrow name="conversation_title" value="{$warning.MasterConversationTitle.phrase_text}"
				label="{{ phrase('default_title') }}" />

			<xf:textarearow name="conversation_text" value="{$warning.MasterConversationText.phrase_text}" autosize="true"
				label="{{ phrase('default_text') }}"
				explain="{{ phrase('you_may_use_placeholders_to_dynamically_insert_warning') }}" />
		</div>

		<xf:submitrow icon="save" sticky="true" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="warning_list" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('warnings') }}</xf:title>

<xf:pageaction>
	<xf:button href="{{ link('warnings/add') }}" icon="add">{{ phrase('add_warning') }}</xf:button>
	<xf:button href="{{ link('warnings/actions/add') }}" icon="add">{{ phrase('add_warning_action') }}</xf:button>
</xf:pageaction>

<div class="block">
	<div class="block-outer">
		<xf:macro template="filter_macros" name="quick_filter" arg-key="warnings" arg-class="block-outer-opposite" />
	</div>
	<div class="block-container">
		<div class="block-body">
			<xf:datalist>
				<xf:foreach loop="$warnings" value="$warning">
					<xf:datarow
						label="{$warning.title}"
						href="{{ link('warnings/edit', $warning) }}"
						delete="{{ link('warnings/delete', $warning) }}" />
				</xf:foreach>
			</xf:datalist>
		</div>
		<div class="block-footer">
			<span class="block-footer-counter">{{ display_totals($warnings) }}</span>
		</div>
	</div>
</div>

<xf:if is="$actions is not empty">
	<div class="block">
		<div class="block-container">
			<h2 class="block-header">{{ phrase('warning_actions') }}</h2>
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$actions" value="$action">
						<xf:datarow>
							<xf:cell href="{{ link('warnings/actions/edit', $action) }}">
								<div class="dataList-mainRow">
									{{ phrase('points:') }} {$action.points}
									<div class="dataList-hint" dir="auto">
										<ul class="listInline listInline--bullet listInline--selfInline">
											<xf:if is="$action.action == 'ban'">
												<li>{{ phrase('ban') }}</li>
											<xf:elseif is="$action.action == 'discourage'" />
												<li>{{ phrase('discourage') }}</li>
											<xf:elseif is="$action.action == 'groups'" />
												<li>{{ phrase('add_to_selected_groups') }}</li>
											<xf:else />
												<li>{{ phrase('unknown_action') }}</li>
											</xf:if>

											<xf:if is="$action.action_length_type == 'permanent'">
												<li>{{ phrase('permanent') }}</li>
											<xf:elseif is="$action.action_length_type == 'points'" />
												<li>{{ phrase('while_at_or_above_points_threshold') }}</li>
											<xf:else />
												<li>{{ phrase('temporary') }}</li>
											</xf:if>
										</ul>
									</div>
								</div>
							</xf:cell>
							<xf:delete href="{{ link('warnings/actions/delete', $action) }}" />
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<!--<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($actions) }}</span>
			</div>-->
		</div>
	</div>
</xf:if>]]></template>
  <template type="admin" title="widget_def_options_birthdays" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<hr class="formRowSep" />

<xf:numberboxrow name="options[limit]" value="{$options.limit}" min="0"
	label="{{ phrase('maximum_entries') }}"
	explain="{{ phrase('birthdays_limit_explain') }}" />]]></template>
  <template type="admin" title="widget_def_options_html" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<hr class="formRowSep" />

<xf:codeeditorrow name="options[template]" value="{$template.template}" class="codeEditor--short" mode="html"
	label="{{ phrase('template') }}"
	explain="{{ phrase('you_may_use_xenforo_template_syntax_here') }}" />

<xf:checkboxrow>
	<xf:option name="options[advanced_mode]" value="1" selected="{$options.advanced_mode}"
		label="{{ phrase('advanced_mode') }}"
		hint="{{ phrase('if_enabled_html_for_your_page_will_not_be_contained_within_block') }}" />
</xf:checkboxrow>

<xf:if is="$options.template_title">
	<xf:hiddenval name="options[template_title]">{$options.template_title}</xf:hiddenval>
</xf:if>]]></template>
  <template type="admin" title="widget_def_options_member_stat" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<hr class="formRowSep" />

<xf:numberboxrow name="options[limit]" value="{$options.limit}" min="1"
	label="{{ phrase('maximum_entries') }}" />

<xf:selectrow name="options[member_stat_key]" value="{$options.member_stat_key}"
	label="{{ phrase('member_stat_to_display') }}">
	<xf:options source="{$memberStats}" />
</xf:selectrow>]]></template>
  <template type="admin" title="widget_def_options_members_online" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<hr class="formRowSep" />

<xf:numberboxrow name="options[limit]" value="{$options.limit}" min="0"
	label="{{ phrase('maximum_usernames') }}"
	explain="{{ phrase('maximum_usernames_explain') }}" />

<xf:checkboxrow>
	<xf:option name="options[followedOnline]" selected="$options.followedOnline"
		label="{{ phrase('enable_people_you_follow_row') }}" />

	<xf:option name="options[staffOnline]" selected="$options.staffOnline"
		label="{{ phrase('enable_staff_online_block') }}">
		<xf:checkbox>
			<xf:option name="options[staffQuery]" selected="$options.staffQuery"
				label="{{ phrase('run_dedicated_staff_query_when_necessary') }}"
				hint="{{ phrase('run_dedicated_staff_query_explain') }}" />
		</xf:checkbox>
	</xf:option>
</xf:checkboxrow>]]></template>
  <template type="admin" title="widget_def_options_new_posts" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<hr class="formRowSep" />

<xf:numberboxrow name="options[limit]" value="{$options.limit}" min="1"
	label="{{ phrase('maximum_entries') }}" />

<xf:radiorow name="options[style]" value="{{ $options.style ?: 'simple' }}"
	label="{{ phrase('display_style') }}">

	<xf:option value="simple"
		label="{{ phrase('simple') }}"
		hint="{{ phrase('widget_display_simple_explain') }}" />
	<xf:option value="full"
		label="{{ phrase('full') }}"
		hint="{{ phrase('new_posts_display_style_full_explain') }}" />
</xf:radiorow>

<xf:radiorow name="options[filter]" value="{{ $options.filter ?: 'latest' }}"
	label="{{ phrase('filter') }}">

	<xf:option value="latest"
		label="{{ phrase('new_posts_latest') }}"
		hint="{{ phrase('new_posts_filter_latest_explain') }}" />
	<xf:option value="unread"
		label="{{ phrase('new_posts_unread') }}"
		hint="{{ phrase('new_posts_filter_unread_explain') }}" />
	<xf:option value="watched"
		label="{{ phrase('new_posts_watched') }}"
		hint="{{ phrase('new_posts_filter_watched_explain') }}" />
</xf:radiorow>

<xf:selectrow name="options[node_ids][]" value="{{ $options.node_ids ?: '' }}" multiple="multiple" size="7"
	label="{{ phrase('forum_limit') }}"
	explain="{{ phrase('only_include_threads_in_selected_forums') }}">

	<xf:option value="">{{ phrase('all_forums') }}</xf:option>
	<xf:foreach loop="$nodeTree.getFlattened(0)" value="$treeEntry">
		<xf:option value="{$treeEntry.record.node_id}" disabled="{{ $treeEntry.record.node_type_id != 'Forum' }}">
			{{ repeat('&nbsp;&nbsp;', $treeEntry.depth)|raw }} {$treeEntry.record.title}
		</xf:option>
	</xf:foreach>
</xf:selectrow>]]></template>
  <template type="admin" title="widget_def_options_new_profile_posts" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<hr class="formRowSep" />

<xf:numberboxrow name="options[limit]" value="{$options.limit}" min="1"
	label="{{ phrase('maximum_entries') }}" />

<xf:radiorow name="options[style]" value="{{ $options.style ?: 'simple' }}"
	label="{{ phrase('display_style') }}">

	<xf:option value="simple"
		label="{{ phrase('simple') }}"
		hint="{{ phrase('widget_display_simple_explain') }}" />
	<xf:option value="full"
		label="{{ phrase('full') }}"
		hint="{{ phrase('new_profile_posts_display_style_full_explain') }}" />
</xf:radiorow>

<xf:radiorow name="options[filter]" value="{{ $options.filter ?: 'latest' }}"
	label="{{ phrase('filter') }}">

	<xf:option value="latest"
		label="{{ phrase('new_profile_posts_latest') }}"
		hint="{{ phrase('new_profile_posts_filter_latest_explain') }}" />
	<xf:option value="followed"
		label="{{ phrase('new_profile_posts_followed') }}"
		hint="{{ phrase('new_profile_posts_filter_followed_explain') }}" />
</xf:radiorow>]]></template>
  <template type="admin" title="widget_def_options_new_threads" version_id="2000038" version_string="2.0.0 Beta 8"><![CDATA[<hr class="formRowSep" />

<xf:numberboxrow name="options[limit]" value="{$options.limit}" min="1"
	label="{{ phrase('maximum_entries') }}" />

<xf:radiorow name="options[style]" value="{{ $options.style ?: 'simple' }}"
	label="{{ phrase('display_style') }}">

	<xf:option value="simple"
		label="{{ phrase('simple') }}"
		hint="{{ phrase('widget_display_simple_explain') }}" />
	<xf:option value="full"
		label="{{ phrase('full') }}"
		hint="{{ phrase('new_threads_display_style_full_explain') }}" />
	<xf:option value="expanded"
		label="{{ phrase('expanded') }}"
		hint="{{ phrase('new_threads_display_style_expanded_explain') }}">

		<xf:checkbox>
			<xf:option name="options[show_expanded_title]" selected="$options.show_expanded_title">
				{{ phrase('display_widget_title_above_list_of_threads') }}
			</xf:option>
		</xf:checkbox>
	</xf:option>
</xf:radiorow>

<xf:selectrow name="options[node_ids][]" value="{{ $options.node_ids ?: '' }}" multiple="multiple" size="7"
	label="{{ phrase('forum_limit') }}"
	explain="{{ phrase('only_include_threads_in_selected_forums') }}">

	<xf:option value="">{{ phrase('all_forums') }}</xf:option>
	<xf:foreach loop="$nodeTree.getFlattened(0)" value="$treeEntry">
		<xf:option value="{$treeEntry.record.node_id}" disabled="{{ $treeEntry.record.node_type_id != 'Forum' }}">
			{{ repeat('&nbsp;&nbsp;', $treeEntry.depth)|raw }} {$treeEntry.record.title}
		</xf:option>
	</xf:foreach>
</xf:selectrow>]]></template>
  <template type="admin" title="widget_def_options_newest_members" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<hr class="formRowSep" />

<xf:numberboxrow name="options[limit]" value="{$options.limit}" min="1"
	label="{{ phrase('maximum_entries') }}" />]]></template>
  <template type="admin" title="widget_def_options_php_callback" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<hr class="formRowSep" />

<xf:macro template="helper_callback_fields" name="callback_row"
	arg-label="{{ phrase('php_callback') }}"
	arg-explain="{{ phrase('widget_def_options_php_callback_explain') }}"
	arg-className="options[callback_class]"
	arg-classValue="{$options.callback_class}"
	arg-methodName="options[callback_method]"
	arg-methodValue="{$options.callback_method}" />]]></template>
  <template type="admin" title="widget_def_options_poll_base" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:if is="!$options.poll_id">

	<xf:textboxrow name="options[content_url]" type="url"
		label="{{ phrase('poll_content_url') }}"
		explain="{{ phrase('poll_content_url_explain') }}" />

<xf:elseif is="$poll" />

	<xf:formrow label="{{ phrase('poll_for_content') }}">
		<a href="{$contentLink}" target="_blank">{$contentTitle}</a>
	</xf:formrow>

	<xf:hiddenval name="options[poll_id]">{$poll.poll_id}</xf:hiddenval>

	<xf:checkboxrow explain="{{ phrase('poll_change_content_url_explain') }}">
		<xf:option name="options[change_url]"
			label="{{ phrase('poll_change_content_url:') }}">

			<xf:dependent>
				<xf:textbox name="options[content_url]" type="url" />
			</xf:dependent>
		</xf:option>
	</xf:checkboxrow>

<xf:else />

	<xf:formrow>
		<div class="blockMessage blockMessage--error blockMessage--iconic">{{ phrase('poll_for_this_content_cannot_be_found') }}</div>
	</xf:formrow>

	<xf:textboxrow name="options[content_url]" type="url"
		label="{{ phrase('poll_content_url') }}"
		explain="{{ phrase('poll_content_url_explain') }}" />

</xf:if>]]></template>
  <template type="admin" title="widget_def_options_share_page" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<hr class="formRowSep" />

<xf:checkboxrow>
	<xf:option name="options[iconic]" selected="$options.iconic">{{ phrase('display_icons_only') }}</xf:option>
</xf:checkboxrow>]]></template>
  <template type="admin" title="widget_def_options_thread_poll" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<hr class="formRowSep" />

<xf:include template="widget_def_options_poll_base">
	<xf:set var="$contentLink">{{ link_type('public', 'threads', $content) }}</xf:set>
	<xf:set var="$contentTitle">{$content.title}</xf:set>
</xf:include>]]></template>
  <template type="admin" title="widget_definition_chooser" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('choose_widget_definition') }}</xf:title>

<xf:form action="{{ link('widgets/add') }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:selectrow name="definition_id"
				label="{{ phrase('widget_definition') }}">

				<xf:option />
				<xf:options source="{$widgetDefinitions}" />
			</xf:selectrow>
		</div>
		<xf:submitrow submit="{{ phrase('add_widget') }}" icon="add" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="widget_definition_edit" version_id="2000033" version_string="2.0.0 Beta 3"><![CDATA[<xf:if is="$widgetDefinition.isInsert()">
	<xf:title>{{ phrase('add_widget_definition') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_widget_definition:') }} {$widgetDefinition.title}</xf:title>
</xf:if>

<xf:pageaction if="$widgetDefinition.isUpdate()">
	<xf:button href="{{ link('widgets/definitions/delete', $widgetDefinition) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('widgets/definitions/save', $widgetDefinition) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:textboxrow name="definition_id" value="{$widgetDefinition.definition_id}"
				maxlength="{{ max_length($widgetDefinition, 'definition_id') }}"
				label="{{ phrase('definition_id') }}"
				dir="ltr" />

			<xf:textboxrow name="title" value="{{ $widgetDefinition.definition_id ? $widgetDefinition.MasterTitle.phrase_text : '' }}"
				label="{{ phrase('title') }}" />

			<xf:textarearow name="description" value="{{ $widgetDefinition.definition_id ? $widgetDefinition.MasterDescription.phrase_text : '' }}" autosize="true"
				label="{{ phrase('description') }}" />

			<xf:textboxrow name="definition_class" value="{$widgetDefinition.definition_class}"
				maxlength="{{ max_length($widgetDefinition, 'definition_class') }}"
				label="{{ phrase('definition_class') }}"
				explain="{{ phrase('definition_class_explain') }}"
				dir="ltr" />

			<xf:macro template="addon_macros" name="addon_edit" arg-addOnId="{$widgetDefinition.addon_id}" />
		</div>
		<xf:submitrow sticky="true" icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="widget_definition_list" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('widget_definitions') }}</xf:title>

<xf:pageaction>
	<xf:button href="{{ link('widgets/definitions/add') }}" icon="add">{{ phrase('add_widget_definition') }}</xf:button>
</xf:pageaction>

<xf:if is="$widgetDefinitions is not empty">
	<div class="block">
		<div class="block-outer">
			<xf:macro template="filter_macros" name="quick_filter" arg-key="widget-definitions" arg-class="block-outer-opposite" />
		</div>
		<div class="block-container">
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$widgetDefinitions" value="$widgetDefinition">
						<xf:datarow
							label="{$widgetDefinition.title}"
							hint="{$widgetDefinition.definition_class}"
							explain="{$widgetDefinition.description}"
							href="{{ link('widgets/definitions/edit', $widgetDefinition) }}"
							delete="{{ link('widgets/definitions/delete', $widgetDefinition) }}">

							<xf:action href="{{ link('widgets/add', null, {'definition_id': $widgetDefinition.definition_id}) }}">
								{{ phrase('add_widget') }}
							</xf:action>
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($widgetDefinitions) }}</span>
			</div>
		</div>
	</div>
<xf:else />
	<div class="blockMessage">{{ phrase('no_items_have_been_created_yet') }}</div>
</xf:if>]]></template>
  <template type="admin" title="widget_delete" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link('widgets/delete', $widget, {'position_id': $positionId}) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				<xf:if is="$positionId">
					{{ phrase('please_confirm_that_you_want_to_delete_following_widget_from_position_x', {'positionId': $positionId}) }}
				<xf:else />
					{{ phrase('please_confirm_that_you_want_to_delete_following:') }}
				</xf:if>
				<strong><a href="{{ link('widgets/edit', $widget) }}">{$widget.title}</a></strong>
			</xf:inforow>
		</div>
		<xf:if is="count($widget.positions) == 1">
			<div class="block-body">
				<xf:checkboxrow rowtype="fullWidth noLabel">
					<xf:option name="delete">
						<xf:label>{{ phrase('this_is_last_position_for_this_widget_permanently_delete') }}</xf:label>
					</xf:option>
				</xf:checkboxrow>
			</div>
		<xf:elseif is="!$positionId AND count($widget.positions)" />
			<div class="block-row">
				<div class="blockMessage blockMessage--close blockMessage--warning blockMessage--iconic blockMessage--iconic">
					{{ phrase('this_widget_is_currently_used_in_x_positions', {'positions': count($widget.positions)}) }}
				</div>
			</div>
		</xf:if>
		<xf:submitrow rowtype="simple" icon="delete" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="widget_edit" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:if is="$widget.isInsert()">
	<xf:title>{{ phrase('add_widget') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_widget:') }} {$widget.title}</xf:title>
</xf:if>

<xf:pageaction if="$widget.isUpdate()">
	<xf:button href="{{ link('widgets/delete', $widget) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('widgets/save', $widget) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">

			<xf:formrow
				label="{{ phrase('widget_definition') }}"
				explain="{$widgetDefinition.description}">
				{$widgetDefinition.title}
				<xf:hiddenval name="definition_id">{$widgetDefinition.definition_id}</xf:hiddenval>
			</xf:formrow>

			<hr class="formRowSep" />

			<xf:textboxrow name="widget_key" value="{$widget.widget_key}" maxlength="{{ max_length($widget, 'widget_key') }}"
				label="{{ phrase('widget_key') }}"
				hint="{{ phrase('required') }}"
				explain="{{ phrase('widget_key_explain') }}"
				dir="ltr" />

			<xf:textboxrow name="title" value="{{ $widget.widget_id ? $widget.MasterTitle.phrase_text : '' }}"
				label="{{ phrase('title') }}"
				hint="{{ phrase('optional') }}"
				explain="{{ phrase('widget_title_explain') }}" />

			<xf:checkboxrow label="{{ phrase('display_in_positions') }}" listclass="listColumns">
				<xf:foreach loop="$widgetPositions" value="$position">
					<xf:option selected="{$widget.positions.{$position.position_id}} !== null" data-hide="true"
						label="{$position.title}">

						<xf:numberbox name="positions[{$position.position_id}]" value="{$widget.positions.{$position.position_id}|default(1)}" min="0" />
					</xf:option>
				</xf:foreach>

				<xf:explain>{{ phrase('widget_no_position_explain')|raw }}</xf:explain>
			</xf:checkboxrow>

			<xf:textboxrow name="display_condition" value="{$widget.display_condition}" code="true"
				label="{{ phrase('display_condition') }}"
				explain="{{ phrase('this_should_be_entered_as_template_style_expression') }}" />

			{$widget.renderOptions()|raw}
		</div>
		<xf:submitrow sticky="true" icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="widget_list" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('widgets') }}</xf:title>

<xf:pageaction>
	<xf:button href="{{ link('widgets/add') }}" icon="add" overlay="true">{{ phrase('add_widget') }}</xf:button>
</xf:pageaction>

<xf:if is="$groupedWidgets is not empty">
	<div class="block">
		<div class="block-outer">
			<xf:macro template="filter_macros" name="quick_filter" arg-key="widgets" arg-class="block-outer-opposite" />
		</div>
		<div class="block-container">
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$positions" key="$positionId" value="$position">
						<xf:if is="{$groupedWidgets.{$positionId}} is not empty">
							<tbody class="dataList-rowGroup">
								<xf:if is="$positionId == ''">
									<xf:datarow rowtype="subsection" rowclass="dataList-row--noHover"
										label="{{ phrase('(no_position)') }}"
										explain="{{ phrase('widget_no_position_explain')|raw }}"
										colspan="2" />
								<xf:else />
									<xf:datarow rowtype="subsection" rowclass="dataList-row--noHover"
										label="{$position.title}"
										explain="{$position.description|raw}"
										colspan="2" />
								</xf:if>
								<xf:foreach loop="{$groupedWidgets.{$positionId}}" value="$widget">
									<xf:datarow
										label="{$widget.title}"
										hint="{$widget.widget_key}"
										href="{{ link('widgets/edit', $widget) }}">
										<xf:delete href="{{ link('widgets/delete', $widget, $positionId ? {'position_id': $positionId} : {}) }}"
											tooltip="{{ $positionId ? phrase('delete_from_this_position') : phrase('delete') }}" />
									</xf:datarow>
								</xf:foreach>
							</tbody>
						</xf:if>
					</xf:foreach>
				</xf:datalist>
				<div class="block-footer">
					<span class="block-footer-counter">{{ display_totals($totalWidgets) }}</span>
				</div>
			</div>
		</div>
	</div>
<xf:else />
	<div class="blockMessage">{{ phrase('no_items_have_been_created_yet') }}</div>
</xf:if>]]></template>
  <template type="admin" title="widget_position_edit" version_id="2000036" version_string="2.0.0 Beta 6"><![CDATA[<xf:if is="$widgetPosition.isInsert()">
	<xf:title>{{ phrase('add_widget_position') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_widget_position:') }} {$widgetPosition.title}</xf:title>
</xf:if>

<xf:pageaction if="$widgetPosition.isUpdate()">
	<xf:button href="{{ link('widgets/positions/delete', $widgetPosition) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('widgets/positions/save', $widgetPosition) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:textboxrow name="position_id" value="{$widgetPosition.position_id}"
				maxlength="{{ max_length($widgetPosition, 'position_id') }}"
				label="{{ phrase('position_id') }}"
				dir="ltr" />

			<xf:textboxrow name="title" value="{$widgetPosition.MasterTitle.phrase_text}"
				label="{{ phrase('title') }}" />

			<xf:codeeditorrow name="description" value="{$widgetPosition.MasterDescription.phrase_text}"
				mode="html" data-line-wrapping="true"
				class="codeEditor--autoSize codeEditor--proportional"
				label="{{ phrase('description') }}"
				hint="{{ phrase('you_may_use_html') }}" />

			<xf:checkboxrow>
				<xf:option name="active" value="1" selected="$widgetPosition.active">{{ phrase('widget_position_is_active') }}</xf:option>
			</xf:checkboxrow>

			<xf:macro template="addon_macros" name="addon_edit" arg-addOnId="{$widgetPosition.addon_id}" />
		</div>
		<xf:submitrow sticky="true" icon="save" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="widget_position_list" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('widget_positions') }}</xf:title>

<xf:pageaction>
	<xf:button href="{{ link('widgets/positions/add') }}" icon="add">{{ phrase('add_widget_position') }}</xf:button>
</xf:pageaction>

<xf:if is="$widgetPositions is not empty">
	<xf:form action="{{ link('widgets/positions/toggle') }}" class="block" ajax="true">
		<div class="block-outer">
			<xf:macro template="filter_macros" name="quick_filter" arg-key="widget-positions" arg-class="block-outer-opposite" />
		</div>
		<div class="block-container">
			<div class="block-body">
				<xf:datalist>
					<xf:foreach loop="$widgetPositions" value="$widgetPosition">
						<xf:datarow
							label="{$widgetPosition.title}"
							explain="{$widgetPosition.description|raw}"
							href="{{ link('widgets/positions/edit', $widgetPosition) }}"
							delete="{{ link('widgets/positions/delete', $widgetPosition) }}">

							<xf:toggle name="active[{$widgetPosition.position_id}]" selected="$widgetPosition.active"
								class="dataList-cell--separated" submit="true"
								tooltip="{{ phrase('enable_disable_x', {'title': $widgetPosition.position_id}) }}" />
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($widgetPositions) }}</span>
			</div>
		</div>
	</xf:form>
<xf:else />
	<div class="blockMessage">{{ phrase('no_items_have_been_created_yet') }}</div>
</xf:if>]]></template>
  <template type="admin" title="xml_import" version_id="2000631" version_string="2.0.6 Beta 1"><![CDATA[<xf:title>{{ phrase('import_from_xml') }}</xf:title>

<xf:form action="{{ link($urlPrefix . '/import') }}" upload="true" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:uploadrow name="upload" accept=".xml"
				label="{{ phrase('import_from_uploaded_xml_file') }}" />
		</div>
		<xf:submitrow icon="import" />
	</div>
</xf:form>]]></template>
  <template type="email" title="MAIL_CONTAINER" version_id="2000038" version_string="2.0.0 Beta 8"><![CDATA[<!DOCTYPE html>
<html lang="{$xf.language.language_code}" dir="{$xf.language.text_direction}">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
	<base href="{$xf.options.boardUrl}/">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="format-detection" content="telephone=no">
	<title>{$subject}</title>
</head>
<body dir="{$xf.language.text_direction}" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">

<table id="bodyTable" border="0" width="100%" height="100%" cellpadding="0" cellspacing="0">
<tr>
	<td align="center" valign="top" id="bodyTableContainer">
		<table border="0" width="600" cellpadding="0" cellspacing="0" class="container" dir="{$xf.language.text_direction}">
		<tr>
			<td class="header" align="center" valign="top">
				<a href="{{ link('canonical:index') }}">{$xf.options.boardTitle}</a>
			</td>
		</tr>
		<tr>
			<td class="content" align="{{ $xf.isRtl ? 'right' : 'left' }}" valign="top">

{$html|raw}

			</td>
		</tr>
		<tr>
			<td class="footer" align="center" valign="top">
				<div>{{ phrase('visit_board_html', {'board_url': link('canonical:index'), 'board_title': $xf.options.boardTitle}) }}</div>

				<xf:if contentcheck="true">
					<div class="footerExtra"><xf:contentcheck>{{ phrase('email_footer_html') }}</xf:contentcheck></div>
				</xf:if>
			</td>
		</tr>
		</table>
	</td>
</tr>
</table>

</body>
</html>

<mail:text>
{$text}

-----------------------------

{{ phrase('visit_board_text', {'board_title': $xf.options.boardTitle, 'board_url': link('canonical:index')}) }}

{{ phrase('email_footer_text') }}
</mail:text>]]></template>
  <template type="email" title="api_key_change" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<mail:subject>
	{{ phrase('api_key_change_subject', {'board': $xf.options.boardTitle}) }}
</mail:subject>

{{ phrase('api_key_change_body_html', {
	'username': $user.username,
	'changer': $changer.username,
	'key': $apiKey.title,
	'link': link_type('admin', 'canonical:api-keys')
}) }}]]></template>
  <template type="email" title="bb_code_tag_code" version_id="2000170" version_string="2.0.1"><![CDATA[<pre class="code" dir="ltr">{$content}</pre>]]></template>
  <template type="email" title="bb_code_tag_ispoiler" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<span class="inlineSpoilerPlaceholder">{{ phrase('spoiler_content_hidden') }}</span>]]></template>
  <template type="email" title="bb_code_tag_media" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<div class="mediaPlaceholder">{{ phrase('embedded_media') }}</div>]]></template>
  <template type="email" title="bb_code_tag_quote" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<div class="quote">
	<xf:if is="$name"><div class="quote-name">{{ phrase('x_said:', {'name': $name}) }}</div></xf:if>
	{$content}
</div>]]></template>
  <template type="email" title="bb_code_tag_spoiler" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<div class="spoilerPlaceholder">
	<xf:if is="$title">{$title} -</xf:if>
	{{ phrase('spoiler_content_hidden') }}
</div>]]></template>
  <template type="email" title="contact_email" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<mail:subject>
{{ phrase('contact_email_subject', {
	'subject': $subject,
	'board_title': $xf.options.boardTitle
}) }}
</mail:subject>

{{ phrase('contact_email_body_html', {
	'user': '<a href="mailto:' . $email . '">' . $name . ' &lt;' . {$email} . '&gt;</a>',
	'ip': $ip,
	'board': '<a href="' . link('canonical:index') . '">' . $xf.options.boardTitle . '</a>'
}) }}

<h2>{$subject}</h2>

<div class="message">{$message|nl2br}</div>]]></template>
  <template type="email" title="conversation_create" version_id="2000038" version_string="2.0.0 Beta 8"><![CDATA[<mail:subject>
	{{ phrase('conversation_insert_email_subject', {
		'username': $sender.username,
		'title': $conversation.title
	}) }}
</mail:subject>

{{ phrase('conversation_insert_email_html', {
	'receiver': $receiver.username,
	'sender': $sender.username,
	'board': '<a href="' . link('canonical:index') . '">' . $xf.options.boardTitle . '</a>'}
) }}

<h2><a href="{{ link('canonical:conversations/unread', $conversation) }}">{$conversation.title}</a></h2>

<xf:if is="$xf.options.emailConversationIncludeMessage">
	<div class="message">{{ bb_code_type('emailHtml', $message.message, 'conversation_message', $message) }}</div>
</xf:if>

<table cellpadding="10" cellspacing="0" border="0" width="100%" class="linkBar">
<tr>
	<td>
		<a href="{{ link('canonical:conversations/unread', $conversation) }}" class="button">{{ phrase('view_this_conversation') }}</a>
	</td>
	<td align="{{ $xf.isRtl ? 'left' : 'right' }}">
		<a href="{{ link('canonical:conversations') }}" class="buttonFake">{{ phrase('view_all_your_conversations') }}</a>
	</td>
</tr>
</table>

<xf:macro template="conversation_macros" name="footer" arg-conversation="{$conversation}" />]]></template>
  <template type="email" title="conversation_invite" version_id="2000038" version_string="2.0.0 Beta 8"><![CDATA[<mail:subject>
	{{ phrase('conversation_join_email_subject', {
		'username': $sender.username,
		'title': $conversation.title
	}) }}
</mail:subject>

{{ phrase('conversation_join_email_html', {
	'receiver': $receiver.username,
	'sender': $sender.username,
	'board': '<a href="' . link('canonical:index') . '">' . $xf.options.boardTitle . '</a>'
}) }}

<h2><a href="{{ link('canonical:conversations/unread', $conversation) }}">{$conversation.title}</a></h2>

<xf:if is="$xf.options.emailConversationIncludeMessage">
	<div class="message">{{ bb_code_type('emailHtml', $message.message, 'conversation_message', $message) }}</div>
</xf:if>

<table cellpadding="10" cellspacing="0" border="0" width="100%" class="linkBar">
<tr>
	<td>
		<a href="{{ link('canonical:conversations', $conversation) }}" class="button">{{ phrase('view_this_conversation') }}</a>
	</td>
	<td align="{{ $xf.isRtl ? 'left' : 'right' }}">
		<a href="{{ link('canonical:conversations') }}" class="buttonFake">{{ phrase('view_all_your_conversations') }}</a>
	</td>
</tr>
</table>

<xf:macro template="conversation_macros" name="footer" arg-conversation="{$conversation}" />]]></template>
  <template type="email" title="conversation_macros" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro name="footer" arg-conversation="!">
	{{ phrase('conversation_email_html_footer', {
		'disable_link': link('canonical:email-stop/conversation', $xf.toUser)
	}) }}
</xf:macro>]]></template>
  <template type="email" title="conversation_reply" version_id="2000038" version_string="2.0.0 Beta 8"><![CDATA[<mail:subject>
	{{ phrase('conversation_reply_email_subject', {
		'username': $sender.username,
		'title': $conversation.title
	}) }}
</mail:subject>

{{ phrase('conversation_reply_email_html', {
	'receiver': $receiver.username,
	'sender': '<a href="' . link('canonical:members', $sender) . '">' . $sender.username . '</a>',
	'board': '<a href="' . link('canonical:index') . '">' . $xf.options.boardTitle . '</a>'
}) }}

<h2><a href="{{ link('canonical:conversations/unread', $conversation) }}">{$conversation.title}</a></h2>

<xf:if is="$xf.options.emailConversationIncludeMessage">
	<div class="message">{{ bb_code_type('emailHtml', $message.message, 'conversation_message', $message) }}</div>
</xf:if>

<table cellpadding="10" cellspacing="0" border="0" width="100%" class="linkBar">
<tr>
	<td>
		<a href="{{ link('canonical:conversations/unread', $conversation) }}" class="button">{{ phrase('view_this_conversation') }}</a>
	</td>
	<td align="{{ $xf.isRtl ? 'left' : 'right' }}">
		<a href="{{ link('canonical:conversations') }}" class="buttonFake">{{ phrase('view_all_your_conversations') }}</a>
	</td>
</tr>
</table>

<xf:macro template="conversation_macros" name="footer" arg-conversation="{$conversation}" />]]></template>
  <template type="email" title="core.less" version_id="2010037" version_string="2.1.0 Beta 7"><![CDATA[// NOTE: THIS DOES NOT HAVE ACCESS TO public:setup.less automatically!
// THE LESS HERE SHOULD BE KEPT AS SIMPLE AS POSSIBLE

body
{
	margin: 0;
	padding: 0;
	word-wrap: break-word;
	-ms-text-size-adjust: 100%;
	-webkit-text-size-adjust: 100%;

	background-color: @xf-emailBg;
	font-size: @xf-fontSizeNormal;
	font-family: @xf-emailFont;
	line-height: @xf-lineHeightDefault;
	color: @xf-emailTextColor;
}

table
{
	border-spacing: 0;
	mso-table-lspace: 0pt;
	mso-table-rspace: 0pt;
}

table,
td
{
	border-collapse: collapse;
}

a
{
	color: @xf-emailLinkColor;
	text-decoration: none;
}

#bodyTable
{
	height: 100% !important;
	width: 100% !important;
	margin: 0;
	padding: 0;
	background-color: @xf-emailBg;
}

#bodyTableContainer
{
	background-color: @xf-emailBg;
}

.container
{
	width: 100%;
	max-width: 600px;
}

.header
{
	color: @xf-emailHeaderColor;
	padding: @xf-paddingMedium @xf-paddingLarge;
	border-top-left-radius: @xf-borderRadiusMedium;
	border-top-right-radius: @xf-borderRadiusMedium;
	font-family: @xf-emailFont;
	font-size: @xf-fontSizeLargest;
	line-height: @xf-lineHeightDefault;
}

.header a
{
	color: @xf-emailHeaderColor;
}

.content
{
	background-color: @xf-emailContentBg;
	border-radius: @xf-borderRadiusSmall;
	color: @xf-emailTextColor;
	padding: @xf-paddingLarge;
	font-size: @xf-fontSizeNormal;
	font-family: @xf-emailFont;
	line-height: @xf-lineHeightDefault;
}

.content .bbImage
{
	max-width: 100%;
}

.content > p:first-child
{
	margin-top: 0;
}

.content > p:last-child
{
	margin-bottom: 0;
}

.footer
{
	padding: @xf-paddingMedium @xf-paddingLarge;
	text-align: center;
	color: @xf-emailTextColorMuted;
	font-size: @xf-fontSizeSmall;
	font-family: @xf-emailFont;
	line-height: @xf-lineHeightDefault;
}

.footer a
{
	color: @xf-emailTextColorMuted;
	text-decoration: underline;
}

.footerExtra
{
	margin-top: 1em;
}

h2
{
	font-size: @xf-fontSizeLargest;
	font-weight: normal;
	margin: @xf-paddingLarge 0;
	padding: 0;
}

hr
{
	border: 0;
	border-bottom: @xf-borderSize solid @xf-emailBorderColor;
}

div.message
{
	border-left: @xf-borderSizeFeature solid @xf-borderColorFeature;
	margin: @xf-paddingLarge 0;
	padding: @xf-paddingLarge;
}

div.quote
{
	border-left: @xf-borderSizeFeature solid @xf-borderColorAttention;
	border-top: @xf-borderSize solid @xf-emailBorderColor;
	border-bottom: @xf-borderSize solid @xf-emailBorderColor;
	border-right: @xf-borderSize solid @xf-emailBorderColor;
	background: @xf-emailContentAltBg;
	margin: @xf-paddingLarge 0;
	padding: @xf-paddingLarge;
}

.quote-name
{
	color: @xf-textColorAttention;
	font-size: @xf-fontSizeSmall;
	margin-bottom: @xf-paddingMedium;
}

pre.code
{
	margin: @xf-paddingLarge 0;
	padding: @xf-paddingLarge;
	border-left: @xf-borderSizeFeature solid @xf-borderColorAttention;
	border-top: @xf-borderSize solid @xf-emailBorderColor;
	border-bottom: @xf-borderSize solid @xf-emailBorderColor;
	border-right: @xf-borderSize solid @xf-emailBorderColor;
	background: @xf-emailContentAltBg;
	max-width: 600px;
	overflow: auto;
}

.textLink
{
	color: @xf-emailTextColor;
	text-decoration: none;
}

.linkBar
{
	padding: @xf-paddingMedium;
	background-color: @xf-emailContentAltBg;
	border-top: @xf-borderSize solid @xf-emailBorderColor;
}

.button
{
	display: inline-block;
	padding: 5px 10px;
	background-color: @xf-buttonBg;
	border: none;
	border-radius: @xf-borderRadiusMedium;
	font-size: @xf-fontSizeSmall;
	color: @xf-buttonTextColor;
	text-decoration: none;
}

.buttonFake
{
	display: inline-block;
	padding: 5px 10px;
	font-size: @xf-fontSizeSmall;
}

.minorText,
.unsubscribeLink
{
	font-size: @xf-fontSizeSmall;
	color: @xf-emailTextColorMuted;
}

.minorText a,
.unsubscribeLink a
{
	color: @xf-emailTextColorMuted;
	text-decoration: underline;
}

.unsubscribeLink
{
	margin-top: 1em;
	text-align: center;
}

.mediaPlaceholder,
.spoilerPlaceholder
{
	border-radius: @xf-borderRadiusSmall;
	margin: @xf-paddingMedium 0;
	padding: @xf-paddingMedium;
	font-size: @xf-fontSizeLargest;
	line-height: 3;
	text-align: center;
	border: @xf-borderSize solid @xf-emailBorderColor;
	background-color: @xf-emailContentAltBg;
}

.inlineSpoilerPlaceholder {
	font-size: 80%;
	background-color: @xf-contentAltBg;
	border: @xf-borderSize solid @xf-borderColorLight;
	border-radius: @xf-borderRadiusSmall;
	padding: 1px @xf-paddingSmall;
}]]></template>
  <template type="email" title="email_changed" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<mail:subject>
	{{ phrase('email_changed_subject', {'board': $xf.options.boardTitle}) }}
</mail:subject>

{{ phrase('email_changed_body_html', {
	'username': $user.username,
	'new': $newEmail,
	'ip': $ip,
	'board': '<a href="' . link('canonical:index') . '">' . $xf.options.boardTitle . '</a>'})
}}]]></template>
  <template type="email" title="file_check_warning" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<mail:subject>
	{{ phrase('file_healthcheck_warnings_on_x', {'board_title': $xf.options.boardTitle}) }}
</mail:subject>

<p>{{ phrase('automatic_file_health_check_was_started_on_x_at_y_problems', {'board_title': $xf.options.boardTitle, 'check_date': date_time($fileCheck.check_date)}) }}</p>

<xf:if is="$fileCheck.total_missing && $fileCheck.total_inconsistent">
	<p>{{ phrase('after_checking_x_files_we_found_y_missing_z_inconsistent', {'checked': $fileCheck.total_checked|number, 'missing': $fileCheck.total_missing|number, 'inconsistent': $fileCheck.total_inconsistent|number}) }}</p>
<xf:elseif is="$fileCheck.total_missing" />
	<p>{{ phrase('after_checking_x_files_we_found_y_missing', {'checked': $fileCheck.total_checked|number, 'missing': $fileCheck.total_missing|number}) }}</p>
<xf:elseif is="$fileCheck.total_inconsistent" />
	<p>{{ phrase('after_checking_x_files_we_found_y_inconsistent', {'checked': $fileCheck.total_checked|number, 'inconsistent': $fileCheck.total_inconsistent|number}) }}</p>
</xf:if>

<table cellpadding="10" cellspacing="0" border="0" width="100%" class="linkBar">
	<tr>
		<td>
			<a href="{{ link_type('admin', 'canonical:tools/file-check/results', $fileCheck) }}" class="button">{{ phrase('please_review_files') }}</a>
		</td>
	</tr>
</table>]]></template>
  <template type="email" title="password_changed" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<mail:subject>
	{{ phrase('password_changed_subject', {'board': $xf.options.boardTitle}) }}
</mail:subject>

{{ phrase('password_changed_body_html', {
	'username': $user.username,
	'ip': $ip,
	'board': '<a href="' . link('canonical:index') . '">' . $xf.options.boardTitle . '</a>'
}) }}]]></template>
  <template type="email" title="payment_received_receipt_user_upgrade" version_id="2000033" version_string="2.0.0 Beta 3"><![CDATA[<mail:subject>{{ phrase('receipt_for_your_account_upgrade_at_x', {'board_title': $xf.options.boardTitle}) }}</mail:subject>

<p>{{ phrase('thank_you_for_purchasing_account_upgrade_at_x', {'board_url': link('canonical:index'), 'board_title': $xf.options.boardTitle}) }}</p>

<table border="0" width="100%" cellpadding="0" cellspacing="0">
<tr>
	<td><b>{{ phrase('purchased_item') }}</b></td>
	<td align="right"><b>{{ phrase('price') }}</b></td>
</tr>
<tr>
	<td><a href="{{ link('canonical:account/upgrades') }}">{$purchasable.title}</a></td>
	<td align="right">{$purchasable.purchasable.cost_phrase}</td>
</tr>
</table>

<p><a href="{{ link('canonical:account/upgrades') }}" class="button">{{ phrase('manage_your_account_upgrades') }}</a></p>

<xf:if is="$xf.toUser.canUseContactForm()">
	<p>{{ phrase('thank_you_for_your_purchase_questions_contact_us', {'contacturl': link('canonical:misc/contact') }) }}</p>
<xf:else />
	<p>{{ phrase('thank_you_for_your_purchase') }}</p>
</xf:if>]]></template>
  <template type="email" title="prepared_email" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<mail:subject>{$title}</mail:subject>

{$htmlBody|raw}

<mail:text>{$textBody}</mail:text>

<xf:if is="$raw">
	<xf:page option="template"></xf:page>
</xf:if>]]></template>
  <template type="email" title="thread_forum_macros" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro name="go_thread_bar" arg-thread="!" arg-watchType="!">
	<table cellpadding="10" cellspacing="0" border="0" width="100%" class="linkBar">
	<tr>
		<td>
			<a href="{{ link('canonical:threads/unread', $thread, {'new': 1}) }}" class="button">{{ phrase('view_this_thread') }}</a>
		</td>
		<td align="{{ $xf.isRtl ? 'left' : 'right' }}">
			<xf:if is="$watchType == 'threads'">
				<a href="{{ link('canonical:watched/threads') }}" class="buttonFake">{{ phrase('watched_threads') }}</a>
			<xf:elseif is="$watchType == 'forums'" />
				<a href="{{ link('canonical:watched/forums') }}" class="buttonFake">{{ phrase('watched_forums') }}</a>
			</xf:if>
		</td>
	</tr>
	</table>
</xf:macro>

<xf:macro name="watched_forum_footer" arg-thread="!" arg-forum="!">
	{{ phrase('watched_forum_email_html_footer', {
		'thread': '<a href="' . link('canonical:threads', $thread) . '">' .  $thread.title . '</a>',
		'node_title': $forum.title,
		'board': $xf.options.boardTitle,
		'disable_this_link': link('canonical:email-stop/content', $xf.toUser, {'t': 'forum', 'id': $forum.node_id}),
		'disable_all_link': link('canonical:email-stop/all', $xf.toUser)
	}) }}
</xf:macro>

<xf:macro name="watched_thread_footer" arg-thread="!">
	{{ phrase('watched_thread_email_html_footer', {
		'thread': '<a href="' . link('canonical:threads', $thread) . '">' . $thread.title . '</a>',
		'board': $xf.options.boardTitle,
		'disable_this_link': link('canonical:email-stop/content', $xf.toUser, {'t': 'thread', 'id': $thread.thread_id}),
		'disable_all_link': link('canonical:email-stop/all', $xf.toUser)
	}) }}
</xf:macro>]]></template>
  <template type="email" title="two_step_login_backup" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<mail:subject>{{ phrase('two_step_backup_subject', {'board': $xf.options.boardTitle}) }}</mail:subject>

{{ phrase('two_step_backup_body_html', {
	'username': $user.username,
	'ip': $ip,
	'board': '<a href="' . link('canonical:index') . '">' . $xf.options.boardTitle . '</a>'
}) }}]]></template>
  <template type="email" title="two_step_login_email" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<mail:subject>{{ phrase('two_step_email_subject', {'board': $xf.options.boardTitle}) }}</mail:subject>

{{ phrase('two_step_email_body_html1', {
	'username': $user.username,
	'board': '<a href="' . link('canonical:index') . '">' . $xf.options.boardTitle . '</a>'
}) }}

<h2>{$code}</h2>

{{ phrase('two_step_email_body_html2', {'ip': $ip}) }}]]></template>
  <template type="email" title="user_account_approved" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<mail:subject>
	{{ phrase('user_account_approved_subject', {'board_title': $xf.options.boardTitle}) }}
</mail:subject>

{{ phrase('user_account_approved_body_html', {
	'username': $user.username,
	'board': '<a href="' . link('canonical:index') . '">' . $xf.options.boardTitle . '</a>'
}) }}

<h2>{{ phrase('visit_board_html', {'board_url': link('canonical:index'), 'board_title': $xf.options.boardTitle}) }}</h2>]]></template>
  <template type="email" title="user_account_rejected" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<mail:subject>
	{{ phrase('user_account_rejected_subject', {'board_title': $xf.options.boardTitle}) }}
</mail:subject>

{{ phrase('user_account_rejected_body_html', {
	'username': $user.username,
	'board': '<a href="' . link('canonical:index') . '">' . $xf.options.boardTitle . '</a>'
}) }}

<xf:if is="$reason">
	<p>{{ phrase('the_following_reason_was_given') }} {$reason}</p>
</xf:if>
]]></template>
  <template type="email" title="user_email_confirmation" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<mail:subject>
	{{ phrase('user_email_confirmation_subject', {
		'boardTitle': $xf.options.boardTitle
	}) }}
</mail:subject>

{{ phrase('user_email_confirmation_body_html', {
	'username': $user.username,
	'board': '<a href="' . link('canonical:index') . '">' . $xf.options.boardTitle . '</a>'
}) }}

<p><a href="{{ link('canonical:account-confirmation/email', $user, {'c': $confirmation.confirmation_key}) }}" class="button">{{ phrase('confirm_your_email') }}</a></p>]]></template>
  <template type="email" title="user_lost_password_reset" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<mail:subject>
	{{ phrase('user_lost_password_reset_subject', {'boardTitle': $xf.options.boardTitle}) }}
</mail:subject>

{{ phrase('user_lost_password_reset_body_html', {
	'username': $user.username,
	'board': '<a href="' . link('canonical:index') . '">' . $xf.options.boardTitle . '</a>'
}) }}

<p><a href="{{ link('canonical:index') }}" class="button">{{ phrase('log_in') }}</a></p>]]></template>
  <template type="email" title="user_password_confirmation" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<mail:subject>
	{{ phrase('user_lost_password_subject', {'boardTitle': $xf.options.boardTitle}) }}
</mail:subject>

{{ phrase('user_lost_password_body_html', {
	'username': $user.username,
	'board': '<a href="' . link('canonical:index') . '">' . $xf.options.boardTitle . '</a>'
}) }}

<p><a href="{{ link('canonical:lost-password/confirm', $user, {'c': $confirmation.confirmation_key}) }}" class="button">{{ phrase('reset_password') }}</a></p>

<xf:if is="$isAdminReset">
	<p>{{ phrase('this_password_reset_was_requested_by_admin_of_x_on_your_behalf', {'board_title': $xf.options.boardTitle}) }}</p>
<xf:else />
	<p>{{ phrase('ignore_email_if_not_requested') }}</p>
</xf:if>]]></template>
  <template type="email" title="watched_forum_reply" version_id="2000038" version_string="2.0.0 Beta 8"><![CDATA[<mail:subject>
	{{ phrase('new_message_in_watched_forum_x', {
		'title': prefix('thread', $thread, 'escaped') . $thread.title
	}) }}
</mail:subject>

{{ phrase('watched_forum_message_email_html', {
	'receiver': $receiver.username,
	'replier': username_link_email($post.User, $post.username),
	'board': '<a href="' . link('canonical:index') . '">' . $xf.options.boardTitle . '</a>'
}) }}

<h2><a href="{{ link('canonical:posts', $post) }}">{{ prefix('thread', $thread, 'escaped') }}{$thread.title}</a></h2>

<xf:if is="$xf.options.emailWatchedThreadIncludeMessage">
	<div class="message">{{ bb_code_type('emailHtml', $post.message, 'post', $post) }}</div>
</xf:if>

<xf:macro template="thread_forum_macros" name="go_thread_bar" arg-thread="{$thread}" arg-watchType="forums" />

<xf:macro template="thread_forum_macros" name="watched_forum_footer" arg-thread="{$thread}" arg-forum="{$forum}" />]]></template>
  <template type="email" title="watched_forum_thread" version_id="2000038" version_string="2.0.0 Beta 8"><![CDATA[<mail:subject>
	{{ phrase('new_thread_in_watched_forum_x', {
		'title': prefix('thread', $thread, 'escaped') . $thread.title
	}) }}
</mail:subject>

{{ phrase('watched_forum_thread_email_html', {
	'receiver': $receiver.username,
	'replier': username_link_email($post.User, $post.username),
	'board': '<a href="' . link('canonical:index') . '">' . $xf.options.boardTitle . '</a>'
}) }}

<h2><a href="{{ link('canonical:posts', $post) }}">{{ prefix('thread', $thread, 'escaped') }}{$thread.title}</a></h2>

<xf:if is="$xf.options.emailWatchedThreadIncludeMessage">
	<div class="message">{{ bb_code_type('emailHtml', $post.message, 'post', $post) }}</div>
</xf:if>

<xf:macro template="thread_forum_macros" name="go_thread_bar" arg-thread="{$thread}" arg-watchType="forums" />

<xf:macro template="thread_forum_macros" name="watched_forum_footer" arg-thread="{$thread}" arg-forum="{$forum}" />]]></template>
  <template type="email" title="watched_thread_reply" version_id="2000038" version_string="2.0.0 Beta 8"><![CDATA[<mail:subject>
	{{ phrase('reply_to_watched_thread_x', {
		'title': prefix('thread', $thread, 'escaped') . $thread.title
	}) }}
</mail:subject>

{{ phrase('watched_thread_reply_email_html', {
	'receiver': $receiver.username,
	'replier': username_link_email($post.User, $post.username),
	'board': '<a href="' . link('canonical:index') . '">' . $xf.options.boardTitle . '</a>'
}) }}

<h2><a href="{{ link('canonical:posts', $post) }}">{{ prefix('thread', $thread, 'escaped') }}{$thread.title}</a></h2>

<xf:if is="$xf.options.emailWatchedThreadIncludeMessage">
	<div class="message">{{ bb_code_type('emailHtml', $post.message, 'post', $post) }}</div>
</xf:if>

<xf:macro template="thread_forum_macros" name="go_thread_bar" arg-thread="{$thread}" arg-watchType="threads" />

<xf:macro template="thread_forum_macros" name="watched_thread_footer" arg-thread="{$thread}" />]]></template>
  <template type="public" title="PAGE_CONTAINER" version_id="2010132" version_string="2.1.1 Beta 2"><![CDATA[<!DOCTYPE html>
<html id="XF" lang="{$xf.language.language_code}" dir="{$xf.language.text_direction}"
	data-app="public"
	data-template="{$template}"
	data-container-key="{$containerKey}"
	data-content-key="{$contentKey}"
	data-logged-in="{{ $xf.visitor.user_id ? 'true' : 'false' }}"
	data-cookie-prefix="{$xf.cookie.prefix}"
	class="has-no-js {{ $template ? 'template-' . $template : '' }}"
	{{ $xf.runJobs ? ' data-run-jobs=""' : '' }}>
<head>
	<meta charset="utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=Edge" />
	<meta name="viewport" content="width=device-width, initial-scale=1, viewport-fit=cover">

	<xf:set var="$siteName" value="{$xf.options.boardTitle}" />
	<xf:set var="$h1"><xf:h1 fallback="{$siteName}" /></xf:set>
	<xf:set var="$description"><xf:description /></xf:set>

	<title><xf:title formatter="%s | %s" fallback="{$xf.options.boardTitle}" page="{$pageNumber}" /></title>

	<xf:foreach loop="$head" value="$headTag">
		{$headTag}
	</xf:foreach>

	<xf:if is="!$head.meta_site_name && $siteName is not empty">
		<xf:macro template="metadata_macros" name="site_name" arg-siteName="{$siteName}" arg-output="{{ true }}" />
	</xf:if>
	<xf:if is="!$head.meta_type">
		<xf:macro template="metadata_macros" name="type" arg-type="website" arg-output="{{ true }}" />
	</xf:if>
	<xf:if is="!$head.meta_title">
		<xf:macro template="metadata_macros" name="title" arg-title="{{ page_title() ?: $siteName }}" arg-output="{{ true }}" />
	</xf:if>
	<xf:if is="!$head.meta_description && $description is not empty && $pageDescriptionMeta">
		<xf:macro template="metadata_macros" name="description" arg-description="{$description}" arg-output="{{ true }}" />
	</xf:if>
	<xf:if is="!$head.meta_share_url">
		<xf:macro template="metadata_macros" name="share_url" arg-shareUrl="{$xf.fullUri}" arg-output="{{ true }}" />
	</xf:if>
	<xf:if is="!$head.meta_image_url && property('publicMetadataLogoUrl')">
		<xf:macro template="metadata_macros" name="image_url"
			arg-imageUrl="{{ base_url(property('publicMetadataLogoUrl'), true) }}"
			arg-output="{{ true }}" />
	</xf:if>

	<xf:if is="property('metaThemeColor')">
		<meta name="theme-color" content="{{ parse_less_color(property('metaThemeColor')) }}" />
	</xf:if>

	<xf:macro template="helper_js_global" name="head" arg-app="public" />

	<xf:if is="property('publicFaviconUrl')">
		<link rel="icon" type="image/png" href="{{ base_url(property('publicFaviconUrl'), true) }}" sizes="32x32" />
	</xf:if>
	<xf:if is="property('publicMetadataLogoUrl')">
		<link rel="apple-touch-icon" href="{{ base_url(property('publicMetadataLogoUrl'), true) }}" />
	</xf:if>
	<xf:include template="google_analytics" />
</head>
<body data-template="{$template}">

<div class="p-pageWrapper" id="top">

<xf:if contentcheck="true">
	<div class="p-staffBar">
		<div class="p-staffBar-inner hScroller" data-xf-init="h-scroller">
			<div class="hScroller-scroll">
			<xf:contentcheck>
				<xf:if is="$xf.visitor.is_moderator && $xf.session.unapprovedCounts.total">
					<a href="{{ link('approval-queue') }}" class="p-staffBar-link badgeContainer badgeContainer--highlighted" data-badge="{$xf.session.unapprovedCounts.total|number}">
						{{ phrase('approval_queue') }}
					</a>
				</xf:if>

				<xf:if is="$xf.visitor.is_moderator && !$xf.options.reportIntoForumId && $xf.session.reportCounts.total">
					<a href="{{ link('reports') }}"
						class="p-staffBar-link badgeContainer badgeContainer--visible {{ ($xf.session.reportCounts.total && ($xf.session.reportCounts.lastBuilt > $xf.session.reportLastRead) OR $xf.session.reportCounts.assigned) ? ' badgeContainer--highlighted' : '' }}"
						data-badge="{{ $xf.session.reportCounts.assigned ? $xf.session.reportCounts.assigned|number . ' / ' . $xf.session.reportCounts.total|number : $xf.session.reportCounts.total|number }}"
						title="{{ $xf.session.reportCounts.lastBuilt ? phrase('last_report_update:')|for_attr . ' ' . date_time($xf.session.reportCounts.lastBuilt) : '' }}">
						{{ phrase('reports') }}
					</a>
				</xf:if>

				<xf:if contentcheck="true">
					<a class="p-staffBar-link menuTrigger" data-xf-click="menu" data-xf-key="alt+m" role="button" tabindex="0" aria-expanded="false" aria-haspopup="true">{{ phrase('moderator') }}</a>
					<div class="menu" data-menu="menu" aria-hidden="true">
						<div class="menu-content">
							<h4 class="menu-header">{{ phrase('moderator_tools') }}</h4>
							<xf:contentcheck>
							<!--[XF:mod_tools_menu:top]-->
							<xf:if is="$xf.visitor.is_moderator">
								<a href="{{ link('approval-queue') }}" class="menu-linkRow">{{ phrase('approval_queue') }}</a>
							</xf:if>
							<xf:if is="$xf.visitor.is_moderator && !$xf.options.reportIntoForumId">
								<a href="{{ link('reports') }}" class="menu-linkRow" title="{{ $xf.session.reportCounts.lastBuilt ? phrase('last_report_update:')|for_attr . ' ' . date_time($xf.session.reportCounts.lastBuilt) : '' }}">{{ phrase('reports') }}</a>
							</xf:if>
							<!--[XF:mod_tools_menu:bottom]-->
							</xf:contentcheck>
						</div>
					</div>
				</xf:if>

				<xf:if is="$xf.visitor.is_admin">
					<a href="{{ base_url('admin.php') }}" class="p-staffBar-link" target="_blank">{{ phrase('admin') }}</a>
				</xf:if>
			</xf:contentcheck>
			</div>
		</div>
	</div>
</xf:if>

<header class="p-header" id="header">
	<div class="p-header-inner">
		<div class="p-header-content">

			<div class="p-header-logo p-header-logo--image">
				<a href="{{ ($xf.options.logoLink && $xf.homePageUrl) ? $xf.homePageUrl : link('index') }}">
					<img src="{{ base_url(property('publicLogoUrl')) }}"
						alt="{$xf.options.boardTitle}"
						{{ property('publicLogoUrl2x') ? 'srcset="' . base_url(property('publicLogoUrl2x')) . ' 2x"' : '' }} />
				</a>
			</div>

			<xf:ad position="container_header" />
		</div>
	</div>
</header>

<xf:set var="$navHtml">
	<nav class="p-nav">
		<div class="p-nav-inner">
			<a class="p-nav-menuTrigger" data-xf-click="off-canvas" data-menu=".js-headerOffCanvasMenu" role="button" tabindex="0">
				<i aria-hidden="true"></i>
				<span class="p-nav-menuText">{{ phrase('menu') }}</span>
			</a>

			<div class="p-nav-smallLogo">
				<a href="{{ ($xf.options.logoLink && $xf.homePageUrl) ? $xf.homePageUrl : link('index') }}">
					<img src="{{ base_url(property('publicLogoUrl')) }}"
						alt="{$xf.options.boardTitle}"
					{{ property('publicLogoUrl2x') ? 'srcset="' . base_url(property('publicLogoUrl2x')) . ' 2x"' : '' }} />
				</a>
			</div>

			<div class="p-nav-scroller hScroller" data-xf-init="h-scroller" data-auto-scroll=".p-navEl.is-selected">
				<div class="hScroller-scroll">
					<ul class="p-nav-list js-offCanvasNavSource">
					<xf:foreach loop="$navTree" key="$navSection" value="$navEntry" i="$i" if="{{ $navSection != $xf.app.defaultNavigationId }}">
						<li>
							<xf:macro name="nav_entry"
								arg-navId="{$navSection}"
								arg-nav="{$navEntry}"
								arg-selected="{{ $navSection == $pageSection }}"
								arg-shortcut="{$i}" />
						</li>
					</xf:foreach>
					</ul>
				</div>
			</div>

			<div class="p-nav-opposite">
				<div class="p-navgroup p-account {{ $xf.visitor.user_id ? 'p-navgroup--member' : 'p-navgroup--guest' }}">
					<xf:if is="$xf.visitor.user_id">
						<xf:if is="$xf.visitor.user_state == 'rejected' OR $xf.visitor.user_state == 'disabled'">
							<a href="{{ link('account') }}"
								class="p-navgroup-link p-navgroup-link--iconic p-navgroup-link--user">
								<xf:avatar user="$xf.visitor" size="xxs" href="" />
								<span class="p-navgroup-linkText">{$xf.visitor.username}</span>
							</a>

							<a href="{{ link('logout', null, {'t': csrf_token()}) }}" class="p-navgroup-link">
								<span class="p-navgroup-linkText">{{ phrase('log_out') }}</span>
							</a>
						<xf:else />
							<a href="{{ link('account') }}"
								class="p-navgroup-link p-navgroup-link--iconic p-navgroup-link--user"
								data-xf-click="menu"
								data-xf-key="{{ phrase('shortcut.visitor_menu')|for_attr }}"
								data-menu-pos-ref="< .p-navgroup"
								aria-expanded="false"
								aria-haspopup="true">
								<xf:avatar user="$xf.visitor" size="xxs" href="" />
								<span class="p-navgroup-linkText">{$xf.visitor.username}</span>
							</a>
							<div class="menu menu--structural menu--wide menu--account" data-menu="menu" aria-hidden="true"
								data-href="{{ link('account/visitor-menu') }}"
								data-load-target=".js-visitorMenuBody">
								<div class="menu-content js-visitorMenuBody">
									<div class="menu-row">
										{{ phrase('loading...') }}
									</div>
								</div>
							</div>

							<a href="{{ link('conversations') }}"
								class="p-navgroup-link p-navgroup-link--iconic p-navgroup-link--conversations js-badge--conversations badgeContainer{{ $xf.visitor.conversations_unread ? ' badgeContainer--highlighted' : '' }}"
								data-badge="{$xf.visitor.conversations_unread|number}"
								data-xf-click="menu"
								data-xf-key="{{ phrase('shortcut.conversations_menu')|for_attr }}"
								data-menu-pos-ref="< .p-navgroup"
								aria-label="{{ phrase('inbox')|for_attr }}"
								aria-expanded="false"
								aria-haspopup="true">
								<i aria-hidden="true"></i>
								<span class="p-navgroup-linkText">{{ phrase('nav_inbox') }}</span>
							</a>
							<div class="menu menu--structural menu--medium" data-menu="menu" aria-hidden="true"
								data-href="{{ link('conversations/popup') }}"
								data-nocache="true"
								data-load-target=".js-convMenuBody">
								<div class="menu-content">
									<h3 class="menu-header">{{ phrase('conversations') }}</h3>
									<div class="js-convMenuBody">
										<div class="menu-row">{{ phrase('loading...') }}</div>
									</div>
									<div class="menu-footer menu-footer--split">
										<span class="menu-footer-main">
											<a href="{{ link('conversations') }}">{{ phrase('show_all...') }}</a>
										</span>
										<xf:if is="$xf.visitor.canStartConversation()">
											<span class="menu-footer-opposite">
												<a href="{{ link('conversations/add') }}">{{ phrase('start_new_conversation') }}</a>
											</span>
										</xf:if>
									</div>
								</div>
							</div>

							<a href="{{ link('account/alerts') }}"
								class="p-navgroup-link p-navgroup-link--iconic p-navgroup-link--alerts js-badge--alerts badgeContainer{{ $xf.visitor.alerts_unread ? ' badgeContainer--highlighted' : '' }}"
								data-badge="{$xf.visitor.alerts_unread|number}"
								data-xf-click="menu"
								data-xf-key="{{ phrase('shortcut.alerts_menu')|for_attr }}"
								data-menu-pos-ref="< .p-navgroup"
								aria-label="{{ phrase('alerts')|for_attr }}"
								aria-expanded="false"
								aria-haspopup="true">
								<i aria-hidden="true"></i>
								<span class="p-navgroup-linkText">{{ phrase('nav_alerts') }}</span>
							</a>
							<div class="menu menu--structural menu--medium" data-menu="menu" aria-hidden="true"
								data-href="{{ link('account/alerts-popup') }}"
								data-nocache="true"
								data-load-target=".js-alertsMenuBody">
								<div class="menu-content">
									<h3 class="menu-header">{{ phrase('alerts') }}</h3>
									<div class="js-alertsMenuBody">
										<div class="menu-row">{{ phrase('loading...') }}</div>
									</div>
									<div class="menu-footer menu-footer--split">
										<span class="menu-footer-main">
											<a href="{{ link('account/alerts') }}">{{ phrase('show_all...') }}</a>
										</span>
										<span class="menu-footer-opposite">
											<a href="{{ link('account/preferences') }}">{{ phrase('preferences') }}</a>
										</span>
									</div>
								</div>
							</div>
						</xf:if>
					<xf:else />
						<a href="{{ link('login') }}" class="p-navgroup-link p-navgroup-link--textual p-navgroup-link--logIn"
							data-xf-click="overlay" data-follow-redirects="on">
							<span class="p-navgroup-linkText">{{ phrase('log_in') }}</span>
						</a>
						<xf:if is="$xf.options.registrationSetup.enabled">
							<a href="{{ link('register') }}" class="p-navgroup-link p-navgroup-link--textual p-navgroup-link--register"
								data-xf-click="overlay" data-follow-redirects="on">
								<span class="p-navgroup-linkText">{{ phrase('register') }}</span>
							</a>
						</xf:if>
					</xf:if>
				</div>

				<div class="p-navgroup p-discovery{{ !$xf.visitor.canSearch() ? ' p-discovery--noSearch' : '' }}">
					<a href="{{ link('whats-new') }}"
						class="p-navgroup-link p-navgroup-link--iconic p-navgroup-link--whatsnew"
						aria-label="{{ phrase('whats_new')|for_attr }}"
						title="{{ phrase('whats_new')|for_attr }}">
						<i aria-hidden="true"></i>
						<span class="p-navgroup-linkText">{{ phrase('whats_new') }}</span>
					</a>

					<xf:if is="$xf.visitor.canSearch()">
						<a href="{{ link('search') }}"
							class="p-navgroup-link p-navgroup-link--iconic p-navgroup-link--search"
							data-xf-click="menu"
							data-xf-key="{{ phrase('shortcut.search_menu')|for_attr }}"
							aria-label="{{ phrase('search')|for_attr }}"
							aria-expanded="false"
							aria-haspopup="true"
							title="{{ phrase('search')|for_attr }}">
							<i aria-hidden="true"></i>
							<span class="p-navgroup-linkText">{{ phrase('search') }}</span>
						</a>
						<div class="menu menu--structural menu--wide" data-menu="menu" aria-hidden="true">
							<form action="{{ link('search/search') }}" method="post"
								class="menu-content"
								data-xf-init="quick-search">

								<h3 class="menu-header">{{ phrase('search') }}</h3>
								<!--[XF:search_menu:above_input]-->
								<div class="menu-row">
									<xf:if is="$searchConstraints">
										<div class="inputGroup inputGroup--joined">
											<xf:textbox name="keywords"
												placeholder="{{ phrase('search...') }}"
												aria-label="{{ phrase('search') }}"
												data-menu-autofocus="true" />
											<xf:select name="constraints"
												class="js-quickSearch-constraint"
												aria-label="{{ phrase('search_within') }}">

												<xf:option value="">{{ phrase('everywhere') }}</xf:option>
												<xf:foreach loop="$searchConstraints" key="$constraintName" value="$constraint">
													<xf:option value="{$constraint|json}">{$constraintName}</xf:option>
												</xf:foreach>
											</xf:select>
										</div>
									<xf:else />
										<xf:textbox name="keywords"
											placeholder="{{ phrase('search...') }}"
											aria-label="{{ phrase('search') }}"
											data-menu-autofocus="true" />
									</xf:if>
								</div>

								<!--[XF:search_menu:above_title_only]-->
								<div class="menu-row">
									<xf:checkbox standalone="true"><xf:option name="c[title_only]" label="{{ phrase('search_titles_only') }}" /></xf:checkbox>
								</div>
								<!--[XF:search_menu:above_member]-->
								<div class="menu-row">
									<div class="inputGroup">
										<span class="inputGroup-text" id="ctrl_search_menu_by_member">{{ phrase('by:') }}</span>
										<input type="text" class="input" name="c[users]" data-xf-init="auto-complete" placeholder="{{ phrase('member')|for_attr }}" aria-labelledby="ctrl_search_menu_by_member" />
									</div>
								</div>
								<div class="menu-footer">
									<span class="menu-footer-controls">
										<xf:button type="submit" class="button--primary" icon="search" />
										<xf:button href="{{ link('search') }}">{{ phrase('advanced_search...') }}</xf:button>
									</span>
								</div>

								<xf:csrf />
							</form>
						</div>
					</xf:if>
				</div>
			</div>
		</div>
	</nav>
</xf:set>
<xf:set var="$subNavHtml">
	<xf:if is="$selectedNavChildren is not empty">
		<div class="p-sectionLinks">
			<div class="p-sectionLinks-inner hScroller" data-xf-init="h-scroller">
				<div class="hScroller-scroll">
					<ul class="p-sectionLinks-list">
					<xf:foreach loop="$selectedNavChildren" key="$navId" value="$navEntry" i="$i">
						<li>
							<xf:macro name="nav_entry" arg-navId="{$navId}" arg-nav="{$navEntry}" arg-shortcut="alt+{$i}" />
						</li>
					</xf:foreach>
					</ul>
				</div>
			</div>
		</div>
	<xf:elseif is="{$selectedNavEntry}" />
		<div class="p-sectionLinks p-sectionLinks--empty"></div>
	</xf:if>
</xf:set>

<xf:if is="property('publicNavSticky') == 'primary'">
	<div class="p-navSticky p-navSticky--primary" data-xf-init="sticky-header">
		{$navHtml|raw}
	</div>
	{$subNavHtml|raw}
<xf:elseif is="property('publicNavSticky') == 'all'" />
	<div class="p-navSticky p-navSticky--all" data-xf-init="sticky-header">
		{$navHtml|raw}
		{$subNavHtml|raw}
	</div>
<xf:else />
	{$navHtml|raw}
	{$subNavHtml|raw}
</xf:if>

<div class="offCanvasMenu offCanvasMenu--nav js-headerOffCanvasMenu" data-menu="menu" aria-hidden="true" data-ocm-builder="navigation">
	<div class="offCanvasMenu-backdrop" data-menu-close="true"></div>
	<div class="offCanvasMenu-content">
		<div class="offCanvasMenu-header">
			{{ phrase('menu') }}
			<a class="offCanvasMenu-closer" data-menu-close="true" role="button" tabindex="0" aria-label="{{ phrase('close')|for_attr }}"></a>
		</div>
		<xf:if is="$xf.visitor.user_id">
			<div class="p-offCanvasAccountLink">
				<div class="offCanvasMenu-linkHolder">
					<a href="{{ link('account') }}" class="offCanvasMenu-link">
						<xf:avatar user="$xf.visitor" size="xxs" href="" />
						{$xf.visitor.username}
					</a>
				</div>
				<hr class="offCanvasMenu-separator" />
			</div>
		<xf:else />
			<div class="p-offCanvasRegisterLink">
				<div class="offCanvasMenu-linkHolder">
					<a href="{{ link('login') }}" class="offCanvasMenu-link" data-xf-click="overlay" data-menu-close="true">
						{{ phrase('log_in') }}
					</a>
				</div>
				<hr class="offCanvasMenu-separator" />
				<xf:if is="$xf.options.registrationSetup.enabled">
					<div class="offCanvasMenu-linkHolder">
						<a href="{{ link('register') }}" class="offCanvasMenu-link" data-xf-click="overlay" data-menu-close="true">
							{{ phrase('register') }}
						</a>
					</div>
					<hr class="offCanvasMenu-separator" />
				</xf:if>
			</div>
		</xf:if>
		<div class="js-offCanvasNavTarget"></div>
	</div>
</div>

<div class="p-body">
	<div class="p-body-inner">
		<!--XF:EXTRA_OUTPUT-->

		<xf:if is="$notices.block">
			<xf:macro template="notice_macros" name="notice_list" arg-type="block" arg-notices="{$notices.block}" />
		</xf:if>

		<xf:if is="$notices.scrolling">
			<xf:macro template="notice_macros" name="notice_list" arg-type="scrolling" arg-notices="{$notices.scrolling}" />
		</xf:if>

		<xf:ad position="container_breadcrumb_top_above" />
		<xf:macro name="breadcrumbs"
			arg-breadcrumbs="{$breadcrumbs}"
			arg-navTree="{$navTree}"
			arg-selectedNavEntry="{$selectedNavEntry}" />
		<xf:ad position="container_breadcrumb_top_below" />

		<xf:macro template="browser_warning_macros" name="javascript" />
		<xf:macro template="browser_warning_macros" name="browser" />

		<xf:if is="$headerHtml is not empty">
			<div class="p-body-header">
				{$headerHtml|raw}
			</div>
		<xf:elseif contentcheck="true" />
			<div class="p-body-header">
			<xf:contentcheck>
				<xf:if contentcheck="true">
					<div class="p-title {{ $noH1 ? 'p-title--noH1' : '' }}">
					<xf:contentcheck>
						<xf:if is="!$noH1">
							<h1 class="p-title-value">{$h1}</h1>
						</xf:if>
						<xf:if contentcheck="true">
							<div class="p-title-pageAction"><xf:contentcheck><xf:pageaction /></xf:contentcheck></div>
						</xf:if>
					</xf:contentcheck>
					</div>
				</xf:if>

				<xf:if is="$description is not empty">
					<div class="p-description">{$description}</div>
				</xf:if>
			</xf:contentcheck>
			</div>
		</xf:if>

		<div class="p-body-main {{ $sidebar ? 'p-body-main--withSidebar' : '' }} {{ $sideNav ? 'p-body-main--withSideNav' : '' }}">
			<xf:if is="$sideNav">
				<div class="p-body-sideNav">
					<div class="p-body-sideNavTrigger">
						<xf:button class="button--link" data-xf-click="off-canvas" data-menu="#js-SideNavOcm">
							{{ $sideNavTitle ?: phrase('navigation') }}
						</xf:button>
					</div>
					<div class="p-body-sideNavInner" data-ocm-class="offCanvasMenu offCanvasMenu--blocks" id="js-SideNavOcm" data-ocm-builder="sideNav">
						<div data-ocm-class="offCanvasMenu-backdrop" data-menu-close="true"></div>
						<div data-ocm-class="offCanvasMenu-content">
							<div class="p-body-sideNavContent">
								<xf:ad position="container_sidenav_above" />
								<xf:foreach loop="$sideNav" value="$sideNavHtml">
									{$sideNavHtml}
								</xf:foreach>
								<xf:ad position="container_sidenav_below" />
							</div>
						</div>
					</div>
				</div>
			</xf:if>

			<div class="p-body-content">
				<xf:ad position="container_content_above" />
				<div class="p-body-pageContent">{$content|raw}</div>
				<xf:ad position="container_content_below" />
			</div>

			<xf:if is="$sidebar">
				<div class="p-body-sidebar">
					<xf:ad position="container_sidebar_above" />
					<xf:foreach loop="$sidebar" value="$sidebarHtml">
						{$sidebarHtml}
					</xf:foreach>
					<xf:ad position="container_sidebar_below" />
				</div>
			</xf:if>
		</div>

		<xf:ad position="container_breadcrumb_bottom_above" />
		<xf:macro name="breadcrumbs"
			arg-breadcrumbs="{$breadcrumbs}"
			arg-navTree="{$navTree}"
			arg-selectedNavEntry="{$selectedNavEntry}"
			arg-variant="bottom" />
		<xf:ad position="container_breadcrumb_bottom_below" />
	</div>
</div>

<footer class="p-footer" id="footer">
	<div class="p-footer-inner">

		<div class="p-footer-row">
			<xf:if contentcheck="true">
				<div class="p-footer-row-main">
					<ul class="p-footer-linkList">
					<xf:contentcheck>
						<xf:if is="$xf.visitor.canChangeStyle()">
							<li><a href="{{ link('misc/style') }}" data-xf-click="overlay"
								data-xf-init="tooltip" title="{{ phrase('style_chooser')|for_attr }}" rel="nofollow">
								<xf:fa icon="fa-paint-brush" /> {$xf.style.title}
							</a></li>
						</xf:if>
						<xf:if is="$xf.visitor.canChangeLanguage()">
							<li><a href="{{ link('misc/language') }}" data-xf-click="overlay"
								data-xf-init="tooltip" title="{{ phrase('language_chooser')|for_attr }}" rel="nofollow">
								<xf:fa icon="fa-globe" /> {$xf.language.title}</a></li>
						</xf:if>
					</xf:contentcheck>
					</ul>
				</div>
			</xf:if>
			<div class="p-footer-row-opposite">
				<ul class="p-footer-linkList">
					<xf:if is="$xf.visitor.canUseContactForm()">
						<xf:if is="$xf.contactUrl">
							<li><a href="{$xf.contactUrl}" data-xf-click="{{ ($xf.options.contactUrl.overlay OR $xf.options.contactUrl.type == 'default') ? 'overlay' : '' }}">{{ phrase('contact_us') }}</a></li>
						</xf:if>
					</xf:if>

					<xf:if is="$xf.tosUrl">
						<li><a href="{$xf.tosUrl}">{{ phrase('terms_and_rules') }}</a></li>
					</xf:if>

					<xf:if is="$xf.privacyPolicyUrl">
						<li><a href="{$xf.privacyPolicyUrl}">{{ phrase('privacy_policy') }}</a></li>
					</xf:if>

					<xf:if is="$xf.helpPageCount">
						<li><a href="{{ link('help') }}">{{ phrase('help') }}</a></li>
					</xf:if>

					<xf:if is="$xf.homePageUrl">
						<li><a href="{$xf.homePageUrl}">{{ phrase('home') }}</a></li>
					</xf:if>

					<li><a href="{{ link('forums/index.rss', '-') }}" target="_blank" class="p-footer-rssLink" title="{{ phrase('rss')|for_attr }}"><span aria-hidden="true"><xf:fa icon="fa-rss" /><span class="u-srOnly">{{ phrase('rss') }}</span></span></a></li>
				</ul>
			</div>
		</div>

		<xf:if contentcheck="true">
			<div class="p-footer-copyright">
			<xf:contentcheck>
				<xf:copyright />
				{{ phrase('extra_copyright') }}
			</xf:contentcheck>
			</div>
		</xf:if>

		<xf:if contentcheck="true">
			<div class="p-footer-debug">
			<xf:contentcheck>
				<xf:macro template="debug_macros" name="debug"
					arg-controller="{$controller}"
					arg-action="{$actionMethod}"
					arg-template="{$template}" />
			</xf:contentcheck>
			</div>
		</xf:if>
	</div>
</footer>

</div> <!-- closing p-pageWrapper -->

<div class="u-bottomFixer js-bottomFixTarget">
	<xf:if is="$notices.floating">
		<xf:macro template="notice_macros" name="notice_list" arg-type="floating" arg-notices="{$notices.floating}" />
	</xf:if>
	<xf:if is="$notices.bottom_fixer">
		<xf:macro template="notice_macros" name="notice_list" arg-type="bottom_fixer" arg-notices="{$notices.bottom_fixer}" />
	</xf:if>
</div>

<xf:if is="property('scrollJumpButtons')">
	<div class="u-scrollButtons js-scrollButtons" data-trigger-type="{{ property('scrollJumpButtons') }}">
		<xf:button href="#top" class="button--scroll" data-xf-click="scroll-to"><xf:fa icon="fa-arrow-up" /><span class="u-srOnly">{{ phrase('top') }}</span></xf:button>
		<xf:if is="property('scrollJumpButtons') != 'up'">
			<xf:button href="#footer" class="button--scroll" data-xf-click="scroll-to"><xf:fa icon="fa-arrow-down" /><span class="u-srOnly">{{ phrase('bottom') }}</span></xf:button>
		</xf:if>
	</div>
</xf:if>

<xf:macro template="helper_js_global" name="body" arg-app="public" arg-jsState="{$jsState}" />

<xf:if is="count($xf.reactionsActive) > 1">
	<script type="text/template" id="xfReactTooltipTemplate">
		<div class="tooltip-content-inner">
			<div class="reactTooltip">
				<xf:foreach loop="$xf.reactionsActive" key="$reactionId" value="$reaction">
					<xf:reaction id="{$reactionId}" tooltip="true" />
				</xf:foreach>
			</div>
		</div>
	</script>
</xf:if>

{$ldJsonHtml|raw}

</body>
</html>

<xf:macro name="nav_entry" arg-navId="!" arg-nav="!" arg-selected="{{ false }}" arg-shortcut="">
	<div class="p-navEl {{ $selected ? 'is-selected' : '' }}" {{ $nav.children ? 'data-has-children="true"' : '' }}>
		<xf:if is="$nav.href">

			<xf:macro name="nav_link"
				arg-navId="{$navId}"
				arg-nav="{$nav}"
				arg-class="p-navEl-link {{ $nav.children ? 'p-navEl-link--splitMenu' : '' }}"
				arg-shortcut="{{ $nav.children ? false : $shortcut }}" />

			<xf:if is="$nav.children"><a data-xf-key="{$shortcut}"
				data-xf-click="menu"
				data-menu-pos-ref="< .p-navEl"
				class="p-navEl-splitTrigger"
				role="button"
				tabindex="0"
				aria-label="{{ phrase('toggle_expanded')|for_attr }}"
				aria-expanded="false"
				aria-haspopup="true"></a></xf:if>

		<xf:elseif is="$nav.children" /><a data-xf-key="{$shortcut}"
			data-xf-click="menu"
			data-menu-pos-ref="< .p-navEl"
			class="p-navEl-linkHolder"
			role="button"
			tabindex="0"
			aria-expanded="false"
			aria-haspopup="true">
			<xf:macro name="nav_link"
				arg-navId="{$navId}"
				arg-nav="{$nav}"
				arg-class="p-navEl-link p-navEl-link--menuTrigger" />
		</a>

		<xf:else />

			<xf:macro name="nav_link"
				arg-navId="{$navId}"
				arg-nav="{$nav}"
				arg-class="p-navEl-link"
				arg-shortcut="{$shortcut}" />

		</xf:if>
		<xf:if is="$nav.children">
			<div class="menu menu--structural" data-menu="menu" aria-hidden="true">
				<div class="menu-content">
					<xf:foreach loop="$nav.children" key="$childNavId" value="$child">
						<xf:macro name="nav_menu_entry"
							arg-navId="{$childNavId}"
							arg-nav="{$child}" />
					</xf:foreach>
				</div>
			</div>
		</xf:if>
	</div>
</xf:macro>

<xf:macro name="nav_link" arg-navId="!" arg-nav="!" arg-class="" arg-titleHtml="" arg-shortcut="{{ false }}">
	<xf:set var="$tag" value="{{ $nav.href ? 'a' : 'span' }}" />
	<{$tag} {{ $nav.href ? 'href="' . $nav.href . '"' : '' }}
		class="{{ trim($class) }} {$nav.attributes.class}"
		{{ attributes($nav.attributes, ['class']) }}
		{{ $shortcut !== false ? 'data-xf-key="' . $shortcut . '"' : '' }}
		data-nav-id="{$navId}"><xf:if is="$nav.icon"><xf:fa icon="{$nav.icon}" /> </xf:if>{{ $titleHtml ? $titleHtml|raw : $nav.title }}<xf:if is="$nav.counter"> <span class="badge badge--highlighted">{$nav.counter|number}</span></xf:if></{$tag}>
</xf:macro>

<xf:macro name="nav_menu_entry" arg-navId="!" arg-nav="!" arg-depth="0">
	<xf:macro name="nav_link"
		arg-navId="{$navId}"
		arg-nav="{$nav}"
		arg-class="menu-linkRow u-indentDepth{$depth} js-offCanvasCopy" />
	<xf:if is="$nav.children">
		<xf:foreach loop="$nav.children" key="$childNavId" value="$child">
			<xf:macro name="nav_menu_entry"
				arg-navId="{$childNavId}"
				arg-nav="{$child}"
				arg-depth="{{ $depth + 1 }}" />
		</xf:foreach>
		<xf:if is="$depth == 0">
			<hr class="menu-separator" />
		</xf:if>
	</xf:if>
</xf:macro>

<xf:macro name="breadcrumbs" arg-breadcrumbs="!" arg-navTree="!" arg-selectedNavEntry="{{ null }}" arg-variant="">
	<xf:if contentcheck="true">
		<ul class="p-breadcrumbs {{ $variant ? 'p-breadcrumbs--' . $variant : '' }}"
			itemscope itemtype="https://schema.org/BreadcrumbList">
		<xf:contentcheck>
			<xf:set var="$position" value="{{ 0 }}" />

			<xf:set var="$rootBreadcrumb" value="{$navTree.{$xf.options.rootBreadcrumb}}" />
			<xf:if is="$rootBreadcrumb AND $rootBreadcrumb.href != $xf.uri">
				<xf:set var="$position" value="{{ $position + 1 }}" />
				<xf:macro name="crumb"
					arg-position="{$position}"
					arg-href="{$rootBreadcrumb.href}"
					arg-value="{$rootBreadcrumb.title}" />
			</xf:if>

			<xf:if is="$selectedNavEntry && $selectedNavEntry.href && $selectedNavEntry.href != $xf.uri && $selectedNavEntry.href != $rootBreadcrumb.href">
				<xf:set var="$position" value="{{ $position + 1 }}" />
				<xf:macro name="crumb"
					arg-position="{$position}"
					arg-href="{$selectedNavEntry.href}"
					arg-value="{$selectedNavEntry.title}" />
			</xf:if>
			<xf:foreach loop="$breadcrumbs" value="$breadcrumb" if="$breadcrumb.href != $xf.uri">
				<xf:set var="$position" value="{{ $position + 1 }}" />
				<xf:macro name="crumb"
					arg-position="{$position}"
					arg-href="{$breadcrumb.href}"
					arg-value="{$breadcrumb.value}" />
			</xf:foreach>

		</xf:contentcheck>
		</ul>
	</xf:if>
</xf:macro>

<xf:macro name="crumb" arg-href="!" arg-value="!" arg-position="{{ 0 }}">
	<li itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem">
		<a href="{$href}" itemprop="item">
			<span itemprop="name">{$value}</span>
		</a>
		<xf:if is="$position"><meta itemprop="position" content="{$position}" /></xf:if>
	</li>
</xf:macro>]]></template>
  <template type="public" title="_help_page_bb_codes" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:css src="help_bb_codes.less" />

<div class="block">
	<div class="block-container">
		<ul class="listPlain block-body">

			<xf:macro name="row_output"
				arg-title="{{ phrase('bb_code_help_b_i_u_s_title')|preEscaped }}"
				arg-desc="{{ phrase('bb_code_help_b_i_u_s_desc')|preEscaped }}"
				arg-example="{{ phrase('bb_code_help_b_i_u_s_example')|preEscaped }}"
				arg-anchor="basic" />

			<xf:macro name="row_output"
				arg-title="{{ phrase('bb_code_help_color_font_size_title')|preEscaped }}"
				arg-desc="{{ phrase('bb_code_help_color_font_size_desc')|preEscaped }}"
				arg-example="{{ phrase('bb_code_help_color_font_size_example')|preEscaped }}"
				arg-anchor="style" />

			<xf:macro name="row_output"
				arg-title="{{ phrase('bb_code_help_url_email_title')|preEscaped }}"
				arg-desc="{{ phrase('bb_code_help_url_email_desc')|preEscaped }}"
				arg-example="{{ phrase('bb_code_help_url_email_example')|preEscaped }}"
				arg-anchor="email-url" />

			<xf:macro name="row_output"
				arg-title="{{ phrase('bb_code_help_url_email_advanced_title')|preEscaped }}"
				arg-desc="{{ phrase('bb_code_help_url_email_advanced_desc')|preEscaped }}"
				arg-example="{{ phrase('bb_code_help_url_email_advanced_example')|preEscaped }}"
				arg-anchor="email-url-advanced" />

			<xf:macro name="row_output"
				arg-title="{{ phrase('bb_code_help_user_title')|preEscaped }}"
				arg-desc="{{ phrase('bb_code_help_user_desc')|preEscaped }}"
				arg-example="{{
					phrase('bb_code_help_user_example', {
						'id': $xf.visitor.user_id ? $xf.visitor.user_id : '1',
						'name': $xf.visitor.user_id ? $xf.visitor.username : phrase('user_name')
					})|preEscaped
				}}"
				arg-anchor="user-mention" />

			<xf:macro name="row_output"
				arg-title="{{ phrase('bb_code_help_img_title')|preEscaped }}"
				arg-desc="{{ phrase('bb_code_help_img_desc')|preEscaped }}"
				arg-example="[IMG]{{ base_url(property('publicMetadataLogoUrl') ?: property('publicLogoUrl'), true) }}[/IMG]"
				arg-anchor="image" />

			<li class="bbCodeHelpItem block-row block-row--separated">
				<span class="u-anchorTarget" id="media"></span>
				<h3 class="block-textHeader">{{ phrase('bb_code_help_media_title') }}</h3>
				<div>
					{{ phrase('bb_code_help_media_desc') }}<br />
					{{ phrase('approved_sites:') }} {{ media_sites() }}
				</div>
				<div class="bbCodeDemoBlock">
					<dl class="bbCodeDemoBlock-item">
						<dt>{{ phrase('example:') }}</dt>
						<dd>[MEDIA=youtube]oHg5SJYRHA0[/MEDIA]</dd>
					</dl>
					<dl class="bbCodeDemoBlock-item">
						<dt>{{ phrase('output:') }}</dt>
						<dd><i>{{ phrase('embedded_youtube_player_would_appear_here') }}</i></dd>
					</dl>
				</div>
			</li>

			<xf:macro name="row_output"
				arg-title="{{ phrase('bb_code_help_list_title')|preEscaped }}"
				arg-desc="{{ phrase('bb_code_help_list_desc')|preEscaped }}"
				arg-example="{{ phrase('bb_code_help_list_example')|preEscaped }}"
				arg-anchor="list" />

			<xf:macro name="row_output"
				arg-title="{{ phrase('bb_code_help_align_title')|preEscaped }}"
				arg-desc="{{ phrase('bb_code_help_align_desc')|preEscaped }}"
				arg-example="{{ phrase('bb_code_help_align_example')|preEscaped }}"
				arg-anchor="align" />

			<xf:macro name="row_output"
				arg-title="{{ phrase('bb_code_help_quote_title')|preEscaped }}"
				arg-desc="{{ phrase('bb_code_help_quote_desc')|preEscaped }}"
				arg-example="{{ phrase('bb_code_help_quote_example')|preEscaped }}"
				arg-anchor="quote" />

			<xf:macro name="row_output"
				arg-title="{{ phrase('bb_code_help_spoiler_title')|preEscaped }}"
				arg-desc="{{ phrase('bb_code_help_spoiler_desc')|preEscaped }}"
				arg-example="{{ phrase('bb_code_help_spoiler_example')|preEscaped }}"
				arg-anchor="spoiler" />

			<xf:macro name="row_output"
				arg-title="{{ phrase('bb_code_help_ispoiler_title')|preEscaped }}"
				arg-desc="{{ phrase('bb_code_help_ispoiler_desc')|preEscaped }}"
				arg-example="{{ phrase('bb_code_help_ispoiler_example')|preEscaped }}"
				arg-anchor="ispoiler" />

			<xf:macro name="row_output"
				arg-title="{{ phrase('bb_code_help_code_title')|preEscaped }}"
				arg-desc="{{ phrase('bb_code_help_code_desc')|preEscaped }}"
				arg-example="{{ phrase('bb_code_help_code_example')|preEscaped }}"
				arg-anchor="code" />

			<xf:macro name="row_output"
				arg-title="{{ phrase('bb_code_help_icode_title')|preEscaped }}"
				arg-desc="{{ phrase('bb_code_help_icode_desc')|preEscaped }}"
				arg-example="{{ phrase('bb_code_help_icode_example')|preEscaped }}"
				arg-anchor="icode" />

			<xf:macro name="row_output"
				arg-title="{{ phrase('bb_code_help_indent_title')|preEscaped }}"
				arg-desc="{{ phrase('bb_code_help_indent_desc')|preEscaped }}"
				arg-example="{{ phrase('bb_code_help_indent_example')|preEscaped }}"
				arg-anchor="indent" />

			<xf:macro name="row_output"
				arg-title="{{ phrase('bb_code_help_table_title')|preEscaped }}"
				arg-desc="{{ phrase('bb_code_help_table_desc')|preEscaped }}"
				arg-example="{{ phrase('bb_code_help_table_example')|preEscaped }}"
				arg-anchor="table" />

			<xf:macro name="row_output"
				arg-title="{{ phrase('bb_code_help_plain_title')|preEscaped }}"
				arg-desc="{{ phrase('bb_code_help_plain_desc')|preEscaped }}"
				arg-example="{{ phrase('bb_code_help_plain_example')|preEscaped }}"
				arg-anchor="plain" />

			<li class="bbCodeHelpItem block-row block-row--separated">
				<span class="u-anchorTarget" id="attach"></span>
				<h3 class="block-textHeader">{{ phrase('bb_code_help_attach_title') }}</h3>
				<div>{{ phrase('bb_code_help_attach_desc') }}</div>
				<div class="bbCodeDemoBlock">
					<dl class="bbCodeDemoBlock-item">
						<dt>{{ phrase('example:') }}</dt>
						<dd>
							{{ phrase('thumbnail:') }} [ATTACH]123[/ATTACH]<br />
							{{ phrase('full_size:') }} [ATTACH=full]123[/ATTACH]
						</dd>
					</dl>
					<dl class="bbCodeDemoBlock-item">
						<dt>{{ phrase('output:') }}</dt>
						<dd><i>{{ phrase('contents_of_attachments_would_appear_here') }}</i></dd>
					</dl>
				</div>
			</li>

			<xf:foreach loop="$bbCodes" value="$bbCode" if="$bbCode.example is not empty">
				<li class="bbCodeHelpItem block-row block-row--separated">
					<span class="u-anchorTarget" id="{$bbCode.bb_code_id}"></span>
					<h3 class="block-textHeader">
						<xf:if is="$bbCode.has_option == 'no' OR $bbCode.has_option == 'optional'">[{$bbCode.bb_code_id|to_upper}]</xf:if>
						<xf:if is="$bbCode.has_option == 'optional'"><span role="presentation" aria-hidden="true">&middot;</span></xf:if>
						<xf:if is="$bbCode.has_option == 'yes' OR $bbCode.has_option == 'optional'">[{$bbCode.bb_code_id|to_upper}=<span class="block-textHeader-highlight">option</span>]</xf:if>
						- {$bbCode.title}
					</h3>
					<xf:if contentcheck="true">
						<div><xf:contentcheck>{$bbCode.description}</xf:contentcheck></div>
					</xf:if>
					<div class="bbCodeDemoBlock">
						<dl class="bbCodeDemoBlock-item">
							<dt>{{ phrase('example:') }}</dt>
							<dd>{{ $bbCode.example|nl2br }}</dd>
						</dl>
						<dl class="bbCodeDemoBlock-item">
							<dt>{{ phrase('output:') }}</dt>
							<dd>{{ $bbCode.output is not empty ? $bbCode.output : bb_code($bbCode.example, 'help', null) }}</dd>
						</dl>
					</div>
				</li>
			</xf:foreach>

		</ul>
	</div>
</div>

<xf:macro name="row_output" arg-title="!" arg-desc="!" arg-example="!" arg-anchor="!">
	<li class="bbCodeHelpItem block-row block-row--separated">
		<span class="u-anchorTarget" id="{$anchor}"></span>
		<h3 class="block-textHeader">{$title}</h3>
		<div>{$desc}</div>
		<xf:macro name="example_output" arg-bbCode="{$example}" />
	</li>
</xf:macro>

<xf:macro name="example_output" arg-bbCode="!">
	<div class="bbCodeDemoBlock">
		<dl class="bbCodeDemoBlock-item">
			<dt>{{ phrase('example:') }}</dt>
			<dd>{{ $bbCode|nl2br }}</dd>
		</dl>
		<dl class="bbCodeDemoBlock-item">
			<dt>{{ phrase('output:') }}</dt>
			<dd>{{ bb_code($bbCode, 'help', null) }}</dd>
		</dl>
	</div>
</xf:macro>]]></template>
  <template type="public" title="_help_page_cookies" version_id="2000631" version_string="2.0.6 Beta 1"><![CDATA[{{ phrase('help_cookies_description', {'cookiePrefix': $xf.cookie.prefix}) }}]]></template>
  <template type="public" title="_help_page_privacy_policy" version_id="2000631" version_string="2.0.6 Beta 1"><![CDATA[{{ phrase('privacy_policy_text', {'board_title': $xf.options.boardTitle, 'contactUrl': $xf.contactUrl, 'cookieHelp': link('help/cookies')}) }}]]></template>
  <template type="public" title="_help_page_smilies" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:css src="help_page_smilies.less" />

<div class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:datalist data-xf-init="responsive-data-list">
				<xf:datarow rowtype="header">
					<xf:cell class="dataList-cell--min">{{ phrase('image') }}</xf:cell>
					<xf:cell>{{ phrase('title') }}</xf:cell>
					<xf:cell>{{ phrase('text') }}</xf:cell>
				</xf:datarow>
				<xf:foreach loop="$smilieCategories" key="$smilieCategoryId" value="$smilieCategory">
					<xf:if is="$smilieCategoryId">
						<xf:datarow rowclass="dataList-row--subSection dataList-row--noHover">
							<xf:cell colspan="3">{$smilieCategory.title}</xf:cell>
						</xf:datarow>
					</xf:if>
					<xf:foreach loop="$smilieCategory.smilies" value="$smilie">
						<xf:datarow rowclass="dataList-row--noHover">
							<xf:cell class="dataList-cell--min dataList-cell--alt">
								{{ smilie($smilie.smilie_text_options.0) }}
							</xf:cell>
							<xf:main label="{$smilie.title}" />
							<xf:cell>
								<span>
								<xf:foreach loop="$smilie.smilie_text_options" value="$smilieText">
									<span class="smilieText">{$smilieText}</span>
								</xf:foreach>
								</span>
							</xf:cell>
						</xf:datarow>
					</xf:foreach>
				</xf:foreach>
			</xf:datalist>
		</div>
		<div class="block-footer">
			{{ phrase('smilies_provided_free_by_emojione') }}
		</div>
	</div>
</div>]]></template>
  <template type="public" title="_help_page_terms" version_id="2000632" version_string="2.0.6 Beta 2"><![CDATA[{{ phrase('terms_rules_text', {'age': $xf.options.registrationSetup.minimumAge ?: 13, 'contactUrl': $xf.contactUrl}) }}]]></template>
  <template type="public" title="_help_page_trophies" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:if is="$trophies is not empty">
	<div class="block">
		<div class="block-container">
			<ol class="block-body">
				<xf:foreach loop="$trophies" value="$trophy">
					<li class="block-row block-row--separated">
						<div class="contentRow">
							<span class="contentRow-figure contentRow-figure--text contentRow-figure--fixedSmall">{$trophy.trophy_points}</span>
							<div class="contentRow-main">
								<h2 class="contentRow-header">{$trophy.title}</h2>
								<div class="contentRow-minor">{$trophy.description|raw}</div>
							</div>
						</div>
					</li>
				</xf:foreach>
			</ol>
		</div>
	</div>
<xf:else />
	<div class="blockMessage">{{ phrase('no_items_have_been_created_yet') }}</div>
</xf:if>]]></template>
  <template type="public" title="_media_site_embed_oembed" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:js src="xf/embed.js" min="1" />

<xf:page option="jsState.{$jsState}" value="{{ true }}" />

<span class="bbOembed bbMediaJustifier"
	  data-xf-init="oembed"
	  data-provider="{$provider}"
	  data-id="{$id}">
	<a href="{$url}" rel="external" target="_blank"><xf:fa icon="fab fa-{$provider} fa-{$provider}-square" />
		{$url}</a>
</span>]]></template>
  <template type="public" title="accept_privacy_policy" version_id="2000632" version_string="2.0.6 Beta 2"><![CDATA[<xf:title>{{ phrase('privacy_policy') }}</xf:title>

<div class="blockMessage blockMessage--iconic blockMessage--important">
	{{ phrase('please_read_and_accept_our_privacy_policy_before_continuing') }} {{ phrase('last_updated:') }} <xf:date time="$xf.options.privacyPolicyLastUpdate" />.
</div>

<xf:form action="{{ link('misc/accept-privacy-policy') }}" ajax="true" class="block" data-force-flash-message="on">
	<div class="block-container">
		<div class="block-body">
			<xf:checkboxrow label="">
				<xf:option name="accept" required="required">{{ phrase('i_have_read_and_accept_your_privacy_policy', {'privacyPolicyUrl': $xf.privacyPolicyUrl}) }}</xf:option>
			</xf:checkboxrow>
		</div>
		<xf:submitrow icon="confirm" submit="{{ phrase('accept') }}" />
	</div>
</xf:form>

<xf:if is="$privacyPolicyOption.type == 'default'">
	<xf:if is="$page.advanced_mode">
		{$templateHtml|raw}
	<xf:else />
		<div class="block">
			<div class="block-container">
				<div class="block-body block-row">
					{$templateHtml|raw}
				</div>
			</div>
		</div>
	</xf:if>
</xf:if>]]></template>
  <template type="public" title="accept_terms" version_id="2000632" version_string="2.0.6 Beta 2"><![CDATA[<xf:title>{{ phrase('terms_and_rules') }}</xf:title>

<div class="blockMessage blockMessage--iconic blockMessage--important">
	{{ phrase('please_read_and_accept_our_terms_and_rules_before_continuing') }} {{ phrase('last_updated:') }} <xf:date time="$xf.options.termsLastUpdate" />.
</div>

<xf:form action="{{ link('misc/accept-terms') }}" ajax="true" class="block" data-force-flash-message="on">
	<div class="block-container">
		<div class="block-body">
			<xf:checkboxrow label="">
				<xf:option name="accept" required="required">{{ phrase('i_have_read_and_accept_your_terms_and_rules', {'tosUrl': $xf.tosUrl}) }}</xf:option>
			</xf:checkboxrow>
		</div>
		<xf:submitrow icon="confirm" submit="{{ phrase('accept') }}" />
	</div>
</xf:form>

<xf:if is="$termsOption.type == 'default'">
	<xf:if is="$page.advanced_mode">
		{$templateHtml|raw}
	<xf:else />
		<div class="block">
			<div class="block-container">
				<div class="block-body block-row">
					{$templateHtml|raw}
				</div>
			</div>
		</div>
	</xf:if>
</xf:if>]]></template>
  <template type="public" title="account_alerts" version_id="2001070" version_string="2.0.10"><![CDATA[<xf:title>{{ phrase('alerts') }}</xf:title>

<xf:wrap template="account_wrapper" />

<div class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:if is="$alerts is not empty">
				<ol class="listPlain">
				<xf:foreach loop="$alerts" value="$alert">
					<li data-alert-id="{$alert.alert_id}"
						class="block-row block-row--separated{{ $alert.isUnviewed() ? ' block-row--highlighted' : ($alert.isRecentlyViewed() ? '' : ' block-row--alt') }}">
						<xf:macro template="alert_macros" name="row" arg-alert="{$alert}" />
					</li>
				</xf:foreach>
				</ol>
			<xf:elseif is="$page <= 1" />
				<div class="block-row">{{ phrase('you_do_not_have_any_recent_alerts') }}</div>
			<xf:else />
				<div class="block-row">{{ phrase('no_alerts_can_be_shown') }}</div>
			</xf:if>
		</div>
	</div>

	<xf:pagenav link="account/alerts" page="{$page}" perpage="{$perPage}" total="{$totalAlerts}"
		wrapperclass="block-outer block-outer--after" />
</div>]]></template>
  <template type="public" title="account_alerts_popup" version_id="2001070" version_string="2.0.10"><![CDATA[<xf:if is="$alerts is not empty">
	<div class="menu-scroller">
		<ol class="listPlain">
			<xf:foreach loop="$alerts" value="$alert">
				<li class="menu-row menu-row--separated menu-row--clickable {{ $alert.isUnviewed() ? 'menu-row--highlighted' : ($alert.isRecentlyViewed() ? '' : 'menu-row--alt') }}">
					<div class="fauxBlockLink">
						<xf:macro template="alert_macros" name="row" arg-alert="{$alert}" />
					</div>
				</li>
			</xf:foreach>
		</ol>
	</div>
<xf:else />
	<div class="menu-row">{{ phrase('you_have_no_new_alerts') }}</div>
</xf:if>]]></template>
  <template type="public" title="account_avatar" version_id="2001070" version_string="2.0.10"><![CDATA[<xf:title>{{ phrase('avatar') }}</xf:title>

<xf:css src="account_avatar.less" />
<xf:js prod="xf/avatar-compiled.js" dev="vendor/hammer/hammer.js, vendor/cropbox/jquery.cropbox.js, xf/avatar.js" />

<xf:wrap template="account_wrapper" />

<xf:form action="{{ link('account/avatar') }}" upload="true" ajax="true" class="block" data-xf-init="avatar-upload">
	<div class="block-container">
		<ul class="block-body">
			<li class="block-row block-row--separated avatarControl">
				<div class="avatarControl-preview">
					<div class="avatarCropper" style="width: {$maxSize}px; height: {$maxSize}px;">
						<xf:avatar user="$xf.visitor" size="o"
							href=""
							style="{$maxDimension}: {$maxSize}px; left: -{$x}px; top: -{$y}px;"
							data-x="{$x}" data-y="{$y}" data-size="{$maxSize}"
							class="js-avatar js-avatarCropper"
							innerclass="js-croppedAvatar"
							forcetype="custom"
							data-xf-init="avatar-cropper" />
						<xf:hiddenval name="avatar_crop_x" class="js-avatarX">{$x}</xf:hiddenval>
						<xf:hiddenval name="avatar_crop_y" class="js-avatarY">{$y}</xf:hiddenval>
					</div>
				</div>
				<div class="avatarControl-inputs">
					<xf:radio name="use_custom" id="useCustom">
						<xf:option value="1" selected="!{$xf.visitor.gravatar}"
							label="{{ phrase('use_custom_avatar') }}"
							hint="{{ phrase('drag_this_image_to_crop_it_then_click_update_avatar_to_confirm') }}">
							<xf:dependent>
								<label>{{ phrase('upload_new_custom_avatar:') }}</label>
								<xf:upload name="upload" class="js-uploadAvatar" accept=".gif,.jpeg,.jpg,.jpe,.png" />
								<dfn class="inputChoices-explain">
									{{ phrase('it_is_recommended_that_you_use_image_that_is_at_least_x_pixels', {
									'width': 400,
									'height': 400
									}) }}
								</dfn>
							</xf:dependent>
						</xf:option>
					</xf:radio>
				</div>
			</li>
			<xf:if is="$xf.options.gravatarEnable">
				<li class="block-row block-row--separated avatarControl">
					<div class="avatarControl-preview">
						<span class="avatar avatar--m">
							<img src="{{ gravatar_url($xf.visitor, 'm') }}" class="js-gravatarPreview" />
						</span>
					</div>
					<div class="avatarControl-inputs">
						<xf:radio name="use_custom">
							<xf:option value="0" selected="{$xf.visitor.gravatar}"
								label="{{ phrase('use_gravatar') }}">
								<xf:dependent>
									<div class="inputGroup">
										<xf:textbox name="gravatar" value="{{ $xf.visitor.gravatar ?: $xf.visitor.email }}"
											type="email"
											maxlength="{{ max_length($xf.visitor, 'gravatar') }}"
											class="js-gravatar" />
										<div class="inputGroup-text u-jsOnly">
											<xf:button type="submit" name="test_gravatar" value="1">
												{{ phrase('test') }}
											</xf:button>
										</div>
									</div>
									<dfn class="inputChoices-explain">
										{{ phrase('enter_email_address_of_gravatar_you_want_to_use') }}
										<div><a href="https://gravatar.com" rel="nofollow" target="_blank">{{ phrase('whats_gravatar') }}</a></div>
									</dfn>
								</xf:dependent>
							</xf:option>
						</xf:radio>
					</div>
				</li>
			</xf:if>
		</ul>
		<xf:submitrow submit="{{ phrase('okay') }}" rowtype="simple" class="js-overlayClose">
			<xf:html>
				<xf:button type="submit" name="delete_avatar" value="1" class="js-deleteAvatar" icon="delete" />
			</xf:html>
		</xf:submitrow>
	</div>
</xf:form>]]></template>
  <template type="public" title="account_avatar.less" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[.avatarControl
{
}

.avatarControl-preview
{
	display: block;
	float: left;
	position: relative;

	img
	{
		display: inline-block;
		position: relative;
	}
}

.avatarControl-inputs
{
	margin-left: 110px;
}

.avatarCropper
{
	display: inline-block;
	vertical-align: bottom;
	direction: ltr;

	label
	{
		display: block;
		overflow: hidden;
		position: relative;

		img
		{
			cursor: move;
		}
	}

	.avatar--o
	{
		.m-avatarSize(@avatar-m);
	}
}

@media (max-width: @xf-responsiveNarrow)
{
	.avatarControl-preview
	{
		display: block;
		float: none;
		text-align: center;
	}

	.avatarControl-inputs
	{
		display: block;
		margin-left: 0;
	}
}

// classes from the cropping JS
.cropFrame
{
	overflow: hidden;
	position: relative;
}

.cropImage
{
	position: absolute;
	top: 0;
	left: 0;
	cursor: move;
	max-width: none;
}

.cropControls
{
	display: none;
}]]></template>
  <template type="public" title="account_bookmarks" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('bookmarks') }}</xf:title>

<xf:wrap template="account_wrapper" />

<div class="block">
	<div class="block-container">
		<div class="block-filterBar">
			<div class="filterBar">
				<xf:if contentcheck="true">
					<ul class="filterBar-filters">
						<xf:contentcheck>
							<xf:if is="$label">
								<li><a href="{{ link('account/bookmarks') }}"
									class="filterBar-filterToggle" data-xf-init="tooltip" title="{{ phrase('remove_this_filter')|for_attr }}">
									<span class="filterBar-filterToggle-label">{{ phrase('label:') }}</span>
									{$label}</a></li>
							</xf:if>
						</xf:contentcheck>
					</ul>
				</xf:if>

				<a class="filterBar-menuTrigger" data-xf-click="menu" role="button" tabindex="0" aria-expanded="false" aria-haspopup="true">{{ phrase('filters') }}</a>
				<div class="menu menu--wide" data-menu="menu" aria-hidden="true">
					<div class="menu-content">
						<h4 class="menu-header">{{ phrase('filter_by_label:') }}</h4>
						<xf:form action="{{ link('account/bookmarks') }}">
							<div class="menu-row menu-row--separated">
								<xf:macro template="bookmark_macros" name="filter"
									arg-name="label"
									arg-label="{$label}"
									arg-allLabels="{$allLabels}"
									arg-placeholder="" />
							</div>
							<div class="menu-footer">
								<span class="menu-footer-controls">
									<xf:button type="submit" class="button--primary">{{ phrase('filter') }}</xf:button>
								</span>
							</div>
						</xf:form>
					</div>
				</div>
			</div>
		</div>
		<div class="block-body">
			<xf:if is="$bookmarks is not empty">
				<ol class="listPlain">
					<xf:foreach loop="$bookmarks" value="$bookmark">
						<li class="block-row block-row--separated">
							<xf:macro template="bookmark_macros" name="row" arg-bookmark="{$bookmark}" arg-content="{$bookmark.Content}" />
						</li>
					</xf:foreach>
				</ol>
			<xf:else />
				<xf:if is="$label">
					<div class="block-row">{{ phrase('no_items_matched_your_filter') }}</div>
				<xf:else />
					<div class="block-row">{{ phrase('you_have_not_added_any_bookmarks_yet') }}</div>
				</xf:if>
			</xf:if>
		</div>
	</div>

	<xf:pagenav link="account/bookmarks" page="{$page}" perpage="{$perPage}" total="{$totalBookmarks}"
		wrapperclass="block-outer block-outer--after" />
</div>]]></template>
  <template type="public" title="account_bookmarks_popup" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<div class="menu-row menu-row--alt menu-row--close">
	<div data-xf-init="bookmark-label-filter" data-target=".js-bookmarksMenuBody">
		<xf:macro template="bookmark_macros" name="filter"
			arg-label="{$label}"
			arg-allLabels="{$allLabels}" />
	</div>
</div>
<div class="menu-scroller">
	<ol class="listPlain">
		<xf:if is="$bookmarks is not empty">
			<xf:foreach loop="$bookmarks" value="$bookmark">
				<li class="menu-row menu-row--close menu-row--separated">
					<xf:macro template="bookmark_macros" name="row"
						arg-bookmark="{$bookmark}"
						arg-content="{$bookmark.Content}" />
				</li>
			</xf:foreach>
			<xf:else />
			<xf:if is="$label">
				<li class="menu-row">{{ phrase('no_items_matched_your_filter') }}</li>
			<xf:else />
				<li class="menu-row">{{ phrase('you_have_not_added_any_bookmarks_yet') }}</li>
			</xf:if>
		</xf:if>
	</ol>
</div>]]></template>
  <template type="public" title="account_confirm_resend" version_id="2000033" version_string="2.0.0 Beta 3"><![CDATA[<xf:title>{{ phrase('resend_account_confirmation') }}</xf:title>

<xf:form action="{$confirmUrl}" class="block" ajax="true" data-redirect="off" data-reset-complete="true">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('sure_you_want_to_resend_account_confirmation_email', {'email': $user.email}) }}
			</xf:inforow>

			<xf:if is="$needsCaptcha">
				<xf:captcharow label="{{ phrase('verification') }}" force="true" />
			</xf:if>
		</div>
		<xf:submitrow submit="{{ phrase('resend_email') }}" rowtype="simple" />
	</div>
</xf:form>]]></template>
  <template type="public" title="account_connected" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('connected_accounts') }}</xf:title>

<xf:wrap template="account_wrapper" />

<div class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow>{{ phrase('connected_accounts_allow_you_to_log_in_to_this_site_more_easily') }}</xf:inforow>
			<xf:foreach loop="$providers" value="$provider">
				<xf:if is="{$provider.isAssociated($xf.visitor)}">
					<xf:macro template="connected_account_macros" name="disassociate" arg-provider="{$provider}" arg-hasPassword="{$hasPassword}" />
				<xf:else />
					<xf:macro template="connected_account_macros" name="associate" arg-provider="{$provider}" />
				</xf:if>
			<xf:else />
				<div class="block-row">{{ phrase('there_currently_no_usable_external_account_providers') }}</div>
			</xf:foreach>
		</div>
	</div>
</div>]]></template>
  <template type="public" title="account_connected_associate" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('associate_with_x', {'provider': $provider.title}) }}</xf:title>

<xf:wrap template="account_wrapper">
	<xf:set var="$pageSelected" value="connected_account" />
</xf:wrap>

<xf:form action="{{ link('register/connected-accounts/associate', $provider) }}" ajax="true" class="block">

	<div class="block-container">
		<div class="block-body">
			<xf:if is="$passwordEmailed">
				<xf:inforow>
					<div class="blockMessage blockMessage--important blockMessage--iconic">{{ phrase('to_confirm_your_identity_we_have_sent_email_to_x', {'email': $user.email}) }}</div>
				</xf:inforow>
			</xf:if>

			<xf:formrow label="{{ phrase('associate_with') }}">
				{$xf.visitor.username}
			</xf:formrow>

			<xf:passwordboxrow name="password"
				label="{{ phrase('password') }}"
				explain="{{ phrase('password_of_x_account_wish_to_associate_with', {'board_title': $xf.options.boardTitle}) }}" />
		</div>
		<xf:submitrow submit="{{ phrase('associate') }}" />
	</div>
	<xf:redirect url="{$redirect}" />
</xf:form>]]></template>
  <template type="public" title="account_details" version_id="2000631" version_string="2.0.6 Beta 1"><![CDATA[<xf:title>{{ phrase('account_details') }}</xf:title>

<xf:wrap template="account_wrapper" />

<xf:if is="!$xf.visitor.canEditProfile()">
	<div class="blockMessage blockMessage--important">{{ phrase('your_full_account_details_not_currently_editable') }}</div>
</xf:if>

<xf:form action="{{ link('account/account-details') }}" ajax="true" class="block" data-force-flash-message="true">
	<div class="block-container">
		<div class="block-body">
			<xf:formrow rowtype="button"
				label="{{ phrase('email') }}">

				<xf:if is="$xf.visitor.email">
					{$xf.visitor.email}
				<xf:else />
					<i>{{ phrase('none') }}</i>
				</xf:if>
				<xf:button href="{{ link('account/email') }}" class="button--link" overlay="true">{{ phrase('change') }}</xf:button>
			</xf:formrow>

			<xf:macro template="helper_account" name="email_options_row" arg-showExplain="{{ true }}" />

			<xf:if is="$xf.visitor.canUploadAvatar()">
				<xf:formrow
					label="{{ phrase('avatar') }}"
					explain="{{ phrase('click_image_to_change_your_avatar') }}">

					<xf:avatar user="{$xf.visitor}" size="m" href="{{ link('account/avatar') }}" data-xf-click="overlay" />
				</xf:formrow>
			</xf:if>

			<xf:if is="$xf.visitor.canEditProfile()">
				<xf:if is="{{ $xf.visitor.hasPermission('general', 'editCustomTitle') }}">
					<xf:textboxrow name="user[custom_title]" value="{$xf.visitor.custom_title_}"
						maxlength="{{ max_length($xf.visitor, 'custom_title') }}"
						label="{{ phrase('custom_title') }}"
						explain="{{ phrase('if_specified_replace_title_that_displays_under_name_in_posts') }}" />
				</xf:if>

				<hr class="formRowSep" />

				<xf:if is="{{ $xf.visitor.Profile.dob_day && $xf.visitor.Profile.dob_month && $xf.visitor.Profile.dob_year }}">
					<xf:formrow
						label="{{ phrase('date_of_birth') }}"
						explain="{{ phrase('once_your_birthday_has_been_entered_it_cannot_be_changed') }}">

						<xf:set var="$birthday" value="{{ $xf.visitor.Profile.getBirthday(true) }}" />
						{{ date($birthday.timeStamp, $birthday.format) }}
					</xf:formrow>
				<xf:else />
					<xf:macro template="helper_user_dob_edit" name="dob_edit" arg-dobData="{$xf.visitor.Profile}" />
				</xf:if>

				<xf:macro template="helper_account" name="dob_privacy_row" />

				<hr class="formRowSep" />

				<xf:textboxrow name="profile[location]" value="{$xf.visitor.Profile.location_}"
					maxlength="{{ max_length($xf.visitor.Profile, 'location') }}"
					label="{{ phrase('location') }}" />
				<xf:textboxrow name="profile[website]" value="{$xf.visitor.Profile.website_}" type="url"
					maxlength="{{ max_length($xf.visitor.Profile, 'website') }}"
					label="{{ phrase('website') }}" />

				<xf:macro template="custom_fields_macros" name="custom_fields_edit" arg-type="users" arg-group="personal" arg-set="{$xf.visitor.Profile.custom_fields}" />

				<hr class="formRowSep" />

				<xf:editorrow name="about" value="{$xf.visitor.Profile.about_}" previewable="0"
					label="{{ phrase('about_you') }}"/>
			</xf:if>
		</div>
		<xf:if is="$xf.visitor.canEditProfile()">
			<xf:if contentcheck="true">
				<h2 class="block-formSectionHeader"><span class="block-formSectionHeader-aligner">{{ phrase('identities') }}</span></h2>
				<div class="block-body">
					<xf:contentcheck>
						<xf:macro template="custom_fields_macros" name="custom_fields_edit" arg-type="users" arg-group="contact" arg-set="{$xf.visitor.Profile.custom_fields}" />
					</xf:contentcheck>
				</div>
			</xf:if>
			<xf:submitrow icon="save" sticky="true" />
		</xf:if>
	</div>
</xf:form>]]></template>
  <template type="public" title="account_email" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('change_email') }}</xf:title>

<xf:wrap template="account_wrapper" />

<xf:form action="{{ link('account/email') }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:if is="$hasPassword">

				<xf:textboxrow name="email" value="{$xf.visitor.email}" type="email" dir="ltr" autofocus="autofocus"
					maxlength="{{ max_length($xf.visitor, 'email') }}"
					label="{{ phrase('email') }}"
					explain="{{ phrase('if_you_change_your_email_you_may_need_to_reconfirm_your_account') }}" />

				<xf:passwordboxrow name="password"
					label="{{ phrase('current_password') }}" />

			<xf:else />

				<xf:formrow
					label="{{ phrase('email') }}"
					explain="{{ phrase('your_email_cannot_be_changed_while_your_account_does_not_have_password') }}">

					{$xf.visitor.email}
				</xf:formrow>

			</xf:if>
		</div>

		<xf:submitrow icon="save" sticky="true" />
	</div>
</xf:form>]]></template>
  <template type="public" title="account_following" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('following') }}</xf:title>

<xf:wrap template="account_wrapper" />

<div class="block">
	<div class="block-container">
		<ol class="block-body">
			<xf:foreach loop="$following" value="$user">
				<li class="block-row block-row--separated">
					<xf:set var="$switchLink">
						<xf:if is="$xf.visitor.canFollowUser($user)">
							<xf:button href="{{ link('members/follow', $user) }}"
								class="button--link"
								data-xf-click="switch"
								data-sk-follow="{{ phrase('follow') }}"
								data-sk-unfollow="{{ phrase('unfollow') }}">
								{{ $xf.visitor.isFollowing($user) ? phrase('unfollow') : phrase('follow') }}
							</xf:button>
						</xf:if>
					</xf:set>
					<xf:macro template="member_list_macros" name="item"
						arg-user="{$user}"
						arg-extraData="{$switchLink}" />
				</li>
			<xf:else />
				<div class="block-row">{{ phrase('you_not_currently_following_any_members') }}</div>
			</xf:foreach>
		</ol>
	</div>
</div>]]></template>
  <template type="public" title="account_ignored" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('ignoring') }}</xf:title>

<xf:wrap template="account_wrapper" />

<div class="block">
	<div class="block-container">
		<ol class="block-body">
			<xf:foreach loop="$ignoring" value="$user">
				<li class="block-row block-row--separated">
					<xf:set var="$switchLink">
						<xf:if is="$xf.visitor.canIgnoreUser($user)">
							<xf:button href="{{ link('members/ignore', $user) }}"
								class="button--link"
								data-xf-click="switch"
								data-sk-ignore="{{ phrase('ignore') }}"
								data-sk-unignore="{{ phrase('unignore') }}">
								{{ $xf.visitor.isIgnoring($user) ? phrase('unignore') : phrase('ignore') }}
							</xf:button>
						</xf:if>
					</xf:set>
					<xf:macro template="member_list_macros" name="item"
						arg-user="{$user}"
						arg-extraData="{$switchLink}" />
				</li>
			<xf:else />
				<div class="block-row">{{ phrase('you_not_currently_ignoring_any_members') }}</div>
			</xf:foreach>
		</ol>
	</div>
</div>]]></template>
  <template type="public" title="account_preferences" version_id="2010131" version_string="2.1.1 Beta 1"><![CDATA[<xf:title>{{ phrase('preferences') }}</xf:title>

<xf:wrap template="account_wrapper" />

<xf:form action="{{ link('account/preferences') }}" ajax="true" class="block" data-force-flash-message="true">
	<div class="block-container">
		<div class="block-body">
			<xf:if is="$xf.visitor.canChangeStyle()">

				<xf:selectrow name="user[style_id]" value="{$xf.visitor.style_id}"
					label="{{ phrase('style') }}">

					<xf:option value="0">{{ phrase('use_default_style:') }} {$defaultStyle.title}</xf:option>
					<xf:optgroup label="{{ phrase('styles:') }}">
						<xf:foreach loop="$styles" value="$style">
							<xf:option value="{$style.style_id}">{{ repeat('--', $style.depth) }} {$style.title}{{ !$style.user_selectable ? ' *' : '' }}</xf:option>
						</xf:foreach>
					</xf:optgroup>
				</xf:selectrow>
			<xf:else />
				<xf:hiddenval name="user[style_id]">{$xf.visitor.style_id}</xf:hiddenval>
			</xf:if>

			<xf:if is="$xf.visitor.canChangeLanguage()">
				<xf:selectrow name="user[language_id]" value="{$xf.visitor.language_id}"
					label="{{ phrase('language') }}">

					<xf:foreach loop="$languageTree.getFlattened(0)" value="$treeEntry">
						<xf:option value="{$treeEntry.record.language_id}">{{ repeat('--', $treeEntry.depth) }} {$treeEntry.record.title}</xf:option>
					</xf:foreach>
				</xf:selectrow>
			<xf:else />
				<xf:hiddenval name="user[language_id]">{{ $xf.visitor.language_id ? $xf.visitor.language_id : $xf.options.defaultLanguageId }}</xf:hiddenval>
			</xf:if>

			<xf:selectrow name="user[timezone]" value="{$xf.visitor.timezone}"
				label="{{ phrase('time_zone') }}">

				<xf:options source="$timeZones" />
			</xf:selectrow>

			<xf:macro template="helper_account" name="email_options_row" arg-showConversationOption="{{ true }}" />

			<xf:checkboxrow label="{{ phrase('content_options') }}">
				<xf:option value="watch_no_email" name="option[creation_watch_state]" checked="{{ $xf.visitor.Option.creation_watch_state ? true : false  }}"
					label="{{ phrase('automatically_watch_content_you_create...') }}">
					<xf:checkbox>
						<xf:option value="watch_email" name="option[creation_watch_state]" checked="{{ $xf.visitor.Option.creation_watch_state == 'watch_email' }}"
							label="{{ phrase('and_receive_email_notifications') }}" />
					</xf:checkbox>
				</xf:option>
				<xf:option value="watch_no_email" name="option[interaction_watch_state]" checked="{{ $xf.visitor.Option.interaction_watch_state ? true : false  }}"
					label="{{ phrase('automatically_watch_content_you_interact_with...') }}">
					<xf:checkbox>
						<xf:option value="watch_email" name="option[interaction_watch_state]" checked="{{ $xf.visitor.Option.interaction_watch_state == 'watch_email' }}"
							label="{{ phrase('and_receive_email_notifications') }}" />
					</xf:checkbox>
				</xf:option>
				<xf:option name="option[content_show_signature]" checked="{$xf.visitor.Option.content_show_signature}"
					label="{{ phrase('show_peoples_signatures_with_their_messages') }}" />
			</xf:checkboxrow>

			<xf:macro template="helper_account" name="activity_privacy_row" />

			<xf:macro template="custom_fields_macros" name="custom_fields_edit" arg-type="users" arg-group="preferences" arg-set="{$xf.visitor.Profile.custom_fields}" />

			<xf:if is="$xf.options.enableNotices && (count($xf.session.dismissedNotices) > 0)">
				<hr class="formRowSep" />

				<xf:checkboxrow>
					<xf:option name="restore_notices"
						label="{{ phrase('restore_dismissed_notices') }}"
						hint="{{ phrase('restore_dismissed_notices_hint') }}" />
				</xf:checkboxrow>
			</xf:if>

			<xf:if is="$xf.visitor.canUsePushNotifications()">
				<xf:formrow label="{{ phrase('push_notifications') }}" rowtype="button" explain="{{ phrase('enable_push_explain') }}">
					<xf:button class="is-disabled" data-xf-init="push-toggle">
						{{ phrase('push_checking_device_capabilities...') }}
					</xf:button>
				</xf:formrow>

				<xf:checkboxrow label="">
					<xf:option name="option[push_on_conversation]" checked="{$xf.visitor.Option.push_on_conversation}"
						label="{{ phrase('receive_push_notification_when_new_conversation_message_is_received') }}" />
				</xf:checkboxrow>

				<xf:js>
					jQuery.extend(true, XF.config, {
						skipServiceWorkerRegistration: true,
						skipPushNotificationCta: true
					});

					jQuery.extend(XF.phrases, {
						push_enable_label: "{{ phrase('push_enable_label')|escape('js') }}",
						push_disable_label: "{{ phrase('push_disable_label')|escape('js') }}",
						push_not_supported_label: "{{ phrase('push_not_supported_label')|escape('js') }}",
						push_blocked_label: "{{ phrase('push_blocked_label')|escape('js') }}"
					});
				</xf:js>
			</xf:if>
		</div>

		<xf:if is="$alertOptOuts is not empty">
			<xf:css src="notification_opt_out.less" />
			<h2 class="block-formSectionHeader"><span class="block-formSectionHeader-aligner">{{ phrase('receive_notification_when_someone...') }}</span></h2>
			<div class="block-body">
				<xf:set var="$canPush" value="{{ $xf.visitor.canUsePushNotifications() }}" />
				<xf:foreach loop="$alertOptOuts" key="$contentType" value="$options">
					<xf:foreach loop="$options" key="$action" value="$label">
						<xf:formrow label="{$label}" data-content-type="{$contentType}" data-action="{$action}">
							<ul class="notificationChoices">
								<li class="notificationChoices-choice notificationChoices-choice--alert">
									<xf:checkbox standalone="true">
										<xf:option name="alert[{$contentType}_{$action}]"
											data-xf-init="{{ $canPush ? 'disabler' : '' }}" data-container="< .notificationChoices | .notificationChoices-choice--push"
											checked="{{ $xf.visitor.Option.doesReceiveAlert($contentType, $action) }}"
											label="{{ phrase('alert') }}" />
									</xf:checkbox>
								</li>
								<xf:if is="$canPush">
									<li class="notificationChoices-choice notificationChoices-choice--push">
										<xf:checkbox standalone="true">
											<xf:option name="push[{$contentType}_{$action}]"
												checked="{{ $xf.visitor.Option.doesReceivePush($contentType, $action) }}"
												label="{{ phrase('push') }}" />
										</xf:checkbox>
										<xf:hiddenval name="push_shown[{$contentType}_{$action}]">1</xf:hiddenval>
									</li>
								</xf:if>
							</ul>
						</xf:formrow>
					</xf:foreach>
					<hr class="formRowSep" />
				</xf:foreach>

			</div>
		</xf:if>

		<xf:submitrow icon="save" sticky="true" />
	</div>
</xf:form>]]></template>
  <template type="public" title="account_privacy" version_id="2000631" version_string="2.0.6 Beta 1"><![CDATA[<xf:title>{{ phrase('privacy') }}</xf:title>

<xf:wrap template="account_wrapper" />

<xf:form action="{{ link('account/privacy') }}" ajax="true" class="block" data-force-flash-message="true">
	<div class="block-container">
		<div class="block-body">
			<xf:macro template="helper_account" name="activity_privacy_row" />
			<xf:macro template="helper_account" name="dob_privacy_row" />
			<xf:macro template="helper_account" name="email_options_row" arg-showExplain="{{ true }}" />

			<xf:formrow rowtype="inputLabelPair noColon"
				label="{{ phrase('allow_users_to...') }}">

				<xf:macro name="privacy_option"
					arg-user="{$xf.visitor}"
					arg-name="allow_view_profile"
					arg-label="{{ phrase('view_your_details_on_your_profile_page:') }}" />

				<xf:if is="$xf.visitor.canViewProfilePosts()">
					<xf:macro name="privacy_option"
						arg-user="{$xf.visitor}"
						arg-name="allow_post_profile"
						arg-label="{{ phrase('post_messages_on_your_profile_page:') }}"
						arg-hideEveryone="{{true}}" />
				</xf:if>

				<xf:if is="$xf.options.enableNewsFeed">
					<xf:macro name="privacy_option"
						arg-user="{$xf.visitor}"
						arg-name="allow_receive_news_feed"
						arg-label="{{ phrase('receive_your_news_feed:') }}" />
				</xf:if>

				<xf:macro name="privacy_option"
					arg-user="{$xf.visitor}"
					arg-name="allow_send_personal_conversation"
					arg-label="{{ phrase('start_conversations_with_you:') }}"
					arg-hideEveryone="{{true}}" />

				<xf:macro name="privacy_option"
					arg-user="{$xf.visitor}"
					arg-name="allow_view_identities"
					arg-label="{{ phrase('view_your_identities:') }}" />
			</xf:formrow>
		</div>
		<xf:submitrow icon="save" sticky="true" />
	</div>
</xf:form>

<xf:macro name="privacy_option" arg-user="!" arg-name="!" arg-label="!" arg-hideEveryone="{{ false }}" arg-hideFollowed="{{ false }}">
	<dl class="inputLabelPair">
		<dt>{$label}</dt>
		<dd>
			<xf:select name="privacy[{$name}]" value="{$user.Privacy.{$name}}">
				<xf:if is="!$hideEveryone">
					<xf:option value="everyone">{{ phrase('all_visitors') }}</xf:option>
				</xf:if>
				<xf:option value="members">{{ phrase('members_only') }}</xf:option>
				<xf:if is="!$hideFollowed">
					<xf:option value="followed">{{ phrase('people_you_follow') }}</xf:option>
				</xf:if>
				<xf:option value="none">{{ phrase('nobody') }}</xf:option>
			</xf:select>
		</dd>
	</dl>
</xf:macro>]]></template>
  <template type="public" title="account_reactions" version_id="2010037" version_string="2.1.0 Beta 7"><![CDATA[<xf:title>{{ phrase('reactions_received') }}</xf:title>

<xf:wrap template="account_wrapper" />

<xf:if is="count($reactions) > 0">
	<xf:if is="!$listOnly">
		<div class="block">
			<div class="block-container">
				<h3 class="tabs hScroller block-minorTabHeader" data-xf-init="tabs h-scroller"
					data-panes="< .block-container | .js-reactionTabPanes" data-state="replace" role="tablist">
					<span class="hScroller-scroll">
						<xf:foreach loop="$tabSummary" key="$reactionId" value="$total">
							<a class="tabs-tab tabs-tab--reaction{$reactionId}{{ $reactionId == $activeReactionId ? ' is-active' : '' }}" role="tab" id="{{ $reactionId ? 'reaction-' . $reactionId : '' }}">
								<xf:if is="$reactionId">
									<xf:reaction id="{$reactionId}" small="true" showtitle="true" appendtitle="{$total|number|parens}" />
								<xf:else />
									<bdi>{{ phrase('all') }}</bdi> {$total|number|parens}
								</xf:if>
							</a>
						</xf:foreach>
					</span>
				</h3>
				<ul class="tabPanes js-reactionTabPanes">
					<xf:foreach loop="$tabSummary" key="$reactionId" value="$total">
						<xf:if is="$reactionId == $activeReactionId">
							<li class="{{ $reactionId == $activeReactionId ? 'is-active' : '' }}" role="tabpanel" id="reaction-{$reactionId}">
								<xf:macro name="reactions_list"
									arg-reactions="{$reactions}"
									arg-hasNext="{$hasNext}"
									arg-page="{$page}"
									arg-reactionId="{$reactionId|default(0)}" />
							</li>
						<xf:else />
							<li data-href="{{ link('account/reactions', null, {'reaction_id': $reactionId, 'list_only': 1}) }}" class="{{ $reactionId == $activeReactionId ? 'is-active' : '' }}" role="tabpanel" id="reaction-{$reactionId}">
								<div class="blockMessage">{{ phrase('loading...') }}</div>
							</li>
						</xf:if>
					</xf:foreach>
				</ul>
			</div>
		</div>
	<xf:else />
		<xf:macro name="reactions_list"
			arg-reactions="{$reactions}"
			arg-hasNext="{$hasNext}"
			arg-page="{$page}"
			arg-reactionId="{$activeReactionId|default(0)}" />
	</xf:if>
<xf:else />
	<div class="blockMessage">{{ phrase('unfortunately_none_of_your_content_has_received_any_reactions_yet') }}</div>
</xf:if>

<xf:macro name="reactions_list"
	arg-reactions="!"
	arg-hasNext="!"
	arg-page="!"
	arg-reactionId="0">
	<ul class="block-body js-reactionList-{$reactionId}">
		<xf:foreach loop="$reactions" value="$reaction">
			<li class="block-row block-row--separated">
				<div class="contentRow">
					<span class="contentRow-figure">
						<xf:avatar user="$reaction.ReactionUser" size="s" />
					</span>
					<div class="contentRow-main">
						{$reaction.render()|raw}
					</div>
				</div>
			</li>
		</xf:foreach>
		<xf:if is="$hasNext">
			<li class="block-footer">
				<span class="block-footer-controls"><xf:button href="{{ link('account/reactions', null, {'reaction_id': $reactionId, 'page': $page + 1}) }}"
					data-xf-click="inserter"
					data-replace=".js-reactionList-{$reactionId}"
					data-scroll-target="< .overlay">
						{{ phrase('more...') }}
				</xf:button></span>
			</li>
		</xf:if>
	</ul>
</xf:macro>]]></template>
  <template type="public" title="account_request_password" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('request_password') }}</xf:title>

<xf:form action="{{ link('account/request-password') }}" class="block" ajax="true">

	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('your_account_does_not_currently_have_password_confirm_generate', {'email': $xf.visitor.email}) }}
			</xf:inforow>
		</div>

		<xf:submitrow submit="{{ phrase('request_password') }}" rowtype="simple" />
	</div>

</xf:form>]]></template>
  <template type="public" title="account_security" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('password_and_security') }}</xf:title>

<xf:wrap template="account_wrapper" />

<xf:form action="{{ link('account/security') }}" ajax="true" class="block" data-force-flash-message="true">
	<div class="block-container">
		<div class="block-body">
			<xf:formrow rowtype="button"
				label="{{ phrase('two_step_verification') }}">

				<xf:if is="$xf.visitor.Option.use_tfa">
					{{ phrase('enabled_providers_x', {'providers': $enabledTfaProviders|join(', ')}) }}
				<xf:else />
					{{ phrase('disabled') }}
				</xf:if>
				<xf:button href="{{ link('account/two-step') }}" class="button--link">{{ phrase('change') }}</xf:button>
			</xf:formrow>

			<hr class="formRowSep" />

			<xf:if is="$hasPassword">
				<xf:passwordboxrow name="old_password" autofocus="autofocus"
					label="{{ phrase('your_existing_password') }}"
					explain="{{ phrase('you_must_verify_existing_password_before_changing') }}" />

				<xf:passwordboxrow name="password" checkstrength="true"
					label="{{ phrase('new_password') }}" />

				<xf:passwordboxrow name="password_confirm"
					label="{{ phrase('confirm_new_password') }}" />
			<xf:else />
				<xf:formrow label="{{ phrase('password') }}">
					{{ phrase('your_account_does_not_currently_have_password') }} <a href="{{ link('account/request-password') }}" data-xf-click="overlay">{{ phrase('request_password_be_emailed_to_you') }}</a>
				</xf:formrow>
			</xf:if>
		</div>
		<xf:if is="$hasPassword">
			<xf:submitrow icon="save" />
		</xf:if>
	</div>
</xf:form>]]></template>
  <template type="public" title="account_signature" version_id="2010131" version_string="2.1.1 Beta 1"><![CDATA[<xf:title>{{ phrase('edit_signature') }}</xf:title>

<xf:wrap template="account_wrapper" />

<xf:form action="{{ link('account/signature') }}" ajax="true" class="block" data-redirect="off">
	<div class="block-container">
		<div class="block-body">
			<xf:editorrow name="signature" value="{$xf.visitor.Profile.signature_}" rowtype="fullWidth noLabel"
				removebuttons="{$disabledButtons}"
				label="{{ phrase('signature') }}" />
		</div>
		<xf:submitrow icon="save" rowtype="simple" />
	</div>
</xf:form>]]></template>
  <template type="public" title="account_stop_following" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('stop_following_x', {'name': $followed.username}) }}</xf:title>

<xf:form action="{{ link('account/stop-following', null, { 'user_id': $followed.user_id }) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('please_confirm_that_you_want_to_stop_following_x', {'name': $followed.username}) }}
			</xf:inforow>
		</div>
		<xf:submitrow submit="{{ phrase('stop_following') }}" rowtype="simple" />
	</div>
</xf:form>]]></template>
  <template type="public" title="account_stop_ignoring" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('stop_ignoring_x', {'name': $ignored.username}) }}</xf:title>

<xf:form action="{{ link('account/stop-ignoring', null, { 'user_id': $ignored.user_id }) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('please_confirm_that_you_want_to_stop_ignoring_x', {'name': $ignored.username}) }}
			</xf:inforow>
		</div>
		<xf:submitrow submit="{{ phrase('stop_ignoring') }}" rowtype="simple" />
	</div>
</xf:form>]]></template>
  <template type="public" title="account_two_step" version_id="2000170" version_string="2.0.1"><![CDATA[<xf:title>{{ phrase('two_step_verification') }}</xf:title>

<xf:wrap template="account_wrapper" />

<xf:if is="$backupAdded">
	<div class="blockMessage blockMessage--important blockMessage--iconic">
		{{ phrase('verification_backup_codes_automatically_generated') }}
		<a href="{{ link('account/two-step/manage', {'provider_id': 'backup'}) }}">{{ phrase('view_your_backup_codes') }}</a>
		<a href="{{ link('account/two-step/backup-codes') }}" data-xf-click="overlay" data-overlay-config="{{ {'backdropClose': false, 'escapeClose': false}|json }}" data-load-auto-click="true" style="display: none"></a>
	</div>
</xf:if>

<xf:description>{{ phrase('two_step_verification_desc') }}</xf:description>

<div class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:foreach loop="$providers" value="$provider" if="$provider.isEnabled() OR $provider.canEnable()">
				<div class="block-row block-row--separated">
					<div class="contentRow">
						<div class="contentRow-main contentRow-main--close">
							<div class="contentRow-extra">
								<xf:if is="$provider.canEnable()">
									<xf:form action="{{ link('account/two-step/enable', $provider) }}">
										<xf:button type="submit">{{ phrase('enable') }}</xf:button>
									</xf:form>
								</xf:if>
								<xf:if is="$provider.canDisable()">
									<xf:button href="{{ link('account/two-step/disable', $provider) }}" overlay="true">
										{{ phrase('disable') }}
									</xf:button>
								</xf:if>
								<xf:if is="$provider.canManage()">
									<xf:button href="{{ link('account/two-step/manage', $provider) }}">
										{{ phrase('manage') }}
									</xf:button>
								</xf:if>
							</div>
							<h2 class="contentRow-title">{$provider.title}</h2>
							<div class="contentRow-minor">{$provider.description}</div>
						</div>
					</div>
				</div>
			</xf:foreach>
		</div>
		<xf:if is="$xf.visitor.Option.use_tfa">
			<div class="block-footer">
				<span class="block-footer-controls"><xf:button href="{{ link('account/two-step/disable') }}" overlay="true">
					{{ phrase('disable_two_step_verification') }}
				</xf:button></span>
			</div>
		</xf:if>
	</div>
</div>

<xf:if is="$currentTrustRecord OR $hasOtherTrusted">
	<div class="block">
		<div class="block-container">
			<h2 class="block-header">{{ phrase('trusted_devices') }}</h2>
			<div class="block-body">
				<xf:if is="$currentTrustRecord">
					<div class="block-row block-row--separated">
						{{ phrase('device_trusted_until_x_disable_desc', {'until': date($currentTrustRecord.trusted_until)}) }}

						<xf:form action="{{ link('account/two-step/trusted-disable') }}">
							<xf:button type="submit">{{ phrase('stop_trusting_this_device') }}</xf:button>
						</xf:form>
					</div>
				</xf:if>
				<xf:if is="$hasOtherTrusted">
					<div class="block-row block-row--separated">
						{{ phrase('other_devices_trusted_disable_desc') }}
						<xf:if is="$currentTrustRecord">{{ phrase('this_device_will_remain_trusted') }}</xf:if>

						<xf:form action="{{ link('account/two-step/trusted-disable') }}">
							<xf:button type="submit">{{ phrase('stop_trusting_other_devices') }}</xf:button>
							<xf:hiddenval name="others">1</xf:hiddenval>
						</xf:form>
					</div>
				</xf:if>
			</div>
		</div>
	</div>
</xf:if>]]></template>
  <template type="public" title="account_two_step_authy_config" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('two_step_verification_setup:') }} {$provider.title}</xf:title>

<xf:wrap template="account_wrapper" />

<xf:form action="{{ link('account/two-step/enable', $provider) }}" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:if is="$xf.visitor.email">
				<xf:formrow label="{{ phrase('email') }}" explain="{{ phrase('create_authy_id_current_email_explain') }}">
					{$xf.visitor.email}
				</xf:formrow>
			<xf:else />
				<xf:textboxrow label="{{ phrase('email') }}" name="email" explain="{{ phrase('create_authy_id_email_explain') }}" />
			</xf:if>

			<xf:telboxrow label="{{ phrase('cell_mobile_phone_number') }}"
				name="user_number" dialcodename="dial_code"
				intlnumbername="intl_numb" />
		</div>
		<xf:submitrow icon="save" />
	</div>

	<xf:hiddenval name="setup" value="1" />
</xf:form>]]></template>
  <template type="public" title="account_two_step_backup_codes" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('two_step_verification_backup_codes') }}</xf:title>

<xf:wrap template="account_wrapper" />

<div class="block">
	<div class="block-container">
		<div class="block-body">
			<div class="block-row block-row--separated">
				{{ phrase('two_step_verification_backup_codes_have_automatically_been_generated') }}
			</div>
			<div class="block-row block-row--separated">
				<ul class="listColumns listColumns--spaced listPlain">
				<xf:foreach loop="$codes" value="$code">
					<li><div>{$code}</div></li>
				</xf:foreach>
				</ul>
			</div>
		</div>
		<div class="block-footer">
			<span class="block-footer-controls">
				<xf:button class="button--primary js-overlayClose">{{ phrase('i_have_saved_backup_codes') }}</xf:button>
			</span>
		</div>
	</div>
</div>]]></template>
  <template type="public" title="account_two_step_backup_manage" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('two_step_verification_setup:') }} {$provider.title}</xf:title>

<xf:wrap template="account_wrapper" />

<xf:form action="{{ link('account/two-step/manage', $provider) }}" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:formrow
				label="{{ phrase('tfa.backup') }}"
				explain="{{ phrase('backup_codes_used_once_secure_location') }}">

				<ul class="listColumns listColumns--spaced listPlain">
				<xf:foreach loop="$usedCodes" value="$code">
					<li><div style="text-decoration: line-through">{$code}</div></li>
				</xf:foreach>
				<xf:foreach loop="$availableCodes" value="$code">
					<li><div>{$code}</div></li>
				</xf:foreach>
				</ul>
			</xf:formrow>

			<xf:checkboxrow>
				<xf:option name="regen" value="1"
					label="{{ phrase('generate_new_backup_codes') }}"
					hint="{{ phrase('this_will_generate_new_backup_codes') }}" />
			</xf:checkboxrow>
		</div>
		<xf:submitrow submit="{{ phrase('confirm_regeneration') }}" />
	</div>
</xf:form>]]></template>
  <template type="public" title="account_two_step_disable" version_id="2000036" version_string="2.0.0 Beta 6"><![CDATA[<xf:if is="$provider">
	<xf:title>{{ phrase('disable_two_step_verification:') }} {$provider.title}</xf:title>
<xf:else />
	<xf:title>{{ phrase('disable_two_step_verification') }}</xf:title>
</xf:if>

<xf:wrap template="account_wrapper" />

<xf:form action="{{ link('account/two-step/disable', $provider) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				<xf:if is="$provider">
					{{ phrase('you_sure_you_want_disable_two_step_x', {'title': $provider.title}) }}
				<xf:else />
					{{ phrase('you_sure_you_want_disable_two_step') }}
				</xf:if>
			</xf:inforow>
		</div>
		<xf:submitrow submit="{{ phrase('confirm') }}" rowtype="simple" icon="disable" />
	</div>
</xf:form>]]></template>
  <template type="public" title="account_two_step_enable" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('two_step_verification_setup:') }} {$provider.title}</xf:title>

<xf:wrap template="account_wrapper" />

<xf:form action="{{ link('account/two-step/enable', $provider) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			{{ $provider.render('setup', $xf.visitor, $providerData, $triggerData)|raw }}
		</div>
		<xf:submitrow submit="{{ phrase('confirm') }}" />
	</div>
	<xf:hiddenval name="step">confirm</xf:hiddenval>
</xf:form>]]></template>
  <template type="public" title="account_two_step_totp_manage" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('two_step_verification_setup:') }} {$provider.title}</xf:title>

<xf:wrap template="account_wrapper" />

<xf:form action="{{ link('account/two-step/manage', $provider) }}" class="block" ajax="{{ $newProviderData ? 'true' : '' }}">
	<div class="block-container">
		<div class="block-body">
			<xf:if is="$newProviderData">
				{{ $provider.render('setup', $xf.visitor, $newProviderData, $newTriggerData)|raw }}

				<xf:hiddenval name="confirm">1</xf:hiddenval>
			<xf:else />
				<xf:checkboxrow>
					<xf:option name="regen" value="1"
						label="{{ phrase('regenerate_secret_for_new_device') }}"
						hint="{{ phrase('totp_this_will_regenerate_secret') }}" />
				</xf:checkboxrow>
			</xf:if>
		</div>
		<xf:submitrow submit="{{ phrase('confirm') }}" />
	</div>
</xf:form>]]></template>
  <template type="public" title="account_upgrade_purchase" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('thanks_for_your_purchase') }}</xf:title>

<xf:wrap template="account_wrapper" />

<div class="blockMessage">{{ phrase('thank_you_for_purchasing_this_upgrade') }}</div>]]></template>
  <template type="public" title="account_upgrades" version_id="2001270" version_string="2.0.12"><![CDATA[<xf:title>{{ phrase('account_upgrades') }}</xf:title>

<xf:wrap template="account_wrapper" />

<xf:js src="xf/payment.js" min="1" />

<xf:if contentcheck="true">
	<xf:contentcheck>

		<xf:if is="$available is not empty">
			<div class="block">
				<div class="block-container">
					<h2 class="block-header">{{ phrase('available_upgrades') }}</h2>

					<ul class="block-body">
					<xf:foreach loop="$available" value="$upgrade">
						<li>
							<xf:form action="{{ link('purchase', $upgrade, {'user_upgrade_id': $upgrade.user_upgrade_id}) }}" ajax="true" data-xf-init="payment-provider-container">

								<xf:formrow rowtype="button"
									label="{$upgrade.title}"
									hint="{$upgrade.cost_phrase}"
									explain="{$upgrade.description|raw}">

									<div class="inputGroup">

										<xf:if is="{{ count($upgrade.payment_profile_ids) > 1 }}">
											<xf:select name="payment_profile_id">
												<xf:option>{{ phrase('(choose_payment_method)') }}</xf:option>
												<xf:foreach loop="$upgrade.payment_profile_ids" value="$profileId">
													<xf:option value="{$profileId}">{$profiles.{$profileId}}</xf:option>
												</xf:foreach>
											</xf:select>

											<span class="inputGroup-splitter"></span>

											<xf:button type="submit" icon="purchase" />
										<xf:else />
											<xf:button type="submit" icon="purchase" />

											<xf:hiddenval name="payment_profile_id">{$upgrade.payment_profile_ids|first}</xf:hiddenval>
										</xf:if>
									</div>
								</xf:formrow>
							</xf:form>
							<div class="js-paymentProviderReply-user_upgrade{$upgrade.user_upgrade_id}"></div>
						</li>
					</xf:foreach>
					</ul>
				</div>
			</div>
		</xf:if>

		<xf:if is="$purchased is not empty">
			<div class="block">
				<div class="block-container">
					<h2 class="block-header">{{ phrase('purchased_upgrades') }}</h2>

					<ul class="block-body listPlain">
					<xf:foreach loop="$purchased" value="$upgrade">
						<li>
							<div>
								<xf:set var="$active" value="{$upgrade.Active.{$xf.visitor.user_id}}" />
								<xf:formrow
									label="{$upgrade.title}"
									hint="{$upgrade.cost_phrase}"
									explain="{$upgrade.description|raw}">

									<xf:if is="$active.end_date">
										{{ phrase('expires:') }} <xf:date time="{$active.end_date}" />
									<xf:else />
										{{ phrase('expires_never') }}
									</xf:if>

									<xf:if is="$upgrade.length_unit && $upgrade.recurring && $active.PurchaseRequest">
										<xf:set var="$provider" value="{$active.PurchaseRequest.PaymentProfile.Provider}" />
										{{ $provider.renderCancellation($active)|raw }}
									</xf:if>
								</xf:formrow>
							</div>
						</li>
					</xf:foreach>
					</ul>
				</div>
			</div>
		</xf:if>
	</xf:contentcheck>
<xf:else />
	<div class="blockMessage">{{ phrase('there_currently_no_purchasable_user_upgrades') }}</div>
</xf:if>
]]></template>
  <template type="public" title="account_visitor_menu" version_id="2010053" version_string="2.1.0 Release Candidate 3"><![CDATA[<xf:if contentcheck="true">
	<h4 class="menu-tabHeader tabs" data-xf-init="tabs" role="tablist">
		<span class="hScroller" data-xf-init="h-scroller">
			<span class="hScroller-scroll">
				<a href="{{ link('account') }}" class="tabs-tab is-active" role="tab" tabindex="0" aria-controls="{{ unique_id('accountMenu') }}">{{ phrase('your_account') }}</a>
			<xf:contentcheck>
				<xf:if is="$xf.visitor.canViewBookmarks()">
					<a href="{{ link('account/bookmarks') }}" class="tabs-tab" role="tab" tabindex="0" aria-controls="{{ unique_id('accountMenuBookmarks') }}">{{ phrase('bookmarks') }}</a>
				</xf:if>
				<!--[XF:account_tabs:bottom]-->
			</xf:contentcheck>
			</span>
		</span>
	</h4>
	<xf:set var="$hasTabs" value="{{ true }}" />
</xf:if>

<xf:set var="$accountHtml">
	<div class="menu-row menu-row--alt">
		<xf:macro name="visitor_panel_row" />
	</div>

	<xf:macro name="visitor_panel_row">
		<div class="contentRow">
			<div class="contentRow-figure">
				<span class="avatarWrapper">
					<xf:avatar user="{$xf.visitor}" size="m" href="" notooltip="true" />
					<xf:if is="$xf.visitor.canUploadAvatar()">
						<a class="avatarWrapper-update" href="{{ link('account/avatar') }}" data-xf-click="overlay"><span>{{ phrase('edit') }}</span></a>
					</xf:if>
				</span>
			</div>
			<div class="contentRow-main">
				<h3 class="contentRow-header"><xf:username user="$xf.visitor" rich="true" notooltip="true" /></h3>
				<div class="contentRow-lesser">
					<xf:usertitle user="$xf.visitor" />
				</div>

				<div class="contentRow-minor">
					<!--[XF:stats_pairs:above_messages]-->
					<dl class="pairs pairs--justified fauxBlockLink">
						<dt>{{ phrase('messages') }}</dt>
						<dd>
							<a href="{{ link('search/member', null, {'user_id': $xf.visitor.user_id}) }}" class="fauxBlockLink-linkRow u-concealed">
								{$xf.visitor.message_count|number}
							</a>
						</dd>
					</dl>
					<!--[XF:stats_pairs:above_reactions]-->
					<dl class="pairs pairs--justified fauxBlockLink">
						<dt>{{ phrase('reaction_score') }}</dt>
						<dd>
							<a href="{{ link('account/reactions') }}" class="fauxBlockLink-linkRow u-concealed">
								{$xf.visitor.reaction_score|number}
							</a>
						</dd>
					</dl>
					<!--[XF:stats_pairs:above_points]-->
					<xf:if is="$xf.options.enableTrophies">
						<dl class="pairs pairs--justified fauxBlockLink">
							<dt>{{ phrase('trophy_points') }}</dt>
							<dd>
								<a href="{{ link('members/trophies', $xf.visitor) }}" data-xf-click="overlay" class="fauxBlockLink-linkRow u-concealed">
									{$xf.visitor.trophy_points|number}
								</a>
							</dd>
						</dl>
					</xf:if>
				</div>
			</div>
		</div>
	</xf:macro>

	<!--[XF:menu_separator:below_visitor_panel]-->
	<hr class="menu-separator menu-separator--hard" />

	<ul class="listPlain listColumns listColumns--narrow listColumns--together">
		<!--[XF:content_links:top]-->
		<xf:if is="$xf.options.enableNewsFeed">
			<li><a href="{{ link('whats-new/news-feed') }}" class="menu-linkRow">{{ phrase('news_feed') }}</a></li>
		</xf:if>
		<li><a href="{{ link('search/member', null, {'user_id': $xf.visitor.user_id}) }}" class="menu-linkRow">{{ phrase('your_content') }}</a></li>
		<li><a href="{{ link('account/reactions') }}" class="menu-linkRow">{{ phrase('reactions_received') }}</a></li>
		<!--[XF:content_links:bottom]-->
	</ul>

	<!--[XF:menu_separator:below_content_links]-->
	<hr class="menu-separator" />

	<ul class="listPlain listColumns listColumns--narrow listColumns--together">
		<!--[XF:account_links:top]-->
		<li><a href="{{ link('account/account-details') }}" class="menu-linkRow">{{ phrase('account_details') }}</a></li>
		<li><a href="{{ link('account/security') }}" class="menu-linkRow">{{ phrase('password_and_security') }}</a></li>
		<li><a href="{{ link('account/privacy') }}" class="menu-linkRow">{{ phrase('privacy') }}</a></li>
		<li><a href="{{ link('account/preferences') }}" class="menu-linkRow">{{ phrase('preferences') }}</a></li>
		<xf:if is="$xf.visitor.canEditSignature()">
			<li><a href="{{ link('account/signature') }}" class="menu-linkRow">{{ phrase('signature') }}</a></li>
		</xf:if>
		<xf:if is="$xf.app.userUpgradeCount">
			<li><a href="{{ link('account/upgrades') }}" class="menu-linkRow">{{ phrase('account_upgrades') }}</a></li>
		</xf:if>
		<xf:if is="$xf.app.connectedAccountCount">
			<li><a href="{{ link('account/connected-accounts') }}" class="menu-linkRow">{{ phrase('connected_accounts') }}</a></li>
		</xf:if>
		<li><a href="{{ link('account/following') }}" class="menu-linkRow">{{ phrase('following') }}</a></li>
		<li><a href="{{ link('account/ignored') }}" class="menu-linkRow">{{ phrase('ignoring') }}</a></li>
		<!--[XF:account_links:bottom]-->
	</ul>

	<!--[XF:menu_separator:below_account_links]-->
	<hr class="menu-separator" />

	<a href="{{ link('logout', null, {'t': csrf_token()}) }}" class="menu-linkRow">{{ phrase('log_out') }}</a>

	<xf:if is="$xf.visitor.canPostOnProfile()">
		<xf:form action="{{ link('members/post', $xf.visitor) }}" ajax="true"
			data-redirect="off"
			data-reset-complete="true"
			data-no-auto-focus="true"
			class="menu-footer">

			<span class="u-srOnly" id="ctrl_message">{{ phrase('update_your_status:') }}</span>
			<xf:textarea name="message" rows="1" autosize="true"
				maxlength="{$xf.options.profilePostMaxLength}"
				placeholder="{{ phrase('update_your_status...') }}"
				data-xf-init="focus-trigger user-mentioner emoji-completer" data-display="< :next" aria-labelledby="ctrl_message" />
			<div class="u-hidden u-hidden--transition u-inputSpacer">
				<xf:button type="submit" class="button--primary" icon="reply">{{ phrase('post_verb') }}</xf:button>
			</div>
		</xf:form>
	</xf:if>
</xf:set>

<xf:if is="$hasTabs">
	<ul class="tabPanes">
		<li class="is-active" role="tabpanel" id="{{ unique_id('accountMenu') }}">
			{$accountHtml|raw}
		</li>
		<xf:if is="$xf.visitor.canViewBookmarks()">
			<li role="tabpanel" id="{{ unique_id('accountMenuBookmarks') }}"
				data-href="{{ link('account/bookmarks-popup') }}"
				data-load-target=".js-bookmarksMenuBody">
				<div class="js-bookmarksMenuBody">
					<div class="menu-row">{{ phrase('loading...') }}</div>
				</div>
				<div class="menu-footer menu-footer--close">
					<a href="{{ link('account/bookmarks') }}">{{ phrase('show_all...') }}</a>
				</div>
			</li>
		</xf:if>
		<!--[XF:account_tab_panes:bottom]-->
	</ul>
<xf:else />
	{$accountHtml|raw}
</xf:if>]]></template>
  <template type="public" title="account_wrapper" version_id="2010035" version_string="2.1.0 Beta 5"><![CDATA[<xf:sidenav>
	<div class="block">
		<div class="block-container">
			<h3 class="block-header">{{ phrase('your_account') }}</h3>
			<div class="block-body">
				<!--[XF:profile_links:top]-->
				<a class="blockLink" href="{{ link('members', $xf.visitor) }}">{{ phrase('your_profile') }}</a>
				<a class="blockLink {{ $pageSelected == 'alerts' ? 'is-selected' : '' }}" href="{{ link('account/alerts') }}">
					{{ phrase('alerts') }}
				</a>
				<a class="blockLink {{ $pageSelected == 'reactions' ? 'is-selected' : '' }}" href="{{ link('account/reactions') }}">
					{{ phrase('reactions_received') }}
				</a>
				<xf:if is="$xf.visitor.canViewBookmarks()">
					<a class="blockLink {{ $pageSelected == 'bookmarks' ? 'is-selected' : '' }}" href="{{ link('account/bookmarks') }}">
						{{ phrase('bookmarks') }}
					</a>
				</xf:if>
				<!--[XF:profile_links:bottom]-->
			</div>

			<h3 class="block-minorHeader">{{ phrase('settings') }}</h3>
			<div class="block-body">
				<!--[XF:settings_links:top]-->
				<a class="blockLink {{ $pageSelected == 'account_details' ? 'is-selected' : '' }}" href="{{ link('account/account-details') }}">
					{{ phrase('account_details') }}
				</a>
				<a class="blockLink {{ $pageSelected == 'security' ? 'is-selected' : '' }}" href="{{ link('account/security') }}">
					{{ phrase('password_and_security') }}
				</a>
				<a class="blockLink {{ $pageSelected == 'privacy' ? 'is-selected' : '' }}" href="{{ link('account/privacy') }}">
					{{ phrase('privacy') }}
				</a>
				<a class="blockLink {{ $pageSelected == 'preferences' ? 'is-selected' : '' }}" href="{{ link('account/preferences') }}">
					{{ phrase('preferences') }}
				</a>
				<xf:if is="$xf.visitor.canEditSignature()">
					<a class="blockLink {{ $pageSelected == 'signature' ? 'is-selected' : '' }}" href="{{ link('account/signature') }}">
						{{ phrase('signature') }}
					</a>
				</xf:if>
				<xf:if is="$xf.app.userUpgradeCount">
					<a class="blockLink {{ $pageSelected == 'upgrades' ? 'is-selected' : '' }}" href="{{ link('account/upgrades') }}">
						{{ phrase('account_upgrades') }}
					</a>
				</xf:if>
				<xf:if is="$xf.app.connectedAccountCount">
					<a class="blockLink {{ $pageSelected == 'connected_account' ? 'is-selected' : '' }}" href="{{ link('account/connected-accounts') }}">
						{{ phrase('connected_accounts') }}
					</a>
				</xf:if>
				<a class="blockLink {{ $pageSelected == 'following' ? 'is-selected' : '' }}" href="{{ link('account/following') }}">
					{{ phrase('following') }}
				</a>
				<a class="blockLink {{ $pageSelected == 'ignored' ? 'is-selected' : '' }}" href="{{ link('account/ignored') }}">
					{{ phrase('ignoring') }}
				</a>
				<!--[XF:settings_links:bottom]-->
			</div>
		</div>
	</div>

	<div class="block">
		<div class="block-container">
			<div class="block-body">
				<a href="{{ link('logout', null, {'t': csrf_token()}) }}" class="blockLink">{{ phrase('log_out') }}</a>
			</div>
		</div>
	</div>
</xf:sidenav>
<xf:page option="sideNavTitle">{{ phrase('your_account') }}</xf:page>

<xf:breadcrumb href="{{ link('account') }}">{{ phrase('your_account') }}</xf:breadcrumb>

{$innerContent|raw}]]></template>
  <template type="public" title="alert" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<div class="contentRow">
	<div class="contentRow-figure">
		<xf:avatar user="$alert.User" size="xxs" defaultname="{$alert.username}" />
	</div>
	<div class="contentRow-main contentRow-main--close">
		{$alert.render()|raw}
		<div class="contentRow-minor contentRow-minor--smaller">
			<xf:date time="$alert.event_date" />
		</div>
	</div>
</div>]]></template>
  <template type="public" title="alert_conversation_message_reaction" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[{{ phrase('x_reacted_to_your_message_in_the_conversation_y', {
	'name': username_link($user, false, {'defaultname': $alert.username}),
	'reaction': alert_reaction($extra.reaction_id)|preescaped,
	'title': '<a href="' . link('conversations/messages', $content) . '" class="fauxBlockLink-blockLink">' . $content.Conversation.title . '</a>'
}) }}]]></template>
  <template type="public" title="alert_macros" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro name="row" arg-alert="!">
	<div class="contentRow">
		<div class="contentRow-figure">
			<xf:avatar user="$alert.User" size="xxs" defaultname="{$alert.username}" />
		</div>
		<div class="contentRow-main contentRow-main--close">
			{$alert.render()|raw}
			<div class="contentRow-minor contentRow-minor--smaller">
				<xf:date time="$alert.event_date" />
			</div>
		</div>
	</div>
</xf:macro>]]></template>
  <template type="public" title="alert_post_insert" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:if is="$content.isFirstPost()">
	{{ phrase('x_started_thread_y_may_be_more', {
		'name': username_link($user, false, {'defaultname': $alert.username}),
		'title': '<a href="' . link('threads', $content.Thread) . '" class="fauxBlockLink-blockLink">' . prefix('thread', $content.Thread) . $content.Thread.title . '</a>'
	}) }}
<xf:else />
	{{ phrase('x_replied_to_thread_y_may_be_more', {
		'name': username_link($user, false, {'defaultname': $alert.username}),
		'title': '<a href="' . link('posts', $content) . '" class="fauxBlockLink-blockLink">' . prefix('thread', $content.Thread) . $content.Thread.title . '</a>'
	}) }}
</xf:if>]]></template>
  <template type="public" title="alert_post_mention" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[{{ phrase('x_mentioned_you_in_post_in_thread_y', {
	'name': username_link($user, false, {'defaultname': $alert.username}),
	'title': '<a href="' . link('posts', $content) . '" class="fauxBlockLink-blockLink">' . prefix('thread', $content.Thread) . $content.Thread.title . '</a>'
}) }}]]></template>
  <template type="public" title="alert_post_quote" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[{{ phrase('x_quoted_your_post_in_thread_y', {
	'name': username_link($user, false, {'defaultname': $alert.username}),
	'title': '<a href="' . link('posts', $content) . '" class="fauxBlockLink-blockLink">' . prefix('thread', $content.Thread) . $content.Thread.title . '</a>'
}) }}]]></template>
  <template type="public" title="alert_post_reaction" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[{{ phrase('x_reacted_to_your_post_in_the_thread_y', {
	'name': username_link($user, false, {'defaultname': $alert.username}),
	'reaction': alert_reaction($extra.reaction_id)|preescaped,
	'title': '<a href="' . link('posts', $content) . '" class="fauxBlockLink-blockLink">' . prefix('thread', $content.Thread) . $content.Thread.title . '</a>'
}) }}]]></template>
  <template type="public" title="alert_profile_post_comment_mention" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[{{ phrase('x_mentioned_you_comment_on_ys_profile', {
	'name': username_link($user, false, {'defaultname': $alert.username}),
	'post_attributes': 'href="' . link('profile-posts/comments', $content) . '" class="fauxBlockLink-blockLink"',
	'profile': $content.ProfilePost.ProfileUser.username
}) }}]]></template>
  <template type="public" title="alert_profile_post_comment_other_commenter" version_id="2010053" version_string="2.1.0 Release Candidate 3"><![CDATA[<xf:if is="$content.ProfilePost.ProfileUser.user_id == $content.ProfilePost.user_id">
	{{ phrase('x_also_commented_on_ys_status', {
		'name': username_link($user, false, {'defaultname': $alert.username}),
		'poster_params': 'href="' . link('profile-posts/comments', $content) . '" class="fauxBlockLink-blockLink"',
		'poster': $content.ProfilePost.username
	}) }}
<xf:else />
	{{ phrase('x_also_commented_on_ys_profile_post', {
		'name': username_link($user, false, {'defaultname': $alert.username}),
		'poster_params': 'href="' . link('profile-posts/comments', $content) . '" class="fauxBlockLink-blockLink"',
		'poster': $content.ProfilePost.username
	}) }}
</xf:if>]]></template>
  <template type="public" title="alert_profile_post_comment_reaction" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:if is="$xf.visitor.user_id == $content.ProfilePost.user_id">
	{{ phrase('x_reacted_to_your_comment_on_your_profile_post', {
		'name': username_link($user, false, {'defaultname': $alert.username}),
		'post_attributes': 'href="' . link('profile-posts/comments', $content) . '" class="fauxBlockLink-blockLink"',
		'reaction': alert_reaction($extra.reaction_id)|preescaped
	}) }}
<xf:else />
	{{ phrase('x_reacted_to_your_comment_on_ys_profile_post', {
		'name': username_link($user, false, {'defaultname': $alert.username}),
		'post_attributes': 'href="' . link('profile-posts/comments', $content) . '" class="fauxBlockLink-blockLink"',
		'reaction': alert_reaction($extra.reaction_id)|preescaped,
		'poster': $content.ProfilePost.username
	}) }}
</xf:if>]]></template>
  <template type="public" title="alert_profile_post_comment_your_post" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[{{ phrase('x_commented_on_your_post_on_ys_profile', {
	'name': username_link($user, false, {'defaultname': $alert.username}),
	'post_params': 'href="' . link('profile-posts/comments', $content) . '" class="fauxBlockLink-blockLink"',
	'profile': $content.ProfilePost.ProfileUser.username
}) }}]]></template>
  <template type="public" title="alert_profile_post_comment_your_profile" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:if is="$xf.visitor.user_id == $content.ProfilePost.user_id">
	{{ phrase('x_commented_on_your_status', {
		'name': username_link($user, false, {'defaultname': $alert.username}),
		'status_attributes': 'href="' . link('profile-posts/comments', $content) . '" class="fauxBlockLink-blockLink"'
	}) }}
<xf:else />
	{{ phrase('x_commented_on_ys_post_on_your_profile', {
		'name': username_link($user, false, {'defaultname': $alert.username}),
		'post_attributes': 'href="' . link('profile-posts/comments', $content) . '" class="fauxBlockLink-blockLink"',
		'poster': $content.ProfilePost.username
	}) }}
</xf:if>]]></template>
  <template type="public" title="alert_profile_post_insert" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[{{ phrase('alert_profile_post_insert', {
		'username': username_link($user, false, {'defaultname': $alert.username}),
		'profilePageLinkAttributes': 'href="' . link('profile-posts', $content) . '" class="fauxBlockLink-blockLink"'
	})
}}]]></template>
  <template type="public" title="alert_profile_post_mention" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[{{ phrase('x_mentioned_you_message_on_ys_profile', {
	'name': username_link($user, false, {'defaultname': $alert.username}),
	'post_attributes': 'href="' . link('profile-posts', $content) . '" class="fauxBlockLink-blockLink"',
	'profile': $content.ProfileUser.username
}) }}]]></template>
  <template type="public" title="alert_profile_post_reaction" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:if is="$xf.visitor.user_id == $content.ProfileUser.user_id">
	{{ phrase('x_reacted_to_your_status', {
		'name': username_link($user, false, {'defaultname': $alert.username}),
		'reaction': alert_reaction($extra.reaction_id)|preescaped,
		'status_attributes': 'href="' . link('profile-posts', $content) . '" class="fauxBlockLink-blockLink"'
	}) }}
<xf:else />
	{{ phrase('x_reacted_to_your_post_on_ys_profile', {
		'name': username_link($user, false, {'defaultname': $alert.username}),
		'post_attributes': 'href="' . link('profile-posts', $content) . '" class="fauxBlockLink-blockLink"',
		'reaction': alert_reaction($extra.reaction_id)|preescaped,
		'profile': $content.ProfileUser.username
	}) }}
</xf:if>]]></template>
  <template type="public" title="alert_report_mention" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[{{ phrase('x_mentioned_you_in_comment_in_report_y', {
	'name': username_link($user, false, {'defaultname': $alert.username}),
	'title': '<a href="' . link('reports', $content) . '#report-comment-' . $alert.extra_data.comment.report_comment_id . '" class="fauxBlockLink-blockLink">' . $content.title . '</a>'
}) }}]]></template>
  <template type="public" title="alert_thread_reply_ban" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:if is="$extra.expiry">
	{{ phrase('you_unable_reply_to_thread_x_until_expiry_y', {'title': '<a href="' . link('threads', $content) . '" class="fauxBlockLink-blockLink">' . prefix('thread', $thread) . $content.title . '</a>', 'expiry': date($extra.expiry)}) }}
<xf:else />
	{{ phrase('you_are_no_longer_able_to_reply_thread_x', {'title': '<a href="' . link('threads', $content) . '" class="fauxBlockLink-blockLink">' . prefix('thread', $thread) . $content.title . '</a>'}) }}
</xf:if>
<xf:if is="$extra.reason">{{ phrase('reason:') }} {$extra.reason}</xf:if>]]></template>
  <template type="public" title="alert_trophy_award" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[{{ phrase('you_have_been_awarded_a_trophy_x', {'trophy': '<a href="' . link('members/trophies', $xf.visitor) . '" class="fauxBlockLink-blockLink" data-xf-click="overlay">' . $content.title . '</a>'}) }}]]></template>
  <template type="public" title="alert_user_following" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[{{ phrase('alert_user_following', {'username': username_link($user, false, {'defaultname': $alert.username})}) }}
<xf:if is="$user"><a href="{{ link('members', $user) }}" class="fauxBlockLink-blockLink"></a></xf:if>]]></template>
  <template type="public" title="alert_user_from_admin" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[{$extra.alert_text|raw}]]></template>
  <template type="public" title="alert_user_post_copy" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[{{ phrase('your_post_in_thread_x_was_copied_to_y', {
	'title': $extra.title,
	'target': '<a href="' . base_url($extra.targetLink) . '" class="fauxBlockLink-blockLink">' . prefix('thread', $extra.prefix_id) . $extra.targetTitle . '</a>'
}) }}
<xf:if is="$extra.reason">{{ phrase('reason:') }} {$extra.reason}</xf:if>]]></template>
  <template type="public" title="alert_user_post_delete" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[{{ phrase('your_post_in_thread_x_was_deleted', {
	'title': '<a href="' . base_url($extra.threadLink) . '" class="fauxBlockLink-blockLink">' . prefix('thread', $extra.prefix_id) . $extra.title . '</a>'
}) }}
<xf:if is="$extra.reason">{{ phrase('reason:') }} {$extra.reason}</xf:if>]]></template>
  <template type="public" title="alert_user_post_edit" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[{{ phrase('your_post_in_thread_x_was_edited', {'title': '<a href="' . base_url($extra.link) . '" class="fauxBlockLink-blockLink">' . prefix('thread', $extra.prefix_id) . $extra.title . '</a>'}) }}
<xf:if is="$extra.reason">{{ phrase('reason:') }} {$extra.reason}</xf:if>]]></template>
  <template type="public" title="alert_user_post_merge" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[{{ phrase('your_posts_in_thread_x_were_merged_together', {
	'source': '<a href="' . base_url($extra.threadLink) . '" class="fauxBlockLink-blockLink">' . prefix('thread', $extra.prefix_id) . $extra.title . '</a>'
}) }}
<xf:if is="$extra.reason">{{ phrase('reason:') }} {$extra.reason}</xf:if>]]></template>
  <template type="public" title="alert_user_post_move" version_id="2001270" version_string="2.0.12"><![CDATA[{{ phrase('your_post_in_thread_x_was_moved_to_y', {
	'title': $extra.sourceTitle,
	'target': '<a href="' . base_url($extra.targetLink) . '" class="fauxBlockLink-blockLink">' . prefix('thread', $extra.prefix_id) . $extra.title . '</a>'
}) }}
<xf:if is="$extra.reason">{{ phrase('reason:') }} {$extra.reason}</xf:if>]]></template>
  <template type="public" title="alert_user_profile_post_comment_delete" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[{{ phrase('your_comment_on_xs_profile_post_was_deleted', {'user': '<a href="' . base_url($extra.profilePostLink) . '" class="fauxBlockLink-blockLink">' . $extra.postUser . '</a>'}) }}
<xf:if is="$extra.reason">{{ phrase('reason:') }} {$extra.reason}</xf:if>]]></template>
  <template type="public" title="alert_user_profile_post_comment_edit" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[{{ phrase('your_comment_on_xs_profile_post_was_edited', {'user': '<a href="' . base_url($extra.link) . '" class="fauxBlockLink-blockLink">' . $extra.postUser . '</a>'}) }}
<xf:if is="$extra.reason">{{ phrase('reason:') }} {$extra.reason}</xf:if>]]></template>
  <template type="public" title="alert_user_profile_post_delete" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:if is="$extra.profileUserId == $xf.visitor.user_id">
	{{ phrase('your_status_update_was_deleted') }}
<xf:else />
	{{ phrase('your_profile_post_for_x_was_deleted', {'user': '<a href="' . base_url($extra.profileLink) . '" class="fauxBlockLink-blockLink">' . $extra.profileUser . '</a>'}) }}
</xf:if>
<xf:if is="$extra.reason">{{ phrase('reason:') }} {$extra.reason}</xf:if>]]></template>
  <template type="public" title="alert_user_profile_post_edit" version_id="2000053" version_string="2.0.0 Release Candidate 3"><![CDATA[<xf:if is="$extra.profileUserId == $xf.visitor.user_id">
	{{ phrase('your_status_update_was_edited', {'link': base_url($extra.link)}) }}
<xf:else />
	{{ phrase('your_profile_post_on_xs_profile_was_edited', {'user': '<a href="' . base_url($extra.link) . '" class="fauxBlockLink-blockLink">' . $extra.profileUser . '</a>'}) }}
</xf:if>
<xf:if is="$extra.reason">{{ phrase('reason:') }} {$extra.reason}</xf:if>]]></template>
  <template type="public" title="alert_user_report_rejected" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:if is="$extra.comment">
	{{ phrase('unfortunately_report_made_recently_rejected_comment_x', {'comment': $extra.comment, 'title': $extra.title}) }}
<xf:else />
	{{ phrase('unfortunately_report_made_recently_rejected', {'title': $extra.title}) }}
</xf:if>]]></template>
  <template type="public" title="alert_user_report_resolved" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:if is="$extra.comment">
	{{ phrase('report_that_you_made_recently_has_been_resolved_comment_x', {'comment': $extra.comment, 'title': $extra.title}) }}
<xf:else />
	{{ phrase('report_that_you_made_recently_has_been_resolved', {'title': $extra.title}) }}
</xf:if>]]></template>
  <template type="public" title="alert_user_thread_delete" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[{{ phrase('your_thread_x_was_deleted', {
	'title': prefix('thread', $extra.prefix_id) . $extra.title
}) }}
<xf:if is="$extra.reason">{{ phrase('reason:') }} {$extra.reason}</xf:if>]]></template>
  <template type="public" title="alert_user_thread_merge" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[{{ phrase('your_thread_x_was_merged_into_y', {
	'title': $extra.title,
	'target': '<a href="' . base_url($extra.targetLink) . '" class="fauxBlockLink-blockLink">' . prefix('thread', $extra.prefix_id) . $extra.targetTitle . '</a>'
}) }}
<xf:if is="$extra.reason">{{ phrase('reason:') }} {$extra.reason}</xf:if>]]></template>
  <template type="public" title="alert_user_thread_move" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[{{ phrase('your_thread_x_was_moved_to_different_forum', {
	'title': '<a href="' . base_url($extra.link) . '" class="fauxBlockLink-blockLink">' . prefix('thread', $extra.prefix_id) . $extra.title . '</a>'
}) }}
<xf:if is="$extra.reason">{{ phrase('reason:') }} {$extra.reason}</xf:if>]]></template>
  <template type="public" title="alert_user_upgrade_end" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[{{ phrase('one_account_upgrades_expired_renew_now', {'link': link('account/upgrades')}) }}]]></template>
  <template type="public" title="app.less" version_id="2010034" version_string="2.1.0 Beta 4"><![CDATA[@_nav-elTransitionSpeed: @xf-animationSpeed;
@_navAccount-hPadding: @xf-paddingLarge;

.m-pageWidth(@min-width: @xf-pageEdgeSpacer)
{
	max-width: @xf-pageWidthMax;
	padding: 0 @xf-pageEdgeSpacer;
	margin: 0 auto;
}

.m-pageInset(@defaultPadding: @xf-pageEdgeSpacer)
{
	padding-left: @defaultPadding;
	padding-right: @defaultPadding;

	// iPhone X/Xr/Xs support
	@supports(padding: max(0px))
	{
		&
		{
			padding-left: ~"max(@{defaultPadding}, env(safe-area-inset-left))";
			padding-right: ~"max(@{defaultPadding}, env(safe-area-inset-right))";
		}
	}
}

.u-anchorTarget
{
	.m-stickyHeaderConfig(@xf-publicNavSticky);
	height: (@_stickyHeader-height + @_stickyHeader-offset);
	margin-top: -(@_stickyHeader-height + @_stickyHeader-offset);
}

.p-pageWrapper
{
	position: relative;
	display: flex;
	flex-direction: column;
	min-height: 100vh;
	.xf-pageBackground();

	.is-modalOverlayOpen &
	{
		& when (unit(xf-default(@xf-overlayMaskBlur, 0)) > 0)
		{
			filter: blur(@xf-overlayMaskBlur);
		}
	}
}

// RESPONSIVE HEADER

.p-offCanvasAccountLink
{
	display: none;
}

@media (max-width: 359px)
{
	.p-offCanvasAccountLink
	{
		display: block;
	}
}

@media (max-width: 359px)
{
	.p-offCanvasRegisterLink
	{
		display: block;
	}
}

{{ include('app_staffbar.less') }}
{{ include('app_header.less') }}
{{ include('app_stickynav.less') }}
{{ include('app_nav.less') }}
{{ include('app_sectionlinks.less') }}
{{ include('app_body.less') }}
{{ include('app_breadcrumbs.less') }}
{{ include('app_title.less') }}
{{ include('app_footer.less') }}
{{ include('app_inlinemod.less') }}
{{ include('app_ignored.less') }}
{{ include('app_username_styles.less') }}
{{ include('app_user_banners.less') }}]]></template>
  <template type="public" title="app_body.less" version_id="2010037" version_string="2.1.0 Beta 7"><![CDATA[// ######################################### MAIN BODY #################################

.p-body
{
	display: flex;
	align-items: stretch;
	flex-grow: 1;
	min-height: 1px; // IE11 workaround - related to #139187
}

.p-body-inner
{
	display: flex;
	flex-direction: column;
	width: 100%;

	.m-pageWidth();
	.m-pageInset();
	.m-clearFix();

	padding-top: ((@xf-elementSpacer) / 2);
	padding-bottom: @xf-elementSpacer;
}

.p-body-header
{
	margin-bottom: ((@xf-elementSpacer) / 2);
}

.p-body-main
{
	display: table;
	table-layout: fixed;
	width: 100%;
	margin-bottom: auto;
	min-height: 1px; // IE11 workaround - related to #139187
}

.p-body-content
{
	display: table-cell;
	vertical-align: top;

	.p-body-main--withSideNav &
	{
		padding-left: @xf-sidebarSpacer;
	}

	.p-body-main--withSidebar &
	{
		padding-right: @xf-sidebarSpacer;
	}

	.p-body-main--withSidebar &,
	.p-body-main--withSideNav &
	{
		// don't let the ad overflow the sidebar area -- this can happen due to how the Adsense JS works
		ins.adsbygoogle
		{
			// -10px gives a little buffer or helps account for no scrollbar being considered
			max-width: ~"calc(100vw - 10px - @{xf-pageEdgeSpacer} - @{xf-pageEdgeSpacer} - @{xf-sidebarWidth} - @{xf-sidebarSpacer})";

			@media (min-width: @xf-pageWidthMax)
			{
				// window wider than the max width, so limit to the display area without the sidebar
				max-width: ~"calc(@{xf-pageWidthMax} - @{xf-pageEdgeSpacer} - @{xf-pageEdgeSpacer} - @{xf-sidebarWidth} - @{xf-sidebarSpacer})";
			}

			@media (max-width: @xf-responsiveWide)
			{
				// sidebar/sidenav have been moved/hidden
				max-width: 100vw;
			}
		}
	}
}

.p-body-pageContent
{
	> .tabs--standalone:first-child
	{
		margin-bottom: (@xf-elementSpacer) / 2;
	}
}

.p-body-sideNav
{
	display: table-cell;
	vertical-align: top;
	width: @xf-sidebarWidth;
}

.p-body-sideNavTrigger
{
	display: none;
}

.p-body-sidebar
{
	display: table-cell;
	vertical-align: top;
	width: @xf-sidebarWidth;

	.contentRow-figure .avatar--m
	{
		// make these avatars a bit smaller in the sidebar so the content has more space
		.m-avatarSize(@avatar-m * 2 / 3);
	}
}

.p-body-content,
.p-body-pageContent,
.p-body-sideNav,
.p-body-sideNavContent,
.p-body-sidebar
{
	> :first-child
	{
		margin-top: 0;
	}

	> :last-child
	{
		margin-bottom: 0;
	}
}

@media (max-width: @xf-responsiveWide)
{
	.p-body-main,
	.p-body-content
	{
		display: block;
	}

	.p-body-sideNav
	{
		display: block;
		width: auto;
	}

	.p-body-sideNavTrigger
	{
		margin-bottom: ((@xf-elementSpacer) / 2);
		text-align: center;

		.button:before
		{
			.m-faBase();
			font-size: 120%;
			vertical-align: middle;
			display: inline-block;
			margin: -4px 6px -4px 0;
			.m-faContent(@fa-var-bars, .88em);
		}

		.has-js &
		{
			display: block;
		}
	}

	.has-js .p-body-sideNavInner:not(.offCanvasMenu)
	{
		display: none;

		.m-transitionFadeDown();
	}

	.has-no-js .p-body-sideNavInner
	{
		margin-bottom: @xf-elementSpacer;
	}

	.p-body-sidebar
	{
		display: flex;
		flex-wrap: wrap;
		align-items: stretch;
		margin: (@xf-elementSpacer) -((@xf-pageEdgeSpacer) / 2) -(@xf-elementSpacer);
		width: auto;

		> *
		{
			margin: 0 ((@xf-pageEdgeSpacer) / 2) @xf-elementSpacer;
			min-width: @xf-sidebarWidth;
			flex: 1 1 @xf-sidebarWidth;

			&:last-child
			{
				margin-bottom: @xf-elementSpacer;
			}
		}

		// add an invisible block to ensure that the last row has the correct widths
		&:after
		{
			display: block;
			content: '';
			height: 0;
			margin: 0 ((@xf-pageEdgeSpacer) / 2);
			min-width: @xf-sidebarWidth;
			flex: 1 1 @xf-sidebarWidth;
		}

		.block-container
		{
			display: flex;
			flex-direction: column;
			height: 100%;

			.block-footer
			{
				margin-top: auto;
			}
		}
	}

	.p-body-main--withSideNav,
	.p-body-main--withSidebar
	{
		.p-body-content { padding: 0; }
	}
}

@media (max-width: @xf-responsiveEdgeSpacerRemoval)
{
	.p-body-sideNavContent
	{
		// this is likely to contain blocks that overflow the container so account for that
		margin: 0 -@xf-pageEdgeSpacer;
		padding: 0 @xf-pageEdgeSpacer;

		.offCanvasMenu &
		{
			margin: 0;
			padding: 0;
		}
	}

	.p-body-sidebar
	{
		display: block;
		margin-left: 0;
		margin-right: 0;

		> *
		{
			margin-left: 0;
			margin-right: 0;
			min-width: 0;
		}
	}
}]]></template>
  <template type="public" title="app_breadcrumbs.less" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[.p-breadcrumbs
{
	.m-listPlain();
	.m-clearFix();

	margin-bottom: 5px;
	line-height: 1.5;

	&.p-breadcrumbs--bottom
	{
		margin-top: @xf-elementSpacer;
		margin-bottom: 0;
	}

	> li
	{
		float: left;
		margin-right: .5em;
		font-size: @xf-fontSizeSmall;

		a
		{
			display: inline-block;
			vertical-align: bottom;
			max-width: 300px;
			.m-overflowEllipsis();
		}

		&:after,
		&:before
		{
			.m-faBase();
			font-size: 90%;
			color: @xf-textColorMuted;
		}

		&:after
		{
			.m-faContent(@fa-var-angle-right, false ltr);
			.m-faContent(@fa-var-angle-left, false, rtl);
			margin-left: .5em;
		}

		&:last-child
		{
			margin-right: 0;

			a
			{
				font-weight: @xf-fontWeightHeavy;
			}
		}
	}
}

@media (max-width: @xf-responsiveMedium)
{
	.p-breadcrumbs > li a
	{
		max-width: 200px;
	}
}

@media (max-width: @xf-responsiveNarrow)
{
	.p-breadcrumbs
	{
		> li
		{
			display: none;
			font-size: @xf-fontSizeSmallest;

			&:last-child
			{
				display: block;
			}

			a
			{
				max-width: 90vw;
			}

			&:after
			{
				display: none;
			}

			&:before
			{
				.m-faContent(@fa-var-chevron-left, false, ltr);
				.m-faContent(@fa-var-chevron-right, false, rtl);
				margin-right: .5em;
			}
		}
	}
}]]></template>
  <template type="public" title="app_footer.less" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[.p-footer
{
	.xf-publicFooter();

	a
	{
		.xf-publicFooterLink();
	}
}

.p-footer-inner
{
	.m-pageWidth();
	.m-pageInset();

	padding-top: @xf-paddingMedium;
	padding-bottom: @xf-paddingLarge;
}

.p-footer-row
{
	.m-clearFix();

	margin-bottom: -@xf-paddingLarge;
}

.p-footer-row-main
{
	float: left;
	margin-bottom: @xf-paddingLarge;
}

.p-footer-row-opposite
{
	float: right;
	margin-bottom: @xf-paddingLarge;
}

.p-footer-linkList
{
	.m-listPlain();
	.m-clearFix();

	> li
	{
		float: left;
		margin-right: .5em;

		&:last-child
		{
			margin-right: 0;
		}

		a
		{
			padding: 2px 4px;
			border-radius: @xf-borderRadiusSmall;

			&:hover
			{
				text-decoration: none;
				background-color: fade(@xf-publicFooterLink--color, 10%);
			}
		}
	}
}

.p-footer-rssLink
{
	> span
	{
		position: relative;
		top: -1px;

		display: inline-block;
		width: 1.44em;
		height: 1.44em;
		line-height: 1.44em;
		text-align: center;
		font-size: .8em;
		background-color: #FFA500;
		border-radius: 2px;
	}

	.fa-rss
	{
		color: white;
	}
}

.p-footer-copyright
{
	margin-top: @xf-elementSpacer;
	text-align: center;
	font-size: @xf-fontSizeSmallest;
}

.p-footer-debug
{
	margin-top: @xf-paddingLarge;
	text-align: right;
	font-size: @xf-fontSizeSmallest;

	.pairs > dt { color: inherit; }
}

@media (max-width: @xf-responsiveMedium)
{
	.p-footer-row-main,
	.p-footer-row-opposite
	{
		float: none;
	}

	.p-footer-copyright
	{
		text-align: left;
		padding: 0 4px; // aligns with other links
	}
}]]></template>
  <template type="public" title="app_header.less" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[// MAIN HEADER ROW

.p-header
{
	.xf-publicHeader();

	a
	{
		color: inherit;
	}
}

.p-header-inner
{
	.m-pageWidth();
	.m-pageInset();
}

.p-header-content
{
	padding: @xf-paddingMedium 0;

	display: flex;
	flex-wrap: wrap;
	justify-content: space-between;
	align-items: center;
	max-width: 100%;
}

.p-header-logo
{
	vertical-align: middle;
	margin-right: auto;

	a
	{
		color: inherit;
		text-decoration: none;
	}

	&.p-header-logo--text
	{
		font-size: @xf-fontSizeLargest;
	}

	&.p-header-logo--image
	{
		img
		{
			vertical-align: bottom;
			max-width: 100%;
			max-height: 200px;
		}
	}
}

@media (max-width: @xf-publicNavCollapseWidth)
{
	.has-js .p-header
	{
		display: none;
	}
}

@media (max-width: @xf-responsiveNarrow)
{
	.p-header-logo
	{
		max-width: 100px;

		&.p-header-logo--text
		{
			font-size: @xf-fontSizeLarge;
			font-weight: @xf-fontWeightNormal;
			.m-overflowEllipsis();
		}
	}
}]]></template>
  <template type="public" title="app_ignored.less" version_id="2000033" version_string="2.0.0 Beta 3"><![CDATA[// ################## IGNORED USERS / CONTENT ##########################

.is-ignored
{
	display: none !important;
}

.showIgnoredLink
{
	&.is-hidden
	{
		display: none !important;
	}
}

.block-outer .showIgnoredLink,
.showIgnoredLink.showIgnoredLink--subtle
{
	font-size: @xf-fontSizeSmall;
	color: @xf-textColorMuted;

	&:hover
	{
		color: @xf-textColorDimmed;
	}
}]]></template>
  <template type="public" title="app_inlinemod.less" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[// #################################### INLINE MOD BUTTON ################

.inlineModButton
{
	display: inline-block;
	position: relative;

	i:before
	{
		display: inline-block;
		.m-faBase();
		.m-faContent(@fa-var-check-square, .88em);
		vertical-align: -1px;
		font-size: 1.2em;
		margin: -.2em 0;
		line-height: 1;
	}

	&.inlineModButton--noIcon i
	{
		display: none;
	}

	&.is-mod-active
	{
		color: @xf-textColorAttention;

		.inlineModButton-count
		{
			display: inline;
		}
	}

	&:not(.inlineModButton--withLabel)
	{
		.inlineModButton-label
		{
			.m-visuallyHidden();
		}
	}
}

.inlineModButton-count
{
	display: none;
	position: absolute;
	top: -3px;
	left: -6px;
	.xf-contentAccentBase();
	border: @xf-borderSize solid @xf-borderColorAccentContent;
	border-radius: @xf-borderRadiusSmall;
	padding: 1px 2px;
	font-size: 9px;
	line-height: 1;

	.inlineModButton--noIcon &
	{
		position: static;
		font-size: 80%;
		padding-top: 0;
		padding-bottom: 0;
	}
}

// #################################### INLINE MOD BAR ################

.inlineModBar
{
	.xf-inlineModBar();
	.m-transitionFadeDown();
	.m-clearFix();

	.input,
	.button
	{
		padding-top: @xf-paddingSmall;
		padding-bottom: @xf-paddingSmall;
	}

	&.is-active:first-of-type
	{
		.m-dropShadow(0, 0, 8px, 3px, 0.3);
	}
}

.inlineModBar-inner
{
	.m-pageWidth();
	.m-pageInset();

	display: flex;
	align-items: center;
}

.inlineModBar-controls
{
	.m-listPlain();
	margin-right: auto;

	display: flex;
	align-items: center;
	flex-wrap: wrap;
	min-height: 35px;
	max-width: 100%;

	> li
	{
		float: left;
		display: inline-block;
		margin-right: 1em;

		&:last-child
		{
			margin-right: 0;
		}
	}
}

.inlineModBar-close
{
	float: right;
	margin-left: 1em;
	order: 2;
}

.inlineModBar-title
{
	font-weight: @xf-fontWeightHeavy;
}

.button.inlineModBar-goButton
{
	font-size: @xf-fontSizeNormal;
	line-height: 1.5; // matches select
	min-width: 0;
}

.inlineModBarCover
{
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	z-index: -1;
	cursor: pointer;
}]]></template>
  <template type="public" title="app_nav.less" version_id="2010131" version_string="2.1.1 Beta 1"><![CDATA[// navEl / Navigation Elements for header navigation

.m-navElHPadding(@padding)
{
	.p-navEl-link
	{
		padding: 0 @padding;

		&.p-navEl-link--splitMenu
		{
			padding-right: ((@padding) / 4);
		}

		&.p-navEl-link--menuTrigger
		{
			padding-right: ((@padding) / 3); // equal to splitTrigger padding-right

			&:after
			{
				padding-left: ((@padding) / 4 + (@padding) / 3); // equal to splitMenu padding-right + splitTrigger padding-left
			}
		}
	}

	.p-navEl-splitTrigger
	{
		padding: 0 ((@padding) / 3);
	}
}

.p-navEl
{
	.m-clearFix();
}

.p-navEl-linkHolder
{
	float: left;
}

.p-navEl-link
{
	float: left;
	.m-transition(opacity, background; @_nav-elTransitionSpeed);

	&.p-navEl-link--menuTrigger
	{
		cursor: pointer;

		&:after
		{
			.m-menuGadget(); // .58em
			opacity: .5;
			.m-transition(opacity; @_nav-elTransitionSpeed);
		}

		&:hover:after
		{
			opacity: 1;
		}
	}
}

.p-navEl-splitTrigger
{
	float: left;
	opacity: .5;
	cursor: pointer;
	text-decoration: none;
	.m-transition(all; @_nav-elTransitionSpeed);

	&:after
	{
		.m-menuGadget(); // .58em
		line-height: 1;
	}

	&:hover
	{
		opacity: 1;
		text-decoration: none;
	}
}

// HEADER NAV ROW

.p-nav
{
	.xf-publicNav();

	a
	{
		color: inherit;
	}

	.p-navSticky.is-sticky &
	{
		.p-nav-list .p-navEl.is-selected,
		.p-account
		{
			border-radius: 0;
		}
	}
}

.p-nav-inner
{
	.m-pageWidth();
	.m-pageInset(0px);
	.m-clearFix();
	display: flex;
	align-items: flex-end;
}



.p-nav .p-nav-menuTrigger
{
	display: none;
	vertical-align: middle;
	align-self: center;
	margin-left: max(0px, @xf-pageEdgeSpacer - 6px);
	margin-right: 5px;
	padding: @xf-publicNavPaddingV 8px;

	&:hover
	{
		text-decoration: none;
	}

	i:after
	{
		.m-faBase();
		font-size: @xf-fontSizeLargest;
		.m-faContent(@fa-var-bars, .88em);
		vertical-align: bottom;
	}

	.p-nav-menuText
	{
		display: none;
	}
}

.p-nav-smallLogo
{
	display: none;
	max-width: 100px;
	align-self: center;

	img
	{
		display: block;
		max-height: @header-navHeight;
	}
}

.p-nav-scroller
{
	margin-right: auto;
	max-width: 100%;

	.hScroller-scroll:not(.is-calculated)
	{
		// IE11 seems to want to flash a vertical scrollbar without this here
		overflow: hidden;
	}

	.hScroller-action
	{
		.m-hScrollerActionColorVariation(
			xf-default(@xf-publicNav--background-color, transparent),
			xf-default(@xf-publicNav--color, ~""),
			xf-intensify(@xf-publicNav--color, 10%)
		);
	}
}

.p-nav-list
{
	.m-listPlain();
	.m-clearFix();

	font-size: 0;

	// this applies padding that will be contained within the scroller.
	// it needs font-size 0 to not create extra space though
	&:before,
	&:after
	{
		display: inline-block;
		width: @xf-pageEdgeSpacer;
		content: '';
	}

	> li
	{
		display: inline-block;
		vertical-align: bottom;
		font-size: @xf-fontSizeNormal;

		&:first-child
		{
			margin-left: 0;
		}
	}

	.m-navElHPadding(@xf-publicNavPaddingH);

	.p-navEl
	{
		.xf-publicNavTab();
		.m-transition(all; @_nav-elTransitionSpeed);

		&.is-selected
		{
			.xf-publicNavSelected();

			.p-navEl-link
			{
				padding-right: @xf-publicNavPaddingH; // since the split trigger is hidden

				&:hover
				{
					background: none;
					text-decoration: none;
				}
			}

			.p-navEl-splitTrigger
			{
				display: none;
			}
		}

		&:not(.is-selected):not(.is-menuOpen)
		{
			&:hover,
			.p-navEl-link:hover,
			.p-navEl-splitTrigger:hover
			{
				.xf-publicNavTabHover();
			}
		}

		&.is-menuOpen
		{
			.xf-publicNavTabMenuOpen();

			border-top-left-radius: xf-default(@xf-publicNavSelected--border-top-left-radius, 0);
			border-top-right-radius: xf-default(@xf-publicNavSelected--border-top-right-radius, 0);

			.m-dropShadow(0, 5px, 10px, 0, .35);

			a
			{
				text-decoration: none;
				opacity: 1;
			}
		}
	}

	.p-navEl-link,
	.p-navEl-splitTrigger
	{
		padding-top: @xf-publicNavPaddingV;
		padding-bottom: @xf-publicNavPaddingV;
	}
}

.p-navSticky--primary.is-sticky
{
	.p-nav-list
	{
		.p-navEl-link.p-navEl-link--splitMenu
		{
			padding-right: ((@xf-publicNavPaddingH) / 4);
		}

		.p-navEl.is-selected .p-navEl-splitTrigger
		{
			display: inline;
			position: relative;

			&:before
			{
				content: '';
				position: absolute;
				left: 0;
				top: 5px;
				bottom: 5px;
				width: 0;
				border-left: @xf-borderSize solid fade(xf-default(@xf-publicNavSelected--color, transparent), 35%);
			}
		}
	}
}

@media (max-width: @xf-publicNavCollapseWidth)
{
	.has-js
	{
		.p-nav-inner
		{
			min-height: 45px;
		}

		.p-nav .p-nav-menuTrigger
		{
			display: inline-block;
		}

		.p-nav-smallLogo
		{
			display: inline-block;
		}

		.p-nav-scroller
		{
			display: none;
		}
	}
}

// ACCOUNT/VISITOR/SEARCH SECTION

.p-nav-opposite
{
	margin-left: auto;
	margin-right: @xf-pageEdgeSpacer;
	text-align: right;
	flex-shrink: 0;
}

.p-navgroup
{
	float: left;
	.m-clearFix();
	background: @xf-publicHeaderAdjustColor;
	border-top-left-radius: @xf-borderRadiusMedium;
	border-top-right-radius: @xf-borderRadiusMedium;

	&.p-discovery
	{
		margin-left: .5em;

		&.p-discovery--noSearch
		{
			margin-left: 0;
		}
	}
}

.p-navgroup-link
{
	float: left;
	padding: @xf-publicNavPaddingV @_navAccount-hPadding;
	border-left: 1px solid @xf-publicHeaderAdjustColor;

	&:first-of-type
	{
		border-top-left-radius: @xf-borderRadiusMedium;
		border-left: none;
	}

	&:last-of-type
	{
		border-top-right-radius: @xf-borderRadiusMedium;
	}

	&:hover
	{
		text-decoration: none;
		background: xf-intensify(@xf-publicHeaderAdjustColor, 5%);
	}

	&.p-navgroup-link--user
	{
		.m-overflowEllipsis();
		max-width: 150px;

		.avatar
		{
			.m-avatarSize((@xf-fontSizeNormal) * (@xf-lineHeightDefault));
		}
	}

	&.badgeContainer
	{
		opacity: .6;
		position: relative;

		&:after
		{
			position: absolute;
			left: (@_navAccount-hPadding - 6px);
			top: (@xf-publicNavPaddingV - 2px);
			padding: 1px 3px;
			margin: 0;
			font-size: 10px;
			line-height: 11px;
		}

		&:hover,
		&.badgeContainer--highlighted
		{
			opacity: 1;
		}
	}

	&.is-menuOpen
	{
		.xf-publicNavTabMenuOpen();
		.m-dropShadow(0, 5px, 10px, 0, .35);
		opacity: 1;
	}

	&.p-navgroup-link--iconic
	{
		i:after
		{
			.m-faBase();
			display: inline-block;
			min-width: 1.2em;
			text-align: center;
		}
	}

	&.p-navgroup-link--conversations i:after
	{
		.m-faContent(@fa-var-envelope, 1em);
	}

	&.p-navgroup-link--alerts i:after
	{
		.m-faContent(@fa-var-bell, .88em);
	}

	&.p-navgroup-link--bookmarks i:after
	{
		.m-faContent(@fa-var-bookmark, .75em);
	}

	&.p-navgroup-link--whatsnew i:after
	{
		.m-faContent(@fa-var-bolt, .63em);
	}

	&.p-navgroup-link--search i:after
	{
		.m-faContent(@fa-var-search, 1em);
	}
}

.p-navgroup-link--whatsnew
{
	display: none;

	.p-navgroup-link:first-of-type& + .p-navgroup-link
	{
		border-top-left-radius: @xf-borderRadiusMedium;
		border-left: none;
	}
}

@media (max-width: @xf-responsiveWide)
{
	.p-navgroup-link
	{
		&.p-navgroup-link--iconic .p-navgroup-linkText,
		&.p-navgroup-link--textual i
		{
			display: none;
		}

		&.p-navgroup-link--textual
		{
			.m-overflowEllipsis();
			max-width: 110px;
		}

		&.p-navgroup-link--iconic i:after
		{
			text-align: center;
		}
	}
}

@media (max-width: @xf-publicNavCollapseWidth)
{
	.p-navgroup-link--whatsnew
	{
		display: block;
	}

	.has-js
	{
		.p-nav-opposite
		{
			align-self: center;
			margin-right: max(0px, @xf-pageEdgeSpacer - 6px);

			.p-navgroup
			{
				background: none;
				margin-left: 0;
			}

			.p-navgroup-link
			{
				border: none;
				border-radius: @xf-borderRadiusMedium;

				&.is-menuOpen
				{
					.m-borderBottomRadius(0);
				}

				&.badgeContainer
				{
					opacity: 1;
				}
			}
		}
	}
}

@media (max-width: 359px)
{
	.p-navgroup-link&.p-navgroup-link--user
	{
		display: none;
	}
}

@media (max-width: 374px)
{
	.p-navgroup-link.p-navgroup-link--register
	{
		display: none;
	}
}]]></template>
  <template type="public" title="app_sectionlinks.less" version_id="2010131" version_string="2.1.1 Beta 1"><![CDATA[// SUB SECTION LINKS

.p-sectionLinks
{
	.xf-publicSubNav();

	.hScroller-action
	{
		.m-hScrollerActionColorVariation(
			xf-default(@xf-publicSubNav--background-color, transparent),
			xf-default(@xf-publicSubNav--color, ~""),
			xf-default(@xf-publicSubNavElHover--color, ~"")
		);
	}

	&.p-sectionLinks--empty
	{
		height: 10px;
	}
}

.p-sectionLinks-inner
{
	.m-clearFix();
	.m-pageWidth();

	@defaultPadding:  max(0px, @xf-pageEdgeSpacer - @xf-publicSubNavPaddingH);
	.m-pageInset(@defaultPadding);
}

.p-sectionLinks-list
{
	.m-listPlain();

	font-size: 0;

	a
	{
		color: inherit;
	}

	> li
	{
		display: inline-block;
	}

	.m-navElHPadding(@xf-publicSubNavPaddingH);

	.p-navEl
	{
		font-size: @xf-publicSubNav--font-size;

		&:hover
		{
			.xf-publicSubNavElHover();

			a
			{
				text-decoration: @xf-publicSubNavElHover--text-decoration;
			}
		}

		&.is-menuOpen
		{
			.xf-publicSubNavElMenuOpen();
			.m-borderBottomRadius(0);
			.m-dropShadow(0, 5px, 10px, 0, .35);
		}
	}

	.p-navEl-link,
	.p-navEl-splitTrigger
	{
		padding-top: @xf-publicSubNavPaddingV;
		padding-bottom: @xf-publicSubNavPaddingV;
	}
}

@media (max-width: @xf-publicNavCollapseWidth)
{
	.has-js .p-sectionLinks
	{
		display: none;
	}
}]]></template>
  <template type="public" title="app_staffbar.less" version_id="2010131" version_string="2.1.1 Beta 1"><![CDATA[// ######################################### STAFF BAR #################################

.p-staffBar
{
	.xf-publicStaffBar();

	a { color: inherit;	}

	.hScroller-action
	{
		.m-hScrollerActionColorVariation(
			xf-default(@xf-publicStaffBar--background-color, transparent),
			xf-default(@xf-publicStaffBar--color, ~""),
			xf-intensify(@xf-publicStaffBar--color, 10%)
		);
	}
}

.p-staffBar-inner
{
	.m-pageWidth();
	.m-pageInset();
	.m-clearFix();

	padding-top: 4px;
	padding-bottom: 4px;
}

.p-staffBar-link
{
	display: inline-block;
	vertical-align: top;
	color: inherit;
	padding: 4px @xf-paddingMedium;
	margin-right: .35em;

	&:last-child
	{
		margin-right: 0;
	}

	&:hover
	{
		text-decoration: none;
		background: xf-diminish(@xf-publicStaffBar--background-color, 6%);
		border-radius: @xf-borderRadiusSmall;
	}
}]]></template>
  <template type="public" title="app_stickynav.less" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[// STICKY NAV SETUP

.p-navSticky
{
	z-index: @zIndex-1;

	&.is-sticky
	{
		z-index: @zIndex-4;
		.m-dropShadow(0, 0, 8px, 3px, 0.3);
	}

	@supports (position: sticky) or (position: -webkit-sticky)
	{
		&
		{
			position: -webkit-sticky;
			position: sticky;
			top: 0;

			&.is-sticky-broken,
			&.is-sticky-disabled
			{
				position: static;
				top: auto;
			}
		}
	}
}]]></template>
  <template type="public" title="app_title.less" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[.p-title
{
	display: flex;
	flex-wrap: wrap;
	align-items: center;
	max-width: 100%;
	margin-bottom: -5px;

	&.p-title--noH1
	{
		flex-direction: row-reverse;
	}
}

.p-title-value
{
	padding: 0;
	margin: 0 0 5px 0;
	font-size: @xf-fontSizeLargest;
	font-weight: @xf-fontWeightNormal;
	min-width: 0;
	margin-right: auto;
}

.p-title-pageAction
{
	margin-bottom: 5px;
}

.p-description
{
	margin: 5px 0 0;
	padding: 0;
	font-size: @xf-fontSizeSmall;
	color: @xf-textColorMuted;
}

@media (max-width: @xf-responsiveNarrow)
{
	.p-title-value
	{
		font-size: @xf-fontSizeLarger;
	}
}]]></template>
  <template type="public" title="app_user_banners.less" version_id="2000034" version_string="2.0.0 Beta 4"><![CDATA[.m-userBannerVariation(@color; @bg; @border: false)
{
	color: @color;
	background: @bg;
	border-color: xf-intensify(@bg, 10%);

	& when (iscolor(@border))
	{
		border-color: @border;
	}
}

.userBanner
{
	font-size: 75%;
	font-weight: @xf-fontWeightNormal;
	font-style: normal;
	padding: 1px @xf-paddingMedium;
	border: 1px solid transparent;
	border-radius: @xf-borderRadiusSmall;
	text-align: center;
	display: inline-block;

	strong
	{
		font-weight: inherit;
	}

	// variations
	&.userBanner--hidden
	{
		background: none;
		border: none;
		box-shadow: none;
	}

	&.userBanner--staff,
	&.userBanner--primary
	{
		.m-userBannerVariation(@xf-linkColor, @xf-contentHighlightBg, @xf-borderColorHighlight);
	}

	&.userBanner--accent
	{
		.m-userBannerVariation(@xf-textColorAccentContent, @xf-contentAccentBg, @xf-borderColorAccentContent);
	}

	&.userBanner--red { .m-userBannerVariation(white, #d80000); }
	&.userBanner--green { .m-userBannerVariation(white, green); }
	&.userBanner--olive { .m-userBannerVariation(white, olive); }
	&.userBanner--lightGreen { .m-userBannerVariation(black, #ccf9c8, #bee8ba); }
	&.userBanner--blue { .m-userBannerVariation(white, #0008e3); }
	&.userBanner--royalBlue { .m-userBannerVariation(white, royalblue); }
	&.userBanner--skyBlue { .m-userBannerVariation(white, #7cc3e0); }
	&.userBanner--gray { .m-userBannerVariation(white, gray); }
	&.userBanner--silver { .m-userBannerVariation(black, silver); }
	&.userBanner--yellow { .m-userBannerVariation(black, #ffff91, #e6e687); }
	&.userBanner--orange { .m-userBannerVariation(black, #ffcb00); }
}]]></template>
  <template type="public" title="app_username_styles.less" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[<xf:foreach loop="$displayStyles" key="$id" value="$style" if="$style.username_css">
	.username--style{$id}
	{
		{$style.username_css|raw}
	}
</xf:foreach>

.m-usernameIcon()
{
	.m-faBase();
	margin-left: .33em;
	font-size: smaller;
}

.username--invisible
{
	color: @xf-textColorMuted;

	/*&:after {
		.m-usernameIcon();
		.m-faContent(@fa-var-eye-slash);
	}*/
}

.username--banned
{
	text-decoration: line-through;

	/*&:after {
		.m-usernameIcon();
		.m-faContent(@fa-var-ban);
	}*/
}

/*
.username--staff:after
{
	.m-usernameIcon();
	.m-faContent(@fa-var-address-card-o);
}

.username--moderator:after
{
	.m-usernameIcon();
	.m-faContent(@fa-var-shield);
}

.username--admin:after
{
	.m-usernameIcon();
	.m-faContent(@fa-var-id-badge);
}*/
]]></template>
  <template type="public" title="approval_item_post" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:macro template="approval_queue_macros" name="item_message_type"
	arg-content="{$content}"
	arg-user="{$content.User}"
	arg-messageHtml="{{ bb_code($content.message, 'post', $content) }}"
	arg-typePhraseHtml="{{ phrase('post_noun') }}"
	arg-spamDetails="{$spamDetails}"
	arg-unapprovedItem="{$unapprovedItem}"
	arg-handler="{$handler}"
	arg-headerPhraseHtml="{{ phrase('posted_in_thread_x_in_forum_y', {
		'postLink': link('posts', $content),
		'threadTitle': $content.Thread.title,
		'forumLink': link('forums', $content.Thread.Forum),
		'forumTitle': $content.Thread.Forum.title
	}) }}" />
]]></template>
  <template type="public" title="approval_item_profile_post" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:macro template="approval_queue_macros" name="item_message_type"
	arg-content="{$content}"
	arg-user="{$content.User}"
	arg-messageHtml="{{ bb_code($content.message, 'profile_post', $content) }}"
	arg-typePhraseHtml="{{ phrase('profile_post') }}"
	arg-spamDetails="{$spamDetails}"
	arg-unapprovedItem="{$unapprovedItem}"
	arg-handler="{$handler}"
	arg-headerPhraseHtml="{{ phrase('posted_on_profile_x', {
		'profilePostLink': link('profile-posts', $content),
		'user': $content.ProfileUser.username
	}) }}"/>]]></template>
  <template type="public" title="approval_item_profile_post_comment" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:macro template="approval_queue_macros" name="item_message_type"
	arg-content="{$content}"
	arg-contentDate="{$content.comment_date}"
	arg-user="{$content.User}"
	arg-messageHtml="{{ bb_code($content.message, 'profile_post_comment', $content) }}"
	arg-typePhraseHtml="{{ phrase('profile_post_comment') }}"
	arg-spamDetails="{$spamDetails}"
	arg-unapprovedItem="{$unapprovedItem}"
	arg-handler="{$handler}"
	arg-headerPhraseHtml="{{ phrase('posted_on_profile_post_by_x', {
		'commentLink': link('profile-posts/comments', $content),
		'user': $content.ProfilePost.username})
	}}"/>]]></template>
  <template type="public" title="approval_item_thread" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:comment>
<xf:formrow label="{{ phrase('thread') }}">
	{{ phrase('thread_x_posted_in_forum_y', {
		'threadLink': link('threads', $content),
		'threadTitle': $content.title,
		'forumLink': link('forums', $content.Forum),
		'forumTitle': $content.Forum.title
	}) }}
</xf:formrow>

<xf:formrow label="{{ phrase('posted_by') }}">
	<xf:username user="$content.User" defaultname="{$content.username}" rich="true" />
	<xf:date time="$content.post_date" />
</xf:formrow>

<xf:macro template="approval_queue_macros" name="spam_log" arg-spamDetails="{$spamDetails}" />

<xf:formrow label="{{ phrase('first_post_content') }}">
	{{ bb_code($content.FirstPost.message, 'post', $content.FirstPost) }}
</xf:formrow>

<xf:macro template="approval_queue_macros" name="action_row"
	arg-unapprovedItem="{$unapprovedItem}"
	arg-handler="{$handler}" />
</xf:comment>

<xf:set var="$messageHtml">
	<h4 class="message-title"><a href="{{ link('threads', $content) }}">{$content.title}</a></h4>
	{{ bb_code($content.FirstPost.message, 'post', $content.FirstPost) }}
</xf:set>

<xf:macro template="approval_queue_macros" name="item_message_type"
	arg-content="{$content}"
	arg-user="{$content.User}"
	arg-messageHtml="{$messageHtml}"
	arg-typePhraseHtml="{{ phrase('thread') }}"
	arg-spamDetails="{$spamDetails}"
	arg-unapprovedItem="{$unapprovedItem}"
	arg-handler="{$handler}"
	arg-headerPhraseHtml="{{ phrase('thread_x_posted_in_forum_y', {
		'threadLink': link('threads', $content),
		'threadTitle': $content.title,
		'forumLink': link('forums', $content.Forum),
		'forumTitle': $content.Forum.title
	}) }}"/>]]></template>
  <template type="public" title="approval_item_user" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[<xf:set var="$userIp" value="{{ $user.getIp('register') }}" />
<xf:set var="$headerPhraseHtml"><xf:trim>
	<xf:if is="$xf.visitor.canViewIps() AND $userIp">
		<a href="{{ link('misc/ip-info', null, {'ip': $userIp|ip}) }}" target="_blank">{$userIp|ip}</a>
	</xf:if>
	<xf:if is="$xf.visitor.canBypassUserPrivacy() AND $user.email">
		{$user.email}
	</xf:if>
</xf:trim></xf:set>

<xf:set var="$messageHtml"><xf:trim>

	<xf:macro template="custom_fields_macros" name="custom_fields_view"
		arg-type="users" arg-group="{{ null }}"
		arg-set="{$user.Profile.custom_fields}"
		arg-additionalFilters="{{ ['registration'] }}" />

	<xf:if is="$changesGrouped">
		<br />
		<xf:datalist data-xf-init="responsive-data-list" class="dataList--separated">
			<thead>
			<xf:datarow rowtype="subSection">
				<xf:cell colspan="3">{{ phrase('change_log') }}</xf:cell>
			</xf:datarow>
			<xf:datarow rowtype="header">
				<xf:cell>{{ phrase('field_name') }}</xf:cell>
				<xf:cell>{{ phrase('old_value') }}</xf:cell>
				<xf:cell>{{ phrase('new_value') }}</xf:cell>
			</xf:datarow>
			</thead>
			<xf:foreach loop="$changesGrouped" value="$group">
				<tbody class="dataList-rowGroup">
				<xf:foreach loop="$group.changes" value="$change">
					<xf:datarow>
						<xf:cell>{$change.label}</xf:cell>
						<xf:cell>{$change.old}</xf:cell>
						<xf:cell>{$change.new}</xf:cell>
					</xf:datarow>
				</xf:foreach>
				</tbody>
			</xf:foreach>
		</xf:datalist>
	</xf:if>

</xf:trim></xf:set>

<xf:set var="$actionsHtml">

	<xf:radio name="queue[{$unapprovedItem.content_type}][{$unapprovedItem.content_id}]">

		<xf:option value="" checked="checked" label="{{ phrase('do_nothing') }}" data-xf-click="approval-control" />
		<xf:option value="approve" label="{{ phrase('approve') }}" data-xf-click="approval-control" />
		<xf:if is="$unapprovedItem.Content.isPossibleSpammer()">
			<xf:option value="spam_clean" label="{{ phrase('spam_clean') }}" data-xf-click="approval-control" />
		</xf:if>
		<xf:option value="reject" label="{{ phrase('reject_with_reason:') }}"
			title="{{ phrase('rejected_users_will_not_be_deleted_user_state_will_be_set_to_rejected') }}"
			data-xf-init="tooltip"
			data-xf-click="approval-control">
			<xf:textbox name="reason[{$unapprovedItem.content_type}][{$unapprovedItem.content_id}]"
				maxlength="{{ max_length('XF:UserReject', 'reject_reason') }}"
				placeholder="{{ phrase('optional') }}" />
			<xf:html>
				<div class="formRow-explain"></div>
			</xf:html>
		</xf:option>
	</xf:radio>

	<xf:checkbox>
		<xf:option name="notify[{$unapprovedItem.content_type}][{$unapprovedItem.content_id}]" value="1" checked="{{ !$spamDetails }}">
			{{ phrase('notify_user_if_action_was_taken') }}
		</xf:option>
	</xf:checkbox>

</xf:set>

<xf:macro template="approval_queue_macros" name="item_message_type"
	arg-content="{$content}"
	arg-contentDate="{$user.register_date}"
	arg-user="{$user}"
	arg-messageHtml="{$messageHtml}"
	arg-typePhraseHtml="{{ phrase('user') }}"
	arg-actionsHtml="{$actionsHtml}"
	arg-spamDetails="{$spamDetails}"
	arg-headerPhraseHtml="{$headerPhraseHtml}"/>]]></template>
  <template type="public" title="approval_queue" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[<xf:title>{{ phrase('approval_queue') }}</xf:title>

<xf:css src="approval_queue.less" />
<xf:js src="xf/approval_queue.js" />

<xf:set var="$sortOrders" value="{{ {
	'content_date': phrase('content_date')
} }}" />

<div class="block">
	<div class="block-container block-container--none">
		<div class="block-filterBar block-filterBar--standalone">
			<div class="filterBar">
				<xf:if contentcheck="true">
					<ul class="filterBar-filters">
						<xf:contentcheck>
							<xf:if is="$filters.content_type">
								<li><a href="{{ link('approval-queue', null, $filters|replace({'content_type': null})) }}"
									class="filterBar-filterToggle" data-xf-init="tooltip" title="{{ phrase('remove_this_filter')|for_attr }}">
									<span class="filterBar-filterToggle-label">{{ phrase('content_type:') }}</span>
									{{ $xf.app.getContentTypePhrase($filters.content_type) ?: $filters.content_type }}
								</a></li>
							</xf:if>
							<xf:if is="$filters.order AND {$sortOrders.{$filters.order}}">
								<li><a href="{{ link('approval-queue', null, $filters|replace({'order': null, 'direction': null})) }}"
									class="filterBar-filterToggle" data-xf-init="tooltip" title="{{ phrase('return_to_default_order')|for_attr }}">
									<span class="filterBar-filterToggle-label">{{ phrase('sort_by:') }}</span>
									{$sortOrders.{$filters.order}}
									<xf:fa icon="{{ $filters.direction == 'asc' ? 'fa-angle-up' : 'fa-angle-down' }}" />
									<span class="u-srOnly"><xf:if is="$filters.direction == 'asc'">{{ phrase('ascending') }}<xf:else />{{ phrase('descending') }}</xf:if></span>
								</a></li>
							</xf:if>
						</xf:contentcheck>
					</ul>
				</xf:if>

				<a class="filterBar-menuTrigger" data-xf-click="menu" role="button" tabindex="0" aria-expanded="false" aria-haspopup="true">{{ phrase('filters') }}</a>
				<div class="menu menu--wide" data-menu="menu" aria-hidden="true"
					data-href="{{ link('approval-queue/filters', null, $filters) }}"
					data-load-target=".js-filterMenuBody">
					<div class="menu-content">
						<h4 class="menu-header">{{ phrase('show_only:') }}</h4>
						<div class="js-filterMenuBody">
							<div class="menu-row">{{ phrase('loading...') }}</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

<xf:if is="$unapprovedItems is not empty">
	<xf:form action="{{ link('approval-queue/process') }}" ajax="true" class="js-stickyParent approvalQueue">
		<div class="blocks">
			<xf:foreach loop="$unapprovedItems" value="$unapprovedItem" i="$i" count="$count">
				<div class="block">
					<div class="block-container approvalQueue-item js-approvalQueue-item">
						<div class="block-body">
							{$unapprovedItem.getHandler().render($unapprovedItem)|raw}
						</div>
					</div>
				</div>
			</xf:foreach>

			<div class="block">
				<div class="block-container block-container--none">
					<xf:submitrow icon="save" sticky=".js-stickyParent" rowtype="standalone" />
				</div>
			</div>
		</div>
	</xf:form>
<xf:elseif is="$filters" />
	<div class="blockMessage">{{ phrase('no_items_matched_your_filter') }}</div>
<xf:else />
	<div class="blockMessage">{{ phrase('there_is_no_content_currently_awaiting_approval') }}</div>
</xf:if>]]></template>
  <template type="public" title="approval_queue.less" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[.approvalQueue
{
	.block-container.approvalQueue-item--approve
	{
		.message,
		.message-cell--user,
		.message-cell--extra
		{
			background: @xf-inlineModHighlightColor;
		}

		.message .message-userArrow:after
		{
			border-right-color: @xf-inlineModHighlightColor;
		}
	}

	.block-container.approvalQueue-item--delete
	{
		.message-cell--user,
		.message-cell--main
		{
			opacity: 0.25;
		}
	}

	.block-container.approvalQueue-item--spam
	{
		border-color: red;

		.message-cell--user,
		.message-cell--main
		{
			opacity: 0.25;
		}
	}
}]]></template>
  <template type="public" title="approval_queue_filters" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:form action="{{ link('approval-queue/filters') }}">
	<!--[XF:above_content_type]-->
	<div class="menu-row menu-row--separated">
		<label for="ctrl_content_type">{{ phrase('content_type:') }}</label>
		<div class="u-inputSpacer">
			<xf:select name="content_type" value="{$filters.content_type}" id="ctrl_content_type">
				<xf:option value="">{{ phrase('(any)') }}</xf:option>
				<xf:foreach loop="$contentTypes" value="$contentType">
					<xf:option value="{$contentType}">{$xf.app.getContentTypePhrase($contentType)}</xf:option>
				</xf:foreach>
			</xf:select>
		</div>
	</div>
	
	<!--[XF:above_sort_direction]-->
	<div class="menu-row menu-row--separated">
		{{ phrase('sort_direction:') }}
		<div class="inputGroup u-inputSpacer">
			<xf:select name="direction" value="{{ $filters.direction ?: 'asc' }}" aria-labelledby="ctrl_sort_direction">
				<xf:option value="asc">{{ phrase('ascending') }}</xf:option>
				<xf:option value="desc">{{ phrase('descending') }}</xf:option>
			</xf:select>
		</div>
	</div>
	<xf:hiddenval name="order">{{ $filters.order ?: 'content_date' }}</xf:hiddenval>

	<div class="menu-footer">
		<span class="menu-footer-controls">
			<xf:button type="submit" class="button--primary">{{ phrase('filter') }}</xf:button>
		</span>
	</div>
	<xf:hiddenval name="apply">1</xf:hiddenval>
</xf:form>]]></template>
  <template type="public" title="approval_queue_macros" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[<xf:macro name="spam_log" arg-spamDetails="!">
	<xf:if is="$spamDetails">
		<xf:formrow label="{{ phrase('spam_log') }}">
			{$spamDetails}
		</xf:formrow>
	</xf:if>
</xf:macro>

<xf:macro name="action_row" arg-unapprovedItem="!" arg-handler="!">
	<xf:formrow label="{{ phrase('action') }}" class="js-approvalQueue-itemControls">
		<xf:macro name="action_radio" arg-unapprovedItem="{$unapprovedItem}" arg-handler="{$handler}" />
	</xf:formrow>
</xf:macro>

<xf:macro name="action_radio" arg-unapprovedItem="!" arg-handler="!">
	<div class="js-approvalQueue-itemControls">
		<xf:radio name="queue[{$unapprovedItem.content_type}][{$unapprovedItem.content_id}]">

			<xf:foreach loop="$unapprovedItem.getDefaultActions()" key="$action" value="$label">
				<xf:option value="{$action}" checked="{{ !$action ? 'checked' : '' }}" data-xf-click="approval-control">{$label}</xf:option>
			</xf:foreach>

		</xf:radio>
	</div>
</xf:macro>

<xf:macro name="item_message_type"
	arg-content="!"
	arg-contentDate=""
	arg-user="!"
	arg-typePhraseHtml="!"
	arg-headerPhraseHtml=""
	arg-spamDetails=""
	arg-messageHtml="!"
	arg-unapprovedItem=""
	arg-handler=""
	arg-actionsHtml="">

	<div class="message">
		<xf:css src="message.less" />
		<div class="message-inner">
			<div class="message-cell message-cell--user">

				<section itemscope itemtype="https://schema.org/Person" class="message-user">
					<div class="message-avatar">
						<div class="message-avatar-wrapper">
							<xf:avatar user="$user" size="m" itemprop="image" />
						</div>
					</div>
					<div class="message-userDetails">
						<h4 class="message-name"><xf:username user="$user" rich="true" itemprop="name" /></h4>
					</div>

					<span class="message-userArrow"></span>
				</section>

			</div>
			<div class="message-cell message-cell--main">
				<div class="message-main">

					<header class="message-attribution">
						<span class="message-attribution-main"><xf:date time="{{ $contentDate ?: $content.post_date }}" /></span>
						<span class="message-attribution-opposite">{$typePhraseHtml|raw}</span>
					</header>

					<div class="message-content">

						<xf:if contentcheck="true">
							<xf:contentcheck>
								<xf:if is="$headerPhraseHtml is not empty">
									<div class="messageNotice messageNotice--highlighted messageNotice--moderated">
										{$headerPhraseHtml|raw}
									</div>
								</xf:if>

								<xf:if is="$spamDetails is not empty">
									<div class="messageNotice messageNotice--warning">
										{$spamDetails}
									</div>
								</xf:if>

								<xf:if is="$messageHtml is not empty">
									<div class="message-userContent">
										<article class="message-body">{$messageHtml|raw}</article>
									</div>
								</xf:if>
							</xf:contentcheck>
						<xf:else />
							<div class="message-userContent">
								<article class="message-body">
									<i>{{ phrase('no_additional_information_available') }}</i>
								</article>
							</div>
						</xf:if>
					</div>

				</div>
			</div>
			<div class="message-cell message-cell--extra">
				<xf:if is="$unapprovedItem AND $handler">
					<xf:macro template="approval_queue_macros" name="action_radio"
						arg-unapprovedItem="{$unapprovedItem}"
						arg-handler="{$handler}" />
				<xf:else />
					{$actionsHtml|raw}
				</xf:if>
			</div>
		</div>
	</div>
</xf:macro>]]></template>
  <template type="public" title="attachment_macros" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro name="attachment_list_item" arg-attachment="!" arg-canView="!">
	<li class="attachment">
		<xf:if is="$attachment.has_thumbnail">
			<xf:macro template="lightbox_macros" name="setup" arg-canViewAttachments="{$canView}" />

			<div class="attachment-icon attachment-icon--img">
				<a href="{{ link('attachments', $attachment) }}" target="_blank" class="{{ $canView ? 'js-lbImage' : '' }}">
					<img src="{$attachment.thumbnail_url}" alt="{$attachment.filename}" />
				</a>
			</div>
		<xf:else />
			<div class="attachment-icon" data-extension="{$attachment.extension}">
				<a href="{{ link('attachments', $attachment) }}" target="_blank"><i aria-hidden="true"></i></a>
			</div>
		</xf:if>
		<div class="attachment-name">
			<a href="{{ link('attachments', $attachment) }}" target="_blank" title="{$attachment.filename}">{$attachment.filename}</a>
		</div>
		<div class="attachment-details">
			<span class="attachment-details-size">{$attachment.file_size|file_size}</span>
			<span class="attachment-details-views">{{ phrase('views:') }} {$attachment.view_count|number}</span>
		</div>
	</li>
</xf:macro>]]></template>
  <template type="public" title="attachment_upload" version_id="2000570" version_string="2.0.5"><![CDATA[<xf:title>{{ phrase('attachment_upload') }}</xf:title>

<xf:form action="{{ link('attachments/upload', null, {'type': $type, 'hash': $hash, 'context': $context}) }}" class="block" upload="true" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:if is="$existing is not empty OR $new is not empty">
				<xf:formrow label="{{ phrase('existing_attachments') }}">
					<xf:css src="attachments.less" />
					<ul class="attachUploadList">
						<xf:foreach loop="$existing" value="$attachment">
							<xf:macro template="helper_attach_upload" name="uploaded_file"
								arg-attachment="{$attachment}"
								arg-noJsFallback="{{ true }}" />
						</xf:foreach>
						<xf:foreach loop="$new" value="$attachment">
							<xf:macro template="helper_attach_upload" name="uploaded_file"
								arg-attachment="{$attachment}"
								arg-noJsFallback="{{ true }}" />
						</xf:foreach>
					</ul>
				</xf:formrow>
			</xf:if>
			<xf:if is="$canUpload">
				<xf:uploadrow name="upload" accept=".{$constraints.extensions|join(',.')}"
					label="{{ phrase('attach_file') }}"
					explain="{{ phrase('you_may_close_this_window_tab_once_you_have_uploaded_your_files_to_return') }}" />
			<xf:elseif is="!$canUpload AND $uploadError" />
				<xf:formrow label="{{ phrase('attach_file') }}">{$uploadError}</xf:formrow>
			</xf:if>
		</div>
		<xf:if is="$canUpload">
			<xf:submitrow submit="{{ phrase('upload') }}" icon="upload" />
		</xf:if>
	</div>
</xf:form>]]></template>
  <template type="public" title="attachments.less" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[@_attach-thumbSize: xf-option('attachmentThumbnailDimensions', px);

.attachment
{
	display: inline-block;
	.xf-minorBlockContent();
	border-radius: @xf-borderRadiusSmall;
	padding: @xf-paddingMedium;
	width: 165px;
}

.attachment-icon
{
	overflow: hidden;
	text-align: center;
	height: @_attach-thumbSize;
	line-height: @_attach-thumbSize;
	font-size: 0;

	a:hover
	{
		text-decoration: none;
	}

	&.attachment-icon--img
	{
		a,
		img
		{
			display: inline-block;
			vertical-align: middle;
		}

		img
		{
			max-height: @_attach-thumbSize;
			max-width: 100%;
		}
	}

	i
	{
		display: block;
		height: @_attach-thumbSize;

		&:before
		{
			display: inline-block;

			.m-faBase();
			.m-faContent(@fa-var-file);
			font-size: min(.66 * @_attach-thumbSize, 100px);
			vertical-align: middle;

			color: @xf-textColorFeature;

			border-radius: 100%;
		}
	}

	// text files
	&[data-extension="txt"],
	&[data-extension="patch"],
	&[data-extension="diff"]
	{
		i:before
		{
			.m-faContent(@fa-var-file);
		}
	}

	// code files
	&[data-extension="c"],
	&[data-extension="cpp"],
	&[data-extension="h"],
	&[data-extension="htm"],
	&[data-extension="html"],
	&[data-extension="js"],
	&[data-extension="json"],
	&[data-extension="php"],
	&[data-extension="pl"],
	&[data-extension="py"],
	&[data-extension="xml"]
	{
		i:before
		{
			.m-faContent(@fa-var-file-code);
		}
	}

	// archive files
	&[data-extension="7z"],
	&[data-extension="gz"],
	&[data-extension="rar"],
	&[data-extension="tar"],
	&[data-extension="zip"]
	{
		i:before
		{
			.m-faContent(@fa-var-file-archive);
		}
	}

	// image files
	&[data-extension="gif"],
	&[data-extension="jpe"],
	&[data-extension="jpeg"],
	&[data-extension="jpg"],
	&[data-extension="png"]
	{
		i:before
		{
			.m-faContent(@fa-var-file-alt);
		}
	}

	// audio files
	&[data-extension="aac"],
	&[data-extension="mp3"],
	&[data-extension="ogg"],
	&[data-extension="wav"]
	{
		i:before
		{
			.m-faContent(@fa-var-file-audio);
		}
	}

	// video files
	&[data-extension="avi"]
	{
		i:before
		{
			.m-faContent(@fa-var-file-video);
		}
	}

	// special files
	&[data-extension="xls"],
	&[data-extension="xlsx"]
	{
		i:before
		{
			.m-faContent(@fa-var-file-excel);
		}
	}

	&[data-extension="pdf"]
	{
		i:before
		{
			.m-faContent(@fa-var-file-pdf);
		}
	}

	&[data-extension="ppt"],
	&[data-extension="pptx"]
	{
		i:before
		{
			.m-faContent(@fa-var-file-powerpoint);
		}
	}

	&[data-extension="doc"],
	&[data-extension="docx"]
	{
		i:before
		{
			.m-faContent(@fa-var-file-word);
		}
	}
}

.attachment-name
{
	margin-top: @xf-paddingMedium;
	.m-overflowEllipsis();
}

.attachment-details
{
	font-size: @xf-fontSizeSmaller;
	color: @xf-textColorMuted;

	.m-clearFix();
}

.attachment-details-size { float: left; }
.attachment-details-views { float: right; }

.attachmentList
{
	.m-listPlain();
	display: flex;
	flex-wrap: wrap;
	align-items: stretch;
	margin-bottom: -5px;

	.attachment
	{
		margin-right: 5px;
		margin-bottom: 5px;
		min-width: 0;
		display: flex;
		flex-direction: column;
	}

	.attachment-icon
	{
		flex-grow: 1;
		display: flex;
		height: auto;
		line-height: 1;
		align-items: center;

		a
		{
			margin: auto;
		}

		i
		{
			height: auto;
		}
	}
}

.attachUploadList
{
	.m-listPlain();
	.xf-contentAltBase();
	border: @xf-borderSize solid @xf-borderColor;
	border-radius: @xf-borderRadiusSmall;
	margin-bottom: @xf-paddingLarge;

	&.attachUploadList--spaced
	{
		margin-top: @xf-paddingLarge;
	}

	> li
	{
		border-bottom: @xf-borderSize solid @xf-borderColorLight;
		padding: @xf-paddingMedium;

		&:last-child
		{
			border-bottom: none;
		}

		&.is-uploadError
		{
			.contentRow-title span // span needed due to opacity creating new stacking context
			{
				text-decoration: line-through;
				opacity: .5;
			}

			.contentRow-figure
			{
				opacity: .5;
			}
		}
	}
}

.attachUploadList-insertAll,
.attachUploadList-insertRow
{
	font-size: @xf-fontSizeSmall;
	color: @xf-textColorMuted;

	span
	{
		vertical-align: middle;
	}
}

.attachUploadList-figure.contentRow-figure
{
	width: 100px;
	min-height: 50px;

	img,
	video
	{
		max-height: 100px;
		max-width: 100px;
	}
}

.attachUploadList-placeholder
{
	display: block;
	width: 100px;

	&:before
	{
		display: inline-block;
		.m-faBase();
		.m-faContent(@fa-var-file);
		font-size: 60px;
		vertical-align: middle;
		color: @xf-textColorFeature;
		border-radius: 100%;
	}
}

.attachUploadList-progress
{
	position: relative;

	i
	{
		position: absolute;
		top: 0;
		bottom: 0;
		left: 0;
		background: @xf-progressBarColor;
		color: contrast(@xf-progressBarColor);
		border-radius: @xf-borderRadiusMedium;
		padding-right: .2em;
		text-align: right;
		font-style: normal;
		white-space: nowrap;
		min-width: 2em;

		.m-transition(width);
	}
}

.attachUploadList-error
{
	color: @xf-textColorAttention;
}

@media (max-width: @xf-responsiveNarrow)
{
	.attachUploadList-figure.contentRow-figure
	{
		width: 50px;

		img,
		video
		{
			max-height: 50px;
			max-width: 50px;
		}
	}

	.attachUploadList-placeholder
	{
		display: block;
		width: 50px;

		&:before
		{
			font-size: 30px;
		}
	}
}]]></template>
  <template type="public" title="base_prefix_selector" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro name="select" arg-prefixes="!" arg-selected="0" arg-withRow="1">

	<xf:set var="$prefixesGrouped" value="{$prefixes.prefixesGrouped}" />
	<xf:set var="$prefixGroups" value="{$prefixes.prefixGroups}" />

	<xf:if is="$prefixesGrouped is not empty">
		<xf:set var="$inner">
			<xf:select name="prefix_id" value="{$selected}">
				<xf:option value="0">{{ phrase('(no_prefix)') }}</xf:option>
				<xf:foreach loop="$prefixGroups" key="$prefixGroupId" value="$prefixGroup" if="{{ count($prefixesGrouped.{$prefixGroupId}) > 0 }}">
					<xf:if is="{{ $prefixGroupId > 0 }}">
						<xf:option value="" disabled="disabled">{$prefixGroup.title}</xf:option>
					<xf:else />
						<xf:option value="" disabled="disabled">{{ phrase('(ungrouped)') }}</xf:option>
					</xf:if>
					<xf:foreach loop="{$prefixesGrouped.{$prefixGroupId}}" key="$prefixId" value="$prefix">
						<xf:option value="{$prefixId}">&nbsp;&nbsp; {$prefix.title}</xf:option>
					</xf:foreach>
				</xf:foreach>
			</xf:select>
		</xf:set>

		<xf:if is="$withRow">
			<xf:formrow label="{{ phrase('prefix') }}" rowtype="input">
				{$inner|raw}
			</xf:formrow>
		<xf:else />
			{$inner|raw}
		</xf:if>

	</xf:if>
</xf:macro>]]></template>
  <template type="public" title="bb_code.less" version_id="2010170" version_string="2.1.1"><![CDATA[@_bbCodeBlock-spacing: .75em;
@_bbCodeBlock-paddingV: @xf-paddingMedium;
@_bbCodeBlock-paddingH: @xf-paddingLarge;
@_bbCodeBlock-expandTriggerHeight: (@xf-bbCodeBlockExpandHeight) / 2;

.bbCodeBlock
{
	margin: @_bbCodeBlock-spacing 0;
	.xf-bbCodeBlock();

	&.bbCodeBlock--quote
	{
		.bbCodeBlock-content
		{
			font-size: @xf-fontSizeSmall;
		}
	}
}

.bbCodeBlock-title
{
	padding: @_bbCodeBlock-paddingV @_bbCodeBlock-paddingH;
	.xf-bbCodeBlockTitle();
	.m-clearFix();
}

a.bbCodeBlock-sourceJump
{
	color: inherit;
	text-decoration: none;

	&:hover
	{
		text-decoration: underline;
	}

	&:after
	{
		.m-faBase();
		.m-faContent(@fa-var-arrow-circle-up, 1em);
		display: inline-block;
		margin-left: 5px;
	}
}

.bbCodeBlock-content
{
	position: relative;
	padding: @_bbCodeBlock-paddingV @_bbCodeBlock-paddingH;
}

.bbCodeBlock-expandLink
{
	display: none;
	position: absolute;
	top: (@xf-bbCodeBlockExpandHeight) + (@_bbCodeBlock-paddingV * 2) - (@_bbCodeBlock-expandTriggerHeight);
	left: 0;
	right: 0;
	height: @_bbCodeBlock-expandTriggerHeight;
	cursor: pointer;
	z-index: @zIndex-1;

	.m-gradient(
		fade(@xf-bbCodeBlock--background-color, 0%),
		xf-default(@xf-bbCodeBlock--background-color, transparent),
		transparent,
		0%,
		80%
	);

	a
	{
		position: absolute;
		bottom: @_bbCodeBlock-paddingV;
		left: 0;
		right: 0;
		text-align: center;
		font-size: @xf-fontSizeSmall;
		color: @xf-textColorAttention;
		text-decoration: none;
	}
}

.bbCodeBlock--screenLimited
{
	.bbCodeBlock-content
	{
		max-height: 300px;
		max-height: 70vh;
		overflow: auto;
		-webkit-overflow-scrolling: touch;
	}
}

.bbCodeBlock--expandable
{
	overflow: hidden;
	.m-transition(-xf-height, height, padding, margin, border;);

	.bbCodeBlock-content
	{
		overflow: hidden;

		.bbCodeBlock:not(.bbCodeBlock--expandable) .bbCodeBlock-content
		{
			overflow: visible;
		}
		.bbCodeBlock.bbCodeBlock--screenLimited .bbCodeBlock-content
		{
			overflow: auto;
		}
	}

	.bbCodeBlock-expandContent
	{
		max-height: @xf-bbCodeBlockExpandHeight;
		overflow: hidden;
	}

	&.is-expandable
	{
		.bbCodeBlock-expandLink
		{
			display: block;
		}
	}

	&.is-expanded
	{
		.bbCodeBlock-expandContent
		{
			max-height: none;
		}

		.bbCodeBlock-expandLink
		{
			display: none;
		}
	}
}

.bbCodeBlock--unfurl
{
	.xf-contentHighlightBase();

	padding: @_bbCodeBlock-paddingV;
	width: 650px;
	max-width: 100%;
	border-left: @xf-borderSizeMinorFeature solid @xf-borderColorFeature;

	.contentRow-header
	{
		font-size: @xf-fontSizeNormal;
		font-weight: normal;
		.m-overflowEllipsis();
	}

	.contentRow-snippet
	{
		font-size: @xf-fontSizeSmaller;
		font-style: normal;
	}

	.contentRow-minor
	{
		font-size: @xf-fontSizeSmaller;
	}

	&.is-pending
	{
		opacity: 0.5;

		&.is-recrawl
		{
			opacity: 1;
		}
	}

	&.is-simple
	{
		.contentRow-figure
		{
			display: none;
		}
	}

	.bbCodeBlockUnfurl-icon
	{
		width: 12px;
		vertical-align: -2px;
	}
}

.bbCodeCode
{
	margin: 0;
	padding: 0;

	font-family: @xf-fontFamilyCode;
	font-size: @xf-fontSizeSmall;
	line-height: @xf-lineHeightDefault;
	-ltr-rtl-text-align: left;

	direction: ltr;
	white-space: pre;
	position: relative;

	.m-tabSize();

	code
	{
		font-family: inherit;
	}

	.prism-token
	{
		&.prism-comment,
		&.prism-prolog,
		&.prism-doctype,
		&.prism-cdata
		{
			color: #a50;
		}

		&.prism-constant
		{
			color: #05a;
		}

		&.prism-tag
		{
			color: #170;
		}

		&.prism-boolean
		{
			color: #219;
		}

		&.prism-symbol,
		&.prism-atrule,
		&.prism-keyword
		{
			color: #708;
		}

		&.prism-selector,
		&.prism-function
		{
			color: #05a;
		}

		&.prism-deleted
		{
			color: #d44;
		}

		&.prism-inserted
		{
			color: #292;
		}

		&.prism-string,
		&.prism-attr-value
		{
			color: #a11;
		}

		&.prism-number
		{
			color: #164;
		}

		&.prism-attr-name,
		&.prism-char,
		&.prism-builtin
		{
			color: #00c;
		}

		&.prism-regex,
		&.prism-important,
		&.prism-variable,
		&.prism-package
		{
			color: #05a;
		}

		&.prism-class-name,
		&.prism-important,
		&.prism-bold
		{
			color: #00f;
		}

		&.prism-bold
		{
			font-weight: bold;
		}

		&.prism-italic,
		&.prism-constant
		{
			color: #05a;
			font-style: italic;
		}

		&.prism-entity
		{
			cursor: help;
		}
	}
}

.bbCodeInline
{
	margin: 0;
	.xf-bbCodeInlineCode();
	font-family: @xf-fontFamilyCode;
	line-height: @xf-lineHeightDefault;
	box-decoration-break: clone;
	-webkit-box-decoration-break: clone;
}

.bbCodeSpoiler
{
	margin: @_bbCodeBlock-spacing 0;
}

.bbCodeSpoiler-button
{
	.has-no-js & { display: none; }
}

.bbCodeSpoiler-content
{
	.m-hiddenEl(true);
	.has-no-js & { display: block !important; }

	> .bbCodeBlock--spoiler
	{
		margin: .2em 0 0;
	}
}

.bbCodeInlineSpoiler
{
	background-color: rgba(0, 0, 0, 0);
	color: rgba(0, 0, 0, 0);
	text-shadow: @xf-textColorMuted 0 0 14px;
	cursor: pointer;

	a, span
	{
		color: inherit !important;;

		.has-js &
		{
			pointer-events: none;
		}
	}

	.smilie
	{
		filter: blur(8px) grayscale(90%);
	}

	&:hover
	{
		text-shadow: @xf-textColorMuted 0 0 10px;
	}
}]]></template>
  <template type="public" title="bb_code_preview" version_id="2000270" version_string="2.0.2"><![CDATA[<xf:if is="$message">
	<xf:css src="bb_code_preview.less" />
	<div class="bbCodePreview js-previewContainer">
	<xf:formrow rowtype="fullWidth noLabel noGutter">
		<h4 class="block-textHeader">{{ phrase('preview') }}</h4>
		<div class="bbCodePreview-content">
			{{ bb_code($message, $context . ':preview', $user, {
				'attachments': $attachments,
				'viewAttachments': $canViewAttachments
			}) }}
		</div>
	</xf:formrow>
	</div>
</xf:if>]]></template>
  <template type="public" title="bb_code_preview.less" version_id="2010132" version_string="2.1.1 Beta 2"><![CDATA[.bbCodePreview
{
	.m-transitionFadeDown();
}

.bbCodePreview-content
{
	max-height: 300px;
	max-height: 75vh;
	overflow: auto;
	padding-bottom: 3px; // mostly to ensure icode doesn't overflow unexpectedly
	font-family: @xf-fontFamilyBody;
}]]></template>
  <template type="public" title="bb_code_tag_attach" version_id="2010035" version_string="2.1.0 Beta 5"><![CDATA[<xf:if is="!$attachment"><xf:trim>
	<a href="{{ link('full:attachments', {'attachment_id': $id}) }}" target="_blank">{{ phrase('view_attachment_x', {'name': $id}) }}</a>
</xf:trim><xf:elseif is="$attachment.is_video AND $full AND $canView" /><xf:trim>
	<div class="bbMediaWrapper {$alignClass}">
		<div class="bbMediaWrapper-inner">
			<video controls data-xf-init="video-init"
				style="{$styleAttr}">
				<source src="{{ base_url($attachment.video_url) }}" />
				<div class="bbMediaWrapper-fallback">{{ phrase('your_browser_is_not_able_to_display_this_video') }}</div>
			</video>
		</div>
	</div>
</xf:trim><xf:elseif is="!$attachment.has_thumbnail" /><xf:trim>
	<a href="{{ link('full:attachments', $attachment, {'hash': $attachment.temp_hash}) }}" target="_blank">{{ phrase('view_attachment_x', {'name': $attachment.filename}) }}</a>
</xf:trim><xf:elseif is="$canView AND $full" /><xf:trim>
	<xf:if is="$noLightbox">
		<img src="{{ link('full:attachments', $attachment, {'hash': $attachment.temp_hash}) }}"
			class="bbImage {$alignClass}"
			style="{$styleAttr}"
			alt="{$alt}" />
		<xf:else />
		<xf:macro template="lightbox_macros" name="single_image"
			arg-canViewAttachments="{$canView}"
			arg-id="attachment{$attachment.attachment_id}"
			arg-src="{{ link('full:attachments', $attachment, {'hash': $attachment.temp_hash}) }}"
			arg-alt="{$alt}"
			arg-styleAttr="{$styleAttr}"
			arg-alignClass="{$alignClass}" />
	</xf:if>
</xf:trim><xf:elseif is="$canView" /><xf:trim>
	<xf:macro template="lightbox_macros" name="setup" arg-canViewAttachments="{$canView}" />
	<a href="{{ link('full:attachments', $attachment, {'hash': $attachment.temp_hash}) }}"
		target="_blank" class="js-lbImage"><img src="{$attachment.thumbnail_url}"
		class="bbImage {$alignClass}"
		style="{$styleAttr}"
		alt="{$alt}" /></a>
</xf:trim><xf:else /><xf:trim>
	<a href="{{ link('full:attachments', $attachment, {'hash': $attachment.temp_hash}) }}"
		target="_blank"><img src="{$attachment.thumbnail_url}"
		class="bbImage {$alignClass}"
		style="{$styleAttr}"
		alt="{$alt}" /></a>
</xf:trim></xf:if>]]></template>
  <template type="public" title="bb_code_tag_code" version_id="2000170" version_string="2.0.1"><![CDATA[<xf:macro template="prism_macros" name="setup" />

<div class="bbCodeBlock bbCodeBlock--screenLimited bbCodeBlock--code">
	<div class="bbCodeBlock-title">
		{{ $config.phrase ?: phrase('code') }}{$xf.language.label_separator}
	</div>
	<div class="bbCodeBlock-content" dir="ltr">
		<pre class="bbCodeCode" dir="ltr" data-xf-init="code-block" data-lang="{{ $language ?: '' }}"><code>{$content}</code></pre>
	</div>
</div>]]></template>
  <template type="public" title="bb_code_tag_img" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:macro template="lightbox_macros" name="single_image"
	arg-canViewAttachments="{{ true }}"
	arg-id="{{ unique_id() }}"
	arg-src="{$imageUrl}"
	arg-dataUrl="{$validUrl}"
	arg-alt="{$alt}"
	arg-styleAttr="{$styleAttr}"
	arg-alignClass="{$alignClass}"/>
]]></template>
  <template type="public" title="bb_code_tag_quote" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:css src="bb_code.less" />

<blockquote class="bbCodeBlock bbCodeBlock--expandable bbCodeBlock--quote{{ ($attributes.member && $xf.visitor.isIgnoring($attributes.member)) ? ' is-ignored' : '' }}">
	<xf:if is="$name">
		<div class="bbCodeBlock-title">
			<xf:if is="$source">
				<a href="{{ link('goto/' . {$source.type}, null, {'id': $source.id}) }}"
					class="bbCodeBlock-sourceJump"
					data-xf-click="attribution"
					data-content-selector="#{$source.type}-{$source.id}">{{ phrase('x_said:', {'name': $name}) }}</a>
			<xf:else />
				{{ phrase('x_said:', {'name': $name}) }}
			</xf:if>
		</div>
	</xf:if>
	<div class="bbCodeBlock-content">
		<div class="bbCodeBlock-expandContent">
			{$content}
		</div>
		<div class="bbCodeBlock-expandLink"><a>{{ phrase('click_to_expand') }}</a></div>
	</div>
</blockquote>]]></template>
  <template type="public" title="bb_code_tag_spoiler" version_id="2001070" version_string="2.0.10"><![CDATA[<xf:css src="bb_code.less" />

<div class="bbCodeSpoiler">
	<xf:button class="bbCodeSpoiler-button{{ $title ? ' button--longText' : '' }}" data-xf-click="toggle"
		data-xf-init="tooltip" title="{{ phrase('click_to_reveal_spoiler') }}">

		<span>{{ phrase('spoiler') }}<xf:if is="$title">: <span class="bbCodeSpoiler-button-title">{$title}</span></xf:if></span>
	</xf:button>
	<div class="bbCodeSpoiler-content">
		<div class="bbCodeBlock bbCodeBlock--spoiler">
			<div class="bbCodeBlock-content">{$content}</div>
		</div>
	</div>
</div>]]></template>
  <template type="public" title="bb_code_tag_url_unfurl" version_id="2010036" version_string="2.1.0 Beta 6"><![CDATA[<xf:if is="$result.isBasicLink()">
	<div>
		<a href="{$result.url}"
			class="{{ $linkInfo.class ?: '' }}"
			target="{{ $linkInfo.target ?: '' }}"
			rel="{{ $rels ? $rels|join(' ') : '' }}"
			data-proxy-href="{{ $proxyUrl ?: '' }}">
			{{ $result.title ?: $result.url }}
		</a>
	</div>
<xf:else />
	<xf:css src="bb_code.less" />

	<div class="bbCodeBlock bbCodeBlock--unfurl {{ $result.pending ? 'is-pending' : '' }} {{ $result.is_recrawl ? 'is-recrawl' : '' }} {{ $simple ? 'is-simple' : '' }} js-unfurl fauxBlockLink"
		data-unfurl="true" data-result-id="{$result.result_id}" data-url="{$result.url}" data-host="{$result.host}" data-pending="{{ $result.pending ? 'true' : 'false' }}">
		<div class="contentRow">
			<xf:if is="($result.pending OR $imageUrl) AND !$simple">
				<div class="contentRow-figure contentRow-figure--fixedSmall js-unfurl-figure">
					<xf:if is="$imageUrl">
						<img src="{$imageUrl}" alt="{$result.host}" data-onerror="hide-parent"/>
					<xf:else />
						<span class="fa-2x u-muted">
							<xf:fa icon="fa-spinner fa-pulse" />
						</span>
					</xf:if>
				</div>
			</xf:if>
			<div class="contentRow-main">
				<h3 class="contentRow-header js-unfurl-title">
					<a href="{$result.url}"
						class="{{ $linkInfo.class ?: '' }} fauxBlockLink-blockLink"
						target="{{ $linkInfo.target ?: '' }}"
						rel="{{ $rels ? $rels|join(' ') : '' }}"
						data-proxy-href="{{ $proxyUrl ?: '' }}">
						{{ $result.title ?: phrase('loading...') }}
					</a>
				</h3>

				<div class="contentRow-snippet js-unfurl-desc">{{ snippet($result.description, $simple ? 50 : 300) }}</div>

				<div class="contentRow-minor contentRow-minor--hideLinks">
					<span class="js-unfurl-favicon">
						<xf:if is="$faviconUrl">
							<img src="{$faviconUrl}" alt="{$result.host}" class="bbCodeBlockUnfurl-icon"
								data-onerror="hide-parent"/>
						</xf:if>
					</span>
					{$result.host}
				</div>
			</div>
		</div>
	</div>
</xf:if>]]></template>
  <template type="public" title="bookmark_delete" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{$confirmUrl}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('please_confirm_that_you_want_to_delete_your_bookmark_for_following_content:') }}
				<strong><a href="{$bookmark.content_link}">{$bookmark.content_title}</a></strong>
			</xf:inforow>
		</div>

		<xf:submitrow rowtype="simple" name="delete" icon="delete" />
	</div>
</xf:form>]]></template>
  <template type="public" title="bookmark_edit" version_id="2010132" version_string="2.1.1 Beta 2"><![CDATA[<xf:if is="$tooltip">
	<div class="tooltip-content-inner">
		<xf:form action="{$confirmUrl}" class="" ajax="true">
			<div class="block-minorHeader">
				<xf:if is="$added">
					{{ phrase('bookmark_added') }}
				<xf:elseif is="$bookmark.isInsert()" />
					{{ phrase('add_bookmark') }}
				<xf:else />
					{{ phrase('edit_bookmark') }}
				</xf:if>
			</div>
			<div class="block-body">
				<div class="block-row">
					<xf:textarearow name="message" label="{{ phrase('message') }}"
						rowtype="fullWidth noPadding"
						value="{$bookmark.message}"
						autosize="true"
						rows="1"
						maxlength="{{ max_length($bookmark, 'message') }}"
						hint="{{ phrase('optional') }}" />
				</div>
				<div class="block-row">
					<xf:formrow label="{{ phrase('labels') }}" hint="{{ phrase('optional') }}" rowtype="fullWidth noPadding"
						explain="{{ phrase('multiple_labels_may_be_separated_by_commas') }}">
						<xf:macro template="bookmark_macros" name="filter"
							arg-label="{$bookmark.labels|pluck('label')|join(', ')}"
							arg-allLabels="{$allLabels}"
							arg-maxTokens="0"
							arg-placeholder="" />
					</xf:formrow>
				</div>
				<div class="block-row">
					<div class="formButtonGroup formButtonGroup--simple formButtonGroup--close">
						<div class="formButtonGroup-primary">
							<xf:button type="submit" class="button--primary" icon="save" />
							<xf:button type="submit" name="delete" icon="delete" />
						</div>
					</div>
				</div>
			</div>
		</xf:form>
	</div>
<xf:else />
	<xf:if is="$bookmark.isInsert()">
		<xf:title>{{ phrase('add_bookmark') }}</xf:title>
	<xf:else />
		<xf:title>{{ phrase('edit_bookmark') }}</xf:title>
	</xf:if>


	<xf:form action="{$confirmUrl}" class="block" ajax="true">
		<div class="block-container">
			<div class="block-body">
				<xf:textarearow name="message" label="{{ phrase('message') }}"
					value="{$bookmark.message}"
					autosize="true"
					maxlength="{{ max_length($bookmark, 'message') }}"
					hint="{{ phrase('optional') }}" />

				<xf:formrow label="{{ phrase('labels') }}" rowtype="input">
					<xf:macro template="bookmark_macros" name="filter"
						arg-label="{$bookmark.labels|pluck('label')|join(', ')}"
						arg-allLabels="{$allLabels}"
						arg-maxTokens="0"
						arg-placeholder="" />
					<div class="formRow-explain">
						{{ phrase('multiple_labels_may_be_separated_by_commas') }}
					</div>
				</xf:formrow>
			</div>
			<xf:submitrow icon="save"><xf:html>
				<xf:button type="submit" name="delete" icon="delete" />
			</xf:html></xf:submitrow>
		</div>
	</xf:form>
</xf:if>]]></template>
  <template type="public" title="bookmark_item_custom_icon_node" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<div class="contentRow-figure contentRow-figure--fixedBookmarkIcon">
	<div class="contentRow-figureIcon">
		<xf:fa icon="fa-file-alt fa-3x" />
	</div>
</div>]]></template>
  <template type="public" title="bookmark_item_node" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[{{ snippet($content.description, max_length($bookmark, 'message'), {'stripQuote': true}) }}]]></template>
  <template type="public" title="bookmark_item_post" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[{{ snippet($content.message, max_length($bookmark, 'message'), {'stripQuote': true}) }}]]></template>
  <template type="public" title="bookmark_macros" version_id="2010131" version_string="2.1.1 Beta 1"><![CDATA[<xf:macro name="link"
	arg-content="!"
	arg-confirmUrl="!"
	arg-editText="{{ phrase('edit_bookmark') }}"
	arg-addText="{{ phrase('add_bookmark') }}"
	arg-showText="{{ true }}"
	arg-class="actionBar-action actionBar-action--bookmarkLink">

	<xf:if is="$content.canBookmark()">
		<a href="{$confirmUrl}" class="bookmarkLink {$class} {{ $content.isBookmarked() ? 'is-bookmarked' : '' }}"
			title="{{ $showText ? '' : phrase('bookmark')|for_attr }}"
			data-xf-click="bookmark-click"
			data-label=".js-bookmarkText"
			data-sk-bookmarked="addClass:is-bookmarked, {$editText|for_attr}"
			data-sk-bookmarkremoved="removeClass:is-bookmarked, {$addText|for_attr}"><xf:trim>
			<span class="js-bookmarkText {{ $showText ? '' : 'u-srOnly' }}"><xf:if is="$content.isBookmarked()">{$editText}<xf:else/>{$addText}</xf:if></span>
		</xf:trim></a>
	</xf:if>
</xf:macro>

<xf:macro name="button"
	arg-content="!"
	arg-confirmUrl="!"
	arg-class="button--link"
	arg-showText="{{ false }}"
	arg-editText="{{ phrase('edit_bookmark') }}"
	arg-addText="{{ phrase('add_bookmark') }}">

	<xf:if is="$content.canBookmark()">
		<xf:button href="{$confirmUrl}" icon="bookmark" class="{{ $showText ? '' : 'button--iconOnly' }} {$class} {{ $content.isBookmarked() ? 'is-bookmarked' : '' }}"
			title="{{ $showText ? '' : phrase('bookmark') }}"
			data-xf-click="bookmark-click"
			data-label=".js-bookmarkText"
			data-sk-bookmarked="addClass:is-bookmarked, {$editText}"
			data-sk-bookmarkremoved="removeClass:is-bookmarked, {$addText}"><xf:trim>
			<span class="js-bookmarkText {{ $showText ? '' : 'u-srOnly' }}"><xf:if is="$content.isBookmarked()">{$editText}<xf:else/>{$addText}</xf:if></span>
		</xf:trim></xf:button>
	</xf:if>
</xf:macro>

<xf:macro name="row"
	arg-bookmark="!"
	arg-content="!">

	<div class="contentRow">
		<xf:if is="$bookmark.has_custom_icon">
			{$bookmark.renderCustomIcon()|raw}
		<xf:elseif is="$content.User OR $content.username" />
			<div class="contentRow-figure contentRow-figure--fixedBookmarkIcon">
				<xf:avatar user="$content.User" href="" size="s" defaultname="{$content.username}" />
			</div>
		</xf:if>

		<div class="contentRow-main">
			<xf:macro name="item_buttons" arg-bookmark="{$bookmark}" />

			<div class="contentRow-title">
				<a href="{$bookmark.content_link}">{$bookmark.content_title}</a>
			</div>

			<div class="contentRow-snippet">
				<xf:if is="$bookmark.message">
					{{ structured_text($bookmark.message) }}
				<xf:else />
					<xf:if contentcheck="true">
						<xf:contentcheck>
							{$bookmark.renderMessageFallback()|raw}
						</xf:contentcheck>
					<xf:else />
						{{ phrase('no_bookmark_note') }}
					</xf:if>
				</xf:if>
			</div>

			<xf:macro name="item_footer"
				arg-bookmark="{$bookmark}"
				arg-content="{$content}" />
		</div>
	</div>
</xf:macro>

<xf:macro name="item_buttons" arg-bookmark="!">

	<div class="contentRow-extra">
		<xf:button class="button--link button--smaller menuTrigger"
			data-xf-click="menu"
			aria-label="{{ phrase('more_options') }}"
			aria-expanded="false"
			aria-haspopup="true">
			<xf:fa icon="fa-cog" />
		</xf:button>

		<div class="menu" data-menu="menu" aria-hidden="true">
			<div class="menu-content">
				<h3 class="menu-header">{{ phrase('bookmark_tools') }}</h3>
				<a class="menu-linkRow" role="button" tabindex="0" data-menu-closer="on" data-xf-init="copy-to-clipboard" data-copy-text="{$bookmark.content_link}">{{ phrase('copy_link') }}</a>
				<a href="{$bookmark.edit_link}" class="menu-linkRow" data-xf-click="overlay">{{ phrase('edit') }}</a>
				<a href="{$bookmark.delete_link}" class="menu-linkRow" data-xf-click="overlay">{{ phrase('delete') }}</a>
			</div>
		</div>
	</div>
</xf:macro>

<xf:macro name="item_footer" arg-bookmark="!" arg-content="!">
	<div class="contentRow-minor contentRow-minor--hideLinks contentRow-minor--smaller">
		<ul class="listInline listInline--bullet">
			<xf:if is="$bookmark.content_user OR $content.isValidKey('username')">
				<li>
					<xf:fa icon="fa-user" title="{{ phrase('user') }}" />
					<span class="u-srOnly">{{ phrase('user') }}</span>
					<xf:username user="{$bookmark.content_user}" defaultname="{{ $content.isValidKey('username') ? $content.username : '' }}" />
				</li>
			</xf:if>
			<li>
				<xf:fa icon="fa-clock" title="{{ phrase('bookmarked') }}" />
				<span class="u-srOnly">{{ phrase('bookmarked') }}</span>
				<xf:date time="$bookmark.bookmark_date" />
			</li>
			<xf:if is="$bookmark.labels">
				<li class="tagList">
					<span class="u-srOnly">{{ phrase('labels') }}</span>
					<xf:foreach loop="$bookmark.labels" value="$label">
						<a href="{{ link('account/bookmarks', null, {'label': $label.label}) }}" class="tagItem" dir="auto">{$label.label}</a>
					</xf:foreach>
				</li>
			</xf:if>
		</ul>
	</div>
</xf:macro>

<xf:macro name="filter"
	arg-label="{$label}"
	arg-allLabels="{{ [] }}"
	arg-name="labels"
	arg-minLength="0"
	arg-maxTokens="1"
	arg-placeholder="{{ phrase('filter_by_label...') }}">
	<xf:tokeninput inputclass="js-labelFilter"
		name="{$name}"
		value="{$label}"
		min-length="{$minLength}"
		max-tokens="{$maxTokens}"
		list-data="{$allLabels|json}"
		placeholder="{$placeholder}" />
</xf:macro>]]></template>
  <template type="public" title="browser_warning_macros" version_id="2000037" version_string="2.0.0 Beta 7"><![CDATA[<xf:macro name="javascript">
	<noscript><div class="blockMessage blockMessage--important blockMessage--iconic u-noJsOnly">{{ phrase('javascript_is_disabled_please_enable_before_proceeding') }}</div></noscript>
</xf:macro>

<xf:macro name="browser">
	<!--[if lt IE 9]><div class="blockMessage blockMessage&#45;&#45;important blockMessage&#45;&#45;iconic">{{ phrase('you_are_using_out_of_date_browser_upgrade') }}</div><![endif]-->
</xf:macro>]]></template>
  <template type="public" title="captcha" version_id="2000033" version_string="2.0.0 Beta 3"><![CDATA[<xf:if is="$withRow">
	<xf:captcharow label="{{ $phrase ? $phrase : phrase('verification') }}" rowtype="{$rowType}" force="true" />
<xf:else />
	<xf:captcha force="true" />
</xf:if>]]></template>
  <template type="public" title="captcha_keycaptcha" version_id="2000036" version_string="2.0.0 Beta 6"><![CDATA[<xf:js src="xf/captcha.js" min="1" />

<div class="keycaptcha-root" data-xf-init="key-captcha" data-user="{$keyUserId}" data-session="{$sessionId}" data-sign="{$sign}" data-sign2="{$sign2}">
	<noscript>{{ phrase('please_enable_javascript_to_continue') }}</noscript>
	<span class="u-jsOnly">{{ phrase('loading...') }}</span>
</div>
<xf:hiddenval name="keycaptcha_code" value="" />]]></template>
  <template type="public" title="captcha_question" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:js src="xf/captcha.js" min="1" />

<div data-xf-init="qa-captcha" data-url="{{ link('misc/captcha') }}">
	<xf:if is="$question.captcha_question_id">
		<div style="margin-top: 4px;">{$question.question|raw}</div>
		<div class="u-inputSpacer">
			<xf:textbox name="captcha_question_answer" placeholder="{{ phrase('please_answer_the_question_above') }}" />
		</div>
	<xf:else />
		{{ phrase('n_a') }}
	</xf:if>
	<xf:hiddenval name="captcha_question_hash">{$question.hash}</xf:hiddenval>
</div>]]></template>
  <template type="public" title="captcha_recaptcha" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:js src="xf/captcha.js" min="1" />

<div data-xf-init="re-captcha" data-sitekey="{$siteKey}" data-invisible="{$invisible}"></div>

<noscript>
	<div>
		<div style="width: 302px; height: 422px; position: relative;">
			<div style="width: 302px; height: 422px; position: absolute;">
				<iframe src="https://www.google.com/recaptcha/api/fallback?k={$siteKey|urlencode}"
					frameborder="0" scrolling="no"
					style="width: 302px; height:422px; border-style: none;"></iframe>
			</div>
		</div>
		<div style="width: 300px; height: 60px; border-style: none;
			bottom: 12px; left: 25px; margin: 0px; padding: 0px; right: 25px;
			background: #f9f9f9; border: 1px solid #c1c1c1; border-radius: 3px;">
			<textarea name="g-recaptcha-response" id="g-recaptcha-response"
				class="g-recaptcha-response"
				style="width: 250px; height: 40px; border: 1px solid #c1c1c1;
				margin: 10px 25px; padding: 0px; resize: none;"></textarea>
		</div>
	</div>
</noscript>]]></template>
  <template type="public" title="captcha_solve_media" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:js src="xf/captcha.js" min="1" />

<div class="j-jsOnly" data-xf-init="solve-captcha" data-ckey="{$cKey}" id="{{ unique_id() }}">
	{{ phrase('loading...') }}
</div>
<noscript>
	<iframe src="https://api-secure.solvemedia.com/papi/challenge.noscript?k={$cKey}" height="300" width="500" frameborder="0"></iframe><br />
	<xf:textarea name="adcopy_challenge" rows="3" cols="40" />
	<xf:hiddenval name="adcopy_response">manual_challenge</xf:hiddenval>
</noscript>]]></template>
  <template type="public" title="captcha_textcaptcha" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:js src="xf/captcha.js" min="1" />

<div data-xf-init="qa-captcha" data-url="{{ link('misc/captcha') }}">
	<xf:if is="$question.q">
		<div style="margin-top: 4px;">{$question.q}</div>
		<div class="u-inputSpacer">
			<xf:textbox name="captcha_question_answer" placeholder="{{ phrase('please_answer_the_question_above') }}" />
		</div>
	<xf:else />
		{{ phrase('n_a') }}
	</xf:if>
	<xf:hiddenval name="captcha_question_hash">{$question.hash}</xf:hiddenval>
</div>]]></template>
  <template type="public" title="carousel.less" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[.carousel
{
	.m-clearFix();

	margin-bottom: @xf-elementSpacer;

	&.carousel--withFooter
	{
		.lSSlideOuter
		{
			// this is used as float containment, so disable it
			overflow: visible;
		}

		.lSPager
		{
			float: left;
		}
	}
}

.carousel-body
{
	.m-listPlain();

	display: flex;
	align-items: stretch;
	overflow: hidden;

	> li
	{
		width: 100%;
		flex-grow: 1;
		flex-shrink: 0;
		display: flex;
		align-items: stretch;
	}

	// this rule will need to be repeated if we add show3 or further
	&.carousel-body--show2
	{
		> li
		{
			padding-right: @xf-paddingMedium;

			&:last-child
			{
				padding-right: 0;
			}
		}
	}

	&.carousel-body--show2 > li
	{
		width: 50%;

		@media (max-width: 700px)
		{
			width: 100%;
		}
	}
}

.carousel-item
{
	.xf-blockBorder();
	border-radius: @xf-blockBorderRadius;
	.xf-contentBase();
	padding: @xf-blockPaddingV @xf-blockPaddingH;
	width: 100%;
	min-width: 0;
}

.carousel-footer
{
	float: right;
	font-size: @xf-fontSizeSmall;
	line-height: 20px; // this is the height of the dots for slide selection
}]]></template>
  <template type="public" title="category_macros" version_id="2010131" version_string="2.1.1 Beta 1"><![CDATA[<xf:macro name="category_page_options" arg-category="!">
	<xf:page option="searchConstraints" value="{{ {
		phrase('threads'): {'search_type': 'post'},
		phrase('this_category'): {'search_type': 'post', 'c': {'nodes': [$category.node_id], 'child_nodes': 1}}
	} }}" />
</xf:macro>]]></template>
  <template type="public" title="category_mark_read" version_id="2000037" version_string="2.0.0 Beta 7"><![CDATA[<xf:title>{{ phrase('mark_forum_read') }}</xf:title>

<xf:form action="{{ link('categories/mark-read', $category, {'date': $date}) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('you_sure_you_want_to_mark_this_forum_read') }}
				<strong><a href="{{ link('categories', $category) }}">{$category.title}</a></strong>
			</xf:inforow>
		</div>
		<xf:submitrow submit="{{ phrase('mark_forum_read') }}" rowtype="simple" icon="markRead" />
	</div>
</xf:form>]]></template>
  <template type="public" title="category_view" version_id="2010131" version_string="2.1.1 Beta 1"><![CDATA[<xf:title>{$category.title}</xf:title>
<xf:description>{$category.description|raw}</xf:description>

<xf:macro template="metadata_macros" name="canonical_url" arg-canonicalUrl="{{ link('canonical:categories', $category) }}" />

<xf:macro template="category_macros" name="category_page_options" arg-category="{$category}" />
<xf:breadcrumb source="$category.getBreadcrumbs(false)" />

<xf:if is="$nodeTree">
	<div class="block">
		<div class="block-outer"><xf:trim>
			<xf:if contentcheck="true">
				<div class="block-outer-opposite">
					<div class="buttonGroup">
					<xf:contentcheck>
						<xf:if is="$xf.visitor.user_id && $hasForumDescendents">
							<xf:button href="{{ link('categories/mark-read', $category, {'date': $xf.time}) }}"
								class="button--link" overlay="true">
								{{ phrase('mark_read') }}
							</xf:button>
						</xf:if>
					</xf:contentcheck>
					</div>
				</div>
			</xf:if>
		</xf:trim></div>
		<div class="block-container">
			<div class="block-body">
				<xf:macro template="forum_list" name="node_list"
					arg-children="{$nodeTree}"
					arg-extras="{$nodeExtras}"
					arg-depth="2" />
			</div>
		</div>
	</div>
<xf:else />
	<div class="blockMessage">{{ phrase('there_is_nothing_to_display') }}</div>
</xf:if>

<xf:widgetpos id="category_view_sidebar" context-category="{$category}" position="sidebar" />]]></template>
  <template type="public" title="chartist.css" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[.ct-double-octave:after,.ct-major-eleventh:after,.ct-major-second:after,.ct-major-seventh:after,.ct-major-sixth:after,.ct-major-tenth:after,.ct-major-third:after,.ct-major-twelfth:after,.ct-minor-second:after,.ct-minor-seventh:after,.ct-minor-sixth:after,.ct-minor-third:after,.ct-octave:after,.ct-perfect-fifth:after,.ct-perfect-fourth:after,.ct-square:after{content:"";clear:both}.ct-double-octave:after,.ct-double-octave:before,.ct-golden-section:after,.ct-major-eleventh:after,.ct-major-eleventh:before,.ct-major-second:after,.ct-major-second:before,.ct-major-seventh:after,.ct-major-seventh:before,.ct-major-sixth:after,.ct-major-sixth:before,.ct-major-tenth:after,.ct-major-tenth:before,.ct-major-third:after,.ct-major-third:before,.ct-major-twelfth:after,.ct-major-twelfth:before,.ct-minor-second:after,.ct-minor-second:before,.ct-minor-seventh:after,.ct-minor-seventh:before,.ct-minor-sixth:after,.ct-minor-sixth:before,.ct-minor-third:after,.ct-minor-third:before,.ct-octave:after,.ct-octave:before,.ct-perfect-fifth:after,.ct-perfect-fifth:before,.ct-perfect-fourth:after,.ct-perfect-fourth:before,.ct-square:after,.ct-square:before{content:""}.ct-label{fill:rgba(0,0,0,.4);color:rgba(0,0,0,.4);font-size:.75rem;line-height:1}.ct-chart-bar .ct-label,.ct-chart-line .ct-label{display:block;display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex}.ct-label.ct-horizontal.ct-start{-webkit-box-align:flex-end;-webkit-align-items:flex-end;-ms-flex-align:flex-end;align-items:flex-end;-webkit-box-pack:flex-start;-webkit-justify-content:flex-start;-ms-flex-pack:flex-start;justify-content:flex-start;text-align:left;text-anchor:start}.ct-label.ct-horizontal.ct-end{-webkit-box-align:flex-start;-webkit-align-items:flex-start;-ms-flex-align:flex-start;align-items:flex-start;-webkit-box-pack:flex-start;-webkit-justify-content:flex-start;-ms-flex-pack:flex-start;justify-content:flex-start;text-align:left;text-anchor:start}.ct-label.ct-vertical.ct-start{-webkit-box-align:flex-end;-webkit-align-items:flex-end;-ms-flex-align:flex-end;align-items:flex-end;-webkit-box-pack:flex-end;-webkit-justify-content:flex-end;-ms-flex-pack:flex-end;justify-content:flex-end;text-align:right;text-anchor:end}.ct-label.ct-vertical.ct-end{-webkit-box-align:flex-end;-webkit-align-items:flex-end;-ms-flex-align:flex-end;align-items:flex-end;-webkit-box-pack:flex-start;-webkit-justify-content:flex-start;-ms-flex-pack:flex-start;justify-content:flex-start;text-align:left;text-anchor:start}.ct-chart-bar .ct-label.ct-horizontal.ct-start{-webkit-box-align:flex-end;-webkit-align-items:flex-end;-ms-flex-align:flex-end;align-items:flex-end;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;text-align:center;text-anchor:start}.ct-chart-bar .ct-label.ct-horizontal.ct-end{-webkit-box-align:flex-start;-webkit-align-items:flex-start;-ms-flex-align:flex-start;align-items:flex-start;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;text-align:center;text-anchor:start}.ct-chart-bar.ct-horizontal-bars .ct-label.ct-horizontal.ct-start{-webkit-box-align:flex-end;-webkit-align-items:flex-end;-ms-flex-align:flex-end;align-items:flex-end;-webkit-box-pack:flex-start;-webkit-justify-content:flex-start;-ms-flex-pack:flex-start;justify-content:flex-start;text-align:left;text-anchor:start}.ct-chart-bar.ct-horizontal-bars .ct-label.ct-horizontal.ct-end{-webkit-box-align:flex-start;-webkit-align-items:flex-start;-ms-flex-align:flex-start;align-items:flex-start;-webkit-box-pack:flex-start;-webkit-justify-content:flex-start;-ms-flex-pack:flex-start;justify-content:flex-start;text-align:left;text-anchor:start}.ct-chart-bar.ct-horizontal-bars .ct-label.ct-vertical.ct-start{-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:flex-end;-webkit-justify-content:flex-end;-ms-flex-pack:flex-end;justify-content:flex-end;text-align:right;text-anchor:end}.ct-chart-bar.ct-horizontal-bars .ct-label.ct-vertical.ct-end{-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:flex-start;-webkit-justify-content:flex-start;-ms-flex-pack:flex-start;justify-content:flex-start;text-align:left;text-anchor:end}.ct-grid{stroke:rgba(0,0,0,.2);stroke-width:1px;stroke-dasharray:2px}.ct-point{stroke-width:10px;stroke-linecap:round}.ct-line{fill:none;stroke-width:4px}.ct-area{stroke:none;fill-opacity:.1}.ct-bar{fill:none;stroke-width:10px}.ct-slice-donut{fill:none;stroke-width:60px}.ct-series-a .ct-bar,.ct-series-a .ct-line,.ct-series-a .ct-point,.ct-series-a .ct-slice-donut{stroke:#d70206}.ct-series-a .ct-area,.ct-series-a .ct-slice-pie{fill:#d70206}.ct-series-b .ct-bar,.ct-series-b .ct-line,.ct-series-b .ct-point,.ct-series-b .ct-slice-donut{stroke:#f05b4f}.ct-series-b .ct-area,.ct-series-b .ct-slice-pie{fill:#f05b4f}.ct-series-c .ct-bar,.ct-series-c .ct-line,.ct-series-c .ct-point,.ct-series-c .ct-slice-donut{stroke:#f4c63d}.ct-series-c .ct-area,.ct-series-c .ct-slice-pie{fill:#f4c63d}.ct-series-d .ct-bar,.ct-series-d .ct-line,.ct-series-d .ct-point,.ct-series-d .ct-slice-donut{stroke:#d17905}.ct-series-d .ct-area,.ct-series-d .ct-slice-pie{fill:#d17905}.ct-series-e .ct-bar,.ct-series-e .ct-line,.ct-series-e .ct-point,.ct-series-e .ct-slice-donut{stroke:#453d3f}.ct-series-e .ct-area,.ct-series-e .ct-slice-pie{fill:#453d3f}.ct-series-f .ct-bar,.ct-series-f .ct-line,.ct-series-f .ct-point,.ct-series-f .ct-slice-donut{stroke:#59922b}.ct-series-f .ct-area,.ct-series-f .ct-slice-pie{fill:#59922b}.ct-series-g .ct-bar,.ct-series-g .ct-line,.ct-series-g .ct-point,.ct-series-g .ct-slice-donut{stroke:#0544d3}.ct-series-g .ct-area,.ct-series-g .ct-slice-pie{fill:#0544d3}.ct-series-h .ct-bar,.ct-series-h .ct-line,.ct-series-h .ct-point,.ct-series-h .ct-slice-donut{stroke:#6b0392}.ct-series-h .ct-area,.ct-series-h .ct-slice-pie{fill:#6b0392}.ct-series-i .ct-bar,.ct-series-i .ct-line,.ct-series-i .ct-point,.ct-series-i .ct-slice-donut{stroke:#f05b4f}.ct-series-i .ct-area,.ct-series-i .ct-slice-pie{fill:#f05b4f}.ct-series-j .ct-bar,.ct-series-j .ct-line,.ct-series-j .ct-point,.ct-series-j .ct-slice-donut{stroke:#dda458}.ct-series-j .ct-area,.ct-series-j .ct-slice-pie{fill:#dda458}.ct-series-k .ct-bar,.ct-series-k .ct-line,.ct-series-k .ct-point,.ct-series-k .ct-slice-donut{stroke:#eacf7d}.ct-series-k .ct-area,.ct-series-k .ct-slice-pie{fill:#eacf7d}.ct-series-l .ct-bar,.ct-series-l .ct-line,.ct-series-l .ct-point,.ct-series-l .ct-slice-donut{stroke:#86797d}.ct-series-l .ct-area,.ct-series-l .ct-slice-pie{fill:#86797d}.ct-series-m .ct-bar,.ct-series-m .ct-line,.ct-series-m .ct-point,.ct-series-m .ct-slice-donut{stroke:#b2c326}.ct-series-m .ct-area,.ct-series-m .ct-slice-pie{fill:#b2c326}.ct-series-n .ct-bar,.ct-series-n .ct-line,.ct-series-n .ct-point,.ct-series-n .ct-slice-donut{stroke:#6188e2}.ct-series-n .ct-area,.ct-series-n .ct-slice-pie{fill:#6188e2}.ct-series-o .ct-bar,.ct-series-o .ct-line,.ct-series-o .ct-point,.ct-series-o .ct-slice-donut{stroke:#a748ca}.ct-series-o .ct-area,.ct-series-o .ct-slice-pie{fill:#a748ca}.ct-square{display:block;position:relative;width:100%}.ct-square:before{display:block;float:left;width:0;height:0;padding-bottom:100%}.ct-square:after{display:table}.ct-square>svg{display:block;position:absolute;top:0;left:0}.ct-minor-second{display:block;position:relative;width:100%}.ct-minor-second:before{display:block;float:left;width:0;height:0;padding-bottom:93.75%}.ct-minor-second:after{display:table}.ct-minor-second>svg{display:block;position:absolute;top:0;left:0}.ct-major-second{display:block;position:relative;width:100%}.ct-major-second:before{display:block;float:left;width:0;height:0;padding-bottom:88.8888888889%}.ct-major-second:after{display:table}.ct-major-second>svg{display:block;position:absolute;top:0;left:0}.ct-minor-third{display:block;position:relative;width:100%}.ct-minor-third:before{display:block;float:left;width:0;height:0;padding-bottom:83.3333333333%}.ct-minor-third:after{display:table}.ct-minor-third>svg{display:block;position:absolute;top:0;left:0}.ct-major-third{display:block;position:relative;width:100%}.ct-major-third:before{display:block;float:left;width:0;height:0;padding-bottom:80%}.ct-major-third:after{display:table}.ct-major-third>svg{display:block;position:absolute;top:0;left:0}.ct-perfect-fourth{display:block;position:relative;width:100%}.ct-perfect-fourth:before{display:block;float:left;width:0;height:0;padding-bottom:75%}.ct-perfect-fourth:after{display:table}.ct-perfect-fourth>svg{display:block;position:absolute;top:0;left:0}.ct-perfect-fifth{display:block;position:relative;width:100%}.ct-perfect-fifth:before{display:block;float:left;width:0;height:0;padding-bottom:66.6666666667%}.ct-perfect-fifth:after{display:table}.ct-perfect-fifth>svg{display:block;position:absolute;top:0;left:0}.ct-minor-sixth{display:block;position:relative;width:100%}.ct-minor-sixth:before{display:block;float:left;width:0;height:0;padding-bottom:62.5%}.ct-minor-sixth:after{display:table}.ct-minor-sixth>svg{display:block;position:absolute;top:0;left:0}.ct-golden-section{display:block;position:relative;width:100%}.ct-golden-section:before{display:block;float:left;content:"";width:0;height:0;padding-bottom:61.804697157%}.ct-golden-section:after{display:table;clear:both}.ct-golden-section>svg{display:block;position:absolute;top:0;left:0}.ct-major-sixth{display:block;position:relative;width:100%}.ct-major-sixth:before{display:block;float:left;width:0;height:0;padding-bottom:60%}.ct-major-sixth:after{display:table}.ct-major-sixth>svg{display:block;position:absolute;top:0;left:0}.ct-minor-seventh{display:block;position:relative;width:100%}.ct-minor-seventh:before{display:block;float:left;width:0;height:0;padding-bottom:56.25%}.ct-minor-seventh:after{display:table}.ct-minor-seventh>svg{display:block;position:absolute;top:0;left:0}.ct-major-seventh{display:block;position:relative;width:100%}.ct-major-seventh:before{display:block;float:left;width:0;height:0;padding-bottom:53.3333333333%}.ct-major-seventh:after{display:table}.ct-major-seventh>svg{display:block;position:absolute;top:0;left:0}.ct-octave{display:block;position:relative;width:100%}.ct-octave:before{display:block;float:left;width:0;height:0;padding-bottom:50%}.ct-octave:after{display:table}.ct-octave>svg{display:block;position:absolute;top:0;left:0}.ct-major-tenth{display:block;position:relative;width:100%}.ct-major-tenth:before{display:block;float:left;width:0;height:0;padding-bottom:40%}.ct-major-tenth:after{display:table}.ct-major-tenth>svg{display:block;position:absolute;top:0;left:0}.ct-major-eleventh{display:block;position:relative;width:100%}.ct-major-eleventh:before{display:block;float:left;width:0;height:0;padding-bottom:37.5%}.ct-major-eleventh:after{display:table}.ct-major-eleventh>svg{display:block;position:absolute;top:0;left:0}.ct-major-twelfth{display:block;position:relative;width:100%}.ct-major-twelfth:before{display:block;float:left;width:0;height:0;padding-bottom:33.3333333333%}.ct-major-twelfth:after{display:table}.ct-major-twelfth>svg{display:block;position:absolute;top:0;left:0}.ct-double-octave{display:block;position:relative;width:100%}.ct-double-octave:before{display:block;float:left;width:0;height:0;padding-bottom:25%}.ct-double-octave:after{display:table}.ct-double-octave>svg{display:block;position:absolute;top:0;left:0}]]></template>
  <template type="public" title="code_editor" version_id="2001070" version_string="2.0.10"><![CDATA[<xf:css src="code_editor.less" />

<xf:macro name="editor_setup" arg-modeConfig="{$modeConfig}" />

<textarea name="{$name}"
	class="codeEditor{{ $extraClasses ? ' ' . $extraClasses : '' }} js-codeEditor u-jsOnly"
	dir="ltr"
	data-xf-init="code-editor"
	data-mode="{{ $modeConfig.mime ?: $modeConfig.modes|first }}"
	data-lang="{$lang}"
	data-config="{$modeConfig.config|json}"
	{{ $readOnly ? 'readonly="readonly"' : '' }}
	style="display: none;" {$attrsHtml|raw}>{$value}</textarea>
<noscript>
	<textarea name="{$name}" class="input input--code" dir="ltr" {{ $readOnly ? 'readonly="readonly"' : '' }}>{$value}</textarea>
</noscript>

<xf:macro name="editor_setup" arg-modeConfig="!">
	<script class="js-codeEditorLanguage" type="application/json">
		{
			"All": "{{ phrase('all')|escape('json') }}",
			"Identical text collapsed. Click to expand.": "{{ phrase('identical_text_collapsed')|escape('json') }}",
			"Jump to line:": "{{ phrase('jump_to_line:')|escape('json') }}",
			"No": "{{ phrase('no')|escape('json') }}",
			"Push to left": "{{ phrase('push_to_left')|escape('json') }}",
			"Replace all:": "{{ phrase('replace_all:')|escape('json') }}",
			"Replace with:": "{{ phrase('replace_with:')|escape('json') }}",
			"Replace:": "{{ phrase('replace:')|escape('json') }}",
			"Replace?": "{{ phrase('replace_question')|escape('json') }}",
			"Revert chunk": "{{ phrase('revert_chunk')|escape('json') }}",
			"Search:": "{{ phrase('search:')|escape('json') }}",
			"Stop": "{{ phrase('stop')|escape('json') }}",
			"Toggle locked scrolling": "{{ phrase('toggle_locked_scrolling')|escape('json') }}",
			"(Use /re/ syntax for regexp search)": "{{ phrase('use_re_syntax')|escape('json') }}",
			"(Use line:column or scroll% syntax)": "{{ phrase('use_line_column_or_scroll_syntax')|escape('json') }}",
			"With:": "{{ phrase('with:')|escape('json') }}",
			"Yes": "{{ phrase('yes')|escape('json') }}"
		}
	</script>
	<xf:js src="vendor/codemirror/codemirror.min.js" />

	<xf:if is="$modeConfig.addons">
		<xf:if is="is_array($modeConfig.addons)">
			<xf:foreach loop="$modeConfig.addons" value="$addon">
				<xf:js src="vendor/codemirror/addon/{$addon}.min.js" />
			</xf:foreach>
		<xf:else />
			<xf:js src="vendor/codemirror/addon/{$modeConfig.addons}.min.js" />
		</xf:if>
	</xf:if>

	<xf:if is="$modeConfig.modes">
		<xf:if is="is_array($modeConfig.modes)">
			<xf:foreach loop="$modeConfig.modes" value="$mode">
				<xf:js src="vendor/codemirror/mode/{$mode}/{$mode}.min.js" />
			</xf:foreach>
		<xf:else />
			<xf:js src="vendor/codemirror/mode/{$modeConfig.modes}/{$modeConfig.modes}.min.js" />
		</xf:if>
	</xf:if>

	<xf:js src="xf/code_editor.js" min="1" />
</xf:macro>]]></template>
  <template type="public" title="code_editor.less" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[/* XF-RTL:disable */

.codeEditor
{
	// standard editor with fixed-width font and 55% screen height, used when the code editor is the primary
	// editable element on screen
	&.CodeMirror
	{
		height: 55vh;
		direction: ltr;

		.xf-input();
		font-family: @xf-fontFamilyCode;
		padding: 0;
		-ltr-rtl-border-color: @xf-borderColorHeavy @xf-borderColorLight @xf-borderColorLight @xf-borderColorHeavy;

		//color: @xf-inputTextColor;
		//background: @xf-inputBgColor;
		//border: @xf-borderSize solid;
		//border-radius: @xf-borderRadiusMedium;

		.m-inputZoomFix();

		&.CodeMirror-focused
		{
			.xf-inputFocus();
		}

		&.CodeMirror-simplescroll
		{
			.CodeMirror-sizer
			{
				// Bit hacky but solves issue with the simplescroll bars overlapping the content
				padding-right: 30px !important;
			}
		}
	}

	// short editor, taking only 30% of the vertical height
	&.codeEditor--short
	{
		height: 30vh;
	}

	// show an editor that shrinks to a very small height for very little content
	&.codeEditor--autoSize
	{
		height: auto;

		.CodeMirror-lines
		{
			min-height: (@xf-fontSizeNormal * @xf-lineHeightDefault * 2) + 8px; // 2 lines, 4px padding from .CodeMirror-lines
		}
	}

	// like --autoSize, but shrinks to a single line when empty
	&.codeEditor--oneLine
	{
		min-height: auto;
	}

	// use proportional font - use this when syntax highlighting is useful, but not imperative, like HTML-enabled descriptions
	&.codeEditor--proportional
	{
		font-family: @xf-fontFamilyUi;
	}
}

[disabled] + .codeEditor,
[disabled] + .codeEditor.CodeMirror-focused
{
	.xf-inputDisabled();
}

[readonly] + .codeEditor,
[readonly] + .codeEditor.CodeMirror-focused
{
	background: mix(xf-default(@xf-input--background-color, @xf-contentBg), xf-default(@xf-inputDisabled--background-color, @xf-paletteNeutral1));
}

/* BASICS */

.CodeMirror {
	height: 300px;
}

/* PADDING */

.CodeMirror-lines {
	padding: 4px 0; /* Vertical padding around content */
}
.CodeMirror pre {
	padding: 0 4px; /* Horizontal padding of content */
}

.CodeMirror-scrollbar-filler, .CodeMirror-gutter-filler {
	background-color: white; /* The little square between H and V scrollbars */
}

/* GUTTER */

.CodeMirror-gutters {
	border-right: 1px solid #ddd;
	background-color: #f7f7f7;
	white-space: nowrap;
}
.CodeMirror-linenumbers {}
.CodeMirror-linenumber {
	padding: 0 3px 0 5px;
	min-width: 20px;
	text-align: right;
	color: #999;
	white-space: nowrap;
}

.CodeMirror-guttermarker { color: black; }
.CodeMirror-guttermarker-subtle { color: #999; }

/* CURSOR */

.CodeMirror-cursor {
	border-left: 1px solid black;
	border-right: none;
	width: 0;
}
/* Shown when moving in bi-directional text */
.CodeMirror div.CodeMirror-secondarycursor {
	border-left: 1px solid silver;
}
.cm-fat-cursor .CodeMirror-cursor {
	width: auto;
	border: 0 !important;
	background: #7e7;
}
.cm-fat-cursor div.CodeMirror-cursors {
	z-index: 1;
}

.cm-animate-fat-cursor {
	width: auto;
	border: 0;
	-webkit-animation: blink 1.06s steps(1) infinite;
	-moz-animation: blink 1.06s steps(1) infinite;
	animation: blink 1.06s steps(1) infinite;
	background-color: #7e7;
}
@-moz-keyframes blink {
	0% {}
	50% { background-color: transparent; }
	100% {}
}
@-webkit-keyframes blink {
	0% {}
	50% { background-color: transparent; }
	100% {}
}
@keyframes blink {
	0% {}
	50% { background-color: transparent; }
	100% {}
}

/* Can style cursor different in overwrite (non-insert) mode */
.CodeMirror-overwrite .CodeMirror-cursor {}

.cm-tab { display: inline-block; text-decoration: inherit; }

.CodeMirror-rulers {
	position: absolute;
	left: 0; right: 0; top: -50px; bottom: -20px;
	overflow: hidden;
}
.CodeMirror-ruler {
	border-left: 1px solid #ccc;
	top: 0; bottom: 0;
	position: absolute;
}

/* DEFAULT THEME */

.cm-s-default .cm-header {color: blue;}
.cm-s-default .cm-quote {color: #090;}
.cm-negative {color: #d44;}
.cm-positive {color: #292;}
.cm-header, .cm-strong {font-weight: bold;}
.cm-em {font-style: italic;}
.cm-link {text-decoration: underline;}
.cm-strikethrough {text-decoration: line-through;}

.cm-s-default .cm-keyword {color: #708;}
.cm-s-default .cm-atom {color: #219;}
.cm-s-default .cm-number {color: #164;}
.cm-s-default .cm-def {color: #00f;}
.cm-s-default .cm-variable,
.cm-s-default .cm-punctuation,
.cm-s-default .cm-property,
.cm-s-default .cm-operator {}
.cm-s-default .cm-variable-2 {color: #05a;}
.cm-s-default .cm-variable-3 {color: #085;}
.cm-s-default .cm-comment {color: #a50;}
.cm-s-default .cm-string {color: #a11;}
.cm-s-default .cm-string-2 {color: #f50;}
.cm-s-default .cm-meta {color: #555;}
.cm-s-default .cm-qualifier {color: #555;}
.cm-s-default .cm-builtin {color: #30a;}
.cm-s-default .cm-bracket {color: #997;}
.cm-s-default .cm-tag {color: #170;}
.cm-s-default .cm-attribute {color: #00c;}
.cm-s-default .cm-hr {color: #999;}
.cm-s-default .cm-link {color: #00c;}

.cm-s-default .cm-error {color: #f00;}
.cm-invalidchar {color: #f00;}

.CodeMirror-composing { border-bottom: 2px solid; }

/* Default styles for common addons */

div.CodeMirror span.CodeMirror-matchingbracket {color: #0f0;}
div.CodeMirror span.CodeMirror-nonmatchingbracket {color: #f22;}
.CodeMirror-matchingtag { background: rgba(255, 150, 0, .3); }
.CodeMirror-activeline-background {background: #e8f2ff;}

// Extra stuff for DARK styles, taking values from CodeMirror's DARCULA theme
.cm-s-default
{
	& when (@xf-styleType = dark)
	{
		&.CodeMirror
		{
			.CodeMirror-cursor { border-left: 1px solid #dddddd; }
			.CodeMirror-activeline-background { background: #3A3A3A; }
			.CodeMirror-selected { background: #085a9c; }
			.CodeMirror-gutters { background: rgb(72, 72, 72); border-right: 1px solid grey; color: #606366 }
			.CodeMirror-matchingbracket { background-color: #3b514d; color: yellow !important; }
		}

		span.cm-keyword { font-weight: bold; color: #CC7832; }
		span.cm-atom { font-weight: bold; color: #CC7832; }
		span.cm-number { color: #6897BB; }
		span.cm-def { color: #FFC66D; }
		span.cm-variable { color: #A9B7C6; }
		span.cm-property { color: #A9B7C6; }
		span.cm-operator { color: #A9B7C6; }
		span.cm-variable-2 { color: #A9B7C6; }
		span.cm-variable-3,
		span.cm-comment { color: #808080; }
		span.cm-string { color: #6A8759; }
		span.cm-string-2 { color: #6A8759; }
		span.cm-meta { color: #BBB529; }
		span.cm-qualifier { color: #6A8759; }
		span.cm-builtin { color: #A9B7C6; }
		span.cm-bracket { color: #A9B7C6; }
		span.cm-tag { color: #CC7832; }
		span.cm-attribute { color: #6A8759; }
		span.cm-link { color: #287BDE; }
		span.cm-error { color: #BC3F3C; }
		span.cm-invalidchar { color: #BC3F3C; }
		span.cm-type { color: #A9B7C6; }
	}
}

/* STOP */

/* The rest of this file contains styles related to the mechanics of
   the editor. You probably shouldn't touch them. */

.CodeMirror {
	position: relative;
	overflow: hidden;
	background: white;
}

.CodeMirror-scroll {
	overflow: scroll !important; /* Things will break if this is overridden */
	/* 30px is the magic margin used to hide the element's real scrollbars */
	/* See overflow: hidden in .CodeMirror */
	margin-bottom: -30px; margin-right: -30px;
	padding-bottom: 30px;
	height: 100%;
	outline: none; /* Prevent dragging from highlighting the element */
	position: relative;
}
.CodeMirror-sizer {
	position: relative;
	border-right: 30px solid transparent;
}

/* The fake, visible scrollbars. Used to force redraw during scrolling
   before actual scrolling happens, thus preventing shaking and
   flickering artifacts. */
.CodeMirror-vscrollbar, .CodeMirror-hscrollbar, .CodeMirror-scrollbar-filler, .CodeMirror-gutter-filler {
	position: absolute;
	z-index: 6;
	display: none;
}
.CodeMirror-vscrollbar {
	right: 0; top: 0;
	overflow-x: hidden;
	overflow-y: scroll;
}
.CodeMirror-hscrollbar {
	bottom: 0; left: 0;
	overflow-y: hidden;
	overflow-x: scroll;
}
.CodeMirror-scrollbar-filler {
	right: 0; bottom: 0;
}
.CodeMirror-gutter-filler {
	left: 0; bottom: 0;
}

.CodeMirror-gutters {
	position: absolute; left: 0; top: 0;
	min-height: 100%;
	z-index: 3;
}
.CodeMirror-gutter {
	white-space: normal;
	height: 100%;
	display: inline-block;
	vertical-align: top;
	margin-bottom: -30px;
}
.CodeMirror-gutter-wrapper {
	position: absolute;
	z-index: 4;
	background: none !important;
	border: none !important;
}
.CodeMirror-gutter-background {
	position: absolute;
	top: 0; bottom: 0;
	z-index: 4;
}
.CodeMirror-gutter-elt {
	position: absolute;
	cursor: default;
	z-index: 4;
}
.CodeMirror-gutter-wrapper {
	-webkit-user-select: none;
	-moz-user-select: none;
	user-select: none;
}

.CodeMirror-lines {
	cursor: text;
	min-height: 1px; /* prevents collapsing before first draw */
}
.CodeMirror pre {
	/* Reset some styles that the rest of the page might have set */
	-moz-border-radius: 0; -webkit-border-radius: 0; border-radius: 0;
	border-width: 0;
	background: transparent;
	font-family: inherit;
	font-size: inherit;
	margin: 0;
	white-space: pre;
	word-wrap: normal;
	line-height: inherit;
	color: inherit;
	z-index: 2;
	position: relative;
	overflow: visible;
	-webkit-tap-highlight-color: transparent;
	-webkit-font-variant-ligatures: none;
	font-variant-ligatures: none;
}
.CodeMirror-wrap pre {
	word-wrap: break-word;
	white-space: pre-wrap;
	word-break: normal;
}

.CodeMirror-linebackground {
	position: absolute;
	left: 0; right: 0; top: 0; bottom: 0;
	z-index: 0;
}

.CodeMirror-linewidget {
	position: relative;
	z-index: 2;
	overflow: auto;
}

.CodeMirror-widget {}

.CodeMirror-code {
	outline: none;
}

/* Force content-box sizing for the elements where we expect it */
.CodeMirror-scroll,
.CodeMirror-sizer,
.CodeMirror-gutter,
.CodeMirror-gutters,
.CodeMirror-linenumber {
	-moz-box-sizing: content-box;
	box-sizing: content-box;
}

.CodeMirror-measure {
	position: absolute;
	width: 100%;
	height: 0;
	overflow: hidden;
	visibility: hidden;
}

.CodeMirror-cursor {
	position: absolute;
	pointer-events: none;
}
.CodeMirror-measure pre { position: static; }

div.CodeMirror-cursors {
	visibility: hidden;
	position: relative;
	z-index: 3;
}
div.CodeMirror-dragcursors {
	visibility: visible;
}

.CodeMirror-focused div.CodeMirror-cursors {
	visibility: visible;
}

.CodeMirror-selected { background: #d9d9d9; }
.CodeMirror-focused .CodeMirror-selected { background: #d7d4f0; }
.CodeMirror-crosshair { cursor: crosshair; }
.CodeMirror-line::selection, .CodeMirror-line > span::selection, .CodeMirror-line > span > span::selection { background: #d7d4f0; }
.CodeMirror-line::-moz-selection, .CodeMirror-line > span::-moz-selection, .CodeMirror-line > span > span::-moz-selection { background: #d7d4f0; }

.cm-searching {
	background: #ffa;
	background: rgba(255, 255, 0, .4);
}

/* Used to force a border model for a node */
.cm-force-border { padding-right: .1px; }

@media print {
	/* Hide the cursor when printing */
	.CodeMirror div.CodeMirror-cursors {
		visibility: hidden;
	}
}

/* See issue #2901 */
.cm-tab-wrap-hack:after { content: ''; }

/* Help users use markselection to safely style text background */
span.CodeMirror-selectedtext { background: none; }

/* Simple scrollbars */

.CodeMirror-simplescroll-horizontal div, .CodeMirror-simplescroll-vertical div {
	position: absolute;
	background: #ccc;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
	border: 1px solid #bbb;
	border-radius: 2px;
}

.CodeMirror-simplescroll-horizontal, .CodeMirror-simplescroll-vertical {
	position: absolute;
	z-index: 6;
	background: #eee;
}

.CodeMirror-simplescroll-horizontal {
	bottom: 0; left: 0;
	height: 8px;
}
.CodeMirror-simplescroll-horizontal div {
	bottom: 0;
	height: 100%;
}

.CodeMirror-simplescroll-vertical {
	right: 0; top: 0;
	width: 8px;
}
.CodeMirror-simplescroll-vertical div {
	right: 0;
	width: 100%;
}


.CodeMirror-overlayscroll .CodeMirror-scrollbar-filler, .CodeMirror-overlayscroll .CodeMirror-gutter-filler {
	display: none;
}

.CodeMirror-overlayscroll-horizontal div, .CodeMirror-overlayscroll-vertical div {
	position: absolute;
	background: #bcd;
	border-radius: 3px;
}

.CodeMirror-overlayscroll-horizontal, .CodeMirror-overlayscroll-vertical {
	position: absolute;
	z-index: 6;
}

.CodeMirror-overlayscroll-horizontal {
	bottom: 0; left: 0;
	height: 6px;
}
.CodeMirror-overlayscroll-horizontal div {
	bottom: 0;
	height: 100%;
}

.CodeMirror-overlayscroll-vertical {
	right: 0; top: 0;
	width: 6px;
}
.CodeMirror-overlayscroll-vertical div {
	right: 0;
	width: 100%;
}

/* Dialog add-on */

.CodeMirror-dialog {
	position: absolute;
	left: 0; right: 0;
	background: inherit;
	z-index: 15;
	padding: .1em .8em;
	overflow: hidden;
	color: inherit;
}

.CodeMirror-dialog-top {
	border-bottom: 1px solid #eee;
	top: 0;
}

.CodeMirror-dialog-bottom {
	border-top: 1px solid #eee;
	bottom: 0;
}

.CodeMirror-dialog input {
	border: none;
	outline: none;
	background: transparent;
	width: 20em;
	color: inherit;
}

.CodeMirror-dialog button {
	font-size: 70%;
}

.CodeMirror-fullscreen {
	position: fixed;
	top: 0; left: 0; right: 0; bottom: 0;
	height: auto;
	z-index: @zIndex-9;
}

/* XF-RTL:enable */]]></template>
  <template type="public" title="code_editor_mode_loader" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro template="public:code_editor" name="editor_setup" arg-modeConfig="{$modeConfig}" />]]></template>
  <template type="public" title="color_picker.less" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[.colorPickerBox
{
	display: inline-block;
	position: relative;
	//width: 1.8em;
	width: 56px;
	height: 1.3em;
	border: 1px dashed @xf-borderColorHeavy;
	border-radius: @xf-borderRadiusSmall;
	background: @xf-contentBg;
	cursor: pointer;

	.colorPickerBox-sample
	{
		display: none;
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
	}

	&.is-unknown
	{
		&:after
		{
			content: '?';
			display: block;
			line-height: 1;
			font-size: 120%;
			font-weight: @xf-fontWeightHeavy;
			color: @xf-textColorMuted;
		}
	}

	&.is-active
	{
		border-style: solid;
		.m-checkerboardBackground();

		&:after
		{
			display: none;
		}

		.colorPickerBox-sample
		{
			display: block;
			background: red;
		}
	}
}

@_colorPicker-borderColor: @xf-borderColorHeavy;
@_colorPicker-arrowSize: 6px;
@_colorPicker-mainHeight: 250px + (@_colorPicker-arrowSize) + ((@xf-paddingLarge) * 2);

/* XF-RTL:disable */

// HSV gradients from Spectrum (https://github.com/bgrins/spectrum), MIT licensed
.colorPicker-sliders
{
	height: @_colorPicker-mainHeight;
	padding: @xf-paddingLarge;
	.m-clearFix();
}

.colorPicker-colorGrad
{
	width: 220px;
	height: 220px;
}

.colorPicker-colorGrad-color
{
	position: relative;
	width: 100%;
	height: 100%;
	border: 1px solid @_colorPicker-borderColor;
	background: red;
}

.colorPicker-colorGrad-sat,
.colorPicker-colorGrad-val
{
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
}

.colorPicker-colorGrad-sat
{
	background-image: linear-gradient(to right, #fff, rgba(204, 154, 129, 0));
}

.colorPicker-colorGrad-val
{
	background-image: linear-gradient(to top, #000, rgba(204, 154, 129, 0));
}

.colorPicker-colorGrad-indicator
{
	position: absolute;
	top: 0;
	left: 0;
	width: 8px;
	height: 8px;
	margin-left: -4px;
	margin-top: -4px;
	border-radius: 50%;
	border: 1px solid #666;
	box-shadow: 0 0 0 1px white;
	pointer-events: none;
}

.colorPicker-hue
{
	float: right;
	margin-left: 10px;
	height: 250px;
	width: 20px;
}

.colorPicker-hue-bar
{
	position: relative;
	width: 100%;
	height: 100%;
	background: linear-gradient(to bottom, #ff0000 0%, #ffff00 17%, #00ff00 33%, #00ffff 50%, #0000ff 67%, #ff00ff 83%, #ff0000 100%);
	border: 1px solid @_colorPicker-borderColor;
}

.colorPicker-hue-indicator
{
	position: absolute;
	height: 1px;
	background: #666;
	top: 0;
	left: -1px;
	right: -1px;
	z-index: @zIndex-1;
	pointer-events: none;

	&:before
	{
		content: '';
		position: absolute;
		left: -@_colorPicker-arrowSize;
		top: -(@_colorPicker-arrowSize - 1px);
		.m-triangleRight(#666, @_colorPicker-arrowSize);
	}

	&:after
	{
		content: '';
		position: absolute;
		right: -@_colorPicker-arrowSize;
		top: -(@_colorPicker-arrowSize - 1px);
		.m-triangleLeft(#666, @_colorPicker-arrowSize);
	}
}

.colorPicker-alpha
{
	margin-top: 10px;
	height: 20px;
	width: 220px;
	background-clip: content-box;
	.m-checkerboardBackground();
}

.colorPicker-alpha-bar
{
	position: relative;
	width: 100%;
	height: 100%;
	border: 1px solid @_colorPicker-borderColor;
}

.colorPicker-alpha-indicator
{
	position: absolute;
	width: 1px;
	background: #666;
	left: 0;
	top: -1px;
	bottom: -1px;
	z-index: @zIndex-1;
	pointer-events: none;

	&:before
	{
		content: '';
		position: absolute;
		left: -@_colorPicker-arrowSize;
		top: -(@_colorPicker-arrowSize - 1px);
		.m-triangleDown(#666, @_colorPicker-arrowSize);
	}

	&:after
	{
		content: '';
		position: absolute;
		left: -@_colorPicker-arrowSize;
		bottom: -(@_colorPicker-arrowSize - 1px);
		.m-triangleUp(#666, @_colorPicker-arrowSize);
	}
}

/* XF-RTL:enable */

.colorPicker-inputs
{
	.m-clearFix();
	padding: @xf-paddingMedium @xf-paddingLarge;
}

.colorPicker-preview
{
	float: left;
	position: relative;
	width: 40px;
	height: 70px;
	border: 1px solid @_colorPicker-borderColor;
	background-clip: content-box;
	.m-checkerboardBackground()
}

.colorPicker-preview-current
{
	position: absolute;
	left: 0;
	right: 0;
	top: 0;
	bottom: 50%;
}

.colorPicker-preview-original
{
	position: absolute;
	left: 0;
	right: 0;
	top: 50%;
	bottom: 0;
}

.colorPicker-inputContainer
{
	margin-left: 46px;
}

.colorPicker-saveContainer
{
	margin-left: 46px;
	margin-top: 6px;
	text-align: right;
}

.colorPicker-propertyContainer
{
	height: @_colorPicker-mainHeight;
	overflow: auto;
	border-bottom: 1px solid @xf-borderColor;
}

.colorPicker-property
{
	position: relative;
	padding: @xf-paddingSmall @xf-paddingMedium;
	padding-left: 2.9em;
	cursor: pointer;

	&.is-active
	{
		background: @xf-contentHighlightBg;
		font-weight: @xf-fontWeightHeavy;
		color: @xf-textColorEmphasized;
	}

	&:hover
	{
		background: @xf-contentHighlightBg;
	}
}

.colorPicker-propName
{
	display: block;
	color: fade(@xf-textColorMuted, 75%);
	font-size: @xf-fontSizeSmallest;
}

.colorPicker-property-preview
{
	position: absolute;
	top: .2em;
	left: .3em;
	bottom: .2em;
	width: 2.4em;
	border: 1px solid @xf-borderColorHeavy;

	.colorPicker-property.is-unknown &
	{
		border-style: dashed;
		display: flex;
		align-items: center;

		&:after
		{
			content: '?';
			display: block;
			width: 100%;
			text-align: center;
			line-height: 1;
			font-size: 1.6em;
			font-weight: @xf-fontWeightHeavy;
			color: @xf-textColorMuted;
		}
	}
}

.menu.menu--colorPicker
{
	width: 294px;
	max-width: 100%;
}

.inputGroup.inputGroup--colorSmall
{
	width: 180px;
}

.m-checkerboardBackground(@color: #D8D8D8; @size: 12px)
{
	background-image: linear-gradient(45deg, @color 25%, transparent 25%),
		linear-gradient(-45deg, @color 25%, transparent 25%),
		linear-gradient(45deg, transparent 75%, @color 75%),
		linear-gradient(-45deg, transparent 75%, @color 75%);
	background-size: @size @size;
	background-position: 0 0, 0 ((@size) / 2), ((@size) / 2) -((@size) / 2), -((@size) / 2) 0px;
}]]></template>
  <template type="public" title="color_picker_macros" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:macro name="color_picker"
	arg-name="!"
	arg-value=""
	arg-mapName=""
	arg-allowPalette="false"
	arg-label=""
	arg-hint=""
	arg-explain=""
	arg-html=""
	arg-row="{{ true }}"
	arg-rowClass=""
	arg-rowtype=""
	arg-colorData=""
	arg-required="{{ false }}"
	arg-includeScripts="{{ true }}"
	arg-showTxt="{{ false }}">

	<xf:css src="public:color_picker.less" />
	<xf:js src="xf/color_picker.js" min="1" />

	<xf:set var="$picker">
		<div class="inputGroup inputGroup--joined inputGroup--color"
			data-xf-init="color-picker"
			data-allow-palette="{$allowPalette}"
			data-map-name="{$mapName}">

			<xf:textbox name="{$name}" value="{$value}" required="{$required}" dir="ltr" />
			<div class="inputGroup-text"><span class="colorPickerBox js-colorPickerTrigger"></span></div>
			<xf:if is="{$showTxt}">
				<div class="inputGroup-text inputGroup-text--rgbTxt"><span class="js-rgbTxt-r"></span></div>
				<div class="inputGroup-text inputGroup-text--rgbTxt"><span class="js-rgbTxt-g"></span></div>
				<div class="inputGroup-text inputGroup-text--rgbTxt"><span class="js-rgbTxt-b"></span></div>
				<!--<div class="inputGroup-text inputGroup-text&#45;&#45;rgbTxt"><span class="js-rgbTxt-b"></span></div>-->
			</xf:if>
		</div>
	</xf:set>

	<xf:if is="$row">
		<xf:formrow rowtype="{$rowtype}"
			rowclass="formRow--input {$rowClass}"
			label="{$label}"
			hint="{$hint}"
			explain="{$explain}"
			html="{$html}">

			{$picker|raw}
		</xf:formrow>
	<xf:else />
		{$picker|raw}
	</xf:if>

	<xf:if is="{$includeScripts}">
		<xf:macro name="color_picker_scripts" arg-colorData="{$colorData}" />
	</xf:if>
</xf:macro>



<xf:macro name="color_picker_scripts" arg-colorData="">

	<xf:head option="js-colorPicker">

		<script class="js-namedColors" type="application/json">
			{{ named_colors()|json|raw }}
		</script>

		<script class="js-extraPhrases" type="application/json">
			{
				"picker": "{{ phrase('picker')|escape('json') }}",
				"update": "{{ phrase('update')|escape('json') }}"
			}
		</script>

		<xf:if is="$colorData">
			<script class="js-colorPickerData" type="application/json">
				{$colorData|json|raw}
			</script>
		</xf:if>

	</xf:head>

</xf:macro>]]></template>
  <template type="public" title="connected_account_associated_facebook" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[<a href="{{ $providerData.profile_link ?: 'http://www.facebook.com/profile.php?id=' . $connectedAccounts.facebook }}" target="_blank">
	<img src="https://graph.facebook.com/{$connectedAccounts.facebook}/picture" width="48" alt="" />
</a>
<div><a href="{{ $providerData.profile_link ?: 'https://www.facebook.com/profile.php?id=' . $connectedAccounts.facebook }}" target="_blank">{{ $providerData.username ?: phrase('view_account') }}</a></div>]]></template>
  <template type="public" title="connected_account_associated_github" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[<xf:if is="$providerData.profile_link">
	<a href="{$providerData.profile_link}" target="_blank">
		<img src="{{ $providerData.avatar_url ?: 'https://avatars.githubusercontent.com/u/{$connectedAccounts.github}?v=3' }}" width="48" alt="" />
	</a>
	<div><a href="{$providerData.profile_link}" target="_blank">{{ $providerData.username ?: phrase('view_account') }}</a></div>
<xf:else />
	<img src="h{{ $providerData.avatar_url ?: 'https://avatars.githubusercontent.com/u/{$connectedAccounts.github}?v=3' }}" width="48" alt="" />
	<div>{{ $providerData.username ?: phrase('account_associated') }}</div>
</xf:if>]]></template>
  <template type="public" title="connected_account_associated_google" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[<a href="https://plus.google.com/u/0/{$connectedAccounts.google}" target="_blank">
	<xf:if is="$providerData.avatar_url">
		<img src="{$providerData.avatar_url}" width="48" alt="" />
	</xf:if>
</a>
<div><a href="https://plus.google.com/u/0/{$connectedAccounts.google}" target="_blank">{{ $providerData.username ?: phrase('view_account') }}</a></div>]]></template>
  <template type="public" title="connected_account_associated_linkedin" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[<xf:if is="$providerData.profile_link">
	<a href="{$providerData.profile_link}" target="_blank">
		<img src="{$providerData.pictureUrl}" width="48" alt="" />
	</a>
	<div><a href="{$providerData.profile_link}" target="_blank">{$providerData.formattedName}</a></div>
<xf:else />
	{{ phrase('account_associated') }}
</xf:if>]]></template>
  <template type="public" title="connected_account_associated_microsoft" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[<xf:if is="$providerData.avatar_url">
	<a href="https://profile.live.com/{$connectedAccounts.microsoft}" target="_blank">
		<img src="{$providerData.avatar_url}" width="48" alt="" />
	</a>
</xf:if>
<div><a href="https://profile.live.com/{$connectedAccounts.microsoft}" target="_blank">{{ $providerData.username ?: phrase('view_account') }}</a></div>]]></template>
  <template type="public" title="connected_account_associated_twitter" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[<xf:if is="$providerData">
	<a href="https://twitter.com/{$providerData.screen_name}" target="_blank">
		<img src="{$providerData.avatar_url}" width="48" alt="" />
	</a>
	<div><a href="https://twitter.com/{$providerData.screen_name}" target="_blank">@{$providerData.screen_name} {$providerData.username|parens}</a></div>
<xf:else />
	{{ phrase('account_associated') }}
</xf:if>]]></template>
  <template type="public" title="connected_account_associated_yahoo" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[<xf:if is="$providerData.avatar_url">
	<img src="{$providerData.avatar_url}" width="48" alt="" />
</xf:if>
<div>{{ $providerData.username ?: phrase('account_associated') }}</div>]]></template>
  <template type="public" title="connected_account_macros" version_id="2001370" version_string="2.0.13"><![CDATA[<xf:macro name="associate" arg-provider="!">
	<xf:formrow
		label="{$provider.title}"
		explain="{$provider.description|raw}">

		<xf:macro template="connected_account_macros" name="button"
			arg-provider="{$provider}"
			arg-text="{{ phrase('associate_with_x', {'provider': $provider.title}) }}" />
	</xf:formrow>
</xf:macro>

<xf:macro name="disassociate" arg-provider="!" arg-hasPassword="!">
	<xf:set var="$explain" value="{{ (!$hasPassword && count($xf.visitor.Profile.connected_accounts) == 1) ? phrase('disassociating_with_all_accounts_cause_password_emailed_x', {'email': $xf.visitor.email}) : '' }}" />
	<xf:formrow
		label="{$provider.title}"
		explain="{$explain}">

		<div>{$provider.renderAssociated()|raw}</div>

		<xf:form action="{{ link('account/connected-accounts/disassociate', $provider) }}" class="u-inputSpacer">
			<xf:checkbox>
				<xf:option name="disassociate"
					label="{{ phrase('disassociate_x_account', {'provider': $provider.title}) }}">

					<xf:dependent>
						<xf:button type="submit">{{ phrase('confirm_disassociation') }}</xf:button>
					</xf:dependent>
				</xf:option>
			</xf:checkbox>
		</xf:form>
	</xf:formrow>
</xf:macro>

<xf:macro name="button" arg-provider="!" arg-link="{{ null }}" arg-text="{{ null }}">
	<xf:button href="{{ $link ?: link('register/connected-accounts', $provider, {'setup': true}) }}"
		class="button--provider button--provider--{$provider.provider_id}">
		<xf:if is="$provider.icon_url">
			<img class="button-icon" alt="" src="{$provider.icon_url}" />
		</xf:if>
		{{ $text ?: $provider.title }}
	</xf:button>
</xf:macro>]]></template>
  <template type="public" title="contact_form" version_id="2001070" version_string="2.0.10"><![CDATA[<xf:title>{{ phrase('contact_us') }}</xf:title>

<xf:form action="{{ link('misc/contact') }}" class="block" ajax="true" data-force-flash-message="true">
	<div class="block-container">
		<div class="block-body">
			<xf:if is="!$xf.visitor.user_id">
				<xf:textboxrow name="username" autofocus="autofocus" maxlength="{{ max_length($xf.visitor, 'username') }}"
					label="{{ phrase('your_name') }}" required="required" hint="{{ phrase('required') }}" />

				<xf:textboxrow name="email" maxlength="{{ max_length($xf.visitor, 'email') }}" type="email"
					label="{{ phrase('your_email_address') }}" required="required" hint="{{ phrase('required') }}" />
			<xf:else />
				<xf:formrow label="{{ phrase('your_name') }}">{$xf.visitor.username}</xf:formrow>
				<xf:if is="$xf.visitor.email">

					<xf:formrow label="{{ phrase('your_email_address') }}">{$xf.visitor.email}</xf:formrow>

				<xf:else />

					<xf:textboxrow name="email" type="email"
						label="{{ phrase('your_email_address') }}" required="required" hint="{{ phrase('required') }}" />

				</xf:if>
			</xf:if>

			<xf:captcharow label="{{ phrase('verification') }}" hint="{{ phrase('required') }}" />

			<xf:textboxrow name="subject"
				label="{{ phrase('subject') }}" required="required" hint="{{ phrase('required') }}" />

			<xf:textarearow name="message" rows="5" autosize="true"
				label="{{ phrase('message') }}" required="required" hint="{{ phrase('required') }}" />
		</div>
		<xf:submitrow submit="{{ phrase('send') }}" />
	</div>
	<xf:redirect />
</xf:form>]]></template>
  <template type="public" title="content_ip_view" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('ip_address_information_for_content_by_x', {'name': $ip.User.username ?: phrase('guest')}) }}</xf:title>

<xf:breadcrumb source="{$breadcrumbs}" />

<xf:macro template="helper_ip" name="ip_block" arg-ip="{$ip.ip}" arg-user="{$ip.User}" />]]></template>
  <template type="public" title="conversation_add" version_id="2000038" version_string="2.0.0 Beta 8"><![CDATA[<xf:title>{{ phrase('start_conversation') }}</xf:title>

<xf:breadcrumb href="{{ link('conversations') }}">{{ phrase('conversations') }}</xf:breadcrumb>

<xf:if contentcheck="true">
	<div class="blockMessage blockMessage--error blockMessage--iconic">
		<xf:contentcheck>
			<xf:if is="$errorUsernames is not empty">
				<div>{{ phrase('you_can_not_start_conversation_with_following_users_because_of_privacy', {'usernames': $errorUsernames|join(', ')}) }}</div>
			</xf:if>

			<xf:if is="$notFoundUsernames is not empty">
				<div>{{ phrase('following_users_not_found_x', {'usernames': $notFoundUsernames|join(', ')}) }}</div>
			</xf:if>

			<xf:if is="$recipientLimit">
				<div>{{ phrase('you_have_exceeded_allowed_number_of_recipients_x_for', {'limit': $recipientLimit}) }}</div>
			</xf:if>
		</xf:contentcheck>
	</div>
</xf:if>

<xf:form action="{{ link('conversations/add') }}" ajax="true" draft="{{ link('conversations/draft') }}" data-preview-url="{{ link('conversations/add-preview') }}" class="block" data-xf-init="attachment-manager">
	<div class="block-container">
		<div class="block-body">
			<xf:tokeninputrow name="recipients" value="{$to}" href="{{ link('members/find') }}"
				rowtype="fullWidth"
				label="{{ phrase('recipients') }}"
				explain="{{ phrase('separate_names_with_comma') }}" />

			<xf:textboxrow name="title" value="{$title}" rowtype="fullWidth noLabel" class="input--title"
				maxlength="{{ max_length('XF:ConversationMaster', 'title') }}"
				placeholder="{{ phrase('title...') }}"
				label="{{ phrase('title') }}" />

			<xf:editorrow name="message"
				value="{$message}"
				attachments="{{ $attachmentData ? $attachmentData.attachments : [] }}"
				rowtype="fullWidth noLabel mergePrev" />

			<xf:formrow>
				<xf:if is="$attachmentData">
					<xf:macro template="helper_attach_upload" name="upload_block"
						arg-attachmentData="{$attachmentData}"
						arg-forceHash="{$draft.attachment_hash}" />
				</xf:if>

				<xf:if is="$xf.options.multiQuote">
					<xf:macro template="multi_quote_macros" name="button"
						arg-href="{{ link('conversations/multi-quote', $conversation) }}"
						arg-messageSelector=".js-message"
						arg-storageKey="multiQuoteConversation" />
				</xf:if>

				<xf:button class="button--link u-jsOnly" data-xf-click="preview-click" icon="preview" />
			</xf:formrow>

			<xf:checkboxrow>
				<xf:option name="open_invite" checked="{{ ($draft.open_invite OR $conversation.open_invite) ? 'checked' : '' }}">
					{{ phrase('allow_anyone_in_conversation_to_invite_others') }}
				</xf:option>

				<xf:option name="conversation_locked" checked="{{ ($draft.conversation_open OR $conversation.conversation_open) ? '' : 'checked' }}">
					{{ phrase('lock_conversation_no_responses_will_be_allowed') }}
				</xf:option>
			</xf:checkboxrow>
		</div>
		<xf:submitrow submit="{{ phrase('start_conversation') }}" sticky="true" icon="conversation">
			<xf:html>
				<xf:button class="u-jsOnly" data-xf-click="preview-click" icon="preview" />
			</xf:html>
		</xf:submitrow>
	</div>
</xf:form>]]></template>
  <template type="public" title="conversation_edit" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('edit_conversation') }}</xf:title>

<xf:breadcrumb href="{{ link('conversations') }}">{{ phrase('conversations') }}</xf:breadcrumb>
<xf:breadcrumb href="{{ link('conversations', $conversation) }}">{$conversation.title}</xf:breadcrumb>

<xf:form action="{{ link('conversations/edit', $conversation) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:textboxrow name="title" value="{$conversation.title}"
				maxlength="{{ max_length($conversation, 'title') }}"
				label="{{ phrase('title') }}" />

			<xf:checkboxrow>
				<xf:option name="open_invite" checked="{{ $conversation.open_invite ? 'checked' : '' }}"
					label="{{ phrase('allow_anyone_in_conversation_to_invite_others') }}" />

				<xf:option name="conversation_locked" checked="{{ $conversation.conversation_open ? '' : 'checked' }}"
					label="{{ phrase('lock_conversation') }}"
					hint="{{ phrase('no_responses_will_be_allowed') }}" />
			</xf:checkboxrow>
		</div>
		<xf:submitrow icon="save" />
	</div>
</xf:form>]]></template>
  <template type="public" title="conversation_invite" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('invite_members_to_conversation') }}</xf:title>

<xf:breadcrumb href="{{ link('conversations') }}">{{ phrase('conversations') }}</xf:breadcrumb>
<xf:breadcrumb href="{{ link('conversations', $conversation) }}">{$conversation.title}</xf:breadcrumb>

<xf:form action="{{ link('conversations/invite', $conversation) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:tokeninputrow name="recipients" href="{{ link('members/find') }}"
				label="{{ phrase('invite_members') }}">

				<xf:explain>
					{{ phrase('separate_names_with_comma') }} {{ phrase('invited_members_see_entire_conversation') }}
					<xf:if is="$conversation.getRemainingRecipientsCount() > 0">{{ phrase('you_may_invite_up_to_x_members', {'number': $conversation.getRemainingRecipientsCount()|number}) }}</xf:if>
				</xf:explain>
			</xf:tokeninputrow>
		</div>
		<xf:submitrow submit="{{ phrase('invite') }}" />
	</div>
</xf:form>]]></template>
  <template type="public" title="conversation_leave" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('leave_conversation') }}</xf:title>

<xf:breadcrumb href="{{ link('conversations') }}">{{ phrase('conversations') }}</xf:breadcrumb>
<xf:breadcrumb href="{{ link('conversations', $conversation) }}">{$conversation.title}</xf:breadcrumb>

<xf:form action="{{ link('conversations/leave', $conversation) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow>
				{{ phrase('leaving_conversation_will_remove_it_from_your_conversation_list') }}
			</xf:inforow>
			<xf:radiorow name="recipient_state"
				label="{{ phrase('future_message_handling') }}">

				<xf:option value="deleted" checked="checked"
					label="{{ phrase('accept_future_messages') }}"
					hint="{{ phrase('should_conversation_receive_responses_restored_to_inbox') }}" />

				<xf:option value="deleted_ignored"
					label="{{ phrase('ignore_future_messages') }}"
					hint="{{ phrase('not_notified_of_responses_conversation_remain_deleted') }}" />
			</xf:radiorow>
		</div>
		<xf:submitrow submit="{{ phrase('leave') }}" />
	</div>
</xf:form>]]></template>
  <template type="public" title="conversation_list" version_id="2010037" version_string="2.1.0 Beta 7"><![CDATA[<xf:title page="{$page}">{{ phrase('conversations') }}</xf:title>

<xf:js src="xf/inline_mod.js" min="1" />

<xf:pageaction if="$xf.visitor.canStartConversation()">
	<xf:button href="{{ link('conversations/add') }}" class="button--cta" icon="write">{{ phrase('start_conversation') }}</xf:button>
</xf:pageaction>

<div class="block" data-xf-init="inline-mod" data-type="conversation" data-href="{{ link('inline-mod') }}">
	<div class="block-outer">
		<xf:pagenav
			page="{$page}" perpage="{$perPage}" total="{$total}"
			link="conversations" params="{$filters}"
			wrapperclass="block-outer-main" />
		<div class="block-outer-opposite">
			<div class="buttonGroup">
				<xf:macro template="inline_mod_macros" name="button"
					arg-variant="inlineModButton--withLabel"
					arg-label="{{ phrase('selected') }}"
					arg-tooltip="{{ false }}" />
			</div>
		</div>
	</div>

	<div class="block-container">
		<div class="block-filterBar">
			<div class="filterBar">
				<xf:if contentcheck="true">
					<ul class="filterBar-filters">
					<xf:contentcheck>
						<xf:if is="$filters.starter_id AND $starterFilter">
							<li><a href="{{ link('conversations', null, $filters|replace('starter_id', null)) }}"
								class="filterBar-filterToggle" data-xf-init="tooltip" title="{{ phrase('remove_this_filter')|for_attr }}">
								{{ phrase('started_by_x', {'name': $starterFilter.username}) }}</a></li>
						</xf:if>
						<xf:if is="$filters.receiver_id AND $receiverFilter">
							<li><a href="{{ link('conversations', null, $filters|replace('receiver_id', null)) }}"
								class="filterBar-filterToggle" data-xf-init="tooltip" title="{{ phrase('remove_this_filter')|for_attr }}">
								{{ phrase('received_by_x', {'name': $receiverFilter.username}) }}</a></li>
						</xf:if>
						<xf:if is="$filters.starred">
							<li><a href="{{ link('conversations', null, $filters|replace('starred', null)) }}"
								class="filterBar-filterToggle" data-xf-init="tooltip" title="{{ phrase('remove_this_filter')|for_attr }}">
								<span class="filterBar-filterToggle-label">{{ phrase('show_only:') }}</span>
								{{ phrase('starred') }}</a></li>
						</xf:if>
						<xf:if is="$filters.unread">
							<li><a href="{{ link('conversations', null, $filters|replace('unread', null)) }}"
								class="filterBar-filterToggle" data-xf-init="tooltip" title="{{ phrase('remove_this_filter')|for_attr }}">
								<span class="filterBar-filterToggle-label">{{ phrase('show_only:') }}</span>
								{{ phrase('filter_unread') }}</a></li>
						</xf:if>
					</xf:contentcheck>
					</ul>
				</xf:if>

				<a class="filterBar-menuTrigger" data-xf-click="menu" role="button" tabindex="0" aria-expanded="false" aria-haspopup="true">{{ phrase('filters') }}</a>
				<div class="menu" data-menu="menu" aria-hidden="true">
					<div class="menu-content">
						<h4 class="menu-header">{{ phrase('show_only:') }}</h4>
						<xf:form action="{{ link('conversations/filters') }}">
							<div class="menu-row menu-row--separated">
								<xf:radio name="filter_type">
									<xf:option value="" selected="{{ !$starterFilter AND !$receiverFilter }}">{{ phrase('show_all_conversations') }}</xf:option>
									<xf:option value="started" selected="{{ $starterFilter ? true : false }}" data-hide="true"
										label="{{ phrase('started_by...') }}">

										<xf:textbox name="starter" value="{{ $starterFilter ? $starterFilter.username : '' }}" ac="single"
											maxlength="{{ max_length($xf.visitor, 'username') }}"/>
									</xf:option>
									<xf:option value="received" selected="{{ $receiverFilter ? true : false }}" data-hide="true"
										label="{{ phrase('received_by...') }}">

										<xf:textbox name="receiver" value="{{ $receiverFilter ? $receiverFilter.username : '' }}" ac="single"
											maxlength="{{ max_length($xf.visitor, 'username') }}" />
									</xf:option>
								</xf:radio>
							</div>
							<div class="menu-row menu-row--separated">
								<xf:checkbox standalone="true">
									<xf:option name="starred" selected="{$filters.starred}" label="{{ phrase('starred_conversations') }}" />
								</xf:checkbox>
								<xf:checkbox standalone="true">
									<xf:option name="unread" selected="{$filters.unread}" label="{{ phrase('unread_conversations') }}" />
								</xf:checkbox>
							</div>

							<div class="menu-footer">
								<span class="menu-footer-controls">
									<xf:button type="submit" class="button--primary">{{ phrase('filter') }}</xf:button>
								</span>
							</div>
							<xf:hiddenval name="apply">1</xf:hiddenval>
						</xf:form>
					</div>
				</div>
			</div>
		</div>

		<div class="block-body">
			<xf:if is="$userConvs is not empty">
				<div class="structItemContainer">
					<xf:foreach loop="$userConvs" value="$userConv">
						<xf:macro template="conversation_list_macros" name="item" arg-userConv="{$userConv}" />
					</xf:foreach>
				</div>
			<xf:else />
				<div class="block-row">{{ phrase('there_no_conversations_to_display') }}</div>
			</xf:if>
		</div>
	</div>

	<xf:pagenav page="{$page}" perpage="{$perPage}" total="{$total}"
		link="conversations" params="{$filters}"
		wrapperclass="block-outer block-outer--after" />
</div>

<xf:widgetpos id="conversation_list_sidebar" position="sidebar" />]]></template>
  <template type="public" title="conversation_list_macros" version_id="2001070" version_string="2.0.10"><![CDATA[<xf:macro name="item"
	arg-userConv="!"
	arg-allowInlineMod="{{ true }}">

	<xf:css src="structured_list.less" />

	<div class="structItem structItem--conversation {{ $userConv.isUnread() ? 'is-unread' : '' }} js-inlineModContainer" data-author="{{ $userConv.Master.Starter.username ?: $userConv.Master.username }}">
		<div class="structItem-cell structItem-cell--icon">
			<div class="structItem-iconContainer">
				<xf:avatar user="$userConv.Master.Starter" size="s" defaultname="{$userConv.Master.username}" />
			</div>
		</div>
		<div class="structItem-cell structItem-cell--main" data-xf-init="touch-proxy">
			<xf:if contentcheck="true">
				<ul class="structItem-statuses">
				<xf:contentcheck>
					<xf:if is="$userConv.is_starred">
						<li>
							<i class="structItem-status structItem-status--starred" aria-hidden="true" title="{{ phrase('starred')|for_attr }}"></i>
							<span class="u-srOnly">{{ phrase('starred') }}</span>
						</li>
					</xf:if>
					<xf:if is="!$userConv.Master.conversation_open">
						<li>
							<i class="structItem-status structItem-status--locked" aria-hidden="true" title="{{ phrase('locked')|for_attr }}"></i>
							<span class="u-srOnly">{{ phrase('locked') }}</span>
						</li>
					</xf:if>
				</xf:contentcheck>
				</ul>
			</xf:if>

			<a href="{{ link('conversations' . ($userConv.isUnread() ? '/unread' : ''), $userConv) }}" class="structItem-title" data-tp-primary="on">{$userConv.title}</a>

			<div class="structItem-minor">
				<xf:if contentcheck="true">
					<ul class="structItem-extraInfo">
					<xf:contentcheck>
						<xf:if is="$allowInlineMod">
							<li><xf:checkbox standalone="true">
								<xf:option value="{$userConv.conversation_id}" class="js-inlineModToggle" />
							</xf:checkbox></li>
						</xf:if>
					</xf:contentcheck>
					</ul>
				</xf:if>

				<ul class="structItem-parts">
					<li>
						<ul class="listInline listInline--comma listInline--selfInline">
							<li><xf:username user="$userConv.Master.Starter" defaultname="{$userConv.Master.username}" title="{{ phrase('conversation_starter') }}" /></li><xf:trim>
							</xf:trim><xf:foreach loop="$userConv.Master.recipients" value="$recipient" if="{$recipient.user_id} != {$userConv.Master.user_id}"><xf:trim>
								<li><xf:username user="{$recipient}" defaultname="{{ phrase('unknown_member') }}" /></li>
							</xf:trim></xf:foreach>
						</ul>
					</li>
					<li class="structItem-startDate"><a href="{{ link('conversations', $userConv) }}" rel="nofollow"><xf:date time="{$userConv.Master.start_date}" /></a></li>
				</ul>

				<xf:if is="$userConv.reply_count >= $xf.options.messagesPerPage">
					<span class="structItem-pageJump">
					<xf:foreach loop="{{ last_pages($userConv.reply_count + 1, $xf.options.messagesPerPage) }}" value="$p">
						<a href="{{ link('conversations', $userConv, {'page': $p}) }}">{$p}</a>
					</xf:foreach>
					</span>
				</xf:if>
			</div>
		</div>
		<div class="structItem-cell structItem-cell--meta">
			<dl class="pairs pairs--justified">
				<dt>{{ phrase('replies') }}</dt>
				<dd>{$userConv.reply_count|number}</dd>
			</dl>
			<dl class="pairs pairs--justified structItem-minor">
				<dt>{{ phrase('participants') }}</dt>
				<dd>{$userConv.Master.recipient_count|number}</dd>
			</dl>
		</div>
		<div class="structItem-cell structItem-cell--latest">
			<a href="{{ link('conversations/latest', $userConv) }}" rel="nofollow"><xf:date time="{$userConv.last_message_date}" class="structItem-latestDate" /></a>
			<div class="structItem-minor"><xf:username user="{$userConv.Master.last_message_cache}" /></div>
		</div>
	</div>
</xf:macro>]]></template>
  <template type="public" title="conversation_mark_unread" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ $isUnread ? phrase('mark_read') : phrase('mark_unread') }}</xf:title>

<xf:breadcrumb href="{{ link('conversations') }}">{{ phrase('conversations') }}</xf:breadcrumb>
<xf:breadcrumb href="{{ link('conversations', $conversation) }}">{$conversation.title}</xf:breadcrumb>

<xf:form action="{{ link('conversations/mark-unread', $userConv) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				<xf:if is="$isUnread">
					{{ phrase('please_confirm_that_you_wish_to_mark_following_conversation_read:') }}
				<xf:else />
					{{ phrase('please_confirm_that_you_wish_to_mark_following_conversation_unread:') }}
				</xf:if>
				<strong><a href="{{ link('conversations', $conversation) }}">{$conversation.title}</a></strong>
			</xf:inforow>
		</div>
		<xf:submitrow submit="{{ $isUnread ? phrase('mark_read') : phrase('mark_unread') }}" rowtype="simple" />
	</div>

	<xf:redirect />
</xf:form>]]></template>
  <template type="public" title="conversation_message_edit" version_id="2000038" version_string="2.0.0 Beta 8"><![CDATA[<xf:title>{{ phrase('edit_message_in_conversation:') }} {$conversation.title}</xf:title>

<xf:breadcrumb href="{{ link('conversations') }}">{{ phrase('conversations') }}</xf:breadcrumb>
<xf:breadcrumb href="{{ link('conversations', $conversation) }}">{$conversation.title}</xf:breadcrumb>

<xf:form action="{{ link('conversations/messages/edit', $message) }}" ajax="true" class="block"
	data-xf-init="attachment-manager"
	data-preview-url="{{ link('conversations/messages/preview', $message) }}">

	<div class="block-container">
		<div class="block-body">
			<xf:editorrow name="message" value="{$message.message}" attachments="{$attachmentData.attachments}"
				rowtype="{{ $quickEdit ? 'fullWidth noLabel' : '' }}"
				label="{{ phrase('message') }}" />

			<xf:formrow rowtype="{{ $quickEdit ? 'fullWidth noLabel' : '' }}">
				<xf:if is="$attachmentData">
					<xf:macro template="helper_attach_upload" name="upload_block" arg-attachmentData="{$attachmentData}" />
				</xf:if>
				<!--<xf:button class="button&#45;&#45;link u-jsOnly" data-xf-click="preview-click" icon="preview" />-->
			</xf:formrow>
		</div>
		<xf:submitrow icon="save" sticky="true" rowtype="{{ $quickEdit ? 'simple' : '' }}">
			<xf:html>
				<xf:button class="u-jsOnly" data-xf-click="preview-click" icon="preview" />
				<xf:if is="$quickEdit">
					<xf:button class="js-cancelButton" icon="cancel">{{ phrase('button.cancel') }}</xf:button>
				</xf:if>
			</xf:html>
		</xf:submitrow>
	</div>
</xf:form>]]></template>
  <template type="public" title="conversation_message_edit_new_message" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro template="conversation_message_macros" name="message" arg-message="{$message}" arg-conversation="{$conversation}" />]]></template>
  <template type="public" title="conversation_message_macros" version_id="2010036" version_string="2.1.0 Beta 6"><![CDATA[<xf:macro name="message" arg-message="!" arg-conversation="!" arg-position="" arg-lastRead="{{ null }}">
	<xf:css src="message.less" />
	<article class="message message--conversationMessage {{ $message.isIgnored() ? ' is-ignored' : '' }} {{ $message.isUnread($lastRead) ? 'is-unread' : '' }} js-message" data-author="{{ $message.User.username ?: $message.username }}">
		<span class="u-anchorTarget" id="convMessage-{$message.message_id}"></span>
		<div class="message-inner">
			<div class="message-cell message-cell--user">
				<xf:macro template="message_macros" name="user_info" arg-user="{$message.User}" arg-fallbackName="{$message.username}" />
			</div>
			<div class="message-cell message-cell--main">
				<div class="message-main js-quickEditTarget">
					<div class="message-content">
						<header class="message-attribution">
							<a href="{{ link('conversations/messages', $message) }}" class="message-attribution-main u-concealed" rel="nofollow">
								<xf:date time="{$message.message_date}" />
							</a>
							<span class="message-attribution-opposite">
								<xf:if is="$message.isUnread($lastRead)">
									<span class="message-newIndicator">{{ phrase('new') }}</span>
								</xf:if>
								<xf:if is="$position">#{$position|number}</xf:if>
							</span>
						</header>

						<xf:if is="$message.isIgnored()">
							<div class="messageNotice messageNotice--ignored">
								{{ phrase('you_are_ignoring_content_by_this_member') }}
							</div>
						</xf:if>

						<div class="message-userContent lbContainer js-lbContainer"
							data-lb-id="message-{$message.message_id}"
							data-lb-caption-title="{{ $message.User ? $message.User.username : $message.username }}"
							data-lb-caption-desc="{{ date_time($message.message_date) }}">

							<article class="message-body js-selectToQuote">
								{{ bb_code($message.message, 'conversation_message', $message) }}
								<div class="js-selectToQuoteEnd">&nbsp;</div>
							</article>

							<xf:if is="$message.attach_count">
								<xf:macro template="message_macros" name="attachments"
									arg-attachments="{$message.Attachments}"
									arg-message="{$message}"
									arg-canView="{{ true }}" />
							</xf:if>
						</div>

						<xf:macro template="message_macros" name="signature" arg-user="{$message.User}" />
					</div>

					<footer class="message-footer">
						<xf:if contentcheck="true">
							<div class="message-actionBar actionBar">
								<xf:contentcheck>
									<xf:if contentcheck="true">
										<div class="actionBar-set actionBar-set--external">
											<xf:contentcheck>
												<xf:react content="{$message}" link="conversations/messages/react" list="< .js-message | .js-reactionsList" />

												<xf:if is="$conversation.canReply()">
													<xf:set var="$quoteLink">{{ link('conversations/reply', $conversation, {'quote': $message.message_id}) }}</xf:set>
													<xf:if is="$xf.options.multiQuote">
														<a href="{$quoteLink}"
															class="actionBar-action actionBar-action--mq u-jsOnly js-multiQuote"
															title="{{ phrase('toggle_multi_quote_tooltip')|for_attr }}"
															data-message-id="{$message.message_id}"
															data-mq-action="add">
															{{ phrase('quote') }}
														</a>
													</xf:if>
													<a href="{$quoteLink}"
														class="actionBar-action actionBar-action--reply"
														title="{{ phrase('reply_quoting_this_message')|for_attr }}"
														data-xf-click="quote"
														data-quote-href="{{ link('conversations/messages/quote', $message) }}">{{ phrase('reply') }}</a>

												</xf:if>
											</xf:contentcheck>
										</div>
									</xf:if>

									<xf:if contentcheck="true">
										<div class="actionBar-set actionBar-set--internal">
											<xf:contentcheck>
												<xf:if is="$message.canReport()">
													<a href="{{ link('conversations/messages/report', $message) }}" class="actionBar-action actionBar-action--report" data-xf-click="overlay">{{ phrase('report_verb') }}</a>
												</xf:if>

												<xf:if is="$message.canEdit()">
													<xf:js src="xf/message.js" min="1" />
													<a href="{{ link('conversations/messages/edit', $message) }}"
														class="actionBar-action actionBar-action--edit"
														data-xf-click="quick-edit"
														data-editor-target="< .js-quickEditTarget">{{ phrase('edit') }}</a>
												</xf:if>

												<xf:if is="$message.canCleanSpam()">
													<a href="{{ link('spam-cleaner', $message) }}"
														class="actionBar-action actionBar-action--spam actionBar-action--menuItem"
														data-xf-click="overlay">{{ phrase('spam') }}</a>
												</xf:if>

												<xf:if is="$xf.visitor.canViewIps() && $message.ip_id">
													<a href="{{ link('conversations/messages/ip', $message) }}"
														class="actionBar-action actionBar-action--ip"
														data-xf-click="overlay">{{ phrase('ip') }}</a>
												</xf:if>
											</xf:contentcheck>
										</div>
									</xf:if>
								</xf:contentcheck>
							</div>
						</xf:if>

						<div class="reactionsBar js-reactionsList {{ $message.reactions ? 'is-active' : '' }}">
							<xf:reactions content="{$message}" link="conversations/messages/reactions" />
						</div>
					</footer>
				</div>
			</div>
		</div>
	</article>
</xf:macro>]]></template>
  <template type="public" title="conversation_multi_quote" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro template="multi_quote_macros" name="block"
	arg-quotes="{$quotes}"
	arg-messages="{$messages}"
	arg-containerRelation="Conversation"
	arg-dateKey="message_date"
	arg-bbCodeContext="conversation_message" />
]]></template>
  <template type="public" title="conversation_reply" version_id="2000038" version_string="2.0.0 Beta 8"><![CDATA[<xf:title>{{ phrase('reply_to_conversation') }}</xf:title>

<xf:breadcrumb href="{{ link('conversations') }}">{{ phrase('conversations') }}</xf:breadcrumb>
<xf:breadcrumb href="{{ link('conversations', $conversation) }}">{$conversation.title}</xf:breadcrumb>

<xf:form action="{{ link('conversations/add-reply', $conversation) }}" class="block" ajax="true"
	draft="{{ link('conversations/draft', $conversation) }}"
	data-xf-init="attachment-manager"
	data-preview-url="{{ link('conversations/reply-preview', $conversation) }}">

	<div class="block-container">
		<div class="block-body">
			<xf:editorrow name="message"
				value="{$defaultMessage}"
				attachments="{{ $attachmentData ? $attachmentData.attachments : [] }}"
				rowtype="fullWidth noLabel"
				placeholder="{{ phrase('reply_placeholder') }}"
				label="{{ phrase('message') }}" />

			<xf:formrow rowtype="fullWidth noLabel">
				<xf:if is="$attachmentData">
					<xf:macro template="helper_attach_upload" name="upload_block"
						arg-attachmentData="{$attachmentData}"
						arg-forceHash="{$conversation.draft_reply.attachment_hash}" />
				</xf:if>

				<xf:if is="$xf.options.multiQuote">
					<xf:macro template="multi_quote_macros" name="button"
						arg-href="{{ link('conversations/multi-quote', $conversation) }}"
						arg-messageSelector=".js-message"
						arg-storageKey="multiQuoteConversation" />
				</xf:if>
				<!--<xf:button class="button&#45;&#45;link u-jsOnly" data-xf-click="preview-click" icon="preview" />-->
			</xf:formrow>

		</div>
		<xf:submitrow submit="{{ phrase('post_reply') }}" icon="reply" sticky="true">
			<xf:html>
				<xf:button class="u-jsOnly" data-xf-click="preview-click" icon="preview" />
			</xf:html>
		</xf:submitrow>
	</div>
</xf:form>]]></template>
  <template type="public" title="conversation_reply_new_messages" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:if is="$firstUnshownMessage">
	<div class="message">
		<div class="message-inner">
			<div class="message-cell message-cell--alert">
				{{ phrase('there_more_messages_to_display') }} <a href="{{ link('conversations/messages', $firstUnshownMessage) }}">{{ phrase('view_them') }}</a>
			</div>
		</div>
	</div>
</xf:if>

<xf:foreach loop="$messages" value="$message">
	<xf:macro template="conversation_message_macros" name="message" arg-message="{$message}" arg-conversation="{$conversation}" />
</xf:foreach>
]]></template>
  <template type="public" title="conversation_star" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ $isStarred ? phrase('unstar') : phrase('star') }}</xf:title>

<xf:breadcrumb href="{{ link('conversations') }}">{{ phrase('conversations') }}</xf:breadcrumb>
<xf:breadcrumb href="{{ link('conversations', $conversation) }}">{$conversation.title}</xf:breadcrumb>

<xf:form action="{{ link('conversations/star', $userConv) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				<xf:if is="$isStarred">
					{{ phrase('please_confirm_that_you_wish_to_unstar_following_conversation:') }}
				<xf:else />
					{{ phrase('please_confirm_that_you_wish_to_star_following_conversation:') }}
				</xf:if>
				<strong><a href="{{ link('conversations', $conversation) }}">{$conversation.title}</a></strong>
			</xf:inforow>
		</div>
		<xf:submitrow submit="{{ $isStarred ? phrase('unstar') : phrase('star') }}" rowtype="simple" />
	</div>

	<xf:redirect />
</xf:form>]]></template>
  <template type="public" title="conversation_view" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title page="{$page}">{$conversation.title}</xf:title>

<xf:description meta="false">
	<ul class="listInline listInline--bullet">
		<li>
			<xf:fa icon="fa-users" title="{{ phrase('participants')|for_attr }}" />
			<span class="u-srOnly">{{ phrase('participants') }}</span>

			<ul class="listInline listInline--selfInline listInline--comma">
				<li><xf:username user="$conversation.Starter" defaultname="{$conversation.username}" title="{{ phrase('conversation_starter') }}" href="" /></li><xf:trim>
				</xf:trim><xf:foreach loop="$conversation.recipients" value="$recipient" if="{$recipient.user_id} != {$conversation.user_id} AND $i < 4" i="$i"><xf:trim>
					<li><xf:username user="{$recipient}" defaultname="{{ phrase('unknown_member') }}" href="" /></li>
				</xf:trim></xf:foreach>
			</ul>
			<xf:if is="$conversation.recipient_count > 5">
				{{ phrase('ellipsis_and_x_more', {'count': ($conversation.recipient_count - 5)|number}) }}
			</xf:if>
		</li>
		<li>
			<xf:fa icon="fa-clock" title="{{ phrase('start_date')|for_attr }}" />
			<span class="u-srOnly">{{ phrase('start_date') }}</span>

			<a href="{{ link('conversations', $conversation) }}" class="u-concealed"><xf:date time="{$conversation.start_date}" /></a>
		</li>
	</ul>
</xf:description>

<xf:breadcrumb href="{{ link('conversations') }}">{{ phrase('conversations') }}</xf:breadcrumb>

<xf:sidebar key="conversationInfo">
	<div class="block">
		<div class="block-container">
			<h3 class="block-minorHeader">{{ phrase('conversation_info') }}</h3>
			<div class="block-body block-row block-row--minor">
				<dl class="pairs pairs--justified"><dt>{{ phrase('participants') }}</dt> <dd>{$conversation.recipient_count|number}</dd></dl>
				<dl class="pairs pairs--justified"><dt>{{ phrase('replies') }}</dt> <dd>{$conversation.reply_count|number}</dd></dl>
				<dl class="pairs pairs--justified"><dt>{{ phrase('last_reply_date') }}</dt> <dd><xf:date time="$conversation.last_message_date" /></dd></dl>
				<dl class="pairs pairs--justified"><dt>{{ phrase('last_reply_from') }}</dt> <dd><xf:username user="$conversation.LastMessageUser" /></dd></dl>
			</div>
		</div>
	</div>
</xf:sidebar>

<xf:sidebar key="conversationParticipants">
	<div class="block">
		<div class="block-container">
			<h3 class="block-minorHeader">{{ phrase('conversation_participants') }}</h3>
			<ol class="block-body">
				<xf:foreach loop="$recipients" value="$recipient">
					<li class="block-row">
						<div class="contentRow">
							<xf:if is="$recipient.User">
								<div class="contentRow-figure">
									<xf:avatar user="$recipient.User" size="xs" />
								</div>
								<div class="contentRow-main">
									<xf:username user="$recipient.User" rich="true" />
									<div class="contentRow-minor"><xf:usertitle user="$recipient.User" /></div>
								</div>
							<xf:else />
								<div class="contentRow-figure">
									<xf:avatar user="{{ null }}" size="xs" />
								</div>
								<div class="contentRow-main">
									{{ phrase('unknown_member') }}
								</div>
							</xf:if>
						</div>
					</li>
				</xf:foreach>
			</ol>
			<xf:if is="$conversation.canInvite()">
				<div class="block-footer">
					<span class="block-footer-controls">
						<a href="{{ link('conversations/invite', $conversation) }}" data-xf-click="overlay">{{ phrase('invite_more') }}</a>
					</span>
				</div>
			</xf:if>
		</div>
	</div>
</xf:sidebar>

<div class="block block--messages">
	<div class="block-outer">
		<xf:pagenav
			page="{$page}" perpage="{$perPage}" total="{{ $conversation.reply_count + 1 }}"
			link="conversations" data="{$conversation}"
			wrapperclass="block-outer-main" />
		<div class="block-outer-opposite">
			<div class="buttonGroup">
				<xf:if is="$conversation.canEdit()">
					<xf:button href="{{ link('conversations/edit', $conversation) }}" class="button--link"
						icon="edit" overlay="true" />
				</xf:if>
				<xf:button href="{{ link('conversations/star', $conversation) }}" class="button--link"
					data-xf-click="switch"
					data-sk-star="{{ phrase('star') }}"
					data-sk-unstar="{{ phrase('unstar') }}">
					{{ {$userConv.is_starred} ? phrase('unstar') : phrase('star') }}
				</xf:button>
				<xf:button href="{{ link('conversations/mark-unread', $conversation) }}" class="button--link"
					data-xf-click="switch"
					data-sk-read="{{ phrase('mark_read') }}"
					data-sk-unread="{{ phrase('mark_unread') }}">
					{{ {$userConv.is_unread} ? phrase('mark_read') : phrase('mark_unread') }}
				</xf:button>
				<xf:button href="{{ link('conversations/leave', $conversation) }}" class="button--link" overlay="true">
					{{ phrase('leave') }}
				</xf:button>
			</div>
		</div>
	</div>

	<div class="block-container lbContainer"
		data-xf-init="lightbox{{ $xf.options.selectQuotable ? ' select-to-quote' : '' }}"
		data-message-selector=".js-message"
		data-lb-id="conversation-{$conversation.conversation_id}"
		data-lb-universal="{$xf.options.lightBoxUniversal}">

		<div class="block-body js-replyNewMessageContainer">
			<xf:foreach loop="$messages" value="$message">
				<xf:macro template="conversation_message_macros" name="message"
					arg-message="{$message}" arg-conversation="{$conversation}"
					arg-lastRead="{$lastRead}" />
			</xf:foreach>
		</div>
	</div>

	<div class="block-outer block-outer--after">
		<xf:pagenav
			page="{$page}" perpage="{$perPage}" total="{{ $conversation.reply_count + 1 }}"
			link="conversations" data="{$conversation}"
			wrapperclass="block-outer-main" />
		<xf:showignored wrapperclass="block-outer-opposite" />
	</div>

	<xf:if is="!$conversation.conversation_open">
		<div class="block-outer block-outer--after">
			<dl class="blockStatus">
				<dt>{{ phrase('status') }}</dt>
				<dd class="blockStatus-message blockStatus-message--locked">
					{{ phrase('this_conversation_is_closed_for_new_replies') }}
				</dd>
			</dl>
		</div>
	</xf:if>
</div>

<xf:if is="$conversation.canReply()">
	<xf:form action="{{ link('conversations/add-reply', $conversation) }}"
		ajax="true"
		draft="{{ link('conversations/draft', $conversation) }}"
		class="block js-quickReply"
		data-xf-init="attachment-manager quick-reply"
		data-preview-url="{{ link('conversations/reply-preview', $conversation, {'quick_reply': 1}) }}">

		<xf:js src="xf/message.js" min="1" />
		<xf:set var="$lastMessage" value="{$messages|last}" />

		<div class="block-container">
			<div class="block-body">
				<xf:macro template="quick_reply_macros" name="body"
					arg-message="{$conversation.draft_reply.message}"
					arg-attachmentData="{$attachmentData}"
					arg-forceHash="{$conversation.draft_reply.attachment_hash}"
					arg-messageSelector=".js-message"
					arg-supportsMultiQuote="{$xf.options.multiQuote}"
					arg-multiQuoteHref="{{ link('conversations/multi-quote', $conversation) }}"
					arg-multiQuoteStorageKey="multiQuoteConversation"
					arg-lastDate="{$lastMessage.message_date}" />
			</div>
		</div>
	</xf:form>
</xf:if>

<xf:widgetpos id="conversation_view_sidebar" context-conversation="{$conversation}" position="sidebar" />]]></template>
  <template type="public" title="conversations_popup" version_id="2001070" version_string="2.0.10"><![CDATA[<xf:if is="$unreadConversations is not empty OR $readConversations is not empty">
	<div class="menu-scroller">
		<ol class="listPlain">
			<xf:foreach loop="$unreadConversations" value="$userConv">
				<xf:macro name="popup_item" arg-userConv="{$userConv}" />
			</xf:foreach>
			<xf:foreach loop="$readConversations" value="$userConv">
				<xf:macro name="popup_item" arg-userConv="{$userConv}" />
			</xf:foreach>
		</ol>
	</div>
<xf:else />
	<div class="menu-row">{{ phrase('you_have_no_recent_conversations') }}</div>
</xf:if>

<xf:macro name="popup_item" arg-userConv="!">
	<li class="menu-row menu-row--separated menu-row--clickable {{ $userConv.isUnread() ? 'menu-row--highlighted' : '' }}">
		<div class="fauxBlockLink">
			<div class="contentRow">
				<div class="contentRow-figure">
					<xf:avatar user="$userConv.Master.LastMessageUser" size="xxs" defaultname="{$userConv.Master.last_message_username}" />
				</div>
				<div class="contentRow-main contentRow-main--close">
					<a href="{{ link('conversations' . ($userConv.isUnread() ? '/unread' : ''), $userConv) }}" class="fauxBlockLink-blockLink">{$userConv.Master.title}</a>
					<div class="contentRow-minor contentRow-minor--smaller contentRow-minor--hideLinks">
						{{ phrase('with_people:') }}
						<ul class="listInline listInline--selfInline listInline--comma">
							<li><xf:username user="$userConv.Master.Starter" defaultname="{$userConv.Master.username}" title="{{ phrase('conversation_starter') }}" href="" /></li><xf:trim>
							</xf:trim><xf:foreach loop="$userConv.Master.recipients" value="$recipient" if="{$recipient.user_id} != {$userConv.Master.user_id}"><xf:trim>
								<li><xf:username user="{$recipient}" defaultname="{{ phrase('unknown_member') }}" href="" /></li>
							</xf:trim></xf:foreach>
						</ul>
					</div>
					<div class="contentRow-minor contentRow-minor--smaller">
						<xf:date time="$userConv.Master.last_message_date" />
					</div>
				</div>
			</div>
		</div>
	</li>
</xf:macro>]]></template>
  <template type="public" title="core.less" version_id="2010037" version_string="2.1.0 Beta 7"><![CDATA[// ########################## GLOBAL BASE SETUP #######################

html
{
	font: @xf-fontSizeNormal / @xf-lineHeightDefault sans-serif;
	font-family: @xf-fontFamilyUi;
	font-weight: @xf-fontWeightNormal;
	color: @xf-textColor;
	margin: 0;
	padding: 0;
	word-wrap: break-word;
	background-color: @xf-pageBg;

	/* // just a reminder that we *might* want this at some point
	-ms-text-size-adjust: none;
	-webkit-text-size-adjust: none;*/
}

button, input, optgroup, select, textarea
{
	font-family: @xf-fontFamilyUi;
	line-height: @xf-lineHeightDefault;
}

img
{
	max-width: 100%;
	height: auto;
}

b, strong
{
	font-weight: @xf-fontWeightHeavy;
}

a
{
	.xf-link();

	&:hover
	{
		.xf-linkHover();
	}
}

{{ include('core_setup.less') }}
{{ include('core_utilities.less') }}
{{ include('core_list.less') }}
{{ include('core_categorylist.less') }}
{{ include('core_block.less') }}
{{ include('core_blockmessage.less') }}
{{ include('core_blockstatus.less') }}
{{ include('core_blocklink.less') }}
{{ include('core_blockend.less') }}
{{ include('core_fixedmessage.less') }}
{{ include('core_button.less') }}
{{ include('core_meter_bar.less') }}

// ################################# INPUTS & FORMS #####################

.m-formElementExplain()
{
	display: block;
	font-style: normal;
	.xf-formExplain();

	.m-textColoredLinks();
}

{{ include('core_input.less') }}
{{ include('core_formrow.less') }}

{{ include('core_collapse.less') }}
{{ include('core_badge.less') }}
{{ include('core_tooltip.less') }}
{{ include('core_menu.less') }}
{{ include('core_offcanvas.less') }}
{{ include('core_tab.less') }}
{{ include('core_overlay.less') }}
{{ include('core_globalaction.less') }}
{{ include('core_avatar.less') }}
{{ include('core_datalist.less') }}
{{ include('core_filter.less') }}
{{ include('core_contentrow.less') }}
{{ include('core_pagenav.less') }}
{{ include('core_hscroller.less') }}

// FLASH MESSAGES
.flashMessage
{
	display: none;
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
	z-index: @zIndex-9;
	.xf-flashMessage();

	.m-transitionFadeDown();
}

// AUTOCOMPLETE
.autoCompleteList
{
	.m-autoCompleteList();
	margin-top: 2px;
}

// #################################### TAGS ##############################
// note that while this is related to tags, it's commonly used so just include it

.tagList,
.tagList > dt,
.tagList > dd
{
	display: inline;
	padding: 0;
	margin: 0;
}

.tagItem
{
	display: inline-block;
	max-width: 100%;
	padding: 0 6px 1px;
	margin: 0 0 2px;
	border-radius: @xf-borderRadiusMedium;
	font-size: @xf-fontSizeSmaller;
	.xf-chip();

	&:hover
	{
		text-decoration: none;
		color: @xf-chip--color;
		.xf-chipHover();
	}
}

// ############################# MISC #########################

.recaptcha
{
	&.input
	{
		box-sizing: content-box;
		max-width: 100%;
	}

	img
	{
		max-width: 100%;
	}
}

.likesBar
{
	.m-transitionFadeDown();
	.xf-minorBlockContent();
	border-left: @xf-borderSizeMinorFeature solid @xf-borderColorFeature;
	padding: @xf-paddingMedium;
	font-size: @xf-fontSizeSmaller;
	margin-top: @xf-paddingMedium;
}

.likeIcon
{
	&:before
	{
		.m-faBase();
		.m-faContent(@fa-var-thumbs-up, 1em);
		color: @xf-textColorFeature;
		margin-right: .2em;
	}
}

.reactionsBar
{
	.m-transitionFadeDown();
	.xf-minorBlockContent();
	border-left: @xf-borderSizeMinorFeature solid @xf-borderColorFeature;
	padding: @xf-paddingMedium;
	font-size: @xf-fontSizeSmaller;
	margin-top: @xf-paddingMedium;
}

.reactionSummary
{
	display: inline-block;
	.m-listPlain();
	line-height: 16px;
	height: 16px;
	margin: 0 -2px;
	vertical-align: text-top;

	> li
	{
		display: inline-block;
		height: 20px;
		width: 20px;
		padding: 2px;
		margin: -2px 0;
		background: @xf-contentBg;
		border-radius: 50%;
		position: relative;
		margin-left: -6px;

		&:nth-child(1)
		{
			z-index: 3;
			margin-left: 0;
		}

		&:nth-child(2)
		{
			z-index: 2;
		}

		&:nth-child(3)
		{
			z-index: 1;
		}
	}

	.reaction
	{
		position: absolute;
		top: 0;

		&.reaction
		{
			// increase specificity to override .reaction.reaction--<size>
			display: block;
		}
	}
}

.reactionsBar,
.message-responseRow
{
	.reactionSummary
	{
		> li
		{
			background: @xf-contentAltBg;
		}

		.reaction
		{
			top: 2px;
		}
	}
}

.reactTooltip
{
	padding: 0;
	display: flex;
	flex-wrap: wrap;
	justify-content: center;
	max-width: 100%;

	.reaction
	{
		margin: @xf-paddingSmall;
		.m-transition(transform);

		&:hover
		{
			.m-transform(scale(1.2));
		}
	}
}

.colorChip
{
	display: inline-block;
	border: @xf-borderSize solid @xf-borderColor;
	border-radius: @xf-borderRadiusMedium;
	padding: 1px;
	width: 100px;
}

.colorChip-inner
{
	display: block;
	background-color: transparent;
	border-radius: @xf-borderRadiusSmall;
	height: 1em;
}

.colorChip-value
{
	display: none;
}

pre.sf-dump
{
	// not ideal, but then again neither is the default of 99999...
	z-index: @zIndex-1 !important;
}

.grecaptcha-badge
{
	z-index: @zIndex-5;
}

// Bookmarking links for 2.1
.bookmarkLink
{
	&:before
	{
		.m-faBase();
		.m-faContent(@fa-var-bookmark);
		font-weight: min(@xf-fontAwesomeWeight, @faWeight-regular);
	}
	&.is-bookmarked
	{
		&:before
		{
			font-weight: @faWeight-solid;
		}
	}

	&.bookmarkLink--highlightable.is-bookmarked
	{
		color: @xf-textColorAttention;

		&:hover
		{
			color: @xf-textColorAccentContent;
		}
	}

	span
	{
		margin-left: .35em;
	}
}

.dragHandle
{
	cursor: move;

	&:before
	{
		.m-faBase();
		.m-faContent(@fa-var-bars);
	}

	.is-undraggable &
	{
		visibility: hidden;
		cursor: default;
	}
}

{{ include('core_action_bar.less') }}
{{ include('core_labels.less') }}
{{ include('core_pikaday.less') }}
{{ include('core_reaction.less') }}
{{ include('core_smilie.less') }}
{{ include('core_bbcode.less') }}
{{ include('core_fa.less') }}

// RESOLUTION OUTPUT

.debugResolution
{
	.debugResolution-output:before
	{
		content: "Full @{xf-responsiveWide} - @{xf-pageWidthMax}";
		@media (min-width: @xf-pageWidthMax) { content: "Max > @{xf-pageWidthMax}"; }
		@media (max-width: @xf-responsiveWide) { content: "Wide < @{xf-responsiveWide}"; }
		@media (max-width: @xf-responsiveMedium) { content: "Medium < @{xf-responsiveMedium}"; }
		@media (max-width: @xf-responsiveNarrow) { content: "Narrow < @{xf-responsiveNarrow}"; }
	}
}]]></template>
  <template type="public" title="core_action_bar.less" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[.actionBar
{
	.m-clearFix();
}

.actionBar-set
{
	&.actionBar-set--internal
	{
		float: left;
		margin-left: -3px;

		> .actionBar-action:first-child
		{
			margin-left: 0;
		}
	}

	&.actionBar-set--external
	{
		float: right;
		margin-right: -3px;

		> .actionBar-action:last-child
		{
			margin-right: 0;
		}
	}
}

.actionBar-action
{
	display: inline-block;
	padding: 3px;
	border: 1px solid transparent;
	border-radius: @xf-borderRadiusMedium;
	margin-left: 5px;

	&:before
	{
		.m-faBase();
		font-size: 90%;
	}

	&.actionBar-action--menuTrigger
	{
		display: none;

		&:after
		{
			.m-menuGadget(true);
		}

		&.is-menuOpen
		{
			// get rid of text decoration when the menu opens
			text-decoration: none;
		}
	}

	&.actionBar-action--inlineMod
	{
		label
		{
			color: @xf-linkColor;
			font-size: 120%;
			vertical-align: -2px;
		}

		input
		{
			.m-checkboxAligner();
		}
	}

	&.actionBar-action--mq
	{
		&:before { .m-faContent("@{fa-var-plus}\20"); }

		&.is-selected
		{
			background-color: @xf-contentHighlightBg;
			border-color: @xf-borderColorHighlight;

			&:before { .m-faContent("@{fa-var-minus}\20"); }
		}
	}

	&.actionBar-action--postLink
	{
		text-decoration: inherit !important;
		color: inherit !important;
	}

	&.actionBar-action--reply:before { .m-faContent("@{fa-var-reply}\20"); }
	&.actionBar-action--like:before { .m-faContent("@{fa-var-thumbs-up}\20"); }

	&.actionBar-action--reaction:not(.has-reaction) .reaction-text
	{
		color: inherit;
	}
}

@media (max-width: @xf-responsiveNarrow)
{
	.actionBar-action
	{
		&.actionBar-action--menuItem
		{
			display: none !important;
		}

		&.actionBar-action--menuTrigger
		{
			display: inline;
		}
	}
}]]></template>
  <template type="public" title="core_avatar.less" version_id="2010131" version_string="2.1.1 Beta 1"><![CDATA[// ################################### AVATARS #############################

.avatar
{
	display: inline-flex;
	justify-content: center;
	align-items: center;
	border-radius: @xf-avatarBorderRadius;
	vertical-align: top;
	overflow: hidden;

	img { background-color: @xf-avatarBg; }

	&.avatar--default
	{
		&.avatar--default--dynamic,
		&.avatar--default--text
		{
			font-family: @xf-avatarDynamicFont;
			font-weight: normal;
			text-align: center;
			text-decoration: none !important;

			// this works with the flex box approach
			line-height: 1;

			-webkit-user-select: none;
			-moz-user-select: none;
			-ms-user-select: none;
			user-select: none;
		}

		&.avatar--default--text
		{
			color: xf-default(@xf-textColorMuted, black) !important;
			background: mix(xf-default(@xf-textColorMuted, black), xf-default(@xf-avatarBg, white), 25%) !important;

			> span:before { content: ~"'@{xf-avatarDefaultTextContent}'"; }
		}

		&.avatar--default--image
		{
			background-color: @xf-avatarBg;
			background-image: url(@xf-avatarDefaultImage);
			background-size: cover;
			> span { display: none; }
		}
	}

	&:hover
	{
		text-decoration: none;
	}

	&.avatar--updateLink
	{
		position: relative;
	}

	&.avatar--separated
	{
		border: 1px solid @xf-avatarBg;
	}

	&.avatar--square
	{
		border-radius: 0;
	}

	&.avatar--xxs
	{
		.m-avatarSize(@avatar-xxs);
	}

	&.avatar--xs
	{
		.m-avatarSize(@avatar-xs);
	}

	&.avatar--s
	{
		.m-avatarSize(@avatar-s);
	}

	&.avatar--m
	{
		.m-avatarSize(@avatar-m);
	}

	&.avatar--l
	{
		.m-avatarSize(@avatar-l);
	}

	&.avatar--o
	{
		.m-avatarSize(@avatar-o);
	}

	img:not(.cropImage)
	{
		.m-hideText;
		display: block;
		border-radius: inherit;
		width: 100%;
		height: 100%;
	}

	&:not(a)
	{
		cursor: inherit;
	}
}

.avatar-update
{
	width: 100%;
	height: 30px;
	bottom: -30px;
	position: absolute;

	.m-hiddenLinks();
	.m-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.3), #000);
	.m-transition();

	padding: @xf-paddingSmall;
	overflow: hidden;

	font-family: @xf-fontFamilyUi;
	font-size: @xf-fontSizeSmaller;
	line-height: @xf-lineHeightDefault;

	display: none;
	align-items: center;
	justify-content: center;

	.avatar--updateLink &
	{
		display: flex;
	}

	.has-touchevents &,
	.avatar:hover &
	{
		bottom: 0;
	}

	a
	{
		text-shadow: 0 0 2px rgba(0, 0, 0, 0.6);
		color: #fff;

		&:hover
		{
			text-decoration: none;
		}
	}
}

.avatarWrapper
{
	display: inline-block;
	position: relative;
}

.avatarWrapper-update
{
	position: absolute;
	top: 50%;
	bottom: 0;
	left: 0;
	right: 0;
	display: flex;
	align-items: flex-end;
	justify-content: center;
	padding-bottom: .8em;
	color: #fff;
	text-decoration: none;
	opacity: 0;
	.m-transition(opacity);

	&:before
	{
		content: '';
		position: absolute;
		top: -100%;
		bottom: 0;
		left: 0;
		right: 0;
		.m-borderBottomRadius(xf-default(@xf-avatarBorderRadius, 0));
		.m-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, .9), #000, 60%);
		opacity: .75;
		.m-transition(opacity);
		pointer-events: none;
	}

	span
	{
		// so it sits on top of the BG
		position: relative;
	}

	&:hover
	{
		color: #fff;
		text-decoration: none;

		&:before
		{
			opacity: 1;
		}
	}

	.avatarWrapper:hover &,
	.has-touchevents &
	{
		opacity: 1;
	}

	&.avatarWrapper-update--small
	{
		font-size: @xf-fontSizeSmall;
	}
}]]></template>
  <template type="public" title="core_badge.less" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[// #################################################### BADGES ###########################

.badge,
.badgeContainer:after
{
	display: inline-block;
	padding: 2px 4px;
	margin: -2px 0;
	font-size: 80%;
	line-height: 1;
	font-weight: @xf-fontWeightNormal;
	.xf-badge();
}

.badgeContainer
{
	&:after
	{
		content: attr(data-badge);
		display: none;
	}

	&.badgeContainer--visible:after
	{
		display: inline-block;
	}
}

.badge.badge--highlighted,
.badgeContainer.badgeContainer--highlighted:after
{
	display: inline-block;
	.xf-badgeHighlighted();
}]]></template>
  <template type="public" title="core_bbcode.less" version_id="2010131" version_string="2.1.1 Beta 1"><![CDATA[.bbWrapper
{
	// This approach is needed to normalize browser differences that normalize.css won't handle within BB code/rich text
	// sections. You may need higher specificity to override some situations because of this.

	ol:not(.is-structureList),
	ul:not(.is-structureList)
	{
		margin-top: 1em;
		margin-bottom: 1em;
		overflow: hidden;
	}

	ol:not(.is-structureList) ol:not(.is-structureList),
	ol:not(.is-structureList) ul:not(.is-structureList),
	ul:not(.is-structureList) ol:not(.is-structureList),
	ul:not(.is-structureList) ul:not(.is-structureList)
	{
		margin-top: 0;
		margin-bottom: 0;
	}
}

.bbImage
{
	max-width: 100%;
}

// classes to handle images being floated left and right via BB code attributes
.bbImage,
.lbContainer--inline
{
	&.bbImageAligned--left
	{
		float: left;
		margin: @xf-bbCodeImgFloatMargin @xf-bbCodeImgFloatMargin @xf-bbCodeImgFloatMargin 0;
	}

	&.bbImageAligned--right
	{
		float: right;
		margin: @xf-bbCodeImgFloatMargin 0 @xf-bbCodeImgFloatMargin @xf-bbCodeImgFloatMargin;
	}
}

.bbMediaWrapper,
.bbMediaJustifier
{
	width: 560px;
	max-width: 100%;
	margin: 0;

	&.fb_iframe_widget
	{
		display: block;
	}

	// we want this to still be a block element but to inherit the alignment a user has set - this approximates that
	[style="text-align: center"] &
	{
		margin-left: auto;
		margin-right: auto;
	}

	[style="text-align: left"] &
	{
		-ltr-rtl-margin-left: 0;
		-ltr-rtl-margin-right: auto;
	}

	[style="text-align: right"] &
	{
		-ltr-rtl-margin-left: auto;
		-ltr-rtl-margin-right: 0;
	}

	&.bbImageAligned--left
	{
		float: left;
		margin: @xf-bbCodeImgFloatMargin @xf-bbCodeImgFloatMargin @xf-bbCodeImgFloatMargin 0;
	}

	&.bbImageAligned--right
	{
		float: right;
		margin: @xf-bbCodeImgFloatMargin 0 @xf-bbCodeImgFloatMargin @xf-bbCodeImgFloatMargin;
	}
}

.bbMediaWrapper-inner
{
	position: relative;
	padding-bottom: 56.25%; /* 16:9 ratio */
	height: 0;

	&.bbMediaWrapper-inner--4to3
	{
		padding-bottom: 75%; /* 4:3 ratio */
	}

	&.bbMediaWrapper-inner--104px
	{
		padding-bottom: 104px;
	}

	&.bbMediaWrapper-inner--110px
	{
		padding-bottom: 110px;
	}

	&.bbMediaWrapper-inner--500px
	{
		padding-bottom: 500px;
	}

	iframe,
	object,
	embed,
	video,
	audio,
	.bbMediaWrapper-fallback
	{
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
	}
}

.bbMediaWrapper-fallback
{
	display: flex;
	justify-content: center;
	align-items: center;
	max-width: 100%;
	.xf-minorBlockContent();
}

.bbOembed
{
	margin: auto;
	width: 500px;
	max-width: 100%;

	&.bbOembed--loaded
	{
		display: block;
	}

	.reddit-card
	{
		margin: 0;
	}
}

.bbTable
{
	max-width: 100%;
	overflow: auto;

	.m-tableBase();
}

.bbCodePlainUnfurl
{
	&.link
	{
		display: block;
	}
}]]></template>
  <template type="public" title="core_block.less" version_id="2010131" version_string="2.1.1 Beta 1"><![CDATA[// ################################# BLOCKS ##################

.blocks
{
	margin-bottom: @xf-elementSpacer;

	&:last-child
	{
		margin-bottom: 0;
	}

	.block
	{
		margin-bottom: (@xf-elementSpacer / 2);

		&:last-child
		{
			margin-bottom: 0;
		}
	}

	&.blocks--close .block
	{
		margin-bottom: (@xf-elementSpacer / 4);
	}

	&.blocks--separated
	{
		+ .blocks
		{
			padding-top: @xf-elementSpacer;
			border-top: @xf-borderSize solid @xf-borderColor;
		}
	}
}

.blocks-header
{
	font-size: @xf-fontSizeLarger;
	font-weight: @xf-fontWeightNormal;
	color: @xf-textColorMuted;

	margin: 0;
	padding: 0;
	margin-bottom: 5px;

	&.blocks-header--strong
	{
		color: @xf-textColorDimmed;

		.blocks-desc
		{
			color: @xf-textColorMuted;
		}
	}
}

.blocks-textJoiner
{
	display: table;
	width: 100%;
	margin-bottom: (@xf-elementSpacer / 2);
	padding: 0 @xf-paddingMedium;

	> span
	{
		display: table-cell;
		position: relative;

		&:before
		{
			content: '';
			position: absolute;
			left: 0;
			right: 0;
			top: 50%;
			border-top: @xf-borderSize solid @xf-borderColor;
		}
	}

	> em
	{
		display: table-cell;
		padding: 0 @xf-paddingLarge;
		width: 1%;
		white-space: nowrap;
		font-size: @xf-fontSizeLargest;
		line-height: 1;
		font-style: normal;
		text-align: center;
	}
}

.block
{
	margin-bottom: @xf-elementSpacer;

	&.block--close
	{
		margin-bottom: 5px;
	}

	&.block--treeEntryChooser
	{
		.block-header
		{
			font-size: @xf-fontSizeLarge;

			.block-desc
			{
				font-size: @xf-fontSizeSmallest;
			}
		}

		.block-row
		{
			padding-top: 6px;
			padding-bottom: 6px;
		}

		.contentRow
		{
			&.is-disabled
			{
				opacity: 0.5;
			}
		}

		.contentRow-title
		{
			font-size: @xf-fontSizeNormal;
		}

		.contentRow-minor
		{
			font-size: @xf-fontSizeSmaller;
		}

		.contentRow-suffix
		{
			font-size: @xf-fontSizeSmall;
		}
	}
}

.block-outer
{
	padding-bottom: @xf-blockPaddingV;
	.m-clearFix();

	&:empty
	{
		display: none;
	}

	&.block-outer--after
	{
		padding-top: @xf-blockPaddingV;
		padding-bottom: 0;
	}

	.block-outer-hint
	{
		font-size: @xf-fontSizeSmall;
		color: @xf-textColorMuted;
	}
}
.block-outer-main { float: left; }
.block-outer-opposite { float: right; }
.block-outer-middle { text-align: center; }

.block-container
{
	.xf-contentBase();
	.xf-blockBorder();
	border-radius: @xf-blockBorderRadius;

	&.block-container--none
	{
		background: none;
		border: none;
		color: @xf-textColor;
		padding: 0;
	}
}

@media (min-width: @xf-responsiveEdgeSpacerRemoval)
{
	@{block-noStripSel} > :first-child,
	.block-topRadiusContent,
	@{block-noStripSel} > .block-body:first-child > .blockLink:first-child
	{
		border-top-left-radius: @block-borderRadius-inner;
		border-top-right-radius: @block-borderRadius-inner;
	}

	@{block-noStripSel} > :last-child,
	.block-bottomRadiusContent,
	@{block-noStripSel} > .block-body:last-child > .blockLink:last-child,
	@{block-noStripSel} > .tabPanes:last-child > [role=tabpanel] > :last-child
	{
		border-bottom-left-radius: @block-borderRadius-inner;
		border-bottom-right-radius: @block-borderRadius-inner;
	}

	@{block-noStripSel} > .block-body:first-child > .dataList:first-child,
	.block-topRadiusContent.dataList,
	.block-topRadiusContent > .dataList:first-child
	{
		tbody:first-child .dataList-row:first-child,
		thead:first-child .dataList-row:first-child
		{
			> .dataList-cell:first-child { border-top-left-radius: @block-borderRadius-inner; }
			> .dataList-cell:last-child { border-top-right-radius: @block-borderRadius-inner; }
		}
	}

	@{block-noStripSel} > .block-body:first-child > .formRow:first-child,
	.block-topRadiusContent.formRow,
	.block-topRadiusContent > .formRow:first-child
	{
		> dt { border-top-left-radius: @block-borderRadius-inner; }
		> dd { border-top-right-radius: @block-borderRadius-inner; }
	}

	@{block-noStripSel} > .block-body:last-child > .dataList:last-child,
	.block-bottomRadiusContent.dataList,
	.block-bottomRadiusContent > .dataList:last-child
	{
		tbody:last-child .dataList-row:last-child
		{
			> .dataList-cell:first-child { border-bottom-left-radius: @block-borderRadius-inner; }
			> .dataList-cell:last-child { border-bottom-right-radius: @block-borderRadius-inner; }
		}
	}

	@{block-noStripSel} > .block-body:last-child > .formRow:last-child,
	.block-bottomRadiusContent.formRow,
	.block-bottomRadiusContent > .formRow:last-child
	{
		> dt { border-bottom-left-radius: @block-borderRadius-inner; }
		> dd { border-bottom-right-radius: @block-borderRadius-inner; }
	}

	@{block-noStripSel} > .block-body:last-child .formSubmitRow:not(.is-sticky),
	@{block-noStripSel} > .formSubmitRow:not(.is-sticky):last-child,
	.block-bottomRadiusContent > .formSubmitRow:not(.is-sticky)
	{
		> dt { border-bottom-left-radius: @block-borderRadius-inner; }
		> dd { border-bottom-right-radius: @block-borderRadius-inner; }

		.formSubmitRow-bar
		{
			border-bottom-left-radius: @block-borderRadius-inner;
			border-bottom-right-radius: @block-borderRadius-inner;
		}
	}
}

.block-header
{
	padding: @xf-blockPaddingV @xf-blockPaddingH;
	margin: 0;
	font-weight: @xf-fontWeightNormal;
	text-decoration: none;
	.xf-blockHeader();

	.m-clearFix();
	.m-hiddenLinks();

	&.block-header--separated
	{
		border-top: @xf-borderSize solid @xf-borderColorLight;
	}

	.block-desc
	{
		color: fade(@xf-blockHeader--color, 70);
		.m-textColoredLinks();
	}
}

.block-minorHeader
{
	padding: @xf-blockPaddingV @xf-blockPaddingH;
	margin: 0;
	font-weight: @xf-fontWeightNormal;
	text-decoration: none;
	.xf-blockMinorHeader();

	.m-clearFix();
	.m-hiddenLinks();

	.block-body + &
	{
		border-top: @xf-borderSize solid @xf-borderColorLight;
	}

	.block-desc
	{
		.m-textColoredLinks();
	}

	&--spaced
	{
		margin-top: @xf-paddingSmall;
	}

	&--small
	{
		font-size: @xf-fontSizeSmall;
	}
}

.block-tabHeader
{
	padding: 0;
	margin: 0;
	font-weight: @xf-fontWeightNormal;
	.xf-blockTabHeader();
	.m-tabsTogether(xf-default(@xf-blockTabHeader--font-size, @xf-fontSizeNormal));

	.tabs-tab
	{
		padding: @xf-blockPaddingV @xf-blockPaddingH max(0px, @xf-blockPaddingV - @xf-borderSizeFeature);
		border-bottom: @xf-borderSizeFeature solid transparent;

		&:hover
		{
			color: @xf-blockTabHeaderSelected--color;
			background: fade(@xf-blockTabHeaderSelected--color, 10%);
		}

		&.is-active
		{
			background: none;
			.xf-blockTabHeaderSelected();
		}
	}

	.block-tabHeader-extra
	{
		float: right;
		color: inherit;
		font-size: @xf-blockTabHeader--font-size;
		padding: @xf-blockPaddingV @xf-blockPaddingH;
	}

	.hScroller-action
	{
		.m-hScrollerActionColorVariation(
			xf-default(@xf-blockTabHeader--background-color, transparent),
			xf-default(@xf-blockTabHeader--color, ~""),
			xf-default(@xf-blockTabHeaderSelected--color, ~"")
		);
	}
}

.block-minorTabHeader
{
	padding: 0;
	margin: 0;
	font-weight: @xf-fontWeightNormal;
	.xf-blockMinorTabHeader();
	.m-tabsTogether(xf-default(@xf-blockMinorTabHeader--font-size, @xf-fontSizeNormal));

	.tabs-tab
	{
		padding: @xf-blockPaddingV @xf-blockPaddingH max(0px, @xf-blockPaddingV - @xf-borderSizeFeature);
		border-bottom: @xf-borderSizeFeature solid transparent;

		&:hover
		{
			color: @xf-blockMinorTabHeaderSelected--color;
		}

		&.is-active
		{
			background: none;
			.xf-blockMinorTabHeaderSelected();
		}
	}

	.hScroller-action
	{
		.m-hScrollerActionColorVariation(
			xf-default(@xf-blockMinorTabHeader--background-color, transparent),
			xf-default(@xf-blockMinorTabHeader--color, ~""),
			xf-default(@xf-blockMinorTabHeaderSelected--color, ~"")
		);
	}
}

.block-filterBar
{
	padding: @xf-blockPaddingV @xf-blockPaddingH;
	.xf-blockFilterBar();

	&.block-filterBar--standalone
	{
		padding: @xf-paddingLarge @xf-blockPaddingH;
		border: @xf-borderSize solid @xf-borderColor;
		border-radius: @block-borderRadius-inner;

		@media (max-width: @xf-responsiveEdgeSpacerRemoval)
		{
			border-radius: 0;
			border-left: none;
			border-right: none;
		}
	}

	.filterBar-filterToggle
	{
		background: mix(
			xf-default(@xf-blockFilterBar--color, @xf-linkColor),
			xf-default(@xf-blockFilterBar--background-color, transparent),
			8%
		);
	}

	.filterBar-filterToggle,
	.filterBar-menuTrigger
	{
		&:hover
		{
			text-decoration: none;
			background: mix(
				xf-default(@xf-blockFilterBar--color, @xf-linkColor),
				xf-default(@xf-blockFilterBar--background-color, transparent),
				16%
			);
		}
	}

	.filterBar-menuTrigger
	{
		margin-right: -5px;
	}
}

.block-textHeader
{
	margin: @xf-blockPaddingV/2 0;
	padding: 0;
	font-weight: @xf-fontWeightNormal;
	.xf-blockTextHeader();

	.m-clearFix();
	.m-hiddenLinks();

	&.block-textHeader--scaled
	{
		font-size: inherit;
	}

	.block-textHeader-highlight
	{
		color: @xf-textColor;
	}

	.block-desc
	{
		.m-textColoredLinks();
	}

	&:first-child
	{
		margin-top: 0;
	}
}

.block-formSectionHeader
{
	padding: @xf-blockPaddingV @xf-blockPaddingH;
	margin: 0;
	font-weight: @xf-fontWeightNormal;
	text-decoration: none;
	.xf-formSectionHeader();

	.m-clearFix();
	.m-hiddenLinks();

	.block-desc
	{
		.m-textColoredLinks();
	}

	.block-container > &:first-child,
	.block-body--collapsible &:first-child,
	.block-header + &
	{
		border-top: none;
	}

	.block-formSectionHeader-aligner
	{
		@_blockPaddingShift: (unit(@xf-formLabelWidth) / 100) * (@xf-blockPaddingH);

		display: inline-block;
		text-align: right;
		min-width: @xf-formLabelWidth;
		min-width: ~"calc((@{xf-formLabelWidth}) - (@{_blockPaddingShift}) - (@{xf-formRowPaddingHInner}) - (@{xf-borderSize}))";
		max-width: 100%;

		@media (max-width: @xf-formResponsive)
		{
			display: inline;
			text-align: left;
			min-width: 0;
			padding-left: 0;
		}
	}

	@media (max-width: @xf-formResponsive)
	{
		padding-left: @xf-formRowPaddingHOuter;
	}

	.block-formSectionHeader-multiChecker
	{
		float: right;
	}

	&--small
	{
		font-size: @xf-fontSizeNormal;
	}
}

.block-desc,
.blocks-desc
{
	display: block;
	font-size: @xf-fontSizeSmaller;
	font-weight: @xf-fontWeightNormal;
}

.block-body
{
	.m-listPlain();

	&.block-body--collapsible
	{
		.has-no-js & { display: block; }

		.m-transitionFadeDown();
	}

	&.block-body--contained
	{
		overflow: auto;
		max-height: 300px;
		max-height: 70vh;
	}
}

.block-row
{
	margin: 0;
	padding: @xf-blockPaddingV @xf-blockPaddingH;
	.m-clearFix();

	&.block-row--alt
	{
		.xf-contentAltBase();
	}

	&.block-row--minor
	{
		font-size: @xf-fontSizeSmall;
	}

	&.block-row--separated
	{
		padding-top: (@xf-blockPaddingV) * 2;
		padding-bottom: (@xf-blockPaddingV) * 2;

		+ .block-row
		{
			border-top: @xf-borderSize solid @xf-borderColorLight;
		}
	}

	&.block-row--connectAbove
	{
		padding-bottom: (@xf-blockPaddingV) * 2;

		.block-body > &:last-child
		{
			padding-bottom: @xf-blockPaddingV;
		}
	}

	&.block-row--highlighted
	{
		.xf-contentHighlightBase();
	}

	&.block-row--clickable:hover
	{
		.xf-contentHighlightBase();
	}

	&.is-mod-selected
	{
		background: @xf-inlineModHighlightColor;
	}

	> pre
	{
		&:first-child { margin-top: 0; }
		&:last-child { margin-bottom: 0; }
	}
}

.block-separator
{
	margin: 0;
	padding: 0;
	border: none;
	border-top: @xf-borderSize solid @xf-borderColorLight;
}

.block-footer
{
	padding: @xf-blockPaddingV @xf-blockPaddingH;
	.xf-blockFooter();
	.m-clearFix();

	&:first-child
	{
		border: none;
	}

	[data-app=admin] &
	{
		.block-footer-counter,
		.block-footer-select
		{
			line-height: 30px;
		}
	}

	&:not(.block-footer--split)
	{
		.block-footer-counter
		{
			float: left;
		}

		.block-footer-controls
		{
			float: right;
		}
	}

	&.block-footer--split
	{
		display: flex;
		align-items: center;

		.block-footer-main,
		.block-footer-counter
		{
			flex-grow: 1;
		}

		.block-footer-select:not(:last-child)
		{
			margin: 0 1em;
		}

		.block-footer-opposite,
		.block-footer-controls
		{
			margin-left: auto;
		}
	}
}

@media (max-width: @xf-responsiveNarrow)
{
	.block-outer
	{
		text-align: center;
	}

	.block-outer-main,
	.block-outer-opposite
	{
		float: none;
		text-align: center;
	}

	.block-outer-main + .block-outer-opposite
	{
		margin-top: @xf-paddingMedium;
	}
}
]]></template>
  <template type="public" title="core_blockend.less" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[// This contains rules that apply to various block and block-related systems. This file should be included
// after all of the primary definitions to ensure the rules override.

.blockMessage,
.blockStatus,
.block-row
{
	p:first-child
	{
		margin-top: 0;
	}

	p:last-child
	{
		margin-bottom: 0;
	}
}

@media (max-width: @xf-responsiveEdgeSpacerRemoval)
{
	.block-container,
	.blockMessage
	{
		margin-left: -@xf-pageEdgeSpacer;
		margin-right: -@xf-pageEdgeSpacer;
		border-radius: 0;
		border-left: none;
		border-right: none;
	}

	.blockStatus
	{
		margin-left: -@xf-pageEdgeSpacer;
		margin-right: -@xf-pageEdgeSpacer;
		border-radius: 0;
		border-right: none;
	}

	.blockMessage.blockMessage--none
	{
		margin-left: 0;
		margin-right: 0;
	}
}]]></template>
  <template type="public" title="core_blocklink.less" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[// ############################ BLOCK LINKS ##################

.blockLink
{
	display: block;
	padding: @xf-blockPaddingV @xf-blockPaddingH;
	.xf-blockLink();

	&.is-selected
	{
		.xf-blockLinkSelected(no-border);
		border-left: @xf-blockLinkSelected--border-width solid @xf-blockLinkSelected--border-color;
		padding-left: (@xf-blockPaddingH - xf-default(@xf-blockLinkSelected--border-width, 0));
	}

	&:hover
	{
		.xf-blockLinkSelected(background);
		text-decoration: inherit;
	}
}

.blockLink-desc
{
	display: block;
	color: @xf-textColorMuted;
	font-size: @xf-fontSizeSmaller;
	font-weight: @xf-fontWeightNormal;
}

.blockLinkSplitToggle
{
	display: flex;
	padding: 0;
	text-decoration: none;
	cursor: pointer;

	&.is-selected
	{
		.xf-blockLinkSelected(no-border);
	}

	&:hover
	{
		.xf-blockLinkSelected(background);
		text-decoration: inherit;
	}
}

.blockLinkSplitToggle-link
{
	display: block;
	padding: @xf-blockPaddingV @xf-blockPaddingH;
	text-decoration: none;
	flex-grow: 1;

	&:hover
	{
		text-decoration: none;
	}

	.blockLinkSplitToggle.is-selected &
	{
		border-left: @xf-blockLinkSelected--border-width solid @xf-blockLinkSelected--border-color;
		padding-left: (@xf-blockPaddingH - xf-default(@xf-blockLinkSelected--border-width, 0));
	}
}

.blockLinkSplitToggle-toggle
{
	display: inline-block;
	padding: @xf-blockPaddingV @xf-blockPaddingH;
	text-decoration: none;
	flex-grow: 0;
	line-height: 1;

	&:hover
	{
		text-decoration: none;
	}

	&:after
	{
		.m-faBase();
		font-size: 80%;
		.m-faContent(@fa-var-chevron-down);
	}

	&.is-active:after
	{
		.m-faContent(@fa-var-chevron-up);
	}
}

.blockLink--iconic
{
	i:after
	{
		.m-faBase();
		display: inline-block;
		min-width: 1em;
		position: absolute;
		left: @xf-blockPaddingH;
		top: 8px;
		display: none !important;
	}

	&--started i:after
	{
		.m-faContent(@fa-var-file-alt);
	}
	&--contributed i:after
	{
		.m-faContent(@fa-var-comments);
	}
	&--watched i:after
	{
		.m-faContent(@fa-var-bookmark);
	}
	&--unanswered i:after
	{
		.m-faContent(@fa-var-question-circle);
	}
}

// ################################ FAUX BLOCK LINKS #######################
// concept from https://codepen.io/BPScott/pen/Erwan and http://codepen.io/IschaGast/pen/Qjxpxo
// z-indexes are bumped to have the link sit on top of positioned elements (without z-index)

.fauxBlockLink
{
	position: relative;

	a,
	.fauxBlockLink-link
	{
		position: relative;
		z-index: 2;
	}

	.fauxBlockLink-blockLink
	{
		position: static;

		&:before
		{
			content: '';
			position: absolute;
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
			z-index: 1;
		}
	}

	&.fauxBlockLink--noHover
	{
		.fauxBlockLink-blockLink:hover
		{
			text-decoration: none;
		}
	}
}]]></template>
  <template type="public" title="core_blockmessage.less" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[// ############################ BLOCK MESSAGE ###################

.block-rowMessage
{
	margin: @xf-blockPaddingV 0;
	padding: @xf-blockPaddingV @xf-blockPaddingH;
	.xf-blockBorder();
	border-radius: @xf-blockBorderRadius;

	.m-clearFix();

	&:first-child
	{
		margin-top: 0;
	}

	&:last-child
	{
		margin-bottom: 0;
	}

	&.block-rowMessage--small
	{
		font-size: @xf-fontSizeSmall;
		padding: @xf-blockPaddingV/2 @xf-blockPaddingH/2;
	}

	&.block-rowMessage--center
	{
		text-align: center;
	}

	.m-blockMessageVariants();
}

.blockMessage
{
	margin-bottom: @xf-elementSpacer;
	padding: @xf-blockPaddingV @xf-blockPaddingH;
	.xf-contentBase();
	.xf-blockBorder();
	border-radius: @xf-blockBorderRadius;

	.m-clearFix();

	//.m-transition(border, margin;); // edgeSpacerRemoval

	&.blockMessage--none
	{
		background: none;
		border: none;
		color: @xf-textColor;
		padding: 0;
	}

	&.blockMessage--close
	{
		margin-top: 5px;
		margin-bottom: 5px;
	}

	&.blockMessage--small
	{
		font-size: @xf-fontSizeSmall;
		padding: @xf-blockPaddingV/2 @xf-blockPaddingH/2;
	}

	&.blockMessage--center
	{
		text-align: center;
	}

	.m-blockMessageVariants();
}

.blockMessage--iconic,
.block-rowMessage--iconic
{
	text-align: left;
	position: relative;
	padding-left: 4em;
	min-height: 4em;

	&:before
	{
		.m-faBase();
		font-size: 280%; // 2 x line height
		position: absolute;
		top: 0;
		left: @xf-blockPaddingV;
	}
}

.m-blockMessageVariants()
{
	// note: the double && is correct here -- it enforces output like ".x.x--variant". The extra specificity helps
	// prevent issues from things like media query overrides.

	&&--highlight
	{
		.xf-contentHighlightBase();
	}
	&--highlight&--iconic:before
	{
		.m-faContent(@fa-var-info-circle);
	}

	&&--important
	{
		.xf-contentAccentBase();
		border-left: @xf-borderSizeFeature solid @xf-borderColorAttention;

		a { .xf-contentAccentLink(); }
	}
	&--important&--iconic:before
	{
		.m-faContent(@fa-var-exclamation-circle);
		color: @xf-importantFeatureColor;
	}

	&&--success
	{
		border-left: @xf-borderSizeFeature solid @xf-successFeatureColor;
		background: @xf-successBg;
		color: @xf-successColor;

		.m-textColoredLinks();
	}
	&--success&--iconic:before
	{
		.m-faContent(@fa-var-check-circle);
		color: @xf-successFeatureColor;
	}

	&&--warning
	{
		border-left: @xf-borderSizeFeature solid @xf-warningFeatureColor;
		background: @xf-warningBg;
		color: @xf-warningColor;

		.m-textColoredLinks();
	}
	&--warning&--iconic:before
	{
		.m-faContent(@fa-var-exclamation-triangle);
		color: @xf-warningFeatureColor;
	}

	&&--error
	{
		border-left: @xf-borderSizeFeature solid @xf-errorFeatureColor;
		background: @xf-errorBg;
		color: @xf-errorColor;

		.m-textColoredLinks();
	}
	&--error&--iconic:before
	{
		.m-faContent(@fa-var-times-circle);
		color: @xf-errorFeatureColor;
	}
}]]></template>
  <template type="public" title="core_blockstatus.less" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[// ################################## BLOCK STATUS MESSAGES ##############################

.blockStatus
{
	.xf-contentAltBase();
	.xf-blockBorder();
	border-left: @xf-borderSizeFeature solid @xf-borderColorAttention;
	border-radius: @xf-blockBorderRadius;
	margin: 0;
	padding: @xf-paddingMedium 0;
	font-size: @xf-fontSizeSmall;
	text-align: left;

	//.m-transition(border, margin;); // edgeSpacerRemoval

	> dt
	{
		display: none;
	}

	&.blockStatus--info
	{
		border-left-color: @xf-borderColorFeature;
	}

	&.blockStatus--simple
	{
		.xf-blockBorder();
	}

	&.blockStatus--standalone
	{
		margin-bottom: (@xf-elementSpacer) / 2;
	}
}

.blockStatus-message
{
	display: block;
	padding: 0 @xf-paddingMedium;
	margin: .2em 0 0;

	&:first-of-type
	{
		margin-top: 0;
	}

	&:before
	{
		.m-faBase();
		display: inline-block;
		min-width: .8em;
		color: @xf-textColorAttention;
	}

	&--deleted::before { .m-faContent("@{fa-var-trash}\20"); }
	&--locked::before { .m-faContent("@{fa-var-lock}\20"); }
	&--moderated::before { .m-faContent("@{fa-var-shield}\20"); }
	&--warning:before { .m-faContent("@{fa-var-exclamation-triangle}\20"); }
	&--ignored:before { .m-faContent("@{fa-var-microphone-slash}\20"); }
}]]></template>
  <template type="public" title="core_button.less" version_id="2010131" version_string="2.1.1 Beta 1"><![CDATA[// ############################ BUTTONS #################

.button,
a.button // needed for specificity over a:link
{
	.m-buttonBase();

	a
	{
		color: inherit;
		text-decoration: none;
	}

	.xf-buttonDefault();
	.m-buttonBlockColorVariationSimple(xf-default(@xf-buttonDefault--background-color, transparent));

	&.button--primary
	{
		.xf-buttonPrimary();
		.m-buttonBlockColorVariationSimple(xf-default(@xf-buttonPrimary--background-color, transparent));
	}

	&.button--cta
	{
		.xf-buttonCta();
		.m-buttonBlockColorVariationSimple(xf-default(@xf-buttonCta--background-color, transparent));
	}

	&.button--link
	{
		// block colors
		background: @xf-contentBg;
		color: @xf-linkColor;
		.m-buttonBorderColorVariation(@xf-borderColor);

		&:hover,
		&:active,
		&:focus
		{
			text-decoration: none;
			background: @xf-contentHighlightBg;
		}
	}

	&.button--plain
	{
		background: none;
		color: @xf-linkColor;
		border: none;

		&:hover,
		&:active,
		&:focus
		{
			text-decoration: none;
			background: none;
		}
	}

	&.button--alt
	{
		// block colors
		background-color: @xf-paletteColor1;
		color: @xf-linkColor;
		.m-buttonBorderColorVariation(@xf-paletteColor2);

		&:hover,
		&:active,
		&:focus
		{
			background-color: @xf-paletteColor1;
			color: @xf-linkColor;
		}
	}

	&.button--longText
	{
		white-space: normal;
		text-align: left;
	}

	&.is-disabled
	{
		.xf-buttonDisabled();
		.m-buttonBorderColorVariation(xf-default(@xf-buttonDisabled--background-color, transparent));

		&:hover,
		&:active,
		&:focus
		{
			background: xf-default(@xf-buttonDisabled--background-color, transparent) !important;
		}
	}

	&.button--scroll
	{
		background: fade(xf-default(@xf-buttonDefault--background-color, transparent), 75%);
		padding: 5px 8px;

		.m-dropShadow();
	}

	&.button--small
	{
		font-size: @xf-fontSizeSmall;
		padding: 3px 6px;
	}

	&.button--smaller
	{
		font-size: @xf-fontSizeSmaller;
		padding: 2px 5px;
	}

	&.button--fullWidth
	{
		display: block;
	}

	&.button--icon
	{
		> .button-text:before,
		.button-icon
		{
			.m-faBase();
		}

		> .button-text:before,
		> .fa--xf:before,
		.button-icon
		{
			font-size: 120%;
			vertical-align: -.1em;
			display: inline-block;
			margin: -.255em 6px -.255em 0;
		}

		> .fa--xf
		{
			// helps fix a button alignment issue (Chrome only)
			line-height: inherit;
		}

		.button-icon
		{
			height: 1em;
			vertical-align: 0;
		}

		&.button--iconOnly
		{
			> .button-text:before,
			> i.fa--xf:before,
			.button-icon
			{
				margin-left: 0;
				margin-right: 0;
			}
		}

		&.button--padded
		{
			> .button-text:before,
			> i.fa--xf:before,
			.button-icon
			{
				margin-top: 0;
				margin-bottom: 0;
			}
		}

		&--add          { .m-buttonIcon(@fa-var-plus-square, .79em); }
		&--confirm      { .m-buttonIcon(@fa-var-check, 1em); }
		&--write	    { .m-buttonIcon(@fa-var-edit, 1em); }
		&--import  	    { .m-buttonIcon(@fa-var-upload, .93em); }
		&--export  	    { .m-buttonIcon(@fa-var-download,  1.125em); }
		&--download	    { .m-buttonIcon(@fa-var-download, 1.125em); }
		&--redirect	    { .m-buttonIcon(@fa-var-external-link, 1.125em); }
		&--disable      { .m-buttonIcon(@fa-var-power-off); }
		&--edit         { .m-buttonIcon(@fa-var-edit, .86em); }
		&--save         { .m-buttonIcon(@fa-var-save, .86em); }
		&--reply	    { .m-buttonIcon(@fa-var-reply, 1em); }
		&--quote	    { .m-buttonIcon(@fa-var-quote-left, .93em); }
		&--purchase	    { .m-buttonIcon(@fa-var-credit-card, 1.11em); }
		&--payment	    { .m-buttonIcon(@fa-var-credit-card, 1.08em); }
		&--convert	    { .m-buttonIcon(@fa-var-bolt, .5em); }
		&--search	    { .m-buttonIcon(@fa-var-search, .93em); }
		&--sort         { .m-buttonIcon(@fa-var-sort, .58em); }
		&--upload	    { .m-buttonIcon(@fa-var-upload, .93em); }
		&--attach	    { .m-buttonIcon(@fa-var-paperclip, .79em); }
		&--login {
			.m-buttonIcon(@fa-var-lock, .90em);
		}
		&--rate         { .m-buttonIcon(@fa-var-star, .93em); }
		&--config       { .m-buttonIcon(@fa-var-cog, .86em); }
		&--refresh      { .m-buttonIcon(@fa-var-sync-alt, .86em); }
		&--translate    { .m-buttonIcon(@fa-var-globe, .86em); }
		&--vote         { .m-buttonIcon(@fa-var-check-circle, .86em); }
		&--result       { .m-buttonIcon(@fa-var-chart-bar, 1.15em); }
		&--history	    { .m-buttonIcon(@fa-var-history, .86em); }
		&--cancel       { .m-buttonIcon(@fa-var-ban, .86em); }
		&--close        { .m-buttonIcon(@fa-var-times, .79em); }
		&--preview      { .m-buttonIcon(@fa-var-eye, 1em); }
		&--conversation { .m-buttonIcon(@fa-var-comments, 1em); }
		&--bolt         { .m-buttonIcon(@fa-var-bolt, .5em); }
		&--list         { .m-buttonIcon(@fa-var-list, .86em); }
		&--prev			{ .m-buttonIcon(@fa-var-chevron-left, .71em); }
		&--next			{ .m-buttonIcon(@fa-var-chevron-right, .71em); }
		&--markRead     { .m-buttonIcon(@fa-var-check-square, .93em); }
		&--user         { .m-buttonIcon(@fa-var-user, .72em); }
		&--userCircle   { .m-buttonIcon(@fa-var-user-circle, 1em); }

		&--notificationsOn  { .m-buttonIcon(@fa-var-bell, 1em); }
		&--notificationsOff { .m-buttonIcon(@fa-var-bell-slash, 1.15em); }

		&--show			{ .m-buttonIcon(@fa-var-eye) }
		&--hide			{ .m-buttonIcon(@fa-var-eye-slash) }

		// for inline mod confirmations
		&--merge { .m-buttonIcon(@fa-var-compress, .86em); }
		&--move { .m-buttonIcon(@fa-var-share, 1em); }
		&--copy { .m-buttonIcon(@fa-var-copy, 1em); }
		&--approve, &--unapprove { .m-buttonIcon(@fa-var-shield, .72em); }
		&--delete, &--undelete { .m-buttonIcon(@fa-var-trash-alt, .79em); }
		&--stick, &--unstick { .m-buttonIcon(@fa-var-thumbtack, .65em); }
		&--lock { .m-buttonIcon(@fa-var-lock, .65em); }
		&--unlock { .m-buttonIcon(@fa-var-unlock, .93em); }

		&--bookmark
		{
			.m-buttonIcon(@fa-var-bookmark);

			&.is-bookmarked .button-text:before
			{
				font-weight: @faWeight-solid;
				color: @xf-textColorAttention;
			}
		}
	}

	&.button--provider
	{
		> .button-text:before,
		.button-icon
		{
			.m-faBase('Brands');
			font-size: 120%;
			vertical-align: middle;
			display: inline-block;
			margin: -4px 6px -4px 0;
		}

		.button-icon
		{
			height: 1em;
			vertical-align: 0;
		}

		&--facebook
		{
			.m-buttonColorVariation(#3B5998, white);
			.m-buttonIcon(@fa-var-facebook, .58em);
		}

		&--twitter
		{
			.m-buttonColorVariation(#1DA1F3, white);
			.m-buttonIcon(@fa-var-twitter, .93em);
		}

		&--google
		{
			.m-buttonColorVariation(white, #444);
			border-color: #e9e9e9;

			> .button-text:before
			{
				display: none;
			}
		}

		&--github
		{
			.m-buttonColorVariation(#666666, white);
			.m-buttonIcon(@fa-var-github, .86em);
		}

		&--linkedin
		{
			.m-buttonColorVariation(#0077b5, white);
			.m-buttonIcon(@fa-var-linkedin, .86em);
		}

		&--microsoft
		{
			.m-buttonColorVariation(#00bcf2, white);
			.m-buttonIcon(@fa-var-windows, .93em);
		}

		&--yahoo
		{
			.m-buttonColorVariation(#410093, white);
			.m-buttonIcon(@fa-var-yahoo, .86em);
		}
	}

	&.button--splitTrigger
	{
		// button-text and button-menu are always children of button--splitTrigger
		// but are defined here for reasons of specificity, as these border colors
		// are overwritten by .m-buttonBorderColorVariation()
		> .button-text { border-right: @xf-borderSize solid transparent; }
		> .button-menu { border-left: @xf-borderSize solid transparent; }

		.m-clearFix();
		padding: 0;
		font-size: 0;
		display: inline-block;

		button.button-text
		{
			background: transparent;
			border: none;
			border-right: @xf-borderSize solid transparent;
			color: inherit;
		}

		> .button-text,
		> .button-menu
		{
			.xf-buttonBase();
			display: inline-block;

			&:hover
			{
				&:after
				{
					opacity: 1;
				}
			}
		}

		> .button-text
		{
			.m-borderRightRadius(0);
		}

		> .button-menu
		{
			.m-borderLeftRadius(0);
			padding-right: xf-default(@xf-buttonBase--padding-right, 0);// * (2/3);
			padding-left: xf-default(@xf-buttonBase--padding-left, 0);// * (2/3);

			&:after
			{
				.m-menuGadget(); // .58em
				opacity: .5;
			}
		}
	}
}

.buttonGroup
{
	display: inline-block;
	vertical-align: top;
	.m-clearFix();

	&.buttonGroup--aligned
	{
		vertical-align: middle;
	}

	> .button
	{
		float: left;

		&:not(:first-child)
		{
			border-left: none;
		}

		&:not(:first-child):not(:last-child)
		{
			border-radius: 0;
		}

		&:first-child:not(:last-child)
		{
			.m-borderRightRadius(0);
		}

		&:last-child:not(:first-child)
		{
			.m-borderLeftRadius(0);
		}
	}

	> .buttonGroup-buttonWrapper
	{
		float: left;

		&:not(:first-child) > .button
		{
			border-left: none;
		}

		&:not(:first-child):not(:last-child) > .button
		{
			border-radius: 0;
		}

		&:first-child:not(:last-child) > .button
		{
			.m-borderRightRadius(0);
		}

		&:last-child:not(:first-child) > .button
		{
			.m-borderLeftRadius(0);
		}
	}
}

.toggleButton
{
	> input
	{
		display: none;
	}

	> span
	{
		.xf-buttonDisabled();
		.m-buttonBorderColorVariation(xf-default(@xf-buttonDisabled--background-color, transparent));
	}

	&.toggleButton--small > span
	{
		font-size: @xf-fontSizeSmaller;
		padding: @xf-paddingSmall;
	}

	> input:checked + span
	{
		.xf-buttonDefault();
		.m-buttonBlockColorVariationSimple(xf-default(@xf-buttonDefault--background-color, transparent));
	}
}

.u-scrollButtons
{
	position: fixed;
	bottom: 30px;
	right: (@xf-pageEdgeSpacer) / 2;

	.has-hiddenscroll &
	{
		right: 20px;
	}

	z-index: @zIndex-9;

	.m-transition(opacity; @xf-animationSpeed);
	opacity: 0;
	display: none;

	&.is-transitioning
	{
		display: block;
	}

	&.is-active
	{
		display: block;
		opacity: 1;
	}

	.button
	{
		display: block;

		+ .button
		{
			margin-top: (@xf-pageEdgeSpacer) / 2;
		}
	}
}
]]></template>
  <template type="public" title="core_categorylist.less" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[// ################################ CATEGORY LIST #######################

@_categoryListTogglerWidth: 1em;
@_categoryListTogglerPaddingH: @xf-paddingMedium;

.categoryList
{
	display: none;
	.m-listPlain();

	&.is-active
	{
		display: block;
	}
}

.categoryList-item
{
	padding: 0;
	text-decoration: none;
	font-size: @xf-fontSizeNormal;

	&.categoryList-item--small
	{
		font-size: @xf-fontSizeSmall;
	}

	.categoryList
	{
		padding-left: @xf-paddingLarge;
	}
}

.categoryList-itemDesc
{
	display: block;
	font-size: @xf-fontSizeSmaller;
	font-weight: @xf-fontWeightNormal;
	color: @xf-textColorMuted;
	margin-top: -@xf-blockPaddingV;

	.m-overflowEllipsis();
}

.categoryList-header
{
	padding: @xf-blockPaddingV 0;
	margin: 0;
	color: @xf-textColorFeature;
	text-decoration: none;
	font-weight: @xf-fontWeightHeavy;

	&.categoryList-header--muted
	{
		color: @xf-textColorMuted;
	}

	.m-clearFix();
	.m-hiddenLinks();
}

.categoryList-itemRow
{
	display: flex;
	min-width: 0;
}

.categoryList-link
{
	display: block;
	flex-grow: 1;
	padding: @xf-blockPaddingV @_categoryListTogglerPaddingH;
	text-decoration: none;

	.m-overflowEllipsis();

	&:hover
	{
		text-decoration: none;
	}

	&.is-selected
	{
		font-weight: @xf-fontWeightHeavy;
	}

	.categoryList-toggler + &,
	.categoryList-togglerSpacer + &
	{
		padding-left: 0;
	}
}

.categoryList-label
{
	margin-left: auto;
	align-self: center;
	padding-right: @_categoryListTogglerPaddingH;
}

.categoryList-toggler
{
	display: inline-block;
	padding: @xf-blockPaddingV @_categoryListTogglerPaddingH;
	text-decoration: none;
	flex-grow: 0;
	line-height: 1;

	&:hover
	{
		text-decoration: none;
	}

	&:after
	{
		.m-faBase();
		font-size: 80%;
		.m-faContent(@fa-var-chevron-down, @_categoryListTogglerWidth);
	}

	&.is-active:after
	{
		.m-faContent(@fa-var-chevron-up, @_categoryListTogglerWidth);
	}
}

.categoryList-togglerSpacer
{
	display: inline-block;
	visibility: hidden;
	padding: @xf-blockPaddingV @_categoryListTogglerPaddingH;

	&:after
	{
		.m-faBase();
		font-size: 80%;
		.m-faContent(@fa-var-chevron-down, @_categoryListTogglerWidth);
	}
}]]></template>
  <template type="public" title="core_collapse.less" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[// ########################################## COLLAPSE / TOGGLERS ##############################

.toggleTarget
{
	display: none;
	.m-transition(all, -xf-height;);
	overflow: hidden;
	height: 0;
	opacity: 0;

	&.is-transitioning
	{
		display: block;
	}

	&.is-active
	{
		display: block;
		height: auto;
		opacity: 1;
	}
}

.collapseTrigger
{
	cursor: pointer;

	&:before
	{
		.m-faBase('Pro', @faWeight-solid);
		.m-faContent(@fa-var-caret-right, .63em);
		font-size: 80%;
		margin-right: .2em;
	}

	&.is-active:before
	{
		.m-faContent(@fa-var-caret-down, .63em);
	}

	&.collapseTrigger--block
	{
		display: block;

		&:before
		{
			float: right;
			margin-right: 0;
			margin-left: 5px;
			font-size: 100%;
			line-height: inherit;
		}
	}
}]]></template>
  <template type="public" title="core_contentrow.less" version_id="2010132" version_string="2.1.1 Beta 2"><![CDATA[// ########################################### CONTENT ROWS ############################

@_contentRow-faderHeight: 150px;
@_contentRow-faderCoverHeight: (@_contentRow-faderHeight) / 2;

.contentRow
{
	display: flex;

	&.contentRow--alignMiddle
	{
		align-items: center;
	}

	&.is-deleted
	{
		opacity: .7;

		.contentRow-header,
		.contentRow-title
		{
			text-decoration: line-through;
		}
	}
}

.m-figureFixed(@size)
{
	width: @size;

	img,
	i.fa,
	i.fal,
	i.far,
	i.fas,
	i.fab,
	.avatar
	{
		max-height: @size;
	}
}

.contentRow-figure
{
	vertical-align: top;
	white-space: nowrap;
	word-wrap: normal;
	text-align: center;

	img,
	i.fa,
	i.fal,
	i.far,
	i.fas,
	i.fab,
	.avatar
	{
		vertical-align: bottom;
	}

	&.contentRow-figure--fixedBookmarkIcon
	{
		.m-figureFixed(48px);
	}

	&.contentRow-figure--fixedSmall
	{
		.m-figureFixed(60px);
	}

	&.contentRow-figure--fixedMedium
	{
		.m-figureFixed(100px);

		&.contentRow-figure--fixedMedium--fluidWidth
		{
			width: auto;
			max-width: 200px;
		}
	}

	&.contentRow-figure--fixedLarge
	{
		.m-figureFixed(200px);
	}

	&.contentRow-figure--text
	{
		font-size: @xf-fontSizeLargest;
	}
}

.contentRow-figureContainer
{
	position: relative;

	.contentRow-figureSeparated
	{
		position: absolute;
		right: -5px;
		bottom: -5px;

		.m-avatarSize(@avatar-s / 2 + 2px);
	}
}

.contentRow-figureIcon
{
	text-align: center;
	color: @xf-textColorFeature;


	img,
	i.fa,
	i.fal,
	i.far,
	i.fas,
	i.fab
	{
		width: 64px;
		overflow: hidden;
		white-space: nowrap;
		word-wrap: normal;
		border-radius: @xf-borderRadiusMedium;

		.contentRow-figure--fixedBookmarkIcon &
		{
			width: 48px;
		}
	}
}

.contentRow-main
{
	flex: 1;
	min-width: 0;
	vertical-align: top;
	padding-left: @xf-paddingLarge;

	&:before
	{
		// because of line height, there appears to be extra space at the top of this
		content: '';
		display: block;
		margin-top: -.18em;
	}

	&.contentRow-main--close
	{
		padding-left: @xf-paddingMedium;
	}

	&:first-child
	{
		padding-left: 0;
	}
}

.contentRow-header
{
	margin: 0;
	padding: 0;
	font-weight: @xf-fontWeightHeavy;
	font-size: @xf-fontSizeLarge;
}

.contentRow-title
{
	margin: 0;
	padding: 0;
	font-weight: @xf-fontWeightNormal;
	font-size: @xf-fontSizeLarge;
}

.contentRow-snippet
{
	font-size: @xf-fontSizeSmall;
	font-style: italic;
	margin: .25em 0;
}

.contentRow-muted
{
	color: @xf-textColorMuted;
}

.contentRow-lesser
{
	font-size: @xf-fontSizeSmall;
}

.contentRow-suffix
{
	padding-left: @xf-paddingMedium;
	white-space: nowrap;
	word-wrap: normal;
}

.contentRow-faderContainer
{
	position: relative;
	overflow: hidden;
}

.contentRow-faderContent
{
	max-height: 150px;
	overflow: hidden;
}

.contentRow-fader
{
	position: absolute;
	top: (@_contentRow-faderHeight) + ((@xf-paddingMedium) * 2) - (@_contentRow-faderCoverHeight);
	left: 0;
	right: 0;
	height: @_contentRow-faderCoverHeight;

	.m-gradient(fade(@xf-contentBg, 0%), @xf-contentBg, transparent, 0%, 80%);
}

.contentRow-minor
{
	font-size: @xf-fontSizeSmall;
	color: @xf-textColorMuted;

	&.contentRow-minor--hideLinks
	{
		.m-hiddenLinks();
	}

	&.contentRow-minor--smaller
	{
		font-size: @xf-fontSizeSmaller;
	}

	&.contentRow-minor--singleLine
	{
		.m-overflowEllipsis();
	}
}

.contentRow-spaced
{
	margin: .5em 0;

	&:last-child
	{
		margin-bottom: 0;
	}
}

.contentRow-extra
{
	float: right;
	padding-left: @xf-paddingMedium;
	font-size: @xf-fontSizeSmallest;

	&.contentRow-extra--small
	{
		font-size: @xf-fontSizeSmall;
		color: @xf-textColorMuted;
	}

	&.contentRow-extra--normal
	{
		font-size: @xf-fontSizeNormal;
		color: @xf-textColorMuted;
	}

	&.contentRow-extra--large
	{
		font-size: @xf-fontSizeLarge;
		color: @xf-textColorMuted;
	}

	&.contentRow-extra--larger
	{
		font-size: @xf-fontSizeLarger;
		color: @xf-textColorMuted;
	}

	&.contentRow-extra--largest
	{
		font-size: @xf-fontSizeLargest;
		color: @xf-textColorMuted;
	}
}

@media (max-width: @xf-responsiveNarrow)
{
	.contentRow-figure
	{
		&.contentRow-figure--fixedBookmarkIcon
		{
			width: @avatar-xs;
		}

		.avatar--s
		{
			.m-avatarSize(@avatar-xs);
		}
	}

	.contentRow--hideFigureNarrow
	{
		.contentRow-figure
		{
			display: none;
		}

		.contentRow-main
		{
			padding-left: 0;
		}
	}
}]]></template>
  <template type="public" title="core_datalist.less" version_id="2010131" version_string="2.1.1 Beta 1"><![CDATA[// ################################# DATA LISTS ###################

.dataList
{
	max-width: 100%;

	&.dataList--separated
	{
		border-top: @xf-borderSize solid @xf-borderColorLight;
		border-bottom: @xf-borderSize solid @xf-borderColorLight;
	}

	&.dataList--separatedTop
	{
		border-top: @xf-borderSize solid @xf-borderColorLight;
	}

	&.dataList--separatedBottom
	{
		border-bottom: @xf-borderSize solid @xf-borderColorLight;
	}

	&.dataList--contained
	{
		overflow-x: auto;
		max-height: 85vh;
	}

	@media (max-width: @xf-responsiveMedium)
	{
		overflow-x: auto;
	}
}

.dataList-table
{
	width: 100%;
	border-collapse: separate;
	border-spacing: 0;
}

.dataList-rowGroup
{
	&.is-hidden
	{
		display: none;
	}
}

.m-adjustDataListCellPadding(@paddingV; @paddingH)
{
	padding: @paddingV @paddingH;

	&.dataList-cell--action,
	&.dataList-cell--link
	{
		padding: 0;

		a,
		label,
		.dataList-blockLink
		{
			padding: @paddingV @paddingH;
		}
	}
}

.dataList-row
{
	&:hover:not(.dataList-row--noHover):not(.dataList-row--header):not(.is-spHovered),
	.is-spActive &.is-spChecked
	{
		background: fade(@xf-contentHighlightBg, 50%);
	}

	.is-spActive &.is-spHovered
	{
		background: fade(@xf-contentHighlightBg, 75%);
	}

	.is-spActive &:not(.dataList-row--noHover):not(.dataList-row--header):not(.is-spChecked) *
	{
		color: @xf-textColorMuted;
	}

	&.dataList-row--header
	{
		.dataList-cell
		{
			.xf-dataListHeader();
			.m-adjustDataListCellPadding(@xf-dataListPaddingV/2, @xf-dataListPaddingH);
			.m-textColoredLinks();
			text-align: left;

			&.dataList-cell--min
			{
				text-align: center;
			}
		}
	}

	&.dataList-row--subSection
	{
		.dataList-cell
		{
			.xf-dataListSection();
			.m-adjustDataListCellPadding(@xf-dataListPaddingV/2, @xf-dataListPaddingH);

			a { color: inherit; }
		}

		&:hover:not(.dataList-row--noHover) .dataList-cell
		{
			.xf-dataListSection(background);
		}
	}

	&.dataList-row--note
	{
		.dataList-cell
		{
			text-align: center;
			font-style: italic;
		}
	}

	&.dataList-row--deleted
	{
		.dataList-cell
		{
			opacity: .5;
		}
	}

	&.dataList-row--highlighted
	{
		font-weight: @xf-fontWeightHeavy;
	}

	&.dataList-row--custom
	{
		> .dataList-cell:first-child
		{
			border-left: @xf-borderSizeFeature solid red;
		}

		.dataList-cell--link a
		{
			color: red;
		}
	}

	&.dataList-row--parentCustom
	{
		> .dataList-cell:first-child
		{
			border-left: @xf-borderSizeFeature solid orange;
		}

		.dataList-cell--link a
		{
			color: orange;
		}
	}

	&.dataList-row--protected
	{
		> .dataList-cell:first-child
		{
			border-left: @xf-borderSizeFeature solid @xf-borderColorFeature;
		}
	}

	&.is-hidden
	{
		display: none;
	}

	&.dataList-row--disabled
	{
		.dataList-cell--link a
		{
			color: @xf-textColorMuted;
			.m-transition();
		}
	}

	tbody:last-child &:last-child .dataList-cell
	{
		border-bottom: none;
	}
}

.dataList-cell {
	vertical-align: middle;
	padding: @xf-dataListPaddingV @xf-dataListPaddingH;
	border-bottom: @xf-borderSize solid @xf-borderColorFaint;

	&.dataList-cell--main {
		min-width: 180px;
	}

	&.dataList-cell--link,
	&.dataList-cell--action {
		padding: 0;
	}

	&.dataList-cell--alt,
	&.dataList-cell--action {
		background: @xf-contentAltBg;
	}

	&.dataList-cell--highlighted {
		background: @xf-contentHighlightBg;
	}

	&.dataList-cell--separated {
		border-left: @xf-borderSize solid @xf-borderColorFaint;
	}

	&.dataList-cell--min,
	&.dataList-cell--action,
	&.dataList-cell--iconic,
	&.dataList-cell-fa
	{
		width: 1%;
		white-space: nowrap;
		word-wrap: normal;
		text-align: center;
	}

	&.dataList-cell--action {
		font-size: @xf-fontSizeSmaller;
	}

	&.dataList-cell--action,
	&.dataList-cell--link {
		cursor: pointer;
		text-decoration: none;

		&.dataList-cell--alt:hover,
		&.dataList-cell--action:hover {
			background: @xf-contentHighlightBg;
		}

		a,
		label,
		.dataList-blockLink {
			padding: @xf-dataListPaddingV @xf-dataListPaddingH;
			display: block;
			height: 100%;
			text-decoration: none;
			cursor: pointer;
		}

		input {
			cursor: pointer;
		}
	}

	&.dataList-cell--action a:not(.iconic) {
		//	padding: @xf-dataListPaddingV @xf-dataListPaddingH * 2;
	}

	&.dataList-cell--iconic,
	&.dataList-cell--fa
	{
		padding: 0;
		font-size: 125%;
		min-width: 2.5em;
		position: relative;
		text-align: center;
	}

	&.dataList-cell--iconic
	{
		> a.iconic > i
		{
			.iconicIcon(false);
		}

		> .iconic
		{
			position: absolute;

			// fill the cell
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;

			> i
			{
				&:before,
				&:after
				{
					left: 50%;
					margin-left: -.5em; // half of icon width

					top: 50%;
					margin-top: -.5em; // half of icon height
				}
			}

			> input[type=checkbox] + i
			{
				&:before,
				&:after
				{
					margin-top: -.7em;
					margin-left: -.4375em; // half of .fa-check-square width
				}
			}

			> input[type=radio] + i
			{
				&:before,
				&:after
				{
					margin-top: -.7em;
					margin-left: -.5em; // half of .fa-check-square width
				}
			}

			&.iconic--toggle > input[type=checkbox] + i
			{
				&:before
				{
					.m-faContent(@fa-var-toggle-off, 1.125em);
				}

				&:after
				{
					.m-faContent(@fa-var-toggle-on, 1.125em);
				}

				&:before,
				&:after
				{
					font-size: 120%;
					margin-top: -.7em;
					margin-left: -.5625em; // half of .fa-toggle-on width
				}
			}

			&.iconic--delete > i
			{
				&:before
				{
					.m-faContent(@fa-var-trash-alt);
				}

				&:before,
				&:after
				{
					margin-top: -.7em;
					margin-left: -.4375em; // half of .fa-trash-alt width
				}
			}
		}
	}

	&.dataList-cell--image
	{
		padding: 0;

		a
		{
			padding: 0;
		}

		img,
		.dataList-imagePlaceholder
		{
			display: block;
			margin: auto;
			font-size: 30px;
		}
	}

	&.dataList-cell--imageSmall
	{
		img,
		.dataList-imagePlaceholder
		{
			height: 41px;
			max-width: 41px;
			line-height: 41px;
		}

		.avatar
		{
			.m-avatarSize(41px);
			border-radius: 2px;
		}
	}

	&.dataList-cell--imageSmallWide
	{
		img,
		.dataList-imagePlaceholder
		{
			height: 41px;
			max-width: 82px;
			line-height: 41px;
		}

		.avatar
		{
			.m-avatarSize(41px);
			border-radius: 0;
		}
	}

	&.dataList-cell--imageMedium
	{
		img,
		.dataList-imagePlaceholder
		{
			height: 54px;
			max-width: 54px;
			line-height: 54px;
		}

		.avatar
		{
			.m-avatarSize(54px);
			border-radius: 0;
		}
	}

	&.dataList-cell--imageMediumWide
	{
		img,
		.dataList-imagePlaceholder
		{
			height: 54px;
			max-width: 108px;
			line-height: 54px;
		}

		.avatar
		{
			.m-avatarSize(54px);
			border-radius: 0;
		}
	}

	&.dataList-cell--responsiveMenuTrigger,
	&.dataList-cell--fauxResponsiveMenuTrigger
	{
		display: none;
	}

	&.dataList-cell--breakWord
	{
		word-break: break-word;
	}

	&.dataList-cell--hint,
	.dataList-row--subSection &.dataList-cell--hint
	{
		text-align: right;
		font-size: @xf-fontSizeSmaller;
		color: @xf-textColorMuted;
	}

	// create ten depth classes for the appearance of nested items
	.depthLoop(@i) when (@i <= 10)
	{
		&.dataList-cell--d@{i} { text-indent: (@i - 1) * 25px; }
		.depthLoop(@i + 1);
	}
	.depthLoop(1);

	.is-match
	{
		text-decoration: underline;
		color: red;
	}

	@media (max-width: @xf-responsiveMedium)
	{
		&.dataList-cell--responsiveMenuItem,
		&.dataList-cell--fauxResponsiveMenuItem
		{
			display: none !important;
		}

		&.dataList-cell--responsiveMenuTrigger,
		&.dataList-cell--fauxResponsiveMenuTrigger
		{
			display: table-cell;
		}
	}
}

.dataList-imagePlaceholder
{
	&:after
	{
		content: '?';
	}
}

.dataList-mainRow,
.dataList-textRow,
.dataList-subRow
{
	width: 0;
	min-width: 100%;
	line-height: 1.4;
	max-height: 1.4em;
	overflow: hidden;
	white-space: nowrap;
	word-wrap: normal;
	text-overflow: ellipsis;

	&:empty { display: none; }
}

.dataList-mainRow
{
	font-weight: @xf-fontWeightHeavy;

	.dataList-row--subSection &
	{
		font-weight: @xf-fontWeightNormal;
	}
}

.dataList-secondRow
{
	display: block;
	font-size: @xf-fontSizeSmallest;
}

.dataList-hint,
.dataList-subRow
{
	color: @xf-textColorMuted;
	font-size: @xf-fontSizeSmaller;
	font-weight: @xf-fontWeightNormal;
}

.dataList-hint
{
	display: inline;
}

.dataList-row--footer .dataList-cell
{
	// note that this is applied as a cell style which has higher priority than the row styles normally applied
	padding: @xf-dataListPaddingV/2 @xf-dataListPaddingH;
	border-bottom: none;
	.xf-dataListFooter();
}

.dataList--responsive
{
	.dataList-table,
	tbody,
	thead,
	tfoot
	{
		display: block;
	}

	.dataList-row
	{
		display: block;

		&.dataList-row--headerResponsive
		{
			display: none;
		}
	}

	.dataList-cell
	{
		display: block;
		width: auto;

		&[data-cell-label]
		{
			display: flex;
			align-items: center;

			> *
			{
				min-width: 0;
				text-align: right;
			}

			&:before
			{
				content: attr(data-cell-label) "{$xf.language.label_separator}";
				padding-right: @xf-dataListPaddingH;
				margin-right: auto;
				word-break: normal;
			}

			> .input:first-child:last-child
			{
				display: inline;
			}

			a
			{
				// commonly a URL, but needed to prevent a potential overflow
				min-width: 0;
			}
		}

		&.dataList-cell--iconic
		{
			&:not([data-cell-label]):before
			{
				content: "";
				display: inline-block;
				height: 1em;
			}

			padding: @xf-dataListPaddingV @xf-dataListPaddingH;
		}

		&.dataList-cell--link,
		&.dataList-cell--action
		{
			&[data-cell-label]:before
			{
				padding: @xf-dataListPaddingV @xf-dataListPaddingH;
			}
		}

		&.dataList-cell--iconic,
		&.dataList-cell--fa
		{
			display: table-cell;
			width: 1%;
		}
	}

	.dataList-row:not(.dataList-row--header):not(.dataList-row--subSection)
	{
		border-bottom: @xf-borderSize solid @xf-borderColorLight;

		.dataList-cell
		{
			border-bottom: none;
		}
	}

	tbody:last-child .dataList-row:not(.dataList-row--header):not(.dataList-row--subSection):last-child
	{
		border-bottom: none;
	}

	.dataList-mainRow,
	.dataList-textRow,
	.dataList-subRow
	{
		width: auto;
		min-width: 0;
	}
}]]></template>
  <template type="public" title="core_fa.less" version_id="2010131" version_string="2.1.1 Beta 1"><![CDATA[/*!
 * Font Awesome Pro by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license (Commercial License)
 */
@font-face {
  font-family: 'Font Awesome 5 Pro';
  font-style: normal;
  font-weight: 300;
  src: url('@{fa-font-path}/fa-light-300.woff2') format('woff2'),
    url('@{fa-font-path}/fa-light-300.woff') format('woff');
}

.fal {
  font-family: 'Font Awesome 5 Pro';
  font-weight: 300;
}

/*!
 * Font Awesome Pro by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license (Commercial License)
 */
@font-face {
  font-family: 'Font Awesome 5 Pro';
  font-style: normal;
  font-weight: 400;
  src: url('@{fa-font-path}/fa-regular-400.woff2') format('woff2'),
    url('@{fa-font-path}/fa-regular-400.woff') format('woff');
}

.far {
  font-family: 'Font Awesome 5 Pro';
  font-weight: 400;
}

/*!
 * Font Awesome Pro by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license (Commercial License)
 */
@font-face {
  font-family: 'Font Awesome 5 Pro';
  font-style: normal;
  font-weight: 900;
  src: url('@{fa-font-path}/fa-solid-900.woff2') format('woff2'),
    url('@{fa-font-path}/fa-solid-900.woff') format('woff');
}

.fa,
.fas {
  font-family: 'Font Awesome 5 Pro';
  font-weight: 900;
}

/*!
 * Font Awesome Pro by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license (Commercial License)
 */
@font-face {
  font-family: 'Font Awesome 5 Brands';
  font-style: normal;
  font-weight: 400;
  src: url('@{fa-font-path}/fa-brands-400.woff2') format('woff2'),
    url('@{fa-font-path}/fa-brands-400.woff') format('woff');
}

.fab {
  font-family: 'Font Awesome 5 Brands';
  font-weight: 400;
}

// Base Class Definition
// -------------------------

.@{fa-css-prefix}, .fas, .far, .fal, .fab {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
  font-style: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
}


// Icon Sizes
// -------------------------

.larger(@factor) when (@factor > 0) {
  .larger((@factor - 1));

  .@{fa-css-prefix}-@{factor}x {
    font-size: (@factor * 1em);
  }
}

/* makes the font 33% larger relative to the icon container */
.@{fa-css-prefix}-lg {
  font-size: (4em / 3);
  line-height: (3em / 4);
  vertical-align: -.0667em;
}

.@{fa-css-prefix}-xs {
  font-size: .75em;
}

.@{fa-css-prefix}-sm {
  font-size: .875em;
}

.larger(10);


// Fixed Width Icons
// -------------------------
.@{fa-css-prefix}-fw {
  text-align: center;
  width: (20em / 16);
}


// List Icons
// -------------------------

.@{fa-css-prefix}-ul {
  list-style-type: none;
  margin-left: @fa-li-width * 5/4;
  padding-left: 0;

  > li { position: relative; }
}

.@{fa-css-prefix}-li {
  left: -@fa-li-width;
  position: absolute;
  text-align: center;
  width: @fa-li-width;
  line-height: inherit;
}


// Bordered & Pulled
// -------------------------

.@{fa-css-prefix}-border {
  border-radius: .1em;
  border: solid .08em @fa-border-color;
  padding: .2em .25em .15em;
}

.@{fa-css-prefix}-pull-left { float: left; }
.@{fa-css-prefix}-pull-right { float: right; }

.@{fa-css-prefix}, .fas, .far, .fal, .fab {
  &.@{fa-css-prefix}-pull-left { margin-right: .3em; }
  &.@{fa-css-prefix}-pull-right { margin-left: .3em; }
}


// Animated Icons
// --------------------------

.@{fa-css-prefix}-spin {
  animation: fa-spin 2s infinite linear;
}

.@{fa-css-prefix}-pulse {
  animation: fa-spin 1s infinite steps(8);
}

@keyframes fa-spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}


// Rotated & Flipped Icons
// -------------------------

.@{fa-css-prefix}-rotate-90  { .fa-icon-rotate(90deg, 1);  }
.@{fa-css-prefix}-rotate-180 { .fa-icon-rotate(180deg, 2); }
.@{fa-css-prefix}-rotate-270 { .fa-icon-rotate(270deg, 3); }

.@{fa-css-prefix}-flip-horizontal { .fa-icon-flip(-1, 1, 0); }
.@{fa-css-prefix}-flip-vertical   { .fa-icon-flip(1, -1, 2); }
.@{fa-css-prefix}-flip-both, .@{fa-css-prefix}-flip-horizontal.@{fa-css-prefix}-flip-vertical { .fa-icon-flip(-1, -1, 2); }

// Hook for IE8-9
// -------------------------

:root {
  .@{fa-css-prefix}-rotate-90,
  .@{fa-css-prefix}-rotate-180,
  .@{fa-css-prefix}-rotate-270,
  .@{fa-css-prefix}-flip-horizontal,
  .@{fa-css-prefix}-flip-vertical,
  .@{fa-css-prefix}-flip-both {
    filter: none;
  }
}


// Stacked Icons
// -------------------------

.@{fa-css-prefix}-stack {
  display: inline-block;
  height: 2em;
  line-height: 2em;
  position: relative;
  vertical-align: middle;
  width: 2em;
}

.@{fa-css-prefix}-stack-1x, .@{fa-css-prefix}-stack-2x {
  left: 0;
  position: absolute;
  text-align: center;
  width: 100%;
}

.@{fa-css-prefix}-stack-1x { line-height: inherit; }
.@{fa-css-prefix}-stack-2x { font-size: 2em; }
.@{fa-css-prefix}-inverse { color: @fa-inverse; }


/* Font Awesome uses the Unicode Private Use Area (PUA) to ensure screen
   readers do not read off random characters that represent icons */

.@{fa-css-prefix}-500px:before { content: @fa-var-500px; }
.@{fa-css-prefix}-abacus:before { content: @fa-var-abacus; }
.@{fa-css-prefix}-accessible-icon:before { content: @fa-var-accessible-icon; }
.@{fa-css-prefix}-accusoft:before { content: @fa-var-accusoft; }
.@{fa-css-prefix}-acorn:before { content: @fa-var-acorn; }
.@{fa-css-prefix}-acquisitions-incorporated:before { content: @fa-var-acquisitions-incorporated; }
.@{fa-css-prefix}-ad:before { content: @fa-var-ad; }
.@{fa-css-prefix}-address-book:before { content: @fa-var-address-book; }
.@{fa-css-prefix}-address-card:before { content: @fa-var-address-card; }
.@{fa-css-prefix}-adjust:before { content: @fa-var-adjust; }
.@{fa-css-prefix}-adn:before { content: @fa-var-adn; }
.@{fa-css-prefix}-adobe:before { content: @fa-var-adobe; }
.@{fa-css-prefix}-adversal:before { content: @fa-var-adversal; }
.@{fa-css-prefix}-affiliatetheme:before { content: @fa-var-affiliatetheme; }
.@{fa-css-prefix}-air-freshener:before { content: @fa-var-air-freshener; }
.@{fa-css-prefix}-alarm-clock:before { content: @fa-var-alarm-clock; }
.@{fa-css-prefix}-algolia:before { content: @fa-var-algolia; }
.@{fa-css-prefix}-alicorn:before { content: @fa-var-alicorn; }
.@{fa-css-prefix}-align-center:before { content: @fa-var-align-center; }
.@{fa-css-prefix}-align-justify:before { content: @fa-var-align-justify; }
.@{fa-css-prefix}-align-left:before { content: @fa-var-align-left; }
.@{fa-css-prefix}-align-right:before { content: @fa-var-align-right; }
.@{fa-css-prefix}-alipay:before { content: @fa-var-alipay; }
.@{fa-css-prefix}-allergies:before { content: @fa-var-allergies; }
.@{fa-css-prefix}-amazon:before { content: @fa-var-amazon; }
.@{fa-css-prefix}-amazon-pay:before { content: @fa-var-amazon-pay; }
.@{fa-css-prefix}-ambulance:before { content: @fa-var-ambulance; }
.@{fa-css-prefix}-american-sign-language-interpreting:before { content: @fa-var-american-sign-language-interpreting; }
.@{fa-css-prefix}-amilia:before { content: @fa-var-amilia; }
.@{fa-css-prefix}-analytics:before { content: @fa-var-analytics; }
.@{fa-css-prefix}-anchor:before { content: @fa-var-anchor; }
.@{fa-css-prefix}-android:before { content: @fa-var-android; }
.@{fa-css-prefix}-angel:before { content: @fa-var-angel; }
.@{fa-css-prefix}-angellist:before { content: @fa-var-angellist; }
.@{fa-css-prefix}-angle-double-down:before { content: @fa-var-angle-double-down; }
.@{fa-css-prefix}-angle-double-left:before { content: @fa-var-angle-double-left; }
.@{fa-css-prefix}-angle-double-right:before { content: @fa-var-angle-double-right; }
.@{fa-css-prefix}-angle-double-up:before { content: @fa-var-angle-double-up; }
.@{fa-css-prefix}-angle-down:before { content: @fa-var-angle-down; }
.@{fa-css-prefix}-angle-left:before { content: @fa-var-angle-left; }
.@{fa-css-prefix}-angle-right:before { content: @fa-var-angle-right; }
.@{fa-css-prefix}-angle-up:before { content: @fa-var-angle-up; }
.@{fa-css-prefix}-angry:before { content: @fa-var-angry; }
.@{fa-css-prefix}-angrycreative:before { content: @fa-var-angrycreative; }
.@{fa-css-prefix}-angular:before { content: @fa-var-angular; }
.@{fa-css-prefix}-ankh:before { content: @fa-var-ankh; }
.@{fa-css-prefix}-app-store:before { content: @fa-var-app-store; }
.@{fa-css-prefix}-app-store-ios:before { content: @fa-var-app-store-ios; }
.@{fa-css-prefix}-apper:before { content: @fa-var-apper; }
.@{fa-css-prefix}-apple:before { content: @fa-var-apple; }
.@{fa-css-prefix}-apple-alt:before { content: @fa-var-apple-alt; }
.@{fa-css-prefix}-apple-crate:before { content: @fa-var-apple-crate; }
.@{fa-css-prefix}-apple-pay:before { content: @fa-var-apple-pay; }
.@{fa-css-prefix}-archive:before { content: @fa-var-archive; }
.@{fa-css-prefix}-archway:before { content: @fa-var-archway; }
.@{fa-css-prefix}-arrow-alt-circle-down:before { content: @fa-var-arrow-alt-circle-down; }
.@{fa-css-prefix}-arrow-alt-circle-left:before { content: @fa-var-arrow-alt-circle-left; }
.@{fa-css-prefix}-arrow-alt-circle-right:before { content: @fa-var-arrow-alt-circle-right; }
.@{fa-css-prefix}-arrow-alt-circle-up:before { content: @fa-var-arrow-alt-circle-up; }
.@{fa-css-prefix}-arrow-alt-down:before { content: @fa-var-arrow-alt-down; }
.@{fa-css-prefix}-arrow-alt-from-bottom:before { content: @fa-var-arrow-alt-from-bottom; }
.@{fa-css-prefix}-arrow-alt-from-left:before { content: @fa-var-arrow-alt-from-left; }
.@{fa-css-prefix}-arrow-alt-from-right:before { content: @fa-var-arrow-alt-from-right; }
.@{fa-css-prefix}-arrow-alt-from-top:before { content: @fa-var-arrow-alt-from-top; }
.@{fa-css-prefix}-arrow-alt-left:before { content: @fa-var-arrow-alt-left; }
.@{fa-css-prefix}-arrow-alt-right:before { content: @fa-var-arrow-alt-right; }
.@{fa-css-prefix}-arrow-alt-square-down:before { content: @fa-var-arrow-alt-square-down; }
.@{fa-css-prefix}-arrow-alt-square-left:before { content: @fa-var-arrow-alt-square-left; }
.@{fa-css-prefix}-arrow-alt-square-right:before { content: @fa-var-arrow-alt-square-right; }
.@{fa-css-prefix}-arrow-alt-square-up:before { content: @fa-var-arrow-alt-square-up; }
.@{fa-css-prefix}-arrow-alt-to-bottom:before { content: @fa-var-arrow-alt-to-bottom; }
.@{fa-css-prefix}-arrow-alt-to-left:before { content: @fa-var-arrow-alt-to-left; }
.@{fa-css-prefix}-arrow-alt-to-right:before { content: @fa-var-arrow-alt-to-right; }
.@{fa-css-prefix}-arrow-alt-to-top:before { content: @fa-var-arrow-alt-to-top; }
.@{fa-css-prefix}-arrow-alt-up:before { content: @fa-var-arrow-alt-up; }
.@{fa-css-prefix}-arrow-circle-down:before { content: @fa-var-arrow-circle-down; }
.@{fa-css-prefix}-arrow-circle-left:before { content: @fa-var-arrow-circle-left; }
.@{fa-css-prefix}-arrow-circle-right:before { content: @fa-var-arrow-circle-right; }
.@{fa-css-prefix}-arrow-circle-up:before { content: @fa-var-arrow-circle-up; }
.@{fa-css-prefix}-arrow-down:before { content: @fa-var-arrow-down; }
.@{fa-css-prefix}-arrow-from-bottom:before { content: @fa-var-arrow-from-bottom; }
.@{fa-css-prefix}-arrow-from-left:before { content: @fa-var-arrow-from-left; }
.@{fa-css-prefix}-arrow-from-right:before { content: @fa-var-arrow-from-right; }
.@{fa-css-prefix}-arrow-from-top:before { content: @fa-var-arrow-from-top; }
.@{fa-css-prefix}-arrow-left:before { content: @fa-var-arrow-left; }
.@{fa-css-prefix}-arrow-right:before { content: @fa-var-arrow-right; }
.@{fa-css-prefix}-arrow-square-down:before { content: @fa-var-arrow-square-down; }
.@{fa-css-prefix}-arrow-square-left:before { content: @fa-var-arrow-square-left; }
.@{fa-css-prefix}-arrow-square-right:before { content: @fa-var-arrow-square-right; }
.@{fa-css-prefix}-arrow-square-up:before { content: @fa-var-arrow-square-up; }
.@{fa-css-prefix}-arrow-to-bottom:before { content: @fa-var-arrow-to-bottom; }
.@{fa-css-prefix}-arrow-to-left:before { content: @fa-var-arrow-to-left; }
.@{fa-css-prefix}-arrow-to-right:before { content: @fa-var-arrow-to-right; }
.@{fa-css-prefix}-arrow-to-top:before { content: @fa-var-arrow-to-top; }
.@{fa-css-prefix}-arrow-up:before { content: @fa-var-arrow-up; }
.@{fa-css-prefix}-arrows:before { content: @fa-var-arrows; }
.@{fa-css-prefix}-arrows-alt:before { content: @fa-var-arrows-alt; }
.@{fa-css-prefix}-arrows-alt-h:before { content: @fa-var-arrows-alt-h; }
.@{fa-css-prefix}-arrows-alt-v:before { content: @fa-var-arrows-alt-v; }
.@{fa-css-prefix}-arrows-h:before { content: @fa-var-arrows-h; }
.@{fa-css-prefix}-arrows-v:before { content: @fa-var-arrows-v; }
.@{fa-css-prefix}-artstation:before { content: @fa-var-artstation; }
.@{fa-css-prefix}-assistive-listening-systems:before { content: @fa-var-assistive-listening-systems; }
.@{fa-css-prefix}-asterisk:before { content: @fa-var-asterisk; }
.@{fa-css-prefix}-asymmetrik:before { content: @fa-var-asymmetrik; }
.@{fa-css-prefix}-at:before { content: @fa-var-at; }
.@{fa-css-prefix}-atlas:before { content: @fa-var-atlas; }
.@{fa-css-prefix}-atlassian:before { content: @fa-var-atlassian; }
.@{fa-css-prefix}-atom:before { content: @fa-var-atom; }
.@{fa-css-prefix}-atom-alt:before { content: @fa-var-atom-alt; }
.@{fa-css-prefix}-audible:before { content: @fa-var-audible; }
.@{fa-css-prefix}-audio-description:before { content: @fa-var-audio-description; }
.@{fa-css-prefix}-autoprefixer:before { content: @fa-var-autoprefixer; }
.@{fa-css-prefix}-avianex:before { content: @fa-var-avianex; }
.@{fa-css-prefix}-aviato:before { content: @fa-var-aviato; }
.@{fa-css-prefix}-award:before { content: @fa-var-award; }
.@{fa-css-prefix}-aws:before { content: @fa-var-aws; }
.@{fa-css-prefix}-axe:before { content: @fa-var-axe; }
.@{fa-css-prefix}-axe-battle:before { content: @fa-var-axe-battle; }
.@{fa-css-prefix}-baby:before { content: @fa-var-baby; }
.@{fa-css-prefix}-baby-carriage:before { content: @fa-var-baby-carriage; }
.@{fa-css-prefix}-backpack:before { content: @fa-var-backpack; }
.@{fa-css-prefix}-backspace:before { content: @fa-var-backspace; }
.@{fa-css-prefix}-backward:before { content: @fa-var-backward; }
.@{fa-css-prefix}-bacon:before { content: @fa-var-bacon; }
.@{fa-css-prefix}-badge:before { content: @fa-var-badge; }
.@{fa-css-prefix}-badge-check:before { content: @fa-var-badge-check; }
.@{fa-css-prefix}-badge-dollar:before { content: @fa-var-badge-dollar; }
.@{fa-css-prefix}-badge-percent:before { content: @fa-var-badge-percent; }
.@{fa-css-prefix}-badger-honey:before { content: @fa-var-badger-honey; }
.@{fa-css-prefix}-balance-scale:before { content: @fa-var-balance-scale; }
.@{fa-css-prefix}-balance-scale-left:before { content: @fa-var-balance-scale-left; }
.@{fa-css-prefix}-balance-scale-right:before { content: @fa-var-balance-scale-right; }
.@{fa-css-prefix}-ball-pile:before { content: @fa-var-ball-pile; }
.@{fa-css-prefix}-ballot:before { content: @fa-var-ballot; }
.@{fa-css-prefix}-ballot-check:before { content: @fa-var-ballot-check; }
.@{fa-css-prefix}-ban:before { content: @fa-var-ban; }
.@{fa-css-prefix}-band-aid:before { content: @fa-var-band-aid; }
.@{fa-css-prefix}-bandcamp:before { content: @fa-var-bandcamp; }
.@{fa-css-prefix}-barcode:before { content: @fa-var-barcode; }
.@{fa-css-prefix}-barcode-alt:before { content: @fa-var-barcode-alt; }
.@{fa-css-prefix}-barcode-read:before { content: @fa-var-barcode-read; }
.@{fa-css-prefix}-barcode-scan:before { content: @fa-var-barcode-scan; }
.@{fa-css-prefix}-bars:before { content: @fa-var-bars; }
.@{fa-css-prefix}-baseball:before { content: @fa-var-baseball; }
.@{fa-css-prefix}-baseball-ball:before { content: @fa-var-baseball-ball; }
.@{fa-css-prefix}-basketball-ball:before { content: @fa-var-basketball-ball; }
.@{fa-css-prefix}-basketball-hoop:before { content: @fa-var-basketball-hoop; }
.@{fa-css-prefix}-bat:before { content: @fa-var-bat; }
.@{fa-css-prefix}-bath:before { content: @fa-var-bath; }
.@{fa-css-prefix}-battery-bolt:before { content: @fa-var-battery-bolt; }
.@{fa-css-prefix}-battery-empty:before { content: @fa-var-battery-empty; }
.@{fa-css-prefix}-battery-full:before { content: @fa-var-battery-full; }
.@{fa-css-prefix}-battery-half:before { content: @fa-var-battery-half; }
.@{fa-css-prefix}-battery-quarter:before { content: @fa-var-battery-quarter; }
.@{fa-css-prefix}-battery-slash:before { content: @fa-var-battery-slash; }
.@{fa-css-prefix}-battery-three-quarters:before { content: @fa-var-battery-three-quarters; }
.@{fa-css-prefix}-bed:before { content: @fa-var-bed; }
.@{fa-css-prefix}-beer:before { content: @fa-var-beer; }
.@{fa-css-prefix}-behance:before { content: @fa-var-behance; }
.@{fa-css-prefix}-behance-square:before { content: @fa-var-behance-square; }
.@{fa-css-prefix}-bell:before { content: @fa-var-bell; }
.@{fa-css-prefix}-bell-school:before { content: @fa-var-bell-school; }
.@{fa-css-prefix}-bell-school-slash:before { content: @fa-var-bell-school-slash; }
.@{fa-css-prefix}-bell-slash:before { content: @fa-var-bell-slash; }
.@{fa-css-prefix}-bells:before { content: @fa-var-bells; }
.@{fa-css-prefix}-bezier-curve:before { content: @fa-var-bezier-curve; }
.@{fa-css-prefix}-bible:before { content: @fa-var-bible; }
.@{fa-css-prefix}-bicycle:before { content: @fa-var-bicycle; }
.@{fa-css-prefix}-bimobject:before { content: @fa-var-bimobject; }
.@{fa-css-prefix}-binoculars:before { content: @fa-var-binoculars; }
.@{fa-css-prefix}-biohazard:before { content: @fa-var-biohazard; }
.@{fa-css-prefix}-birthday-cake:before { content: @fa-var-birthday-cake; }
.@{fa-css-prefix}-bitbucket:before { content: @fa-var-bitbucket; }
.@{fa-css-prefix}-bitcoin:before { content: @fa-var-bitcoin; }
.@{fa-css-prefix}-bity:before { content: @fa-var-bity; }
.@{fa-css-prefix}-black-tie:before { content: @fa-var-black-tie; }
.@{fa-css-prefix}-blackberry:before { content: @fa-var-blackberry; }
.@{fa-css-prefix}-blanket:before { content: @fa-var-blanket; }
.@{fa-css-prefix}-blender:before { content: @fa-var-blender; }
.@{fa-css-prefix}-blender-phone:before { content: @fa-var-blender-phone; }
.@{fa-css-prefix}-blind:before { content: @fa-var-blind; }
.@{fa-css-prefix}-blog:before { content: @fa-var-blog; }
.@{fa-css-prefix}-blogger:before { content: @fa-var-blogger; }
.@{fa-css-prefix}-blogger-b:before { content: @fa-var-blogger-b; }
.@{fa-css-prefix}-bluetooth:before { content: @fa-var-bluetooth; }
.@{fa-css-prefix}-bluetooth-b:before { content: @fa-var-bluetooth-b; }
.@{fa-css-prefix}-bold:before { content: @fa-var-bold; }
.@{fa-css-prefix}-bolt:before { content: @fa-var-bolt; }
.@{fa-css-prefix}-bomb:before { content: @fa-var-bomb; }
.@{fa-css-prefix}-bone:before { content: @fa-var-bone; }
.@{fa-css-prefix}-bone-break:before { content: @fa-var-bone-break; }
.@{fa-css-prefix}-bong:before { content: @fa-var-bong; }
.@{fa-css-prefix}-book:before { content: @fa-var-book; }
.@{fa-css-prefix}-book-alt:before { content: @fa-var-book-alt; }
.@{fa-css-prefix}-book-dead:before { content: @fa-var-book-dead; }
.@{fa-css-prefix}-book-heart:before { content: @fa-var-book-heart; }
.@{fa-css-prefix}-book-medical:before { content: @fa-var-book-medical; }
.@{fa-css-prefix}-book-open:before { content: @fa-var-book-open; }
.@{fa-css-prefix}-book-reader:before { content: @fa-var-book-reader; }
.@{fa-css-prefix}-book-spells:before { content: @fa-var-book-spells; }
.@{fa-css-prefix}-book-user:before { content: @fa-var-book-user; }
.@{fa-css-prefix}-bookmark:before { content: @fa-var-bookmark; }
.@{fa-css-prefix}-books:before { content: @fa-var-books; }
.@{fa-css-prefix}-books-medical:before { content: @fa-var-books-medical; }
.@{fa-css-prefix}-boot:before { content: @fa-var-boot; }
.@{fa-css-prefix}-booth-curtain:before { content: @fa-var-booth-curtain; }
.@{fa-css-prefix}-bow-arrow:before { content: @fa-var-bow-arrow; }
.@{fa-css-prefix}-bowling-ball:before { content: @fa-var-bowling-ball; }
.@{fa-css-prefix}-bowling-pins:before { content: @fa-var-bowling-pins; }
.@{fa-css-prefix}-box:before { content: @fa-var-box; }
.@{fa-css-prefix}-box-alt:before { content: @fa-var-box-alt; }
.@{fa-css-prefix}-box-ballot:before { content: @fa-var-box-ballot; }
.@{fa-css-prefix}-box-check:before { content: @fa-var-box-check; }
.@{fa-css-prefix}-box-fragile:before { content: @fa-var-box-fragile; }
.@{fa-css-prefix}-box-full:before { content: @fa-var-box-full; }
.@{fa-css-prefix}-box-heart:before { content: @fa-var-box-heart; }
.@{fa-css-prefix}-box-open:before { content: @fa-var-box-open; }
.@{fa-css-prefix}-box-up:before { content: @fa-var-box-up; }
.@{fa-css-prefix}-box-usd:before { content: @fa-var-box-usd; }
.@{fa-css-prefix}-boxes:before { content: @fa-var-boxes; }
.@{fa-css-prefix}-boxes-alt:before { content: @fa-var-boxes-alt; }
.@{fa-css-prefix}-boxing-glove:before { content: @fa-var-boxing-glove; }
.@{fa-css-prefix}-brackets:before { content: @fa-var-brackets; }
.@{fa-css-prefix}-brackets-curly:before { content: @fa-var-brackets-curly; }
.@{fa-css-prefix}-braille:before { content: @fa-var-braille; }
.@{fa-css-prefix}-brain:before { content: @fa-var-brain; }
.@{fa-css-prefix}-bread-loaf:before { content: @fa-var-bread-loaf; }
.@{fa-css-prefix}-bread-slice:before { content: @fa-var-bread-slice; }
.@{fa-css-prefix}-briefcase:before { content: @fa-var-briefcase; }
.@{fa-css-prefix}-briefcase-medical:before { content: @fa-var-briefcase-medical; }
.@{fa-css-prefix}-broadcast-tower:before { content: @fa-var-broadcast-tower; }
.@{fa-css-prefix}-broom:before { content: @fa-var-broom; }
.@{fa-css-prefix}-browser:before { content: @fa-var-browser; }
.@{fa-css-prefix}-brush:before { content: @fa-var-brush; }
.@{fa-css-prefix}-btc:before { content: @fa-var-btc; }
.@{fa-css-prefix}-bug:before { content: @fa-var-bug; }
.@{fa-css-prefix}-building:before { content: @fa-var-building; }
.@{fa-css-prefix}-bullhorn:before { content: @fa-var-bullhorn; }
.@{fa-css-prefix}-bullseye:before { content: @fa-var-bullseye; }
.@{fa-css-prefix}-bullseye-arrow:before { content: @fa-var-bullseye-arrow; }
.@{fa-css-prefix}-bullseye-pointer:before { content: @fa-var-bullseye-pointer; }
.@{fa-css-prefix}-burn:before { content: @fa-var-burn; }
.@{fa-css-prefix}-buromobelexperte:before { content: @fa-var-buromobelexperte; }
.@{fa-css-prefix}-burrito:before { content: @fa-var-burrito; }
.@{fa-css-prefix}-bus:before { content: @fa-var-bus; }
.@{fa-css-prefix}-bus-alt:before { content: @fa-var-bus-alt; }
.@{fa-css-prefix}-bus-school:before { content: @fa-var-bus-school; }
.@{fa-css-prefix}-business-time:before { content: @fa-var-business-time; }
.@{fa-css-prefix}-buysellads:before { content: @fa-var-buysellads; }
.@{fa-css-prefix}-cabinet-filing:before { content: @fa-var-cabinet-filing; }
.@{fa-css-prefix}-calculator:before { content: @fa-var-calculator; }
.@{fa-css-prefix}-calculator-alt:before { content: @fa-var-calculator-alt; }
.@{fa-css-prefix}-calendar:before { content: @fa-var-calendar; }
.@{fa-css-prefix}-calendar-alt:before { content: @fa-var-calendar-alt; }
.@{fa-css-prefix}-calendar-check:before { content: @fa-var-calendar-check; }
.@{fa-css-prefix}-calendar-day:before { content: @fa-var-calendar-day; }
.@{fa-css-prefix}-calendar-edit:before { content: @fa-var-calendar-edit; }
.@{fa-css-prefix}-calendar-exclamation:before { content: @fa-var-calendar-exclamation; }
.@{fa-css-prefix}-calendar-minus:before { content: @fa-var-calendar-minus; }
.@{fa-css-prefix}-calendar-plus:before { content: @fa-var-calendar-plus; }
.@{fa-css-prefix}-calendar-star:before { content: @fa-var-calendar-star; }
.@{fa-css-prefix}-calendar-times:before { content: @fa-var-calendar-times; }
.@{fa-css-prefix}-calendar-week:before { content: @fa-var-calendar-week; }
.@{fa-css-prefix}-camera:before { content: @fa-var-camera; }
.@{fa-css-prefix}-camera-alt:before { content: @fa-var-camera-alt; }
.@{fa-css-prefix}-camera-retro:before { content: @fa-var-camera-retro; }
.@{fa-css-prefix}-campfire:before { content: @fa-var-campfire; }
.@{fa-css-prefix}-campground:before { content: @fa-var-campground; }
.@{fa-css-prefix}-canadian-maple-leaf:before { content: @fa-var-canadian-maple-leaf; }
.@{fa-css-prefix}-candle-holder:before { content: @fa-var-candle-holder; }
.@{fa-css-prefix}-candy-cane:before { content: @fa-var-candy-cane; }
.@{fa-css-prefix}-candy-corn:before { content: @fa-var-candy-corn; }
.@{fa-css-prefix}-cannabis:before { content: @fa-var-cannabis; }
.@{fa-css-prefix}-capsules:before { content: @fa-var-capsules; }
.@{fa-css-prefix}-car:before { content: @fa-var-car; }
.@{fa-css-prefix}-car-alt:before { content: @fa-var-car-alt; }
.@{fa-css-prefix}-car-battery:before { content: @fa-var-car-battery; }
.@{fa-css-prefix}-car-bump:before { content: @fa-var-car-bump; }
.@{fa-css-prefix}-car-crash:before { content: @fa-var-car-crash; }
.@{fa-css-prefix}-car-garage:before { content: @fa-var-car-garage; }
.@{fa-css-prefix}-car-mechanic:before { content: @fa-var-car-mechanic; }
.@{fa-css-prefix}-car-side:before { content: @fa-var-car-side; }
.@{fa-css-prefix}-car-tilt:before { content: @fa-var-car-tilt; }
.@{fa-css-prefix}-car-wash:before { content: @fa-var-car-wash; }
.@{fa-css-prefix}-caret-circle-down:before { content: @fa-var-caret-circle-down; }
.@{fa-css-prefix}-caret-circle-left:before { content: @fa-var-caret-circle-left; }
.@{fa-css-prefix}-caret-circle-right:before { content: @fa-var-caret-circle-right; }
.@{fa-css-prefix}-caret-circle-up:before { content: @fa-var-caret-circle-up; }
.@{fa-css-prefix}-caret-down:before { content: @fa-var-caret-down; }
.@{fa-css-prefix}-caret-left:before { content: @fa-var-caret-left; }
.@{fa-css-prefix}-caret-right:before { content: @fa-var-caret-right; }
.@{fa-css-prefix}-caret-square-down:before { content: @fa-var-caret-square-down; }
.@{fa-css-prefix}-caret-square-left:before { content: @fa-var-caret-square-left; }
.@{fa-css-prefix}-caret-square-right:before { content: @fa-var-caret-square-right; }
.@{fa-css-prefix}-caret-square-up:before { content: @fa-var-caret-square-up; }
.@{fa-css-prefix}-caret-up:before { content: @fa-var-caret-up; }
.@{fa-css-prefix}-carrot:before { content: @fa-var-carrot; }
.@{fa-css-prefix}-cart-arrow-down:before { content: @fa-var-cart-arrow-down; }
.@{fa-css-prefix}-cart-plus:before { content: @fa-var-cart-plus; }
.@{fa-css-prefix}-cash-register:before { content: @fa-var-cash-register; }
.@{fa-css-prefix}-cat:before { content: @fa-var-cat; }
.@{fa-css-prefix}-cauldron:before { content: @fa-var-cauldron; }
.@{fa-css-prefix}-cc-amazon-pay:before { content: @fa-var-cc-amazon-pay; }
.@{fa-css-prefix}-cc-amex:before { content: @fa-var-cc-amex; }
.@{fa-css-prefix}-cc-apple-pay:before { content: @fa-var-cc-apple-pay; }
.@{fa-css-prefix}-cc-diners-club:before { content: @fa-var-cc-diners-club; }
.@{fa-css-prefix}-cc-discover:before { content: @fa-var-cc-discover; }
.@{fa-css-prefix}-cc-jcb:before { content: @fa-var-cc-jcb; }
.@{fa-css-prefix}-cc-mastercard:before { content: @fa-var-cc-mastercard; }
.@{fa-css-prefix}-cc-paypal:before { content: @fa-var-cc-paypal; }
.@{fa-css-prefix}-cc-stripe:before { content: @fa-var-cc-stripe; }
.@{fa-css-prefix}-cc-visa:before { content: @fa-var-cc-visa; }
.@{fa-css-prefix}-centercode:before { content: @fa-var-centercode; }
.@{fa-css-prefix}-centos:before { content: @fa-var-centos; }
.@{fa-css-prefix}-certificate:before { content: @fa-var-certificate; }
.@{fa-css-prefix}-chair:before { content: @fa-var-chair; }
.@{fa-css-prefix}-chair-office:before { content: @fa-var-chair-office; }
.@{fa-css-prefix}-chalkboard:before { content: @fa-var-chalkboard; }
.@{fa-css-prefix}-chalkboard-teacher:before { content: @fa-var-chalkboard-teacher; }
.@{fa-css-prefix}-charging-station:before { content: @fa-var-charging-station; }
.@{fa-css-prefix}-chart-area:before { content: @fa-var-chart-area; }
.@{fa-css-prefix}-chart-bar:before { content: @fa-var-chart-bar; }
.@{fa-css-prefix}-chart-line:before { content: @fa-var-chart-line; }
.@{fa-css-prefix}-chart-line-down:before { content: @fa-var-chart-line-down; }
.@{fa-css-prefix}-chart-network:before { content: @fa-var-chart-network; }
.@{fa-css-prefix}-chart-pie:before { content: @fa-var-chart-pie; }
.@{fa-css-prefix}-chart-pie-alt:before { content: @fa-var-chart-pie-alt; }
.@{fa-css-prefix}-chart-scatter:before { content: @fa-var-chart-scatter; }
.@{fa-css-prefix}-check:before { content: @fa-var-check; }
.@{fa-css-prefix}-check-circle:before { content: @fa-var-check-circle; }
.@{fa-css-prefix}-check-double:before { content: @fa-var-check-double; }
.@{fa-css-prefix}-check-square:before { content: @fa-var-check-square; }
.@{fa-css-prefix}-cheese:before { content: @fa-var-cheese; }
.@{fa-css-prefix}-cheese-swiss:before { content: @fa-var-cheese-swiss; }
.@{fa-css-prefix}-cheeseburger:before { content: @fa-var-cheeseburger; }
.@{fa-css-prefix}-chess:before { content: @fa-var-chess; }
.@{fa-css-prefix}-chess-bishop:before { content: @fa-var-chess-bishop; }
.@{fa-css-prefix}-chess-bishop-alt:before { content: @fa-var-chess-bishop-alt; }
.@{fa-css-prefix}-chess-board:before { content: @fa-var-chess-board; }
.@{fa-css-prefix}-chess-clock:before { content: @fa-var-chess-clock; }
.@{fa-css-prefix}-chess-clock-alt:before { content: @fa-var-chess-clock-alt; }
.@{fa-css-prefix}-chess-king:before { content: @fa-var-chess-king; }
.@{fa-css-prefix}-chess-king-alt:before { content: @fa-var-chess-king-alt; }
.@{fa-css-prefix}-chess-knight:before { content: @fa-var-chess-knight; }
.@{fa-css-prefix}-chess-knight-alt:before { content: @fa-var-chess-knight-alt; }
.@{fa-css-prefix}-chess-pawn:before { content: @fa-var-chess-pawn; }
.@{fa-css-prefix}-chess-pawn-alt:before { content: @fa-var-chess-pawn-alt; }
.@{fa-css-prefix}-chess-queen:before { content: @fa-var-chess-queen; }
.@{fa-css-prefix}-chess-queen-alt:before { content: @fa-var-chess-queen-alt; }
.@{fa-css-prefix}-chess-rook:before { content: @fa-var-chess-rook; }
.@{fa-css-prefix}-chess-rook-alt:before { content: @fa-var-chess-rook-alt; }
.@{fa-css-prefix}-chevron-circle-down:before { content: @fa-var-chevron-circle-down; }
.@{fa-css-prefix}-chevron-circle-left:before { content: @fa-var-chevron-circle-left; }
.@{fa-css-prefix}-chevron-circle-right:before { content: @fa-var-chevron-circle-right; }
.@{fa-css-prefix}-chevron-circle-up:before { content: @fa-var-chevron-circle-up; }
.@{fa-css-prefix}-chevron-double-down:before { content: @fa-var-chevron-double-down; }
.@{fa-css-prefix}-chevron-double-left:before { content: @fa-var-chevron-double-left; }
.@{fa-css-prefix}-chevron-double-right:before { content: @fa-var-chevron-double-right; }
.@{fa-css-prefix}-chevron-double-up:before { content: @fa-var-chevron-double-up; }
.@{fa-css-prefix}-chevron-down:before { content: @fa-var-chevron-down; }
.@{fa-css-prefix}-chevron-left:before { content: @fa-var-chevron-left; }
.@{fa-css-prefix}-chevron-right:before { content: @fa-var-chevron-right; }
.@{fa-css-prefix}-chevron-square-down:before { content: @fa-var-chevron-square-down; }
.@{fa-css-prefix}-chevron-square-left:before { content: @fa-var-chevron-square-left; }
.@{fa-css-prefix}-chevron-square-right:before { content: @fa-var-chevron-square-right; }
.@{fa-css-prefix}-chevron-square-up:before { content: @fa-var-chevron-square-up; }
.@{fa-css-prefix}-chevron-up:before { content: @fa-var-chevron-up; }
.@{fa-css-prefix}-child:before { content: @fa-var-child; }
.@{fa-css-prefix}-chimney:before { content: @fa-var-chimney; }
.@{fa-css-prefix}-chrome:before { content: @fa-var-chrome; }
.@{fa-css-prefix}-church:before { content: @fa-var-church; }
.@{fa-css-prefix}-circle:before { content: @fa-var-circle; }
.@{fa-css-prefix}-circle-notch:before { content: @fa-var-circle-notch; }
.@{fa-css-prefix}-city:before { content: @fa-var-city; }
.@{fa-css-prefix}-claw-marks:before { content: @fa-var-claw-marks; }
.@{fa-css-prefix}-clinic-medical:before { content: @fa-var-clinic-medical; }
.@{fa-css-prefix}-clipboard:before { content: @fa-var-clipboard; }
.@{fa-css-prefix}-clipboard-check:before { content: @fa-var-clipboard-check; }
.@{fa-css-prefix}-clipboard-list:before { content: @fa-var-clipboard-list; }
.@{fa-css-prefix}-clipboard-list-check:before { content: @fa-var-clipboard-list-check; }
.@{fa-css-prefix}-clipboard-prescription:before { content: @fa-var-clipboard-prescription; }
.@{fa-css-prefix}-clipboard-user:before { content: @fa-var-clipboard-user; }
.@{fa-css-prefix}-clock:before { content: @fa-var-clock; }
.@{fa-css-prefix}-clone:before { content: @fa-var-clone; }
.@{fa-css-prefix}-closed-captioning:before { content: @fa-var-closed-captioning; }
.@{fa-css-prefix}-cloud:before { content: @fa-var-cloud; }
.@{fa-css-prefix}-cloud-download:before { content: @fa-var-cloud-download; }
.@{fa-css-prefix}-cloud-download-alt:before { content: @fa-var-cloud-download-alt; }
.@{fa-css-prefix}-cloud-drizzle:before { content: @fa-var-cloud-drizzle; }
.@{fa-css-prefix}-cloud-hail:before { content: @fa-var-cloud-hail; }
.@{fa-css-prefix}-cloud-hail-mixed:before { content: @fa-var-cloud-hail-mixed; }
.@{fa-css-prefix}-cloud-meatball:before { content: @fa-var-cloud-meatball; }
.@{fa-css-prefix}-cloud-moon:before { content: @fa-var-cloud-moon; }
.@{fa-css-prefix}-cloud-moon-rain:before { content: @fa-var-cloud-moon-rain; }
.@{fa-css-prefix}-cloud-rain:before { content: @fa-var-cloud-rain; }
.@{fa-css-prefix}-cloud-rainbow:before { content: @fa-var-cloud-rainbow; }
.@{fa-css-prefix}-cloud-showers:before { content: @fa-var-cloud-showers; }
.@{fa-css-prefix}-cloud-showers-heavy:before { content: @fa-var-cloud-showers-heavy; }
.@{fa-css-prefix}-cloud-sleet:before { content: @fa-var-cloud-sleet; }
.@{fa-css-prefix}-cloud-snow:before { content: @fa-var-cloud-snow; }
.@{fa-css-prefix}-cloud-sun:before { content: @fa-var-cloud-sun; }
.@{fa-css-prefix}-cloud-sun-rain:before { content: @fa-var-cloud-sun-rain; }
.@{fa-css-prefix}-cloud-upload:before { content: @fa-var-cloud-upload; }
.@{fa-css-prefix}-cloud-upload-alt:before { content: @fa-var-cloud-upload-alt; }
.@{fa-css-prefix}-clouds:before { content: @fa-var-clouds; }
.@{fa-css-prefix}-clouds-moon:before { content: @fa-var-clouds-moon; }
.@{fa-css-prefix}-clouds-sun:before { content: @fa-var-clouds-sun; }
.@{fa-css-prefix}-cloudscale:before { content: @fa-var-cloudscale; }
.@{fa-css-prefix}-cloudsmith:before { content: @fa-var-cloudsmith; }
.@{fa-css-prefix}-cloudversify:before { content: @fa-var-cloudversify; }
.@{fa-css-prefix}-club:before { content: @fa-var-club; }
.@{fa-css-prefix}-cocktail:before { content: @fa-var-cocktail; }
.@{fa-css-prefix}-code:before { content: @fa-var-code; }
.@{fa-css-prefix}-code-branch:before { content: @fa-var-code-branch; }
.@{fa-css-prefix}-code-commit:before { content: @fa-var-code-commit; }
.@{fa-css-prefix}-code-merge:before { content: @fa-var-code-merge; }
.@{fa-css-prefix}-codepen:before { content: @fa-var-codepen; }
.@{fa-css-prefix}-codiepie:before { content: @fa-var-codiepie; }
.@{fa-css-prefix}-coffee:before { content: @fa-var-coffee; }
.@{fa-css-prefix}-coffee-togo:before { content: @fa-var-coffee-togo; }
.@{fa-css-prefix}-coffin:before { content: @fa-var-coffin; }
.@{fa-css-prefix}-cog:before { content: @fa-var-cog; }
.@{fa-css-prefix}-cogs:before { content: @fa-var-cogs; }
.@{fa-css-prefix}-coins:before { content: @fa-var-coins; }
.@{fa-css-prefix}-columns:before { content: @fa-var-columns; }
.@{fa-css-prefix}-comment:before { content: @fa-var-comment; }
.@{fa-css-prefix}-comment-alt:before { content: @fa-var-comment-alt; }
.@{fa-css-prefix}-comment-alt-check:before { content: @fa-var-comment-alt-check; }
.@{fa-css-prefix}-comment-alt-dollar:before { content: @fa-var-comment-alt-dollar; }
.@{fa-css-prefix}-comment-alt-dots:before { content: @fa-var-comment-alt-dots; }
.@{fa-css-prefix}-comment-alt-edit:before { content: @fa-var-comment-alt-edit; }
.@{fa-css-prefix}-comment-alt-exclamation:before { content: @fa-var-comment-alt-exclamation; }
.@{fa-css-prefix}-comment-alt-lines:before { content: @fa-var-comment-alt-lines; }
.@{fa-css-prefix}-comment-alt-medical:before { content: @fa-var-comment-alt-medical; }
.@{fa-css-prefix}-comment-alt-minus:before { content: @fa-var-comment-alt-minus; }
.@{fa-css-prefix}-comment-alt-plus:before { content: @fa-var-comment-alt-plus; }
.@{fa-css-prefix}-comment-alt-slash:before { content: @fa-var-comment-alt-slash; }
.@{fa-css-prefix}-comment-alt-smile:before { content: @fa-var-comment-alt-smile; }
.@{fa-css-prefix}-comment-alt-times:before { content: @fa-var-comment-alt-times; }
.@{fa-css-prefix}-comment-check:before { content: @fa-var-comment-check; }
.@{fa-css-prefix}-comment-dollar:before { content: @fa-var-comment-dollar; }
.@{fa-css-prefix}-comment-dots:before { content: @fa-var-comment-dots; }
.@{fa-css-prefix}-comment-edit:before { content: @fa-var-comment-edit; }
.@{fa-css-prefix}-comment-exclamation:before { content: @fa-var-comment-exclamation; }
.@{fa-css-prefix}-comment-lines:before { content: @fa-var-comment-lines; }
.@{fa-css-prefix}-comment-medical:before { content: @fa-var-comment-medical; }
.@{fa-css-prefix}-comment-minus:before { content: @fa-var-comment-minus; }
.@{fa-css-prefix}-comment-plus:before { content: @fa-var-comment-plus; }
.@{fa-css-prefix}-comment-slash:before { content: @fa-var-comment-slash; }
.@{fa-css-prefix}-comment-smile:before { content: @fa-var-comment-smile; }
.@{fa-css-prefix}-comment-times:before { content: @fa-var-comment-times; }
.@{fa-css-prefix}-comments:before { content: @fa-var-comments; }
.@{fa-css-prefix}-comments-alt:before { content: @fa-var-comments-alt; }
.@{fa-css-prefix}-comments-alt-dollar:before { content: @fa-var-comments-alt-dollar; }
.@{fa-css-prefix}-comments-dollar:before { content: @fa-var-comments-dollar; }
.@{fa-css-prefix}-compact-disc:before { content: @fa-var-compact-disc; }
.@{fa-css-prefix}-compass:before { content: @fa-var-compass; }
.@{fa-css-prefix}-compass-slash:before { content: @fa-var-compass-slash; }
.@{fa-css-prefix}-compress:before { content: @fa-var-compress; }
.@{fa-css-prefix}-compress-alt:before { content: @fa-var-compress-alt; }
.@{fa-css-prefix}-compress-arrows-alt:before { content: @fa-var-compress-arrows-alt; }
.@{fa-css-prefix}-compress-wide:before { content: @fa-var-compress-wide; }
.@{fa-css-prefix}-concierge-bell:before { content: @fa-var-concierge-bell; }
.@{fa-css-prefix}-confluence:before { content: @fa-var-confluence; }
.@{fa-css-prefix}-connectdevelop:before { content: @fa-var-connectdevelop; }
.@{fa-css-prefix}-container-storage:before { content: @fa-var-container-storage; }
.@{fa-css-prefix}-contao:before { content: @fa-var-contao; }
.@{fa-css-prefix}-conveyor-belt:before { content: @fa-var-conveyor-belt; }
.@{fa-css-prefix}-conveyor-belt-alt:before { content: @fa-var-conveyor-belt-alt; }
.@{fa-css-prefix}-cookie:before { content: @fa-var-cookie; }
.@{fa-css-prefix}-cookie-bite:before { content: @fa-var-cookie-bite; }
.@{fa-css-prefix}-copy:before { content: @fa-var-copy; }
.@{fa-css-prefix}-copyright:before { content: @fa-var-copyright; }
.@{fa-css-prefix}-corn:before { content: @fa-var-corn; }
.@{fa-css-prefix}-couch:before { content: @fa-var-couch; }
.@{fa-css-prefix}-cow:before { content: @fa-var-cow; }
.@{fa-css-prefix}-cpanel:before { content: @fa-var-cpanel; }
.@{fa-css-prefix}-creative-commons:before { content: @fa-var-creative-commons; }
.@{fa-css-prefix}-creative-commons-by:before { content: @fa-var-creative-commons-by; }
.@{fa-css-prefix}-creative-commons-nc:before { content: @fa-var-creative-commons-nc; }
.@{fa-css-prefix}-creative-commons-nc-eu:before { content: @fa-var-creative-commons-nc-eu; }
.@{fa-css-prefix}-creative-commons-nc-jp:before { content: @fa-var-creative-commons-nc-jp; }
.@{fa-css-prefix}-creative-commons-nd:before { content: @fa-var-creative-commons-nd; }
.@{fa-css-prefix}-creative-commons-pd:before { content: @fa-var-creative-commons-pd; }
.@{fa-css-prefix}-creative-commons-pd-alt:before { content: @fa-var-creative-commons-pd-alt; }
.@{fa-css-prefix}-creative-commons-remix:before { content: @fa-var-creative-commons-remix; }
.@{fa-css-prefix}-creative-commons-sa:before { content: @fa-var-creative-commons-sa; }
.@{fa-css-prefix}-creative-commons-sampling:before { content: @fa-var-creative-commons-sampling; }
.@{fa-css-prefix}-creative-commons-sampling-plus:before { content: @fa-var-creative-commons-sampling-plus; }
.@{fa-css-prefix}-creative-commons-share:before { content: @fa-var-creative-commons-share; }
.@{fa-css-prefix}-creative-commons-zero:before { content: @fa-var-creative-commons-zero; }
.@{fa-css-prefix}-credit-card:before { content: @fa-var-credit-card; }
.@{fa-css-prefix}-credit-card-blank:before { content: @fa-var-credit-card-blank; }
.@{fa-css-prefix}-credit-card-front:before { content: @fa-var-credit-card-front; }
.@{fa-css-prefix}-cricket:before { content: @fa-var-cricket; }
.@{fa-css-prefix}-critical-role:before { content: @fa-var-critical-role; }
.@{fa-css-prefix}-croissant:before { content: @fa-var-croissant; }
.@{fa-css-prefix}-crop:before { content: @fa-var-crop; }
.@{fa-css-prefix}-crop-alt:before { content: @fa-var-crop-alt; }
.@{fa-css-prefix}-cross:before { content: @fa-var-cross; }
.@{fa-css-prefix}-crosshairs:before { content: @fa-var-crosshairs; }
.@{fa-css-prefix}-crow:before { content: @fa-var-crow; }
.@{fa-css-prefix}-crown:before { content: @fa-var-crown; }
.@{fa-css-prefix}-crutch:before { content: @fa-var-crutch; }
.@{fa-css-prefix}-crutches:before { content: @fa-var-crutches; }
.@{fa-css-prefix}-css3:before { content: @fa-var-css3; }
.@{fa-css-prefix}-css3-alt:before { content: @fa-var-css3-alt; }
.@{fa-css-prefix}-cube:before { content: @fa-var-cube; }
.@{fa-css-prefix}-cubes:before { content: @fa-var-cubes; }
.@{fa-css-prefix}-curling:before { content: @fa-var-curling; }
.@{fa-css-prefix}-cut:before { content: @fa-var-cut; }
.@{fa-css-prefix}-cuttlefish:before { content: @fa-var-cuttlefish; }
.@{fa-css-prefix}-d-and-d:before { content: @fa-var-d-and-d; }
.@{fa-css-prefix}-d-and-d-beyond:before { content: @fa-var-d-and-d-beyond; }
.@{fa-css-prefix}-dagger:before { content: @fa-var-dagger; }
.@{fa-css-prefix}-dashcube:before { content: @fa-var-dashcube; }
.@{fa-css-prefix}-database:before { content: @fa-var-database; }
.@{fa-css-prefix}-deaf:before { content: @fa-var-deaf; }
.@{fa-css-prefix}-debug:before { content: @fa-var-debug; }
.@{fa-css-prefix}-deer:before { content: @fa-var-deer; }
.@{fa-css-prefix}-deer-rudolph:before { content: @fa-var-deer-rudolph; }
.@{fa-css-prefix}-delicious:before { content: @fa-var-delicious; }
.@{fa-css-prefix}-democrat:before { content: @fa-var-democrat; }
.@{fa-css-prefix}-deploydog:before { content: @fa-var-deploydog; }
.@{fa-css-prefix}-deskpro:before { content: @fa-var-deskpro; }
.@{fa-css-prefix}-desktop:before { content: @fa-var-desktop; }
.@{fa-css-prefix}-desktop-alt:before { content: @fa-var-desktop-alt; }
.@{fa-css-prefix}-dev:before { content: @fa-var-dev; }
.@{fa-css-prefix}-deviantart:before { content: @fa-var-deviantart; }
.@{fa-css-prefix}-dewpoint:before { content: @fa-var-dewpoint; }
.@{fa-css-prefix}-dharmachakra:before { content: @fa-var-dharmachakra; }
.@{fa-css-prefix}-dhl:before { content: @fa-var-dhl; }
.@{fa-css-prefix}-diagnoses:before { content: @fa-var-diagnoses; }
.@{fa-css-prefix}-diamond:before { content: @fa-var-diamond; }
.@{fa-css-prefix}-diaspora:before { content: @fa-var-diaspora; }
.@{fa-css-prefix}-dice:before { content: @fa-var-dice; }
.@{fa-css-prefix}-dice-d10:before { content: @fa-var-dice-d10; }
.@{fa-css-prefix}-dice-d12:before { content: @fa-var-dice-d12; }
.@{fa-css-prefix}-dice-d20:before { content: @fa-var-dice-d20; }
.@{fa-css-prefix}-dice-d4:before { content: @fa-var-dice-d4; }
.@{fa-css-prefix}-dice-d6:before { content: @fa-var-dice-d6; }
.@{fa-css-prefix}-dice-d8:before { content: @fa-var-dice-d8; }
.@{fa-css-prefix}-dice-five:before { content: @fa-var-dice-five; }
.@{fa-css-prefix}-dice-four:before { content: @fa-var-dice-four; }
.@{fa-css-prefix}-dice-one:before { content: @fa-var-dice-one; }
.@{fa-css-prefix}-dice-six:before { content: @fa-var-dice-six; }
.@{fa-css-prefix}-dice-three:before { content: @fa-var-dice-three; }
.@{fa-css-prefix}-dice-two:before { content: @fa-var-dice-two; }
.@{fa-css-prefix}-digg:before { content: @fa-var-digg; }
.@{fa-css-prefix}-digital-ocean:before { content: @fa-var-digital-ocean; }
.@{fa-css-prefix}-digital-tachograph:before { content: @fa-var-digital-tachograph; }
.@{fa-css-prefix}-diploma:before { content: @fa-var-diploma; }
.@{fa-css-prefix}-directions:before { content: @fa-var-directions; }
.@{fa-css-prefix}-discord:before { content: @fa-var-discord; }
.@{fa-css-prefix}-discourse:before { content: @fa-var-discourse; }
.@{fa-css-prefix}-disease:before { content: @fa-var-disease; }
.@{fa-css-prefix}-divide:before { content: @fa-var-divide; }
.@{fa-css-prefix}-dizzy:before { content: @fa-var-dizzy; }
.@{fa-css-prefix}-dna:before { content: @fa-var-dna; }
.@{fa-css-prefix}-do-not-enter:before { content: @fa-var-do-not-enter; }
.@{fa-css-prefix}-dochub:before { content: @fa-var-dochub; }
.@{fa-css-prefix}-docker:before { content: @fa-var-docker; }
.@{fa-css-prefix}-dog:before { content: @fa-var-dog; }
.@{fa-css-prefix}-dog-leashed:before { content: @fa-var-dog-leashed; }
.@{fa-css-prefix}-dollar-sign:before { content: @fa-var-dollar-sign; }
.@{fa-css-prefix}-dolly:before { content: @fa-var-dolly; }
.@{fa-css-prefix}-dolly-empty:before { content: @fa-var-dolly-empty; }
.@{fa-css-prefix}-dolly-flatbed:before { content: @fa-var-dolly-flatbed; }
.@{fa-css-prefix}-dolly-flatbed-alt:before { content: @fa-var-dolly-flatbed-alt; }
.@{fa-css-prefix}-dolly-flatbed-empty:before { content: @fa-var-dolly-flatbed-empty; }
.@{fa-css-prefix}-donate:before { content: @fa-var-donate; }
.@{fa-css-prefix}-door-closed:before { content: @fa-var-door-closed; }
.@{fa-css-prefix}-door-open:before { content: @fa-var-door-open; }
.@{fa-css-prefix}-dot-circle:before { content: @fa-var-dot-circle; }
.@{fa-css-prefix}-dove:before { content: @fa-var-dove; }
.@{fa-css-prefix}-download:before { content: @fa-var-download; }
.@{fa-css-prefix}-draft2digital:before { content: @fa-var-draft2digital; }
.@{fa-css-prefix}-drafting-compass:before { content: @fa-var-drafting-compass; }
.@{fa-css-prefix}-dragon:before { content: @fa-var-dragon; }
.@{fa-css-prefix}-draw-circle:before { content: @fa-var-draw-circle; }
.@{fa-css-prefix}-draw-polygon:before { content: @fa-var-draw-polygon; }
.@{fa-css-prefix}-draw-square:before { content: @fa-var-draw-square; }
.@{fa-css-prefix}-dreidel:before { content: @fa-var-dreidel; }
.@{fa-css-prefix}-dribbble:before { content: @fa-var-dribbble; }
.@{fa-css-prefix}-dribbble-square:before { content: @fa-var-dribbble-square; }
.@{fa-css-prefix}-dropbox:before { content: @fa-var-dropbox; }
.@{fa-css-prefix}-drum:before { content: @fa-var-drum; }
.@{fa-css-prefix}-drum-steelpan:before { content: @fa-var-drum-steelpan; }
.@{fa-css-prefix}-drumstick:before { content: @fa-var-drumstick; }
.@{fa-css-prefix}-drumstick-bite:before { content: @fa-var-drumstick-bite; }
.@{fa-css-prefix}-drupal:before { content: @fa-var-drupal; }
.@{fa-css-prefix}-duck:before { content: @fa-var-duck; }
.@{fa-css-prefix}-dumbbell:before { content: @fa-var-dumbbell; }
.@{fa-css-prefix}-dumpster:before { content: @fa-var-dumpster; }
.@{fa-css-prefix}-dumpster-fire:before { content: @fa-var-dumpster-fire; }
.@{fa-css-prefix}-dungeon:before { content: @fa-var-dungeon; }
.@{fa-css-prefix}-dyalog:before { content: @fa-var-dyalog; }
.@{fa-css-prefix}-ear:before { content: @fa-var-ear; }
.@{fa-css-prefix}-ear-muffs:before { content: @fa-var-ear-muffs; }
.@{fa-css-prefix}-earlybirds:before { content: @fa-var-earlybirds; }
.@{fa-css-prefix}-ebay:before { content: @fa-var-ebay; }
.@{fa-css-prefix}-eclipse:before { content: @fa-var-eclipse; }
.@{fa-css-prefix}-eclipse-alt:before { content: @fa-var-eclipse-alt; }
.@{fa-css-prefix}-edge:before { content: @fa-var-edge; }
.@{fa-css-prefix}-edit:before { content: @fa-var-edit; }
.@{fa-css-prefix}-egg:before { content: @fa-var-egg; }
.@{fa-css-prefix}-egg-fried:before { content: @fa-var-egg-fried; }
.@{fa-css-prefix}-eject:before { content: @fa-var-eject; }
.@{fa-css-prefix}-elementor:before { content: @fa-var-elementor; }
.@{fa-css-prefix}-elephant:before { content: @fa-var-elephant; }
.@{fa-css-prefix}-ellipsis-h:before { content: @fa-var-ellipsis-h; }
.@{fa-css-prefix}-ellipsis-h-alt:before { content: @fa-var-ellipsis-h-alt; }
.@{fa-css-prefix}-ellipsis-v:before { content: @fa-var-ellipsis-v; }
.@{fa-css-prefix}-ellipsis-v-alt:before { content: @fa-var-ellipsis-v-alt; }
.@{fa-css-prefix}-ello:before { content: @fa-var-ello; }
.@{fa-css-prefix}-ember:before { content: @fa-var-ember; }
.@{fa-css-prefix}-empire:before { content: @fa-var-empire; }
.@{fa-css-prefix}-empty-set:before { content: @fa-var-empty-set; }
.@{fa-css-prefix}-engine-warning:before { content: @fa-var-engine-warning; }
.@{fa-css-prefix}-envelope:before { content: @fa-var-envelope; }
.@{fa-css-prefix}-envelope-open:before { content: @fa-var-envelope-open; }
.@{fa-css-prefix}-envelope-open-dollar:before { content: @fa-var-envelope-open-dollar; }
.@{fa-css-prefix}-envelope-open-text:before { content: @fa-var-envelope-open-text; }
.@{fa-css-prefix}-envelope-square:before { content: @fa-var-envelope-square; }
.@{fa-css-prefix}-envira:before { content: @fa-var-envira; }
.@{fa-css-prefix}-equals:before { content: @fa-var-equals; }
.@{fa-css-prefix}-eraser:before { content: @fa-var-eraser; }
.@{fa-css-prefix}-erlang:before { content: @fa-var-erlang; }
.@{fa-css-prefix}-ethereum:before { content: @fa-var-ethereum; }
.@{fa-css-prefix}-ethernet:before { content: @fa-var-ethernet; }
.@{fa-css-prefix}-etsy:before { content: @fa-var-etsy; }
.@{fa-css-prefix}-euro-sign:before { content: @fa-var-euro-sign; }
.@{fa-css-prefix}-exchange:before { content: @fa-var-exchange; }
.@{fa-css-prefix}-exchange-alt:before { content: @fa-var-exchange-alt; }
.@{fa-css-prefix}-exclamation:before { content: @fa-var-exclamation; }
.@{fa-css-prefix}-exclamation-circle:before { content: @fa-var-exclamation-circle; }
.@{fa-css-prefix}-exclamation-square:before { content: @fa-var-exclamation-square; }
.@{fa-css-prefix}-exclamation-triangle:before { content: @fa-var-exclamation-triangle; }
.@{fa-css-prefix}-expand:before { content: @fa-var-expand; }
.@{fa-css-prefix}-expand-alt:before { content: @fa-var-expand-alt; }
.@{fa-css-prefix}-expand-arrows:before { content: @fa-var-expand-arrows; }
.@{fa-css-prefix}-expand-arrows-alt:before { content: @fa-var-expand-arrows-alt; }
.@{fa-css-prefix}-expand-wide:before { content: @fa-var-expand-wide; }
.@{fa-css-prefix}-expeditedssl:before { content: @fa-var-expeditedssl; }
.@{fa-css-prefix}-external-link:before { content: @fa-var-external-link; }
.@{fa-css-prefix}-external-link-alt:before { content: @fa-var-external-link-alt; }
.@{fa-css-prefix}-external-link-square:before { content: @fa-var-external-link-square; }
.@{fa-css-prefix}-external-link-square-alt:before { content: @fa-var-external-link-square-alt; }
.@{fa-css-prefix}-eye:before { content: @fa-var-eye; }
.@{fa-css-prefix}-eye-dropper:before { content: @fa-var-eye-dropper; }
.@{fa-css-prefix}-eye-evil:before { content: @fa-var-eye-evil; }
.@{fa-css-prefix}-eye-slash:before { content: @fa-var-eye-slash; }
.@{fa-css-prefix}-facebook:before { content: @fa-var-facebook; }
.@{fa-css-prefix}-facebook-f:before { content: @fa-var-facebook-f; }
.@{fa-css-prefix}-facebook-messenger:before { content: @fa-var-facebook-messenger; }
.@{fa-css-prefix}-facebook-square:before { content: @fa-var-facebook-square; }
.@{fa-css-prefix}-fantasy-flight-games:before { content: @fa-var-fantasy-flight-games; }
.@{fa-css-prefix}-fast-backward:before { content: @fa-var-fast-backward; }
.@{fa-css-prefix}-fast-forward:before { content: @fa-var-fast-forward; }
.@{fa-css-prefix}-fax:before { content: @fa-var-fax; }
.@{fa-css-prefix}-feather:before { content: @fa-var-feather; }
.@{fa-css-prefix}-feather-alt:before { content: @fa-var-feather-alt; }
.@{fa-css-prefix}-fedex:before { content: @fa-var-fedex; }
.@{fa-css-prefix}-fedora:before { content: @fa-var-fedora; }
.@{fa-css-prefix}-female:before { content: @fa-var-female; }
.@{fa-css-prefix}-field-hockey:before { content: @fa-var-field-hockey; }
.@{fa-css-prefix}-fighter-jet:before { content: @fa-var-fighter-jet; }
.@{fa-css-prefix}-figma:before { content: @fa-var-figma; }
.@{fa-css-prefix}-file:before { content: @fa-var-file; }
.@{fa-css-prefix}-file-alt:before { content: @fa-var-file-alt; }
.@{fa-css-prefix}-file-archive:before { content: @fa-var-file-archive; }
.@{fa-css-prefix}-file-audio:before { content: @fa-var-file-audio; }
.@{fa-css-prefix}-file-certificate:before { content: @fa-var-file-certificate; }
.@{fa-css-prefix}-file-chart-line:before { content: @fa-var-file-chart-line; }
.@{fa-css-prefix}-file-chart-pie:before { content: @fa-var-file-chart-pie; }
.@{fa-css-prefix}-file-check:before { content: @fa-var-file-check; }
.@{fa-css-prefix}-file-code:before { content: @fa-var-file-code; }
.@{fa-css-prefix}-file-contract:before { content: @fa-var-file-contract; }
.@{fa-css-prefix}-file-csv:before { content: @fa-var-file-csv; }
.@{fa-css-prefix}-file-download:before { content: @fa-var-file-download; }
.@{fa-css-prefix}-file-edit:before { content: @fa-var-file-edit; }
.@{fa-css-prefix}-file-excel:before { content: @fa-var-file-excel; }
.@{fa-css-prefix}-file-exclamation:before { content: @fa-var-file-exclamation; }
.@{fa-css-prefix}-file-export:before { content: @fa-var-file-export; }
.@{fa-css-prefix}-file-image:before { content: @fa-var-file-image; }
.@{fa-css-prefix}-file-import:before { content: @fa-var-file-import; }
.@{fa-css-prefix}-file-invoice:before { content: @fa-var-file-invoice; }
.@{fa-css-prefix}-file-invoice-dollar:before { content: @fa-var-file-invoice-dollar; }
.@{fa-css-prefix}-file-medical:before { content: @fa-var-file-medical; }
.@{fa-css-prefix}-file-medical-alt:before { content: @fa-var-file-medical-alt; }
.@{fa-css-prefix}-file-minus:before { content: @fa-var-file-minus; }
.@{fa-css-prefix}-file-pdf:before { content: @fa-var-file-pdf; }
.@{fa-css-prefix}-file-plus:before { content: @fa-var-file-plus; }
.@{fa-css-prefix}-file-powerpoint:before { content: @fa-var-file-powerpoint; }
.@{fa-css-prefix}-file-prescription:before { content: @fa-var-file-prescription; }
.@{fa-css-prefix}-file-signature:before { content: @fa-var-file-signature; }
.@{fa-css-prefix}-file-spreadsheet:before { content: @fa-var-file-spreadsheet; }
.@{fa-css-prefix}-file-times:before { content: @fa-var-file-times; }
.@{fa-css-prefix}-file-upload:before { content: @fa-var-file-upload; }
.@{fa-css-prefix}-file-user:before { content: @fa-var-file-user; }
.@{fa-css-prefix}-file-video:before { content: @fa-var-file-video; }
.@{fa-css-prefix}-file-word:before { content: @fa-var-file-word; }
.@{fa-css-prefix}-files-medical:before { content: @fa-var-files-medical; }
.@{fa-css-prefix}-fill:before { content: @fa-var-fill; }
.@{fa-css-prefix}-fill-drip:before { content: @fa-var-fill-drip; }
.@{fa-css-prefix}-film:before { content: @fa-var-film; }
.@{fa-css-prefix}-film-alt:before { content: @fa-var-film-alt; }
.@{fa-css-prefix}-filter:before { content: @fa-var-filter; }
.@{fa-css-prefix}-fingerprint:before { content: @fa-var-fingerprint; }
.@{fa-css-prefix}-fire:before { content: @fa-var-fire; }
.@{fa-css-prefix}-fire-alt:before { content: @fa-var-fire-alt; }
.@{fa-css-prefix}-fire-extinguisher:before { content: @fa-var-fire-extinguisher; }
.@{fa-css-prefix}-fire-smoke:before { content: @fa-var-fire-smoke; }
.@{fa-css-prefix}-firefox:before { content: @fa-var-firefox; }
.@{fa-css-prefix}-fireplace:before { content: @fa-var-fireplace; }
.@{fa-css-prefix}-first-aid:before { content: @fa-var-first-aid; }
.@{fa-css-prefix}-first-order:before { content: @fa-var-first-order; }
.@{fa-css-prefix}-first-order-alt:before { content: @fa-var-first-order-alt; }
.@{fa-css-prefix}-firstdraft:before { content: @fa-var-firstdraft; }
.@{fa-css-prefix}-fish:before { content: @fa-var-fish; }
.@{fa-css-prefix}-fish-cooked:before { content: @fa-var-fish-cooked; }
.@{fa-css-prefix}-fist-raised:before { content: @fa-var-fist-raised; }
.@{fa-css-prefix}-flag:before { content: @fa-var-flag; }
.@{fa-css-prefix}-flag-alt:before { content: @fa-var-flag-alt; }
.@{fa-css-prefix}-flag-checkered:before { content: @fa-var-flag-checkered; }
.@{fa-css-prefix}-flag-usa:before { content: @fa-var-flag-usa; }
.@{fa-css-prefix}-flame:before { content: @fa-var-flame; }
.@{fa-css-prefix}-flask:before { content: @fa-var-flask; }
.@{fa-css-prefix}-flask-poison:before { content: @fa-var-flask-poison; }
.@{fa-css-prefix}-flask-potion:before { content: @fa-var-flask-potion; }
.@{fa-css-prefix}-flickr:before { content: @fa-var-flickr; }
.@{fa-css-prefix}-flipboard:before { content: @fa-var-flipboard; }
.@{fa-css-prefix}-flower:before { content: @fa-var-flower; }
.@{fa-css-prefix}-flower-daffodil:before { content: @fa-var-flower-daffodil; }
.@{fa-css-prefix}-flower-tulip:before { content: @fa-var-flower-tulip; }
.@{fa-css-prefix}-flushed:before { content: @fa-var-flushed; }
.@{fa-css-prefix}-fly:before { content: @fa-var-fly; }
.@{fa-css-prefix}-fog:before { content: @fa-var-fog; }
.@{fa-css-prefix}-folder:before { content: @fa-var-folder; }
.@{fa-css-prefix}-folder-minus:before { content: @fa-var-folder-minus; }
.@{fa-css-prefix}-folder-open:before { content: @fa-var-folder-open; }
.@{fa-css-prefix}-folder-plus:before { content: @fa-var-folder-plus; }
.@{fa-css-prefix}-folder-times:before { content: @fa-var-folder-times; }
.@{fa-css-prefix}-folder-tree:before { content: @fa-var-folder-tree; }
.@{fa-css-prefix}-folders:before { content: @fa-var-folders; }
.@{fa-css-prefix}-font:before { content: @fa-var-font; }
.@{fa-css-prefix}-font-awesome:before { content: @fa-var-font-awesome; }
.@{fa-css-prefix}-font-awesome-alt:before { content: @fa-var-font-awesome-alt; }
.@{fa-css-prefix}-font-awesome-flag:before { content: @fa-var-font-awesome-flag; }
.@{fa-css-prefix}-font-awesome-logo-full:before { content: @fa-var-font-awesome-logo-full; }
.@{fa-css-prefix}-fonticons:before { content: @fa-var-fonticons; }
.@{fa-css-prefix}-fonticons-fi:before { content: @fa-var-fonticons-fi; }
.@{fa-css-prefix}-football-ball:before { content: @fa-var-football-ball; }
.@{fa-css-prefix}-football-helmet:before { content: @fa-var-football-helmet; }
.@{fa-css-prefix}-forklift:before { content: @fa-var-forklift; }
.@{fa-css-prefix}-fort-awesome:before { content: @fa-var-fort-awesome; }
.@{fa-css-prefix}-fort-awesome-alt:before { content: @fa-var-fort-awesome-alt; }
.@{fa-css-prefix}-forumbee:before { content: @fa-var-forumbee; }
.@{fa-css-prefix}-forward:before { content: @fa-var-forward; }
.@{fa-css-prefix}-foursquare:before { content: @fa-var-foursquare; }
.@{fa-css-prefix}-fragile:before { content: @fa-var-fragile; }
.@{fa-css-prefix}-free-code-camp:before { content: @fa-var-free-code-camp; }
.@{fa-css-prefix}-freebsd:before { content: @fa-var-freebsd; }
.@{fa-css-prefix}-french-fries:before { content: @fa-var-french-fries; }
.@{fa-css-prefix}-frog:before { content: @fa-var-frog; }
.@{fa-css-prefix}-frosty-head:before { content: @fa-var-frosty-head; }
.@{fa-css-prefix}-frown:before { content: @fa-var-frown; }
.@{fa-css-prefix}-frown-open:before { content: @fa-var-frown-open; }
.@{fa-css-prefix}-fulcrum:before { content: @fa-var-fulcrum; }
.@{fa-css-prefix}-function:before { content: @fa-var-function; }
.@{fa-css-prefix}-funnel-dollar:before { content: @fa-var-funnel-dollar; }
.@{fa-css-prefix}-futbol:before { content: @fa-var-futbol; }
.@{fa-css-prefix}-galactic-republic:before { content: @fa-var-galactic-republic; }
.@{fa-css-prefix}-galactic-senate:before { content: @fa-var-galactic-senate; }
.@{fa-css-prefix}-gamepad:before { content: @fa-var-gamepad; }
.@{fa-css-prefix}-gas-pump:before { content: @fa-var-gas-pump; }
.@{fa-css-prefix}-gas-pump-slash:before { content: @fa-var-gas-pump-slash; }
.@{fa-css-prefix}-gavel:before { content: @fa-var-gavel; }
.@{fa-css-prefix}-gem:before { content: @fa-var-gem; }
.@{fa-css-prefix}-genderless:before { content: @fa-var-genderless; }
.@{fa-css-prefix}-get-pocket:before { content: @fa-var-get-pocket; }
.@{fa-css-prefix}-gg:before { content: @fa-var-gg; }
.@{fa-css-prefix}-gg-circle:before { content: @fa-var-gg-circle; }
.@{fa-css-prefix}-ghost:before { content: @fa-var-ghost; }
.@{fa-css-prefix}-gift:before { content: @fa-var-gift; }
.@{fa-css-prefix}-gift-card:before { content: @fa-var-gift-card; }
.@{fa-css-prefix}-gifts:before { content: @fa-var-gifts; }
.@{fa-css-prefix}-gingerbread-man:before { content: @fa-var-gingerbread-man; }
.@{fa-css-prefix}-git:before { content: @fa-var-git; }
.@{fa-css-prefix}-git-square:before { content: @fa-var-git-square; }
.@{fa-css-prefix}-github:before { content: @fa-var-github; }
.@{fa-css-prefix}-github-alt:before { content: @fa-var-github-alt; }
.@{fa-css-prefix}-github-square:before { content: @fa-var-github-square; }
.@{fa-css-prefix}-gitkraken:before { content: @fa-var-gitkraken; }
.@{fa-css-prefix}-gitlab:before { content: @fa-var-gitlab; }
.@{fa-css-prefix}-gitter:before { content: @fa-var-gitter; }
.@{fa-css-prefix}-glass:before { content: @fa-var-glass; }
.@{fa-css-prefix}-glass-champagne:before { content: @fa-var-glass-champagne; }
.@{fa-css-prefix}-glass-cheers:before { content: @fa-var-glass-cheers; }
.@{fa-css-prefix}-glass-martini:before { content: @fa-var-glass-martini; }
.@{fa-css-prefix}-glass-martini-alt:before { content: @fa-var-glass-martini-alt; }
.@{fa-css-prefix}-glass-whiskey:before { content: @fa-var-glass-whiskey; }
.@{fa-css-prefix}-glass-whiskey-rocks:before { content: @fa-var-glass-whiskey-rocks; }
.@{fa-css-prefix}-glasses:before { content: @fa-var-glasses; }
.@{fa-css-prefix}-glasses-alt:before { content: @fa-var-glasses-alt; }
.@{fa-css-prefix}-glide:before { content: @fa-var-glide; }
.@{fa-css-prefix}-glide-g:before { content: @fa-var-glide-g; }
.@{fa-css-prefix}-globe:before { content: @fa-var-globe; }
.@{fa-css-prefix}-globe-africa:before { content: @fa-var-globe-africa; }
.@{fa-css-prefix}-globe-americas:before { content: @fa-var-globe-americas; }
.@{fa-css-prefix}-globe-asia:before { content: @fa-var-globe-asia; }
.@{fa-css-prefix}-globe-europe:before { content: @fa-var-globe-europe; }
.@{fa-css-prefix}-globe-snow:before { content: @fa-var-globe-snow; }
.@{fa-css-prefix}-globe-stand:before { content: @fa-var-globe-stand; }
.@{fa-css-prefix}-gofore:before { content: @fa-var-gofore; }
.@{fa-css-prefix}-golf-ball:before { content: @fa-var-golf-ball; }
.@{fa-css-prefix}-golf-club:before { content: @fa-var-golf-club; }
.@{fa-css-prefix}-goodreads:before { content: @fa-var-goodreads; }
.@{fa-css-prefix}-goodreads-g:before { content: @fa-var-goodreads-g; }
.@{fa-css-prefix}-google:before { content: @fa-var-google; }
.@{fa-css-prefix}-google-drive:before { content: @fa-var-google-drive; }
.@{fa-css-prefix}-google-play:before { content: @fa-var-google-play; }
.@{fa-css-prefix}-google-plus:before { content: @fa-var-google-plus; }
.@{fa-css-prefix}-google-plus-g:before { content: @fa-var-google-plus-g; }
.@{fa-css-prefix}-google-plus-square:before { content: @fa-var-google-plus-square; }
.@{fa-css-prefix}-google-wallet:before { content: @fa-var-google-wallet; }
.@{fa-css-prefix}-gopuram:before { content: @fa-var-gopuram; }
.@{fa-css-prefix}-graduation-cap:before { content: @fa-var-graduation-cap; }
.@{fa-css-prefix}-gratipay:before { content: @fa-var-gratipay; }
.@{fa-css-prefix}-grav:before { content: @fa-var-grav; }
.@{fa-css-prefix}-greater-than:before { content: @fa-var-greater-than; }
.@{fa-css-prefix}-greater-than-equal:before { content: @fa-var-greater-than-equal; }
.@{fa-css-prefix}-grimace:before { content: @fa-var-grimace; }
.@{fa-css-prefix}-grin:before { content: @fa-var-grin; }
.@{fa-css-prefix}-grin-alt:before { content: @fa-var-grin-alt; }
.@{fa-css-prefix}-grin-beam:before { content: @fa-var-grin-beam; }
.@{fa-css-prefix}-grin-beam-sweat:before { content: @fa-var-grin-beam-sweat; }
.@{fa-css-prefix}-grin-hearts:before { content: @fa-var-grin-hearts; }
.@{fa-css-prefix}-grin-squint:before { content: @fa-var-grin-squint; }
.@{fa-css-prefix}-grin-squint-tears:before { content: @fa-var-grin-squint-tears; }
.@{fa-css-prefix}-grin-stars:before { content: @fa-var-grin-stars; }
.@{fa-css-prefix}-grin-tears:before { content: @fa-var-grin-tears; }
.@{fa-css-prefix}-grin-tongue:before { content: @fa-var-grin-tongue; }
.@{fa-css-prefix}-grin-tongue-squint:before { content: @fa-var-grin-tongue-squint; }
.@{fa-css-prefix}-grin-tongue-wink:before { content: @fa-var-grin-tongue-wink; }
.@{fa-css-prefix}-grin-wink:before { content: @fa-var-grin-wink; }
.@{fa-css-prefix}-grip-horizontal:before { content: @fa-var-grip-horizontal; }
.@{fa-css-prefix}-grip-lines:before { content: @fa-var-grip-lines; }
.@{fa-css-prefix}-grip-lines-vertical:before { content: @fa-var-grip-lines-vertical; }
.@{fa-css-prefix}-grip-vertical:before { content: @fa-var-grip-vertical; }
.@{fa-css-prefix}-gripfire:before { content: @fa-var-gripfire; }
.@{fa-css-prefix}-grunt:before { content: @fa-var-grunt; }
.@{fa-css-prefix}-guitar:before { content: @fa-var-guitar; }
.@{fa-css-prefix}-gulp:before { content: @fa-var-gulp; }
.@{fa-css-prefix}-h-square:before { content: @fa-var-h-square; }
.@{fa-css-prefix}-h1:before { content: @fa-var-h1; }
.@{fa-css-prefix}-h2:before { content: @fa-var-h2; }
.@{fa-css-prefix}-h3:before { content: @fa-var-h3; }
.@{fa-css-prefix}-hacker-news:before { content: @fa-var-hacker-news; }
.@{fa-css-prefix}-hacker-news-square:before { content: @fa-var-hacker-news-square; }
.@{fa-css-prefix}-hackerrank:before { content: @fa-var-hackerrank; }
.@{fa-css-prefix}-hamburger:before { content: @fa-var-hamburger; }
.@{fa-css-prefix}-hammer:before { content: @fa-var-hammer; }
.@{fa-css-prefix}-hammer-war:before { content: @fa-var-hammer-war; }
.@{fa-css-prefix}-hamsa:before { content: @fa-var-hamsa; }
.@{fa-css-prefix}-hand-heart:before { content: @fa-var-hand-heart; }
.@{fa-css-prefix}-hand-holding:before { content: @fa-var-hand-holding; }
.@{fa-css-prefix}-hand-holding-box:before { content: @fa-var-hand-holding-box; }
.@{fa-css-prefix}-hand-holding-heart:before { content: @fa-var-hand-holding-heart; }
.@{fa-css-prefix}-hand-holding-magic:before { content: @fa-var-hand-holding-magic; }
.@{fa-css-prefix}-hand-holding-seedling:before { content: @fa-var-hand-holding-seedling; }
.@{fa-css-prefix}-hand-holding-usd:before { content: @fa-var-hand-holding-usd; }
.@{fa-css-prefix}-hand-holding-water:before { content: @fa-var-hand-holding-water; }
.@{fa-css-prefix}-hand-lizard:before { content: @fa-var-hand-lizard; }
.@{fa-css-prefix}-hand-middle-finger:before { content: @fa-var-hand-middle-finger; }
.@{fa-css-prefix}-hand-paper:before { content: @fa-var-hand-paper; }
.@{fa-css-prefix}-hand-peace:before { content: @fa-var-hand-peace; }
.@{fa-css-prefix}-hand-point-down:before { content: @fa-var-hand-point-down; }
.@{fa-css-prefix}-hand-point-left:before { content: @fa-var-hand-point-left; }
.@{fa-css-prefix}-hand-point-right:before { content: @fa-var-hand-point-right; }
.@{fa-css-prefix}-hand-point-up:before { content: @fa-var-hand-point-up; }
.@{fa-css-prefix}-hand-pointer:before { content: @fa-var-hand-pointer; }
.@{fa-css-prefix}-hand-receiving:before { content: @fa-var-hand-receiving; }
.@{fa-css-prefix}-hand-rock:before { content: @fa-var-hand-rock; }
.@{fa-css-prefix}-hand-scissors:before { content: @fa-var-hand-scissors; }
.@{fa-css-prefix}-hand-spock:before { content: @fa-var-hand-spock; }
.@{fa-css-prefix}-hands:before { content: @fa-var-hands; }
.@{fa-css-prefix}-hands-heart:before { content: @fa-var-hands-heart; }
.@{fa-css-prefix}-hands-helping:before { content: @fa-var-hands-helping; }
.@{fa-css-prefix}-hands-usd:before { content: @fa-var-hands-usd; }
.@{fa-css-prefix}-handshake:before { content: @fa-var-handshake; }
.@{fa-css-prefix}-handshake-alt:before { content: @fa-var-handshake-alt; }
.@{fa-css-prefix}-hanukiah:before { content: @fa-var-hanukiah; }
.@{fa-css-prefix}-hard-hat:before { content: @fa-var-hard-hat; }
.@{fa-css-prefix}-hashtag:before { content: @fa-var-hashtag; }
.@{fa-css-prefix}-hat-santa:before { content: @fa-var-hat-santa; }
.@{fa-css-prefix}-hat-winter:before { content: @fa-var-hat-winter; }
.@{fa-css-prefix}-hat-witch:before { content: @fa-var-hat-witch; }
.@{fa-css-prefix}-hat-wizard:before { content: @fa-var-hat-wizard; }
.@{fa-css-prefix}-haykal:before { content: @fa-var-haykal; }
.@{fa-css-prefix}-hdd:before { content: @fa-var-hdd; }
.@{fa-css-prefix}-head-side:before { content: @fa-var-head-side; }
.@{fa-css-prefix}-head-side-brain:before { content: @fa-var-head-side-brain; }
.@{fa-css-prefix}-head-side-medical:before { content: @fa-var-head-side-medical; }
.@{fa-css-prefix}-head-vr:before { content: @fa-var-head-vr; }
.@{fa-css-prefix}-heading:before { content: @fa-var-heading; }
.@{fa-css-prefix}-headphones:before { content: @fa-var-headphones; }
.@{fa-css-prefix}-headphones-alt:before { content: @fa-var-headphones-alt; }
.@{fa-css-prefix}-headset:before { content: @fa-var-headset; }
.@{fa-css-prefix}-heart:before { content: @fa-var-heart; }
.@{fa-css-prefix}-heart-broken:before { content: @fa-var-heart-broken; }
.@{fa-css-prefix}-heart-circle:before { content: @fa-var-heart-circle; }
.@{fa-css-prefix}-heart-rate:before { content: @fa-var-heart-rate; }
.@{fa-css-prefix}-heart-square:before { content: @fa-var-heart-square; }
.@{fa-css-prefix}-heartbeat:before { content: @fa-var-heartbeat; }
.@{fa-css-prefix}-helicopter:before { content: @fa-var-helicopter; }
.@{fa-css-prefix}-helmet-battle:before { content: @fa-var-helmet-battle; }
.@{fa-css-prefix}-hexagon:before { content: @fa-var-hexagon; }
.@{fa-css-prefix}-highlighter:before { content: @fa-var-highlighter; }
.@{fa-css-prefix}-hiking:before { content: @fa-var-hiking; }
.@{fa-css-prefix}-hippo:before { content: @fa-var-hippo; }
.@{fa-css-prefix}-hips:before { content: @fa-var-hips; }
.@{fa-css-prefix}-hire-a-helper:before { content: @fa-var-hire-a-helper; }
.@{fa-css-prefix}-history:before { content: @fa-var-history; }
.@{fa-css-prefix}-hockey-mask:before { content: @fa-var-hockey-mask; }
.@{fa-css-prefix}-hockey-puck:before { content: @fa-var-hockey-puck; }
.@{fa-css-prefix}-hockey-sticks:before { content: @fa-var-hockey-sticks; }
.@{fa-css-prefix}-holly-berry:before { content: @fa-var-holly-berry; }
.@{fa-css-prefix}-home:before { content: @fa-var-home; }
.@{fa-css-prefix}-home-alt:before { content: @fa-var-home-alt; }
.@{fa-css-prefix}-home-heart:before { content: @fa-var-home-heart; }
.@{fa-css-prefix}-home-lg:before { content: @fa-var-home-lg; }
.@{fa-css-prefix}-home-lg-alt:before { content: @fa-var-home-lg-alt; }
.@{fa-css-prefix}-hood-cloak:before { content: @fa-var-hood-cloak; }
.@{fa-css-prefix}-hooli:before { content: @fa-var-hooli; }
.@{fa-css-prefix}-hornbill:before { content: @fa-var-hornbill; }
.@{fa-css-prefix}-horse:before { content: @fa-var-horse; }
.@{fa-css-prefix}-horse-head:before { content: @fa-var-horse-head; }
.@{fa-css-prefix}-hospital:before { content: @fa-var-hospital; }
.@{fa-css-prefix}-hospital-alt:before { content: @fa-var-hospital-alt; }
.@{fa-css-prefix}-hospital-symbol:before { content: @fa-var-hospital-symbol; }
.@{fa-css-prefix}-hospital-user:before { content: @fa-var-hospital-user; }
.@{fa-css-prefix}-hospitals:before { content: @fa-var-hospitals; }
.@{fa-css-prefix}-hot-tub:before { content: @fa-var-hot-tub; }
.@{fa-css-prefix}-hotdog:before { content: @fa-var-hotdog; }
.@{fa-css-prefix}-hotel:before { content: @fa-var-hotel; }
.@{fa-css-prefix}-hotjar:before { content: @fa-var-hotjar; }
.@{fa-css-prefix}-hourglass:before { content: @fa-var-hourglass; }
.@{fa-css-prefix}-hourglass-end:before { content: @fa-var-hourglass-end; }
.@{fa-css-prefix}-hourglass-half:before { content: @fa-var-hourglass-half; }
.@{fa-css-prefix}-hourglass-start:before { content: @fa-var-hourglass-start; }
.@{fa-css-prefix}-house-damage:before { content: @fa-var-house-damage; }
.@{fa-css-prefix}-house-flood:before { content: @fa-var-house-flood; }
.@{fa-css-prefix}-houzz:before { content: @fa-var-houzz; }
.@{fa-css-prefix}-hryvnia:before { content: @fa-var-hryvnia; }
.@{fa-css-prefix}-html5:before { content: @fa-var-html5; }
.@{fa-css-prefix}-hubspot:before { content: @fa-var-hubspot; }
.@{fa-css-prefix}-humidity:before { content: @fa-var-humidity; }
.@{fa-css-prefix}-hurricane:before { content: @fa-var-hurricane; }
.@{fa-css-prefix}-i-cursor:before { content: @fa-var-i-cursor; }
.@{fa-css-prefix}-ice-cream:before { content: @fa-var-ice-cream; }
.@{fa-css-prefix}-ice-skate:before { content: @fa-var-ice-skate; }
.@{fa-css-prefix}-icicles:before { content: @fa-var-icicles; }
.@{fa-css-prefix}-id-badge:before { content: @fa-var-id-badge; }
.@{fa-css-prefix}-id-card:before { content: @fa-var-id-card; }
.@{fa-css-prefix}-id-card-alt:before { content: @fa-var-id-card-alt; }
.@{fa-css-prefix}-igloo:before { content: @fa-var-igloo; }
.@{fa-css-prefix}-image:before { content: @fa-var-image; }
.@{fa-css-prefix}-images:before { content: @fa-var-images; }
.@{fa-css-prefix}-imdb:before { content: @fa-var-imdb; }
.@{fa-css-prefix}-inbox:before { content: @fa-var-inbox; }
.@{fa-css-prefix}-inbox-in:before { content: @fa-var-inbox-in; }
.@{fa-css-prefix}-inbox-out:before { content: @fa-var-inbox-out; }
.@{fa-css-prefix}-indent:before { content: @fa-var-indent; }
.@{fa-css-prefix}-industry:before { content: @fa-var-industry; }
.@{fa-css-prefix}-industry-alt:before { content: @fa-var-industry-alt; }
.@{fa-css-prefix}-infinity:before { content: @fa-var-infinity; }
.@{fa-css-prefix}-info:before { content: @fa-var-info; }
.@{fa-css-prefix}-info-circle:before { content: @fa-var-info-circle; }
.@{fa-css-prefix}-info-square:before { content: @fa-var-info-square; }
.@{fa-css-prefix}-inhaler:before { content: @fa-var-inhaler; }
.@{fa-css-prefix}-instagram:before { content: @fa-var-instagram; }
.@{fa-css-prefix}-integral:before { content: @fa-var-integral; }
.@{fa-css-prefix}-intercom:before { content: @fa-var-intercom; }
.@{fa-css-prefix}-internet-explorer:before { content: @fa-var-internet-explorer; }
.@{fa-css-prefix}-intersection:before { content: @fa-var-intersection; }
.@{fa-css-prefix}-inventory:before { content: @fa-var-inventory; }
.@{fa-css-prefix}-invision:before { content: @fa-var-invision; }
.@{fa-css-prefix}-ioxhost:before { content: @fa-var-ioxhost; }
.@{fa-css-prefix}-island-tropical:before { content: @fa-var-island-tropical; }
.@{fa-css-prefix}-italic:before { content: @fa-var-italic; }
.@{fa-css-prefix}-itunes:before { content: @fa-var-itunes; }
.@{fa-css-prefix}-itunes-note:before { content: @fa-var-itunes-note; }
.@{fa-css-prefix}-jack-o-lantern:before { content: @fa-var-jack-o-lantern; }
.@{fa-css-prefix}-java:before { content: @fa-var-java; }
.@{fa-css-prefix}-jedi:before { content: @fa-var-jedi; }
.@{fa-css-prefix}-jedi-order:before { content: @fa-var-jedi-order; }
.@{fa-css-prefix}-jenkins:before { content: @fa-var-jenkins; }
.@{fa-css-prefix}-jira:before { content: @fa-var-jira; }
.@{fa-css-prefix}-joget:before { content: @fa-var-joget; }
.@{fa-css-prefix}-joint:before { content: @fa-var-joint; }
.@{fa-css-prefix}-joomla:before { content: @fa-var-joomla; }
.@{fa-css-prefix}-journal-whills:before { content: @fa-var-journal-whills; }
.@{fa-css-prefix}-js:before { content: @fa-var-js; }
.@{fa-css-prefix}-js-square:before { content: @fa-var-js-square; }
.@{fa-css-prefix}-jsfiddle:before { content: @fa-var-jsfiddle; }
.@{fa-css-prefix}-kaaba:before { content: @fa-var-kaaba; }
.@{fa-css-prefix}-kaggle:before { content: @fa-var-kaggle; }
.@{fa-css-prefix}-key:before { content: @fa-var-key; }
.@{fa-css-prefix}-key-skeleton:before { content: @fa-var-key-skeleton; }
.@{fa-css-prefix}-keybase:before { content: @fa-var-keybase; }
.@{fa-css-prefix}-keyboard:before { content: @fa-var-keyboard; }
.@{fa-css-prefix}-keycdn:before { content: @fa-var-keycdn; }
.@{fa-css-prefix}-keynote:before { content: @fa-var-keynote; }
.@{fa-css-prefix}-khanda:before { content: @fa-var-khanda; }
.@{fa-css-prefix}-kickstarter:before { content: @fa-var-kickstarter; }
.@{fa-css-prefix}-kickstarter-k:before { content: @fa-var-kickstarter-k; }
.@{fa-css-prefix}-kidneys:before { content: @fa-var-kidneys; }
.@{fa-css-prefix}-kiss:before { content: @fa-var-kiss; }
.@{fa-css-prefix}-kiss-beam:before { content: @fa-var-kiss-beam; }
.@{fa-css-prefix}-kiss-wink-heart:before { content: @fa-var-kiss-wink-heart; }
.@{fa-css-prefix}-kite:before { content: @fa-var-kite; }
.@{fa-css-prefix}-kiwi-bird:before { content: @fa-var-kiwi-bird; }
.@{fa-css-prefix}-knife-kitchen:before { content: @fa-var-knife-kitchen; }
.@{fa-css-prefix}-korvue:before { content: @fa-var-korvue; }
.@{fa-css-prefix}-lambda:before { content: @fa-var-lambda; }
.@{fa-css-prefix}-lamp:before { content: @fa-var-lamp; }
.@{fa-css-prefix}-landmark:before { content: @fa-var-landmark; }
.@{fa-css-prefix}-landmark-alt:before { content: @fa-var-landmark-alt; }
.@{fa-css-prefix}-language:before { content: @fa-var-language; }
.@{fa-css-prefix}-laptop:before { content: @fa-var-laptop; }
.@{fa-css-prefix}-laptop-code:before { content: @fa-var-laptop-code; }
.@{fa-css-prefix}-laptop-medical:before { content: @fa-var-laptop-medical; }
.@{fa-css-prefix}-laravel:before { content: @fa-var-laravel; }
.@{fa-css-prefix}-lastfm:before { content: @fa-var-lastfm; }
.@{fa-css-prefix}-lastfm-square:before { content: @fa-var-lastfm-square; }
.@{fa-css-prefix}-laugh:before { content: @fa-var-laugh; }
.@{fa-css-prefix}-laugh-beam:before { content: @fa-var-laugh-beam; }
.@{fa-css-prefix}-laugh-squint:before { content: @fa-var-laugh-squint; }
.@{fa-css-prefix}-laugh-wink:before { content: @fa-var-laugh-wink; }
.@{fa-css-prefix}-layer-group:before { content: @fa-var-layer-group; }
.@{fa-css-prefix}-layer-minus:before { content: @fa-var-layer-minus; }
.@{fa-css-prefix}-layer-plus:before { content: @fa-var-layer-plus; }
.@{fa-css-prefix}-leaf:before { content: @fa-var-leaf; }
.@{fa-css-prefix}-leaf-heart:before { content: @fa-var-leaf-heart; }
.@{fa-css-prefix}-leaf-maple:before { content: @fa-var-leaf-maple; }
.@{fa-css-prefix}-leaf-oak:before { content: @fa-var-leaf-oak; }
.@{fa-css-prefix}-leanpub:before { content: @fa-var-leanpub; }
.@{fa-css-prefix}-lemon:before { content: @fa-var-lemon; }
.@{fa-css-prefix}-less:before { content: @fa-var-less; }
.@{fa-css-prefix}-less-than:before { content: @fa-var-less-than; }
.@{fa-css-prefix}-less-than-equal:before { content: @fa-var-less-than-equal; }
.@{fa-css-prefix}-level-down:before { content: @fa-var-level-down; }
.@{fa-css-prefix}-level-down-alt:before { content: @fa-var-level-down-alt; }
.@{fa-css-prefix}-level-up:before { content: @fa-var-level-up; }
.@{fa-css-prefix}-level-up-alt:before { content: @fa-var-level-up-alt; }
.@{fa-css-prefix}-life-ring:before { content: @fa-var-life-ring; }
.@{fa-css-prefix}-lightbulb:before { content: @fa-var-lightbulb; }
.@{fa-css-prefix}-lightbulb-dollar:before { content: @fa-var-lightbulb-dollar; }
.@{fa-css-prefix}-lightbulb-exclamation:before { content: @fa-var-lightbulb-exclamation; }
.@{fa-css-prefix}-lightbulb-on:before { content: @fa-var-lightbulb-on; }
.@{fa-css-prefix}-lightbulb-slash:before { content: @fa-var-lightbulb-slash; }
.@{fa-css-prefix}-lights-holiday:before { content: @fa-var-lights-holiday; }
.@{fa-css-prefix}-line:before { content: @fa-var-line; }
.@{fa-css-prefix}-link:before { content: @fa-var-link; }
.@{fa-css-prefix}-linkedin:before { content: @fa-var-linkedin; }
.@{fa-css-prefix}-linkedin-in:before { content: @fa-var-linkedin-in; }
.@{fa-css-prefix}-linode:before { content: @fa-var-linode; }
.@{fa-css-prefix}-linux:before { content: @fa-var-linux; }
.@{fa-css-prefix}-lips:before { content: @fa-var-lips; }
.@{fa-css-prefix}-lira-sign:before { content: @fa-var-lira-sign; }
.@{fa-css-prefix}-list:before { content: @fa-var-list; }
.@{fa-css-prefix}-list-alt:before { content: @fa-var-list-alt; }
.@{fa-css-prefix}-list-ol:before { content: @fa-var-list-ol; }
.@{fa-css-prefix}-list-ul:before { content: @fa-var-list-ul; }
.@{fa-css-prefix}-location:before { content: @fa-var-location; }
.@{fa-css-prefix}-location-arrow:before { content: @fa-var-location-arrow; }
.@{fa-css-prefix}-location-circle:before { content: @fa-var-location-circle; }
.@{fa-css-prefix}-location-slash:before { content: @fa-var-location-slash; }
.@{fa-css-prefix}-lock:before { content: @fa-var-lock; }
.@{fa-css-prefix}-lock-alt:before { content: @fa-var-lock-alt; }
.@{fa-css-prefix}-lock-open:before { content: @fa-var-lock-open; }
.@{fa-css-prefix}-lock-open-alt:before { content: @fa-var-lock-open-alt; }
.@{fa-css-prefix}-long-arrow-alt-down:before { content: @fa-var-long-arrow-alt-down; }
.@{fa-css-prefix}-long-arrow-alt-left:before { content: @fa-var-long-arrow-alt-left; }
.@{fa-css-prefix}-long-arrow-alt-right:before { content: @fa-var-long-arrow-alt-right; }
.@{fa-css-prefix}-long-arrow-alt-up:before { content: @fa-var-long-arrow-alt-up; }
.@{fa-css-prefix}-long-arrow-down:before { content: @fa-var-long-arrow-down; }
.@{fa-css-prefix}-long-arrow-left:before { content: @fa-var-long-arrow-left; }
.@{fa-css-prefix}-long-arrow-right:before { content: @fa-var-long-arrow-right; }
.@{fa-css-prefix}-long-arrow-up:before { content: @fa-var-long-arrow-up; }
.@{fa-css-prefix}-loveseat:before { content: @fa-var-loveseat; }
.@{fa-css-prefix}-low-vision:before { content: @fa-var-low-vision; }
.@{fa-css-prefix}-luchador:before { content: @fa-var-luchador; }
.@{fa-css-prefix}-luggage-cart:before { content: @fa-var-luggage-cart; }
.@{fa-css-prefix}-lungs:before { content: @fa-var-lungs; }
.@{fa-css-prefix}-lyft:before { content: @fa-var-lyft; }
.@{fa-css-prefix}-mace:before { content: @fa-var-mace; }
.@{fa-css-prefix}-magento:before { content: @fa-var-magento; }
.@{fa-css-prefix}-magic:before { content: @fa-var-magic; }
.@{fa-css-prefix}-magnet:before { content: @fa-var-magnet; }
.@{fa-css-prefix}-mail-bulk:before { content: @fa-var-mail-bulk; }
.@{fa-css-prefix}-mailbox:before { content: @fa-var-mailbox; }
.@{fa-css-prefix}-mailchimp:before { content: @fa-var-mailchimp; }
.@{fa-css-prefix}-male:before { content: @fa-var-male; }
.@{fa-css-prefix}-mandalorian:before { content: @fa-var-mandalorian; }
.@{fa-css-prefix}-mandolin:before { content: @fa-var-mandolin; }
.@{fa-css-prefix}-map:before { content: @fa-var-map; }
.@{fa-css-prefix}-map-marked:before { content: @fa-var-map-marked; }
.@{fa-css-prefix}-map-marked-alt:before { content: @fa-var-map-marked-alt; }
.@{fa-css-prefix}-map-marker:before { content: @fa-var-map-marker; }
.@{fa-css-prefix}-map-marker-alt:before { content: @fa-var-map-marker-alt; }
.@{fa-css-prefix}-map-marker-alt-slash:before { content: @fa-var-map-marker-alt-slash; }
.@{fa-css-prefix}-map-marker-check:before { content: @fa-var-map-marker-check; }
.@{fa-css-prefix}-map-marker-edit:before { content: @fa-var-map-marker-edit; }
.@{fa-css-prefix}-map-marker-exclamation:before { content: @fa-var-map-marker-exclamation; }
.@{fa-css-prefix}-map-marker-minus:before { content: @fa-var-map-marker-minus; }
.@{fa-css-prefix}-map-marker-plus:before { content: @fa-var-map-marker-plus; }
.@{fa-css-prefix}-map-marker-question:before { content: @fa-var-map-marker-question; }
.@{fa-css-prefix}-map-marker-slash:before { content: @fa-var-map-marker-slash; }
.@{fa-css-prefix}-map-marker-smile:before { content: @fa-var-map-marker-smile; }
.@{fa-css-prefix}-map-marker-times:before { content: @fa-var-map-marker-times; }
.@{fa-css-prefix}-map-pin:before { content: @fa-var-map-pin; }
.@{fa-css-prefix}-map-signs:before { content: @fa-var-map-signs; }
.@{fa-css-prefix}-markdown:before { content: @fa-var-markdown; }
.@{fa-css-prefix}-marker:before { content: @fa-var-marker; }
.@{fa-css-prefix}-mars:before { content: @fa-var-mars; }
.@{fa-css-prefix}-mars-double:before { content: @fa-var-mars-double; }
.@{fa-css-prefix}-mars-stroke:before { content: @fa-var-mars-stroke; }
.@{fa-css-prefix}-mars-stroke-h:before { content: @fa-var-mars-stroke-h; }
.@{fa-css-prefix}-mars-stroke-v:before { content: @fa-var-mars-stroke-v; }
.@{fa-css-prefix}-mask:before { content: @fa-var-mask; }
.@{fa-css-prefix}-mastodon:before { content: @fa-var-mastodon; }
.@{fa-css-prefix}-maxcdn:before { content: @fa-var-maxcdn; }
.@{fa-css-prefix}-meat:before { content: @fa-var-meat; }
.@{fa-css-prefix}-medal:before { content: @fa-var-medal; }
.@{fa-css-prefix}-medapps:before { content: @fa-var-medapps; }
.@{fa-css-prefix}-medium:before { content: @fa-var-medium; }
.@{fa-css-prefix}-medium-m:before { content: @fa-var-medium-m; }
.@{fa-css-prefix}-medkit:before { content: @fa-var-medkit; }
.@{fa-css-prefix}-medrt:before { content: @fa-var-medrt; }
.@{fa-css-prefix}-meetup:before { content: @fa-var-meetup; }
.@{fa-css-prefix}-megaphone:before { content: @fa-var-megaphone; }
.@{fa-css-prefix}-megaport:before { content: @fa-var-megaport; }
.@{fa-css-prefix}-meh:before { content: @fa-var-meh; }
.@{fa-css-prefix}-meh-blank:before { content: @fa-var-meh-blank; }
.@{fa-css-prefix}-meh-rolling-eyes:before { content: @fa-var-meh-rolling-eyes; }
.@{fa-css-prefix}-memory:before { content: @fa-var-memory; }
.@{fa-css-prefix}-mendeley:before { content: @fa-var-mendeley; }
.@{fa-css-prefix}-menorah:before { content: @fa-var-menorah; }
.@{fa-css-prefix}-mercury:before { content: @fa-var-mercury; }
.@{fa-css-prefix}-meteor:before { content: @fa-var-meteor; }
.@{fa-css-prefix}-microchip:before { content: @fa-var-microchip; }
.@{fa-css-prefix}-microphone:before { content: @fa-var-microphone; }
.@{fa-css-prefix}-microphone-alt:before { content: @fa-var-microphone-alt; }
.@{fa-css-prefix}-microphone-alt-slash:before { content: @fa-var-microphone-alt-slash; }
.@{fa-css-prefix}-microphone-slash:before { content: @fa-var-microphone-slash; }
.@{fa-css-prefix}-microscope:before { content: @fa-var-microscope; }
.@{fa-css-prefix}-microsoft:before { content: @fa-var-microsoft; }
.@{fa-css-prefix}-mind-share:before { content: @fa-var-mind-share; }
.@{fa-css-prefix}-minus:before { content: @fa-var-minus; }
.@{fa-css-prefix}-minus-circle:before { content: @fa-var-minus-circle; }
.@{fa-css-prefix}-minus-hexagon:before { content: @fa-var-minus-hexagon; }
.@{fa-css-prefix}-minus-octagon:before { content: @fa-var-minus-octagon; }
.@{fa-css-prefix}-minus-square:before { content: @fa-var-minus-square; }
.@{fa-css-prefix}-mistletoe:before { content: @fa-var-mistletoe; }
.@{fa-css-prefix}-mitten:before { content: @fa-var-mitten; }
.@{fa-css-prefix}-mix:before { content: @fa-var-mix; }
.@{fa-css-prefix}-mixcloud:before { content: @fa-var-mixcloud; }
.@{fa-css-prefix}-mizuni:before { content: @fa-var-mizuni; }
.@{fa-css-prefix}-mobile:before { content: @fa-var-mobile; }
.@{fa-css-prefix}-mobile-alt:before { content: @fa-var-mobile-alt; }
.@{fa-css-prefix}-mobile-android:before { content: @fa-var-mobile-android; }
.@{fa-css-prefix}-mobile-android-alt:before { content: @fa-var-mobile-android-alt; }
.@{fa-css-prefix}-modx:before { content: @fa-var-modx; }
.@{fa-css-prefix}-monero:before { content: @fa-var-monero; }
.@{fa-css-prefix}-money-bill:before { content: @fa-var-money-bill; }
.@{fa-css-prefix}-money-bill-alt:before { content: @fa-var-money-bill-alt; }
.@{fa-css-prefix}-money-bill-wave:before { content: @fa-var-money-bill-wave; }
.@{fa-css-prefix}-money-bill-wave-alt:before { content: @fa-var-money-bill-wave-alt; }
.@{fa-css-prefix}-money-check:before { content: @fa-var-money-check; }
.@{fa-css-prefix}-money-check-alt:before { content: @fa-var-money-check-alt; }
.@{fa-css-prefix}-monitor-heart-rate:before { content: @fa-var-monitor-heart-rate; }
.@{fa-css-prefix}-monkey:before { content: @fa-var-monkey; }
.@{fa-css-prefix}-monument:before { content: @fa-var-monument; }
.@{fa-css-prefix}-moon:before { content: @fa-var-moon; }
.@{fa-css-prefix}-moon-cloud:before { content: @fa-var-moon-cloud; }
.@{fa-css-prefix}-moon-stars:before { content: @fa-var-moon-stars; }
.@{fa-css-prefix}-mortar-pestle:before { content: @fa-var-mortar-pestle; }
.@{fa-css-prefix}-mosque:before { content: @fa-var-mosque; }
.@{fa-css-prefix}-motorcycle:before { content: @fa-var-motorcycle; }
.@{fa-css-prefix}-mountain:before { content: @fa-var-mountain; }
.@{fa-css-prefix}-mountains:before { content: @fa-var-mountains; }
.@{fa-css-prefix}-mouse-pointer:before { content: @fa-var-mouse-pointer; }
.@{fa-css-prefix}-mug-hot:before { content: @fa-var-mug-hot; }
.@{fa-css-prefix}-mug-marshmallows:before { content: @fa-var-mug-marshmallows; }
.@{fa-css-prefix}-music:before { content: @fa-var-music; }
.@{fa-css-prefix}-napster:before { content: @fa-var-napster; }
.@{fa-css-prefix}-narwhal:before { content: @fa-var-narwhal; }
.@{fa-css-prefix}-neos:before { content: @fa-var-neos; }
.@{fa-css-prefix}-network-wired:before { content: @fa-var-network-wired; }
.@{fa-css-prefix}-neuter:before { content: @fa-var-neuter; }
.@{fa-css-prefix}-newspaper:before { content: @fa-var-newspaper; }
.@{fa-css-prefix}-nimblr:before { content: @fa-var-nimblr; }
.@{fa-css-prefix}-nintendo-switch:before { content: @fa-var-nintendo-switch; }
.@{fa-css-prefix}-node:before { content: @fa-var-node; }
.@{fa-css-prefix}-node-js:before { content: @fa-var-node-js; }
.@{fa-css-prefix}-not-equal:before { content: @fa-var-not-equal; }
.@{fa-css-prefix}-notes-medical:before { content: @fa-var-notes-medical; }
.@{fa-css-prefix}-npm:before { content: @fa-var-npm; }
.@{fa-css-prefix}-ns8:before { content: @fa-var-ns8; }
.@{fa-css-prefix}-nutritionix:before { content: @fa-var-nutritionix; }
.@{fa-css-prefix}-object-group:before { content: @fa-var-object-group; }
.@{fa-css-prefix}-object-ungroup:before { content: @fa-var-object-ungroup; }
.@{fa-css-prefix}-octagon:before { content: @fa-var-octagon; }
.@{fa-css-prefix}-odnoklassniki:before { content: @fa-var-odnoklassniki; }
.@{fa-css-prefix}-odnoklassniki-square:before { content: @fa-var-odnoklassniki-square; }
.@{fa-css-prefix}-oil-can:before { content: @fa-var-oil-can; }
.@{fa-css-prefix}-oil-temp:before { content: @fa-var-oil-temp; }
.@{fa-css-prefix}-old-republic:before { content: @fa-var-old-republic; }
.@{fa-css-prefix}-om:before { content: @fa-var-om; }
.@{fa-css-prefix}-omega:before { content: @fa-var-omega; }
.@{fa-css-prefix}-opencart:before { content: @fa-var-opencart; }
.@{fa-css-prefix}-openid:before { content: @fa-var-openid; }
.@{fa-css-prefix}-opera:before { content: @fa-var-opera; }
.@{fa-css-prefix}-optin-monster:before { content: @fa-var-optin-monster; }
.@{fa-css-prefix}-ornament:before { content: @fa-var-ornament; }
.@{fa-css-prefix}-osi:before { content: @fa-var-osi; }
.@{fa-css-prefix}-otter:before { content: @fa-var-otter; }
.@{fa-css-prefix}-outdent:before { content: @fa-var-outdent; }
.@{fa-css-prefix}-page4:before { content: @fa-var-page4; }
.@{fa-css-prefix}-pagelines:before { content: @fa-var-pagelines; }
.@{fa-css-prefix}-pager:before { content: @fa-var-pager; }
.@{fa-css-prefix}-paint-brush:before { content: @fa-var-paint-brush; }
.@{fa-css-prefix}-paint-brush-alt:before { content: @fa-var-paint-brush-alt; }
.@{fa-css-prefix}-paint-roller:before { content: @fa-var-paint-roller; }
.@{fa-css-prefix}-palette:before { content: @fa-var-palette; }
.@{fa-css-prefix}-palfed:before { content: @fa-var-palfed; }
.@{fa-css-prefix}-pallet:before { content: @fa-var-pallet; }
.@{fa-css-prefix}-pallet-alt:before { content: @fa-var-pallet-alt; }
.@{fa-css-prefix}-paper-plane:before { content: @fa-var-paper-plane; }
.@{fa-css-prefix}-paperclip:before { content: @fa-var-paperclip; }
.@{fa-css-prefix}-parachute-box:before { content: @fa-var-parachute-box; }
.@{fa-css-prefix}-paragraph:before { content: @fa-var-paragraph; }
.@{fa-css-prefix}-parking:before { content: @fa-var-parking; }
.@{fa-css-prefix}-parking-circle:before { content: @fa-var-parking-circle; }
.@{fa-css-prefix}-parking-circle-slash:before { content: @fa-var-parking-circle-slash; }
.@{fa-css-prefix}-parking-slash:before { content: @fa-var-parking-slash; }
.@{fa-css-prefix}-passport:before { content: @fa-var-passport; }
.@{fa-css-prefix}-pastafarianism:before { content: @fa-var-pastafarianism; }
.@{fa-css-prefix}-paste:before { content: @fa-var-paste; }
.@{fa-css-prefix}-patreon:before { content: @fa-var-patreon; }
.@{fa-css-prefix}-pause:before { content: @fa-var-pause; }
.@{fa-css-prefix}-pause-circle:before { content: @fa-var-pause-circle; }
.@{fa-css-prefix}-paw:before { content: @fa-var-paw; }
.@{fa-css-prefix}-paw-alt:before { content: @fa-var-paw-alt; }
.@{fa-css-prefix}-paw-claws:before { content: @fa-var-paw-claws; }
.@{fa-css-prefix}-paypal:before { content: @fa-var-paypal; }
.@{fa-css-prefix}-peace:before { content: @fa-var-peace; }
.@{fa-css-prefix}-pegasus:before { content: @fa-var-pegasus; }
.@{fa-css-prefix}-pen:before { content: @fa-var-pen; }
.@{fa-css-prefix}-pen-alt:before { content: @fa-var-pen-alt; }
.@{fa-css-prefix}-pen-fancy:before { content: @fa-var-pen-fancy; }
.@{fa-css-prefix}-pen-nib:before { content: @fa-var-pen-nib; }
.@{fa-css-prefix}-pen-square:before { content: @fa-var-pen-square; }
.@{fa-css-prefix}-pencil:before { content: @fa-var-pencil; }
.@{fa-css-prefix}-pencil-alt:before { content: @fa-var-pencil-alt; }
.@{fa-css-prefix}-pencil-paintbrush:before { content: @fa-var-pencil-paintbrush; }
.@{fa-css-prefix}-pencil-ruler:before { content: @fa-var-pencil-ruler; }
.@{fa-css-prefix}-pennant:before { content: @fa-var-pennant; }
.@{fa-css-prefix}-penny-arcade:before { content: @fa-var-penny-arcade; }
.@{fa-css-prefix}-people-carry:before { content: @fa-var-people-carry; }
.@{fa-css-prefix}-pepper-hot:before { content: @fa-var-pepper-hot; }
.@{fa-css-prefix}-percent:before { content: @fa-var-percent; }
.@{fa-css-prefix}-percentage:before { content: @fa-var-percentage; }
.@{fa-css-prefix}-periscope:before { content: @fa-var-periscope; }
.@{fa-css-prefix}-person-booth:before { content: @fa-var-person-booth; }
.@{fa-css-prefix}-person-carry:before { content: @fa-var-person-carry; }
.@{fa-css-prefix}-person-dolly:before { content: @fa-var-person-dolly; }
.@{fa-css-prefix}-person-dolly-empty:before { content: @fa-var-person-dolly-empty; }
.@{fa-css-prefix}-person-sign:before { content: @fa-var-person-sign; }
.@{fa-css-prefix}-phabricator:before { content: @fa-var-phabricator; }
.@{fa-css-prefix}-phoenix-framework:before { content: @fa-var-phoenix-framework; }
.@{fa-css-prefix}-phoenix-squadron:before { content: @fa-var-phoenix-squadron; }
.@{fa-css-prefix}-phone:before { content: @fa-var-phone; }
.@{fa-css-prefix}-phone-office:before { content: @fa-var-phone-office; }
.@{fa-css-prefix}-phone-plus:before { content: @fa-var-phone-plus; }
.@{fa-css-prefix}-phone-slash:before { content: @fa-var-phone-slash; }
.@{fa-css-prefix}-phone-square:before { content: @fa-var-phone-square; }
.@{fa-css-prefix}-phone-volume:before { content: @fa-var-phone-volume; }
.@{fa-css-prefix}-php:before { content: @fa-var-php; }
.@{fa-css-prefix}-pi:before { content: @fa-var-pi; }
.@{fa-css-prefix}-pie:before { content: @fa-var-pie; }
.@{fa-css-prefix}-pied-piper:before { content: @fa-var-pied-piper; }
.@{fa-css-prefix}-pied-piper-alt:before { content: @fa-var-pied-piper-alt; }
.@{fa-css-prefix}-pied-piper-hat:before { content: @fa-var-pied-piper-hat; }
.@{fa-css-prefix}-pied-piper-pp:before { content: @fa-var-pied-piper-pp; }
.@{fa-css-prefix}-pig:before { content: @fa-var-pig; }
.@{fa-css-prefix}-piggy-bank:before { content: @fa-var-piggy-bank; }
.@{fa-css-prefix}-pills:before { content: @fa-var-pills; }
.@{fa-css-prefix}-pinterest:before { content: @fa-var-pinterest; }
.@{fa-css-prefix}-pinterest-p:before { content: @fa-var-pinterest-p; }
.@{fa-css-prefix}-pinterest-square:before { content: @fa-var-pinterest-square; }
.@{fa-css-prefix}-pizza:before { content: @fa-var-pizza; }
.@{fa-css-prefix}-pizza-slice:before { content: @fa-var-pizza-slice; }
.@{fa-css-prefix}-place-of-worship:before { content: @fa-var-place-of-worship; }
.@{fa-css-prefix}-plane:before { content: @fa-var-plane; }
.@{fa-css-prefix}-plane-alt:before { content: @fa-var-plane-alt; }
.@{fa-css-prefix}-plane-arrival:before { content: @fa-var-plane-arrival; }
.@{fa-css-prefix}-plane-departure:before { content: @fa-var-plane-departure; }
.@{fa-css-prefix}-play:before { content: @fa-var-play; }
.@{fa-css-prefix}-play-circle:before { content: @fa-var-play-circle; }
.@{fa-css-prefix}-playstation:before { content: @fa-var-playstation; }
.@{fa-css-prefix}-plug:before { content: @fa-var-plug; }
.@{fa-css-prefix}-plus:before { content: @fa-var-plus; }
.@{fa-css-prefix}-plus-circle:before { content: @fa-var-plus-circle; }
.@{fa-css-prefix}-plus-hexagon:before { content: @fa-var-plus-hexagon; }
.@{fa-css-prefix}-plus-octagon:before { content: @fa-var-plus-octagon; }
.@{fa-css-prefix}-plus-square:before { content: @fa-var-plus-square; }
.@{fa-css-prefix}-podcast:before { content: @fa-var-podcast; }
.@{fa-css-prefix}-podium:before { content: @fa-var-podium; }
.@{fa-css-prefix}-podium-star:before { content: @fa-var-podium-star; }
.@{fa-css-prefix}-poll:before { content: @fa-var-poll; }
.@{fa-css-prefix}-poll-h:before { content: @fa-var-poll-h; }
.@{fa-css-prefix}-poll-people:before { content: @fa-var-poll-people; }
.@{fa-css-prefix}-poo:before { content: @fa-var-poo; }
.@{fa-css-prefix}-poo-storm:before { content: @fa-var-poo-storm; }
.@{fa-css-prefix}-poop:before { content: @fa-var-poop; }
.@{fa-css-prefix}-popcorn:before { content: @fa-var-popcorn; }
.@{fa-css-prefix}-portrait:before { content: @fa-var-portrait; }
.@{fa-css-prefix}-pound-sign:before { content: @fa-var-pound-sign; }
.@{fa-css-prefix}-power-off:before { content: @fa-var-power-off; }
.@{fa-css-prefix}-pray:before { content: @fa-var-pray; }
.@{fa-css-prefix}-praying-hands:before { content: @fa-var-praying-hands; }
.@{fa-css-prefix}-prescription:before { content: @fa-var-prescription; }
.@{fa-css-prefix}-prescription-bottle:before { content: @fa-var-prescription-bottle; }
.@{fa-css-prefix}-prescription-bottle-alt:before { content: @fa-var-prescription-bottle-alt; }
.@{fa-css-prefix}-presentation:before { content: @fa-var-presentation; }
.@{fa-css-prefix}-print:before { content: @fa-var-print; }
.@{fa-css-prefix}-print-search:before { content: @fa-var-print-search; }
.@{fa-css-prefix}-print-slash:before { content: @fa-var-print-slash; }
.@{fa-css-prefix}-procedures:before { content: @fa-var-procedures; }
.@{fa-css-prefix}-product-hunt:before { content: @fa-var-product-hunt; }
.@{fa-css-prefix}-project-diagram:before { content: @fa-var-project-diagram; }
.@{fa-css-prefix}-pumpkin:before { content: @fa-var-pumpkin; }
.@{fa-css-prefix}-pushed:before { content: @fa-var-pushed; }
.@{fa-css-prefix}-puzzle-piece:before { content: @fa-var-puzzle-piece; }
.@{fa-css-prefix}-python:before { content: @fa-var-python; }
.@{fa-css-prefix}-qq:before { content: @fa-var-qq; }
.@{fa-css-prefix}-qrcode:before { content: @fa-var-qrcode; }
.@{fa-css-prefix}-question:before { content: @fa-var-question; }
.@{fa-css-prefix}-question-circle:before { content: @fa-var-question-circle; }
.@{fa-css-prefix}-question-square:before { content: @fa-var-question-square; }
.@{fa-css-prefix}-quidditch:before { content: @fa-var-quidditch; }
.@{fa-css-prefix}-quinscape:before { content: @fa-var-quinscape; }
.@{fa-css-prefix}-quora:before { content: @fa-var-quora; }
.@{fa-css-prefix}-quote-left:before { content: @fa-var-quote-left; }
.@{fa-css-prefix}-quote-right:before { content: @fa-var-quote-right; }
.@{fa-css-prefix}-quran:before { content: @fa-var-quran; }
.@{fa-css-prefix}-r-project:before { content: @fa-var-r-project; }
.@{fa-css-prefix}-rabbit:before { content: @fa-var-rabbit; }
.@{fa-css-prefix}-rabbit-fast:before { content: @fa-var-rabbit-fast; }
.@{fa-css-prefix}-racquet:before { content: @fa-var-racquet; }
.@{fa-css-prefix}-radiation:before { content: @fa-var-radiation; }
.@{fa-css-prefix}-radiation-alt:before { content: @fa-var-radiation-alt; }
.@{fa-css-prefix}-rainbow:before { content: @fa-var-rainbow; }
.@{fa-css-prefix}-raindrops:before { content: @fa-var-raindrops; }
.@{fa-css-prefix}-ram:before { content: @fa-var-ram; }
.@{fa-css-prefix}-ramp-loading:before { content: @fa-var-ramp-loading; }
.@{fa-css-prefix}-random:before { content: @fa-var-random; }
.@{fa-css-prefix}-raspberry-pi:before { content: @fa-var-raspberry-pi; }
.@{fa-css-prefix}-ravelry:before { content: @fa-var-ravelry; }
.@{fa-css-prefix}-react:before { content: @fa-var-react; }
.@{fa-css-prefix}-reacteurope:before { content: @fa-var-reacteurope; }
.@{fa-css-prefix}-readme:before { content: @fa-var-readme; }
.@{fa-css-prefix}-rebel:before { content: @fa-var-rebel; }
.@{fa-css-prefix}-receipt:before { content: @fa-var-receipt; }
.@{fa-css-prefix}-rectangle-landscape:before { content: @fa-var-rectangle-landscape; }
.@{fa-css-prefix}-rectangle-portrait:before { content: @fa-var-rectangle-portrait; }
.@{fa-css-prefix}-rectangle-wide:before { content: @fa-var-rectangle-wide; }
.@{fa-css-prefix}-recycle:before { content: @fa-var-recycle; }
.@{fa-css-prefix}-red-river:before { content: @fa-var-red-river; }
.@{fa-css-prefix}-reddit:before { content: @fa-var-reddit; }
.@{fa-css-prefix}-reddit-alien:before { content: @fa-var-reddit-alien; }
.@{fa-css-prefix}-reddit-square:before { content: @fa-var-reddit-square; }
.@{fa-css-prefix}-redhat:before { content: @fa-var-redhat; }
.@{fa-css-prefix}-redo:before { content: @fa-var-redo; }
.@{fa-css-prefix}-redo-alt:before { content: @fa-var-redo-alt; }
.@{fa-css-prefix}-registered:before { content: @fa-var-registered; }
.@{fa-css-prefix}-renren:before { content: @fa-var-renren; }
.@{fa-css-prefix}-repeat:before { content: @fa-var-repeat; }
.@{fa-css-prefix}-repeat-1:before { content: @fa-var-repeat-1; }
.@{fa-css-prefix}-repeat-1-alt:before { content: @fa-var-repeat-1-alt; }
.@{fa-css-prefix}-repeat-alt:before { content: @fa-var-repeat-alt; }
.@{fa-css-prefix}-reply:before { content: @fa-var-reply; }
.@{fa-css-prefix}-reply-all:before { content: @fa-var-reply-all; }
.@{fa-css-prefix}-replyd:before { content: @fa-var-replyd; }
.@{fa-css-prefix}-republican:before { content: @fa-var-republican; }
.@{fa-css-prefix}-researchgate:before { content: @fa-var-researchgate; }
.@{fa-css-prefix}-resolving:before { content: @fa-var-resolving; }
.@{fa-css-prefix}-restroom:before { content: @fa-var-restroom; }
.@{fa-css-prefix}-retweet:before { content: @fa-var-retweet; }
.@{fa-css-prefix}-retweet-alt:before { content: @fa-var-retweet-alt; }
.@{fa-css-prefix}-rev:before { content: @fa-var-rev; }
.@{fa-css-prefix}-ribbon:before { content: @fa-var-ribbon; }
.@{fa-css-prefix}-ring:before { content: @fa-var-ring; }
.@{fa-css-prefix}-rings-wedding:before { content: @fa-var-rings-wedding; }
.@{fa-css-prefix}-road:before { content: @fa-var-road; }
.@{fa-css-prefix}-robot:before { content: @fa-var-robot; }
.@{fa-css-prefix}-rocket:before { content: @fa-var-rocket; }
.@{fa-css-prefix}-rocketchat:before { content: @fa-var-rocketchat; }
.@{fa-css-prefix}-rockrms:before { content: @fa-var-rockrms; }
.@{fa-css-prefix}-route:before { content: @fa-var-route; }
.@{fa-css-prefix}-route-highway:before { content: @fa-var-route-highway; }
.@{fa-css-prefix}-route-interstate:before { content: @fa-var-route-interstate; }
.@{fa-css-prefix}-rss:before { content: @fa-var-rss; }
.@{fa-css-prefix}-rss-square:before { content: @fa-var-rss-square; }
.@{fa-css-prefix}-ruble-sign:before { content: @fa-var-ruble-sign; }
.@{fa-css-prefix}-ruler:before { content: @fa-var-ruler; }
.@{fa-css-prefix}-ruler-combined:before { content: @fa-var-ruler-combined; }
.@{fa-css-prefix}-ruler-horizontal:before { content: @fa-var-ruler-horizontal; }
.@{fa-css-prefix}-ruler-triangle:before { content: @fa-var-ruler-triangle; }
.@{fa-css-prefix}-ruler-vertical:before { content: @fa-var-ruler-vertical; }
.@{fa-css-prefix}-running:before { content: @fa-var-running; }
.@{fa-css-prefix}-rupee-sign:before { content: @fa-var-rupee-sign; }
.@{fa-css-prefix}-rv:before { content: @fa-var-rv; }
.@{fa-css-prefix}-sack:before { content: @fa-var-sack; }
.@{fa-css-prefix}-sack-dollar:before { content: @fa-var-sack-dollar; }
.@{fa-css-prefix}-sad-cry:before { content: @fa-var-sad-cry; }
.@{fa-css-prefix}-sad-tear:before { content: @fa-var-sad-tear; }
.@{fa-css-prefix}-safari:before { content: @fa-var-safari; }
.@{fa-css-prefix}-salad:before { content: @fa-var-salad; }
.@{fa-css-prefix}-sandwich:before { content: @fa-var-sandwich; }
.@{fa-css-prefix}-sass:before { content: @fa-var-sass; }
.@{fa-css-prefix}-satellite:before { content: @fa-var-satellite; }
.@{fa-css-prefix}-satellite-dish:before { content: @fa-var-satellite-dish; }
.@{fa-css-prefix}-sausage:before { content: @fa-var-sausage; }
.@{fa-css-prefix}-save:before { content: @fa-var-save; }
.@{fa-css-prefix}-scalpel:before { content: @fa-var-scalpel; }
.@{fa-css-prefix}-scalpel-path:before { content: @fa-var-scalpel-path; }
.@{fa-css-prefix}-scanner:before { content: @fa-var-scanner; }
.@{fa-css-prefix}-scanner-keyboard:before { content: @fa-var-scanner-keyboard; }
.@{fa-css-prefix}-scanner-touchscreen:before { content: @fa-var-scanner-touchscreen; }
.@{fa-css-prefix}-scarecrow:before { content: @fa-var-scarecrow; }
.@{fa-css-prefix}-scarf:before { content: @fa-var-scarf; }
.@{fa-css-prefix}-schlix:before { content: @fa-var-schlix; }
.@{fa-css-prefix}-school:before { content: @fa-var-school; }
.@{fa-css-prefix}-screwdriver:before { content: @fa-var-screwdriver; }
.@{fa-css-prefix}-scribd:before { content: @fa-var-scribd; }
.@{fa-css-prefix}-scroll:before { content: @fa-var-scroll; }
.@{fa-css-prefix}-scroll-old:before { content: @fa-var-scroll-old; }
.@{fa-css-prefix}-scrubber:before { content: @fa-var-scrubber; }
.@{fa-css-prefix}-scythe:before { content: @fa-var-scythe; }
.@{fa-css-prefix}-sd-card:before { content: @fa-var-sd-card; }
.@{fa-css-prefix}-search:before { content: @fa-var-search; }
.@{fa-css-prefix}-search-dollar:before { content: @fa-var-search-dollar; }
.@{fa-css-prefix}-search-location:before { content: @fa-var-search-location; }
.@{fa-css-prefix}-search-minus:before { content: @fa-var-search-minus; }
.@{fa-css-prefix}-search-plus:before { content: @fa-var-search-plus; }
.@{fa-css-prefix}-searchengin:before { content: @fa-var-searchengin; }
.@{fa-css-prefix}-seedling:before { content: @fa-var-seedling; }
.@{fa-css-prefix}-sellcast:before { content: @fa-var-sellcast; }
.@{fa-css-prefix}-sellsy:before { content: @fa-var-sellsy; }
.@{fa-css-prefix}-server:before { content: @fa-var-server; }
.@{fa-css-prefix}-servicestack:before { content: @fa-var-servicestack; }
.@{fa-css-prefix}-shapes:before { content: @fa-var-shapes; }
.@{fa-css-prefix}-share:before { content: @fa-var-share; }
.@{fa-css-prefix}-share-all:before { content: @fa-var-share-all; }
.@{fa-css-prefix}-share-alt:before { content: @fa-var-share-alt; }
.@{fa-css-prefix}-share-alt-square:before { content: @fa-var-share-alt-square; }
.@{fa-css-prefix}-share-square:before { content: @fa-var-share-square; }
.@{fa-css-prefix}-sheep:before { content: @fa-var-sheep; }
.@{fa-css-prefix}-shekel-sign:before { content: @fa-var-shekel-sign; }
.@{fa-css-prefix}-shield:before { content: @fa-var-shield; }
.@{fa-css-prefix}-shield-alt:before { content: @fa-var-shield-alt; }
.@{fa-css-prefix}-shield-check:before { content: @fa-var-shield-check; }
.@{fa-css-prefix}-shield-cross:before { content: @fa-var-shield-cross; }
.@{fa-css-prefix}-ship:before { content: @fa-var-ship; }
.@{fa-css-prefix}-shipping-fast:before { content: @fa-var-shipping-fast; }
.@{fa-css-prefix}-shipping-timed:before { content: @fa-var-shipping-timed; }
.@{fa-css-prefix}-shirtsinbulk:before { content: @fa-var-shirtsinbulk; }
.@{fa-css-prefix}-shish-kebab:before { content: @fa-var-shish-kebab; }
.@{fa-css-prefix}-shoe-prints:before { content: @fa-var-shoe-prints; }
.@{fa-css-prefix}-shopping-bag:before { content: @fa-var-shopping-bag; }
.@{fa-css-prefix}-shopping-basket:before { content: @fa-var-shopping-basket; }
.@{fa-css-prefix}-shopping-cart:before { content: @fa-var-shopping-cart; }
.@{fa-css-prefix}-shopware:before { content: @fa-var-shopware; }
.@{fa-css-prefix}-shovel:before { content: @fa-var-shovel; }
.@{fa-css-prefix}-shovel-snow:before { content: @fa-var-shovel-snow; }
.@{fa-css-prefix}-shower:before { content: @fa-var-shower; }
.@{fa-css-prefix}-shredder:before { content: @fa-var-shredder; }
.@{fa-css-prefix}-shuttle-van:before { content: @fa-var-shuttle-van; }
.@{fa-css-prefix}-shuttlecock:before { content: @fa-var-shuttlecock; }
.@{fa-css-prefix}-sickle:before { content: @fa-var-sickle; }
.@{fa-css-prefix}-sigma:before { content: @fa-var-sigma; }
.@{fa-css-prefix}-sign:before { content: @fa-var-sign; }
.@{fa-css-prefix}-sign-in:before { content: @fa-var-sign-in; }
.@{fa-css-prefix}-sign-in-alt:before { content: @fa-var-sign-in-alt; }
.@{fa-css-prefix}-sign-language:before { content: @fa-var-sign-language; }
.@{fa-css-prefix}-sign-out:before { content: @fa-var-sign-out; }
.@{fa-css-prefix}-sign-out-alt:before { content: @fa-var-sign-out-alt; }
.@{fa-css-prefix}-signal:before { content: @fa-var-signal; }
.@{fa-css-prefix}-signal-1:before { content: @fa-var-signal-1; }
.@{fa-css-prefix}-signal-2:before { content: @fa-var-signal-2; }
.@{fa-css-prefix}-signal-3:before { content: @fa-var-signal-3; }
.@{fa-css-prefix}-signal-4:before { content: @fa-var-signal-4; }
.@{fa-css-prefix}-signal-alt:before { content: @fa-var-signal-alt; }
.@{fa-css-prefix}-signal-alt-1:before { content: @fa-var-signal-alt-1; }
.@{fa-css-prefix}-signal-alt-2:before { content: @fa-var-signal-alt-2; }
.@{fa-css-prefix}-signal-alt-3:before { content: @fa-var-signal-alt-3; }
.@{fa-css-prefix}-signal-alt-slash:before { content: @fa-var-signal-alt-slash; }
.@{fa-css-prefix}-signal-slash:before { content: @fa-var-signal-slash; }
.@{fa-css-prefix}-signature:before { content: @fa-var-signature; }
.@{fa-css-prefix}-sim-card:before { content: @fa-var-sim-card; }
.@{fa-css-prefix}-simplybuilt:before { content: @fa-var-simplybuilt; }
.@{fa-css-prefix}-sistrix:before { content: @fa-var-sistrix; }
.@{fa-css-prefix}-sitemap:before { content: @fa-var-sitemap; }
.@{fa-css-prefix}-sith:before { content: @fa-var-sith; }
.@{fa-css-prefix}-skating:before { content: @fa-var-skating; }
.@{fa-css-prefix}-skeleton:before { content: @fa-var-skeleton; }
.@{fa-css-prefix}-sketch:before { content: @fa-var-sketch; }
.@{fa-css-prefix}-ski-jump:before { content: @fa-var-ski-jump; }
.@{fa-css-prefix}-ski-lift:before { content: @fa-var-ski-lift; }
.@{fa-css-prefix}-skiing:before { content: @fa-var-skiing; }
.@{fa-css-prefix}-skiing-nordic:before { content: @fa-var-skiing-nordic; }
.@{fa-css-prefix}-skull:before { content: @fa-var-skull; }
.@{fa-css-prefix}-skull-crossbones:before { content: @fa-var-skull-crossbones; }
.@{fa-css-prefix}-skyatlas:before { content: @fa-var-skyatlas; }
.@{fa-css-prefix}-skype:before { content: @fa-var-skype; }
.@{fa-css-prefix}-slack:before { content: @fa-var-slack; }
.@{fa-css-prefix}-slack-hash:before { content: @fa-var-slack-hash; }
.@{fa-css-prefix}-slash:before { content: @fa-var-slash; }
.@{fa-css-prefix}-sledding:before { content: @fa-var-sledding; }
.@{fa-css-prefix}-sleigh:before { content: @fa-var-sleigh; }
.@{fa-css-prefix}-sliders-h:before { content: @fa-var-sliders-h; }
.@{fa-css-prefix}-sliders-h-square:before { content: @fa-var-sliders-h-square; }
.@{fa-css-prefix}-sliders-v:before { content: @fa-var-sliders-v; }
.@{fa-css-prefix}-sliders-v-square:before { content: @fa-var-sliders-v-square; }
.@{fa-css-prefix}-slideshare:before { content: @fa-var-slideshare; }
.@{fa-css-prefix}-smile:before { content: @fa-var-smile; }
.@{fa-css-prefix}-smile-beam:before { content: @fa-var-smile-beam; }
.@{fa-css-prefix}-smile-plus:before { content: @fa-var-smile-plus; }
.@{fa-css-prefix}-smile-wink:before { content: @fa-var-smile-wink; }
.@{fa-css-prefix}-smog:before { content: @fa-var-smog; }
.@{fa-css-prefix}-smoke:before { content: @fa-var-smoke; }
.@{fa-css-prefix}-smoking:before { content: @fa-var-smoking; }
.@{fa-css-prefix}-smoking-ban:before { content: @fa-var-smoking-ban; }
.@{fa-css-prefix}-sms:before { content: @fa-var-sms; }
.@{fa-css-prefix}-snake:before { content: @fa-var-snake; }
.@{fa-css-prefix}-snapchat:before { content: @fa-var-snapchat; }
.@{fa-css-prefix}-snapchat-ghost:before { content: @fa-var-snapchat-ghost; }
.@{fa-css-prefix}-snapchat-square:before { content: @fa-var-snapchat-square; }
.@{fa-css-prefix}-snow-blowing:before { content: @fa-var-snow-blowing; }
.@{fa-css-prefix}-snowboarding:before { content: @fa-var-snowboarding; }
.@{fa-css-prefix}-snowflake:before { content: @fa-var-snowflake; }
.@{fa-css-prefix}-snowflakes:before { content: @fa-var-snowflakes; }
.@{fa-css-prefix}-snowman:before { content: @fa-var-snowman; }
.@{fa-css-prefix}-snowmobile:before { content: @fa-var-snowmobile; }
.@{fa-css-prefix}-snowplow:before { content: @fa-var-snowplow; }
.@{fa-css-prefix}-socks:before { content: @fa-var-socks; }
.@{fa-css-prefix}-solar-panel:before { content: @fa-var-solar-panel; }
.@{fa-css-prefix}-sort:before { content: @fa-var-sort; }
.@{fa-css-prefix}-sort-alpha-down:before { content: @fa-var-sort-alpha-down; }
.@{fa-css-prefix}-sort-alpha-up:before { content: @fa-var-sort-alpha-up; }
.@{fa-css-prefix}-sort-amount-down:before { content: @fa-var-sort-amount-down; }
.@{fa-css-prefix}-sort-amount-up:before { content: @fa-var-sort-amount-up; }
.@{fa-css-prefix}-sort-down:before { content: @fa-var-sort-down; }
.@{fa-css-prefix}-sort-numeric-down:before { content: @fa-var-sort-numeric-down; }
.@{fa-css-prefix}-sort-numeric-up:before { content: @fa-var-sort-numeric-up; }
.@{fa-css-prefix}-sort-up:before { content: @fa-var-sort-up; }
.@{fa-css-prefix}-soundcloud:before { content: @fa-var-soundcloud; }
.@{fa-css-prefix}-soup:before { content: @fa-var-soup; }
.@{fa-css-prefix}-sourcetree:before { content: @fa-var-sourcetree; }
.@{fa-css-prefix}-spa:before { content: @fa-var-spa; }
.@{fa-css-prefix}-space-shuttle:before { content: @fa-var-space-shuttle; }
.@{fa-css-prefix}-spade:before { content: @fa-var-spade; }
.@{fa-css-prefix}-speakap:before { content: @fa-var-speakap; }
.@{fa-css-prefix}-spider:before { content: @fa-var-spider; }
.@{fa-css-prefix}-spider-black-widow:before { content: @fa-var-spider-black-widow; }
.@{fa-css-prefix}-spider-web:before { content: @fa-var-spider-web; }
.@{fa-css-prefix}-spinner:before { content: @fa-var-spinner; }
.@{fa-css-prefix}-spinner-third:before { content: @fa-var-spinner-third; }
.@{fa-css-prefix}-splotch:before { content: @fa-var-splotch; }
.@{fa-css-prefix}-spotify:before { content: @fa-var-spotify; }
.@{fa-css-prefix}-spray-can:before { content: @fa-var-spray-can; }
.@{fa-css-prefix}-square:before { content: @fa-var-square; }
.@{fa-css-prefix}-square-full:before { content: @fa-var-square-full; }
.@{fa-css-prefix}-square-root:before { content: @fa-var-square-root; }
.@{fa-css-prefix}-square-root-alt:before { content: @fa-var-square-root-alt; }
.@{fa-css-prefix}-squarespace:before { content: @fa-var-squarespace; }
.@{fa-css-prefix}-squirrel:before { content: @fa-var-squirrel; }
.@{fa-css-prefix}-stack-exchange:before { content: @fa-var-stack-exchange; }
.@{fa-css-prefix}-stack-overflow:before { content: @fa-var-stack-overflow; }
.@{fa-css-prefix}-staff:before { content: @fa-var-staff; }
.@{fa-css-prefix}-stamp:before { content: @fa-var-stamp; }
.@{fa-css-prefix}-star:before { content: @fa-var-star; }
.@{fa-css-prefix}-star-and-crescent:before { content: @fa-var-star-and-crescent; }
.@{fa-css-prefix}-star-christmas:before { content: @fa-var-star-christmas; }
.@{fa-css-prefix}-star-exclamation:before { content: @fa-var-star-exclamation; }
.@{fa-css-prefix}-star-half:before { content: @fa-var-star-half; }
.@{fa-css-prefix}-star-half-alt:before { content: @fa-var-star-half-alt; }
.@{fa-css-prefix}-star-of-david:before { content: @fa-var-star-of-david; }
.@{fa-css-prefix}-star-of-life:before { content: @fa-var-star-of-life; }
.@{fa-css-prefix}-stars:before { content: @fa-var-stars; }
.@{fa-css-prefix}-staylinked:before { content: @fa-var-staylinked; }
.@{fa-css-prefix}-steak:before { content: @fa-var-steak; }
.@{fa-css-prefix}-steam:before { content: @fa-var-steam; }
.@{fa-css-prefix}-steam-square:before { content: @fa-var-steam-square; }
.@{fa-css-prefix}-steam-symbol:before { content: @fa-var-steam-symbol; }
.@{fa-css-prefix}-steering-wheel:before { content: @fa-var-steering-wheel; }
.@{fa-css-prefix}-step-backward:before { content: @fa-var-step-backward; }
.@{fa-css-prefix}-step-forward:before { content: @fa-var-step-forward; }
.@{fa-css-prefix}-stethoscope:before { content: @fa-var-stethoscope; }
.@{fa-css-prefix}-sticker-mule:before { content: @fa-var-sticker-mule; }
.@{fa-css-prefix}-sticky-note:before { content: @fa-var-sticky-note; }
.@{fa-css-prefix}-stocking:before { content: @fa-var-stocking; }
.@{fa-css-prefix}-stomach:before { content: @fa-var-stomach; }
.@{fa-css-prefix}-stop:before { content: @fa-var-stop; }
.@{fa-css-prefix}-stop-circle:before { content: @fa-var-stop-circle; }
.@{fa-css-prefix}-stopwatch:before { content: @fa-var-stopwatch; }
.@{fa-css-prefix}-store:before { content: @fa-var-store; }
.@{fa-css-prefix}-store-alt:before { content: @fa-var-store-alt; }
.@{fa-css-prefix}-strava:before { content: @fa-var-strava; }
.@{fa-css-prefix}-stream:before { content: @fa-var-stream; }
.@{fa-css-prefix}-street-view:before { content: @fa-var-street-view; }
.@{fa-css-prefix}-stretcher:before { content: @fa-var-stretcher; }
.@{fa-css-prefix}-strikethrough:before { content: @fa-var-strikethrough; }
.@{fa-css-prefix}-stripe:before { content: @fa-var-stripe; }
.@{fa-css-prefix}-stripe-s:before { content: @fa-var-stripe-s; }
.@{fa-css-prefix}-stroopwafel:before { content: @fa-var-stroopwafel; }
.@{fa-css-prefix}-studiovinari:before { content: @fa-var-studiovinari; }
.@{fa-css-prefix}-stumbleupon:before { content: @fa-var-stumbleupon; }
.@{fa-css-prefix}-stumbleupon-circle:before { content: @fa-var-stumbleupon-circle; }
.@{fa-css-prefix}-subscript:before { content: @fa-var-subscript; }
.@{fa-css-prefix}-subway:before { content: @fa-var-subway; }
.@{fa-css-prefix}-suitcase:before { content: @fa-var-suitcase; }
.@{fa-css-prefix}-suitcase-rolling:before { content: @fa-var-suitcase-rolling; }
.@{fa-css-prefix}-sun:before { content: @fa-var-sun; }
.@{fa-css-prefix}-sun-cloud:before { content: @fa-var-sun-cloud; }
.@{fa-css-prefix}-sun-dust:before { content: @fa-var-sun-dust; }
.@{fa-css-prefix}-sun-haze:before { content: @fa-var-sun-haze; }
.@{fa-css-prefix}-sunrise:before { content: @fa-var-sunrise; }
.@{fa-css-prefix}-sunset:before { content: @fa-var-sunset; }
.@{fa-css-prefix}-superpowers:before { content: @fa-var-superpowers; }
.@{fa-css-prefix}-superscript:before { content: @fa-var-superscript; }
.@{fa-css-prefix}-supple:before { content: @fa-var-supple; }
.@{fa-css-prefix}-surprise:before { content: @fa-var-surprise; }
.@{fa-css-prefix}-suse:before { content: @fa-var-suse; }
.@{fa-css-prefix}-swatchbook:before { content: @fa-var-swatchbook; }
.@{fa-css-prefix}-swimmer:before { content: @fa-var-swimmer; }
.@{fa-css-prefix}-swimming-pool:before { content: @fa-var-swimming-pool; }
.@{fa-css-prefix}-sword:before { content: @fa-var-sword; }
.@{fa-css-prefix}-swords:before { content: @fa-var-swords; }
.@{fa-css-prefix}-synagogue:before { content: @fa-var-synagogue; }
.@{fa-css-prefix}-sync:before { content: @fa-var-sync; }
.@{fa-css-prefix}-sync-alt:before { content: @fa-var-sync-alt; }
.@{fa-css-prefix}-syringe:before { content: @fa-var-syringe; }
.@{fa-css-prefix}-table:before { content: @fa-var-table; }
.@{fa-css-prefix}-table-tennis:before { content: @fa-var-table-tennis; }
.@{fa-css-prefix}-tablet:before { content: @fa-var-tablet; }
.@{fa-css-prefix}-tablet-alt:before { content: @fa-var-tablet-alt; }
.@{fa-css-prefix}-tablet-android:before { content: @fa-var-tablet-android; }
.@{fa-css-prefix}-tablet-android-alt:before { content: @fa-var-tablet-android-alt; }
.@{fa-css-prefix}-tablet-rugged:before { content: @fa-var-tablet-rugged; }
.@{fa-css-prefix}-tablets:before { content: @fa-var-tablets; }
.@{fa-css-prefix}-tachometer:before { content: @fa-var-tachometer; }
.@{fa-css-prefix}-tachometer-alt:before { content: @fa-var-tachometer-alt; }
.@{fa-css-prefix}-tachometer-alt-average:before { content: @fa-var-tachometer-alt-average; }
.@{fa-css-prefix}-tachometer-alt-fast:before { content: @fa-var-tachometer-alt-fast; }
.@{fa-css-prefix}-tachometer-alt-fastest:before { content: @fa-var-tachometer-alt-fastest; }
.@{fa-css-prefix}-tachometer-alt-slow:before { content: @fa-var-tachometer-alt-slow; }
.@{fa-css-prefix}-tachometer-alt-slowest:before { content: @fa-var-tachometer-alt-slowest; }
.@{fa-css-prefix}-tachometer-average:before { content: @fa-var-tachometer-average; }
.@{fa-css-prefix}-tachometer-fast:before { content: @fa-var-tachometer-fast; }
.@{fa-css-prefix}-tachometer-fastest:before { content: @fa-var-tachometer-fastest; }
.@{fa-css-prefix}-tachometer-slow:before { content: @fa-var-tachometer-slow; }
.@{fa-css-prefix}-tachometer-slowest:before { content: @fa-var-tachometer-slowest; }
.@{fa-css-prefix}-taco:before { content: @fa-var-taco; }
.@{fa-css-prefix}-tag:before { content: @fa-var-tag; }
.@{fa-css-prefix}-tags:before { content: @fa-var-tags; }
.@{fa-css-prefix}-tally:before { content: @fa-var-tally; }
.@{fa-css-prefix}-tanakh:before { content: @fa-var-tanakh; }
.@{fa-css-prefix}-tape:before { content: @fa-var-tape; }
.@{fa-css-prefix}-tasks:before { content: @fa-var-tasks; }
.@{fa-css-prefix}-tasks-alt:before { content: @fa-var-tasks-alt; }
.@{fa-css-prefix}-taxi:before { content: @fa-var-taxi; }
.@{fa-css-prefix}-teamspeak:before { content: @fa-var-teamspeak; }
.@{fa-css-prefix}-teeth:before { content: @fa-var-teeth; }
.@{fa-css-prefix}-teeth-open:before { content: @fa-var-teeth-open; }
.@{fa-css-prefix}-telegram:before { content: @fa-var-telegram; }
.@{fa-css-prefix}-telegram-plane:before { content: @fa-var-telegram-plane; }
.@{fa-css-prefix}-temperature-frigid:before { content: @fa-var-temperature-frigid; }
.@{fa-css-prefix}-temperature-high:before { content: @fa-var-temperature-high; }
.@{fa-css-prefix}-temperature-hot:before { content: @fa-var-temperature-hot; }
.@{fa-css-prefix}-temperature-low:before { content: @fa-var-temperature-low; }
.@{fa-css-prefix}-tencent-weibo:before { content: @fa-var-tencent-weibo; }
.@{fa-css-prefix}-tenge:before { content: @fa-var-tenge; }
.@{fa-css-prefix}-tennis-ball:before { content: @fa-var-tennis-ball; }
.@{fa-css-prefix}-terminal:before { content: @fa-var-terminal; }
.@{fa-css-prefix}-text-height:before { content: @fa-var-text-height; }
.@{fa-css-prefix}-text-width:before { content: @fa-var-text-width; }
.@{fa-css-prefix}-th:before { content: @fa-var-th; }
.@{fa-css-prefix}-th-large:before { content: @fa-var-th-large; }
.@{fa-css-prefix}-th-list:before { content: @fa-var-th-list; }
.@{fa-css-prefix}-the-red-yeti:before { content: @fa-var-the-red-yeti; }
.@{fa-css-prefix}-theater-masks:before { content: @fa-var-theater-masks; }
.@{fa-css-prefix}-themeco:before { content: @fa-var-themeco; }
.@{fa-css-prefix}-themeisle:before { content: @fa-var-themeisle; }
.@{fa-css-prefix}-thermometer:before { content: @fa-var-thermometer; }
.@{fa-css-prefix}-thermometer-empty:before { content: @fa-var-thermometer-empty; }
.@{fa-css-prefix}-thermometer-full:before { content: @fa-var-thermometer-full; }
.@{fa-css-prefix}-thermometer-half:before { content: @fa-var-thermometer-half; }
.@{fa-css-prefix}-thermometer-quarter:before { content: @fa-var-thermometer-quarter; }
.@{fa-css-prefix}-thermometer-three-quarters:before { content: @fa-var-thermometer-three-quarters; }
.@{fa-css-prefix}-theta:before { content: @fa-var-theta; }
.@{fa-css-prefix}-think-peaks:before { content: @fa-var-think-peaks; }
.@{fa-css-prefix}-thumbs-down:before { content: @fa-var-thumbs-down; }
.@{fa-css-prefix}-thumbs-up:before { content: @fa-var-thumbs-up; }
.@{fa-css-prefix}-thumbtack:before { content: @fa-var-thumbtack; }
.@{fa-css-prefix}-thunderstorm:before { content: @fa-var-thunderstorm; }
.@{fa-css-prefix}-thunderstorm-moon:before { content: @fa-var-thunderstorm-moon; }
.@{fa-css-prefix}-thunderstorm-sun:before { content: @fa-var-thunderstorm-sun; }
.@{fa-css-prefix}-ticket:before { content: @fa-var-ticket; }
.@{fa-css-prefix}-ticket-alt:before { content: @fa-var-ticket-alt; }
.@{fa-css-prefix}-tilde:before { content: @fa-var-tilde; }
.@{fa-css-prefix}-times:before { content: @fa-var-times; }
.@{fa-css-prefix}-times-circle:before { content: @fa-var-times-circle; }
.@{fa-css-prefix}-times-hexagon:before { content: @fa-var-times-hexagon; }
.@{fa-css-prefix}-times-octagon:before { content: @fa-var-times-octagon; }
.@{fa-css-prefix}-times-square:before { content: @fa-var-times-square; }
.@{fa-css-prefix}-tint:before { content: @fa-var-tint; }
.@{fa-css-prefix}-tint-slash:before { content: @fa-var-tint-slash; }
.@{fa-css-prefix}-tire:before { content: @fa-var-tire; }
.@{fa-css-prefix}-tire-flat:before { content: @fa-var-tire-flat; }
.@{fa-css-prefix}-tire-pressure-warning:before { content: @fa-var-tire-pressure-warning; }
.@{fa-css-prefix}-tire-rugged:before { content: @fa-var-tire-rugged; }
.@{fa-css-prefix}-tired:before { content: @fa-var-tired; }
.@{fa-css-prefix}-toggle-off:before { content: @fa-var-toggle-off; }
.@{fa-css-prefix}-toggle-on:before { content: @fa-var-toggle-on; }
.@{fa-css-prefix}-toilet:before { content: @fa-var-toilet; }
.@{fa-css-prefix}-toilet-paper:before { content: @fa-var-toilet-paper; }
.@{fa-css-prefix}-toilet-paper-alt:before { content: @fa-var-toilet-paper-alt; }
.@{fa-css-prefix}-tombstone:before { content: @fa-var-tombstone; }
.@{fa-css-prefix}-tombstone-alt:before { content: @fa-var-tombstone-alt; }
.@{fa-css-prefix}-toolbox:before { content: @fa-var-toolbox; }
.@{fa-css-prefix}-tools:before { content: @fa-var-tools; }
.@{fa-css-prefix}-tooth:before { content: @fa-var-tooth; }
.@{fa-css-prefix}-toothbrush:before { content: @fa-var-toothbrush; }
.@{fa-css-prefix}-torah:before { content: @fa-var-torah; }
.@{fa-css-prefix}-torii-gate:before { content: @fa-var-torii-gate; }
.@{fa-css-prefix}-tornado:before { content: @fa-var-tornado; }
.@{fa-css-prefix}-tractor:before { content: @fa-var-tractor; }
.@{fa-css-prefix}-trade-federation:before { content: @fa-var-trade-federation; }
.@{fa-css-prefix}-trademark:before { content: @fa-var-trademark; }
.@{fa-css-prefix}-traffic-cone:before { content: @fa-var-traffic-cone; }
.@{fa-css-prefix}-traffic-light:before { content: @fa-var-traffic-light; }
.@{fa-css-prefix}-traffic-light-go:before { content: @fa-var-traffic-light-go; }
.@{fa-css-prefix}-traffic-light-slow:before { content: @fa-var-traffic-light-slow; }
.@{fa-css-prefix}-traffic-light-stop:before { content: @fa-var-traffic-light-stop; }
.@{fa-css-prefix}-train:before { content: @fa-var-train; }
.@{fa-css-prefix}-tram:before { content: @fa-var-tram; }
.@{fa-css-prefix}-transgender:before { content: @fa-var-transgender; }
.@{fa-css-prefix}-transgender-alt:before { content: @fa-var-transgender-alt; }
.@{fa-css-prefix}-trash:before { content: @fa-var-trash; }
.@{fa-css-prefix}-trash-alt:before { content: @fa-var-trash-alt; }
.@{fa-css-prefix}-trash-restore:before { content: @fa-var-trash-restore; }
.@{fa-css-prefix}-trash-restore-alt:before { content: @fa-var-trash-restore-alt; }
.@{fa-css-prefix}-treasure-chest:before { content: @fa-var-treasure-chest; }
.@{fa-css-prefix}-tree:before { content: @fa-var-tree; }
.@{fa-css-prefix}-tree-alt:before { content: @fa-var-tree-alt; }
.@{fa-css-prefix}-tree-christmas:before { content: @fa-var-tree-christmas; }
.@{fa-css-prefix}-tree-decorated:before { content: @fa-var-tree-decorated; }
.@{fa-css-prefix}-tree-large:before { content: @fa-var-tree-large; }
.@{fa-css-prefix}-tree-palm:before { content: @fa-var-tree-palm; }
.@{fa-css-prefix}-trees:before { content: @fa-var-trees; }
.@{fa-css-prefix}-trello:before { content: @fa-var-trello; }
.@{fa-css-prefix}-triangle:before { content: @fa-var-triangle; }
.@{fa-css-prefix}-tripadvisor:before { content: @fa-var-tripadvisor; }
.@{fa-css-prefix}-trophy:before { content: @fa-var-trophy; }
.@{fa-css-prefix}-trophy-alt:before { content: @fa-var-trophy-alt; }
.@{fa-css-prefix}-truck:before { content: @fa-var-truck; }
.@{fa-css-prefix}-truck-container:before { content: @fa-var-truck-container; }
.@{fa-css-prefix}-truck-couch:before { content: @fa-var-truck-couch; }
.@{fa-css-prefix}-truck-loading:before { content: @fa-var-truck-loading; }
.@{fa-css-prefix}-truck-monster:before { content: @fa-var-truck-monster; }
.@{fa-css-prefix}-truck-moving:before { content: @fa-var-truck-moving; }
.@{fa-css-prefix}-truck-pickup:before { content: @fa-var-truck-pickup; }
.@{fa-css-prefix}-truck-plow:before { content: @fa-var-truck-plow; }
.@{fa-css-prefix}-truck-ramp:before { content: @fa-var-truck-ramp; }
.@{fa-css-prefix}-tshirt:before { content: @fa-var-tshirt; }
.@{fa-css-prefix}-tty:before { content: @fa-var-tty; }
.@{fa-css-prefix}-tumblr:before { content: @fa-var-tumblr; }
.@{fa-css-prefix}-tumblr-square:before { content: @fa-var-tumblr-square; }
.@{fa-css-prefix}-turkey:before { content: @fa-var-turkey; }
.@{fa-css-prefix}-turtle:before { content: @fa-var-turtle; }
.@{fa-css-prefix}-tv:before { content: @fa-var-tv; }
.@{fa-css-prefix}-tv-retro:before { content: @fa-var-tv-retro; }
.@{fa-css-prefix}-twitch:before { content: @fa-var-twitch; }
.@{fa-css-prefix}-twitter:before { content: @fa-var-twitter; }
.@{fa-css-prefix}-twitter-square:before { content: @fa-var-twitter-square; }
.@{fa-css-prefix}-typo3:before { content: @fa-var-typo3; }
.@{fa-css-prefix}-uber:before { content: @fa-var-uber; }
.@{fa-css-prefix}-ubuntu:before { content: @fa-var-ubuntu; }
.@{fa-css-prefix}-uikit:before { content: @fa-var-uikit; }
.@{fa-css-prefix}-umbrella:before { content: @fa-var-umbrella; }
.@{fa-css-prefix}-umbrella-beach:before { content: @fa-var-umbrella-beach; }
.@{fa-css-prefix}-underline:before { content: @fa-var-underline; }
.@{fa-css-prefix}-undo:before { content: @fa-var-undo; }
.@{fa-css-prefix}-undo-alt:before { content: @fa-var-undo-alt; }
.@{fa-css-prefix}-unicorn:before { content: @fa-var-unicorn; }
.@{fa-css-prefix}-union:before { content: @fa-var-union; }
.@{fa-css-prefix}-uniregistry:before { content: @fa-var-uniregistry; }
.@{fa-css-prefix}-universal-access:before { content: @fa-var-universal-access; }
.@{fa-css-prefix}-university:before { content: @fa-var-university; }
.@{fa-css-prefix}-unlink:before { content: @fa-var-unlink; }
.@{fa-css-prefix}-unlock:before { content: @fa-var-unlock; }
.@{fa-css-prefix}-unlock-alt:before { content: @fa-var-unlock-alt; }
.@{fa-css-prefix}-untappd:before { content: @fa-var-untappd; }
.@{fa-css-prefix}-upload:before { content: @fa-var-upload; }
.@{fa-css-prefix}-ups:before { content: @fa-var-ups; }
.@{fa-css-prefix}-usb:before { content: @fa-var-usb; }
.@{fa-css-prefix}-usd-circle:before { content: @fa-var-usd-circle; }
.@{fa-css-prefix}-usd-square:before { content: @fa-var-usd-square; }
.@{fa-css-prefix}-user:before { content: @fa-var-user; }
.@{fa-css-prefix}-user-alt:before { content: @fa-var-user-alt; }
.@{fa-css-prefix}-user-alt-slash:before { content: @fa-var-user-alt-slash; }
.@{fa-css-prefix}-user-astronaut:before { content: @fa-var-user-astronaut; }
.@{fa-css-prefix}-user-chart:before { content: @fa-var-user-chart; }
.@{fa-css-prefix}-user-check:before { content: @fa-var-user-check; }
.@{fa-css-prefix}-user-circle:before { content: @fa-var-user-circle; }
.@{fa-css-prefix}-user-clock:before { content: @fa-var-user-clock; }
.@{fa-css-prefix}-user-cog:before { content: @fa-var-user-cog; }
.@{fa-css-prefix}-user-crown:before { content: @fa-var-user-crown; }
.@{fa-css-prefix}-user-edit:before { content: @fa-var-user-edit; }
.@{fa-css-prefix}-user-friends:before { content: @fa-var-user-friends; }
.@{fa-css-prefix}-user-graduate:before { content: @fa-var-user-graduate; }
.@{fa-css-prefix}-user-hard-hat:before { content: @fa-var-user-hard-hat; }
.@{fa-css-prefix}-user-headset:before { content: @fa-var-user-headset; }
.@{fa-css-prefix}-user-injured:before { content: @fa-var-user-injured; }
.@{fa-css-prefix}-user-lock:before { content: @fa-var-user-lock; }
.@{fa-css-prefix}-user-md:before { content: @fa-var-user-md; }
.@{fa-css-prefix}-user-md-chat:before { content: @fa-var-user-md-chat; }
.@{fa-css-prefix}-user-minus:before { content: @fa-var-user-minus; }
.@{fa-css-prefix}-user-ninja:before { content: @fa-var-user-ninja; }
.@{fa-css-prefix}-user-nurse:before { content: @fa-var-user-nurse; }
.@{fa-css-prefix}-user-plus:before { content: @fa-var-user-plus; }
.@{fa-css-prefix}-user-secret:before { content: @fa-var-user-secret; }
.@{fa-css-prefix}-user-shield:before { content: @fa-var-user-shield; }
.@{fa-css-prefix}-user-slash:before { content: @fa-var-user-slash; }
.@{fa-css-prefix}-user-tag:before { content: @fa-var-user-tag; }
.@{fa-css-prefix}-user-tie:before { content: @fa-var-user-tie; }
.@{fa-css-prefix}-user-times:before { content: @fa-var-user-times; }
.@{fa-css-prefix}-users:before { content: @fa-var-users; }
.@{fa-css-prefix}-users-class:before { content: @fa-var-users-class; }
.@{fa-css-prefix}-users-cog:before { content: @fa-var-users-cog; }
.@{fa-css-prefix}-users-crown:before { content: @fa-var-users-crown; }
.@{fa-css-prefix}-users-medical:before { content: @fa-var-users-medical; }
.@{fa-css-prefix}-usps:before { content: @fa-var-usps; }
.@{fa-css-prefix}-ussunnah:before { content: @fa-var-ussunnah; }
.@{fa-css-prefix}-utensil-fork:before { content: @fa-var-utensil-fork; }
.@{fa-css-prefix}-utensil-knife:before { content: @fa-var-utensil-knife; }
.@{fa-css-prefix}-utensil-spoon:before { content: @fa-var-utensil-spoon; }
.@{fa-css-prefix}-utensils:before { content: @fa-var-utensils; }
.@{fa-css-prefix}-utensils-alt:before { content: @fa-var-utensils-alt; }
.@{fa-css-prefix}-vaadin:before { content: @fa-var-vaadin; }
.@{fa-css-prefix}-value-absolute:before { content: @fa-var-value-absolute; }
.@{fa-css-prefix}-vector-square:before { content: @fa-var-vector-square; }
.@{fa-css-prefix}-venus:before { content: @fa-var-venus; }
.@{fa-css-prefix}-venus-double:before { content: @fa-var-venus-double; }
.@{fa-css-prefix}-venus-mars:before { content: @fa-var-venus-mars; }
.@{fa-css-prefix}-viacoin:before { content: @fa-var-viacoin; }
.@{fa-css-prefix}-viadeo:before { content: @fa-var-viadeo; }
.@{fa-css-prefix}-viadeo-square:before { content: @fa-var-viadeo-square; }
.@{fa-css-prefix}-vial:before { content: @fa-var-vial; }
.@{fa-css-prefix}-vials:before { content: @fa-var-vials; }
.@{fa-css-prefix}-viber:before { content: @fa-var-viber; }
.@{fa-css-prefix}-video:before { content: @fa-var-video; }
.@{fa-css-prefix}-video-plus:before { content: @fa-var-video-plus; }
.@{fa-css-prefix}-video-slash:before { content: @fa-var-video-slash; }
.@{fa-css-prefix}-vihara:before { content: @fa-var-vihara; }
.@{fa-css-prefix}-vimeo:before { content: @fa-var-vimeo; }
.@{fa-css-prefix}-vimeo-square:before { content: @fa-var-vimeo-square; }
.@{fa-css-prefix}-vimeo-v:before { content: @fa-var-vimeo-v; }
.@{fa-css-prefix}-vine:before { content: @fa-var-vine; }
.@{fa-css-prefix}-vk:before { content: @fa-var-vk; }
.@{fa-css-prefix}-vnv:before { content: @fa-var-vnv; }
.@{fa-css-prefix}-volcano:before { content: @fa-var-volcano; }
.@{fa-css-prefix}-volleyball-ball:before { content: @fa-var-volleyball-ball; }
.@{fa-css-prefix}-volume:before { content: @fa-var-volume; }
.@{fa-css-prefix}-volume-down:before { content: @fa-var-volume-down; }
.@{fa-css-prefix}-volume-mute:before { content: @fa-var-volume-mute; }
.@{fa-css-prefix}-volume-off:before { content: @fa-var-volume-off; }
.@{fa-css-prefix}-volume-slash:before { content: @fa-var-volume-slash; }
.@{fa-css-prefix}-volume-up:before { content: @fa-var-volume-up; }
.@{fa-css-prefix}-vote-nay:before { content: @fa-var-vote-nay; }
.@{fa-css-prefix}-vote-yea:before { content: @fa-var-vote-yea; }
.@{fa-css-prefix}-vr-cardboard:before { content: @fa-var-vr-cardboard; }
.@{fa-css-prefix}-vuejs:before { content: @fa-var-vuejs; }
.@{fa-css-prefix}-walker:before { content: @fa-var-walker; }
.@{fa-css-prefix}-walking:before { content: @fa-var-walking; }
.@{fa-css-prefix}-wallet:before { content: @fa-var-wallet; }
.@{fa-css-prefix}-wand:before { content: @fa-var-wand; }
.@{fa-css-prefix}-wand-magic:before { content: @fa-var-wand-magic; }
.@{fa-css-prefix}-warehouse:before { content: @fa-var-warehouse; }
.@{fa-css-prefix}-warehouse-alt:before { content: @fa-var-warehouse-alt; }
.@{fa-css-prefix}-watch:before { content: @fa-var-watch; }
.@{fa-css-prefix}-watch-fitness:before { content: @fa-var-watch-fitness; }
.@{fa-css-prefix}-water:before { content: @fa-var-water; }
.@{fa-css-prefix}-water-lower:before { content: @fa-var-water-lower; }
.@{fa-css-prefix}-water-rise:before { content: @fa-var-water-rise; }
.@{fa-css-prefix}-webcam:before { content: @fa-var-webcam; }
.@{fa-css-prefix}-webcam-slash:before { content: @fa-var-webcam-slash; }
.@{fa-css-prefix}-weebly:before { content: @fa-var-weebly; }
.@{fa-css-prefix}-weibo:before { content: @fa-var-weibo; }
.@{fa-css-prefix}-weight:before { content: @fa-var-weight; }
.@{fa-css-prefix}-weight-hanging:before { content: @fa-var-weight-hanging; }
.@{fa-css-prefix}-weixin:before { content: @fa-var-weixin; }
.@{fa-css-prefix}-whale:before { content: @fa-var-whale; }
.@{fa-css-prefix}-whatsapp:before { content: @fa-var-whatsapp; }
.@{fa-css-prefix}-whatsapp-square:before { content: @fa-var-whatsapp-square; }
.@{fa-css-prefix}-wheat:before { content: @fa-var-wheat; }
.@{fa-css-prefix}-wheelchair:before { content: @fa-var-wheelchair; }
.@{fa-css-prefix}-whistle:before { content: @fa-var-whistle; }
.@{fa-css-prefix}-whmcs:before { content: @fa-var-whmcs; }
.@{fa-css-prefix}-wifi:before { content: @fa-var-wifi; }
.@{fa-css-prefix}-wifi-1:before { content: @fa-var-wifi-1; }
.@{fa-css-prefix}-wifi-2:before { content: @fa-var-wifi-2; }
.@{fa-css-prefix}-wifi-slash:before { content: @fa-var-wifi-slash; }
.@{fa-css-prefix}-wikipedia-w:before { content: @fa-var-wikipedia-w; }
.@{fa-css-prefix}-wind:before { content: @fa-var-wind; }
.@{fa-css-prefix}-wind-warning:before { content: @fa-var-wind-warning; }
.@{fa-css-prefix}-window:before { content: @fa-var-window; }
.@{fa-css-prefix}-window-alt:before { content: @fa-var-window-alt; }
.@{fa-css-prefix}-window-close:before { content: @fa-var-window-close; }
.@{fa-css-prefix}-window-maximize:before { content: @fa-var-window-maximize; }
.@{fa-css-prefix}-window-minimize:before { content: @fa-var-window-minimize; }
.@{fa-css-prefix}-window-restore:before { content: @fa-var-window-restore; }
.@{fa-css-prefix}-windows:before { content: @fa-var-windows; }
.@{fa-css-prefix}-windsock:before { content: @fa-var-windsock; }
.@{fa-css-prefix}-wine-bottle:before { content: @fa-var-wine-bottle; }
.@{fa-css-prefix}-wine-glass:before { content: @fa-var-wine-glass; }
.@{fa-css-prefix}-wine-glass-alt:before { content: @fa-var-wine-glass-alt; }
.@{fa-css-prefix}-wix:before { content: @fa-var-wix; }
.@{fa-css-prefix}-wizards-of-the-coast:before { content: @fa-var-wizards-of-the-coast; }
.@{fa-css-prefix}-wolf-pack-battalion:before { content: @fa-var-wolf-pack-battalion; }
.@{fa-css-prefix}-won-sign:before { content: @fa-var-won-sign; }
.@{fa-css-prefix}-wordpress:before { content: @fa-var-wordpress; }
.@{fa-css-prefix}-wordpress-simple:before { content: @fa-var-wordpress-simple; }
.@{fa-css-prefix}-wpbeginner:before { content: @fa-var-wpbeginner; }
.@{fa-css-prefix}-wpexplorer:before { content: @fa-var-wpexplorer; }
.@{fa-css-prefix}-wpforms:before { content: @fa-var-wpforms; }
.@{fa-css-prefix}-wpressr:before { content: @fa-var-wpressr; }
.@{fa-css-prefix}-wreath:before { content: @fa-var-wreath; }
.@{fa-css-prefix}-wrench:before { content: @fa-var-wrench; }
.@{fa-css-prefix}-x-ray:before { content: @fa-var-x-ray; }
.@{fa-css-prefix}-xbox:before { content: @fa-var-xbox; }
.@{fa-css-prefix}-xing:before { content: @fa-var-xing; }
.@{fa-css-prefix}-xing-square:before { content: @fa-var-xing-square; }
.@{fa-css-prefix}-y-combinator:before { content: @fa-var-y-combinator; }
.@{fa-css-prefix}-yahoo:before { content: @fa-var-yahoo; }
.@{fa-css-prefix}-yandex:before { content: @fa-var-yandex; }
.@{fa-css-prefix}-yandex-international:before { content: @fa-var-yandex-international; }
.@{fa-css-prefix}-yarn:before { content: @fa-var-yarn; }
.@{fa-css-prefix}-yelp:before { content: @fa-var-yelp; }
.@{fa-css-prefix}-yen-sign:before { content: @fa-var-yen-sign; }
.@{fa-css-prefix}-yin-yang:before { content: @fa-var-yin-yang; }
.@{fa-css-prefix}-yoast:before { content: @fa-var-yoast; }
.@{fa-css-prefix}-youtube:before { content: @fa-var-youtube; }
.@{fa-css-prefix}-youtube-square:before { content: @fa-var-youtube-square; }
.@{fa-css-prefix}-zhihu:before { content: @fa-var-zhihu; }


// Screen Readers
// -------------------------

.sr-only { .sr-only(); }
.sr-only-focusable { .sr-only-focusable(); }]]></template>
  <template type="public" title="core_filter.less" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[// ##################### FILTERING #####################

.filterBlock
{
	padding: @xf-paddingMedium;
	font-size: @xf-fontSizeSmaller;
	float: right;
	.xf-contentBase();
	.xf-blockBorder();
	border-radius: @xf-blockBorderRadius;
	.m-clearFix();

	.filterBlock-input
	{
		width: 150px;
		display: inline;
		font-size: @xf-fontSizeSmaller;

		&.filterBlock-input--small
		{
			width: 100px;
		}
	}

	select.filterBlock-input
	{
		width: auto;
	}
}

.quickFilter
{
	position: relative;

	.input
	{
		width: 180px;
		font-size: @xf-fontSizeSmaller;
	}

	label
	{
		font-size: @xf-fontSizeSmaller;
	}

	input[type=checkbox]
	{
		.m-checkboxAligner();
	}

	.js-filterClear
	{
		color: @controlColor;

		&:hover
		{
			color: @controlColor--hover;
		}

		&:before
		{
			.m-faBase();
			.m-faContent(@fa-var-times);
		}
	}
}

.filterBar
{
	.m-clearFix();
}

.filterBar-filters
{
	.m-listPlain();
	display: inline;

	> li
	{
		display: inline;
	}
}

.filterBar-filterToggle
{
	display: inline-block;
	text-decoration: none;
	color: inherit;
	padding: 1px 8px;
	border-radius: @xf-borderRadiusMedium;
	.m-transition();

	&:after
	{
		.m-faBase();
		font-size: 80%;
		.m-faContent(" @{fa-var-times}");
		opacity: .5;
		.m-transition(opacity);
	}

	&:hover
	{
		text-decoration: none;

		&:after
		{
			opacity: 1;
		}
	}
}

.filterBar-filterToggle-label
{
	opacity: .75;
}

.filterBar-menuTrigger
{
	float: right;
	white-space: nowrap;
	border-radius: @xf-borderRadiusMedium;
	text-decoration: none;
	padding: 1px  5px;

	&:after
	{
		.m-menuGadget(true);
	}
}

@media (max-width: @xf-responsiveMedium)
{
	.filterBar-filterToggle-label
	{
		display: none;
	}
}]]></template>
  <template type="public" title="core_fixedmessage.less" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[// ############################ FIXED MESSAGE BAR ################

.fixedMessageBar
{
	.xf-fixedMessage();
	.m-transitionFadeDown();
	.m-clearFix();
}

.fixedMessageBar-inner
{
	display: flex;
	align-items: center;
	justify-content: space-between;
}

.fixedMessageBar-message
{
	order: 1;
}

.fixedMessageBar-close
{
	float: right;
	margin-left: 1em;
	order: 2;
	color: inherit;

	&:before
	{
		.m-faBase();
		.m-faContent(@fa-var-times, .69em);
	}

	&:hover
	{
		text-decoration: none;
		color: xf-intensify(@xf-fixedMessage--color, 10%);
	}
}]]></template>
  <template type="public" title="core_formrow.less" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[// ########################################### FORM ROWS #################################

@_form-labelShiftInput: @xf-paddingMedium + @xf-borderSize; // technically input border-top-width + padding-top
@_form-labelButtonInput: 5px; // technically button border-top-width + padding-top, adjusted for text size differences
@_form-elementSpacer: @xf-paddingMedium;

.m-formRowBlockStyle()
{
	display: block;

	> dt,
	> dd
	{
		width: auto;
		display: block;
		padding: ((@xf-formRowPaddingV) / 2) @xf-formRowPaddingHOuter @xf-formRowPaddingV;
	}

	> dt
	{
		background: none;
		border: none;
		text-align: left;
		padding-bottom: 0;

		.formRow-hint
		{
			display: inline;
		}
	}

	&.formRow--input,
	&.formRow--button
	{
		> dt
		{
			padding-top: ((@xf-formRowPaddingV) / 2);
		}
	}

	> dd
	{
		padding-top: ((@xf-formRowPaddingV) / 2);
	}

	> dd > .inputChoices:first-child
	{
		padding-top: 0;
	}
}

.formRow
{
	display: table;
	table-layout: fixed;
	width: 100%;
	margin: 0;
	position: relative;

	> dt,
	> dd
	{
		display: table-cell;
		vertical-align: top;
		margin: 0;
	}

	> dt
	{
		border-right: @xf-borderSize solid transparent;
		.xf-formLabel();
		width: @xf-formLabelWidth;
		padding: @xf-formRowPaddingV @xf-formRowPaddingHInner @xf-formRowPaddingV @xf-formRowPaddingHOuter;
	}

	> dd
	{
		width: (100% - @xf-formLabelWidth);
		padding: @xf-formRowPaddingV @xf-formRowPaddingHOuter @xf-formRowPaddingV @xf-formRowPaddingHInner;
	}

	&.formRow--input > dt
	{
		padding-top: (@xf-formRowPaddingV + @_form-labelShiftInput);
	}

	&.formRow--button > dt
	{
		padding-top: (@xf-formRowPaddingV + @_form-labelButtonInput);
	}

	&.formRow--inputLabelPair > dt
	{
		padding-top: (@xf-formRowPaddingV * 2);
	}

	&.formRow--valueToEdge > dd
	{
		padding-left: 0;
		padding-right: 0;
	}

	&.formRow--noValuePadding > dd
	{
		padding: 0;
	}

	&.formRow--limited
	{
		display: none;
	}

	&.formRow--fullWidth
	{
		.m-formRowBlockStyle();

		& + .formRow,
		.formRow + &,
		& + * > .formRow:first-of-type, // allows formRows to be wrapped
		.formRow + * > &:first-of-type //  in a single-depth grouping element
		{
			border-top: @xf-borderSize solid @xf-borderColorLight;
		}

		&.formRow--noLabel
		{
			> dt
			{
				display: none;
			}

			> dd
			{
				padding-top: @xf-formRowPaddingV;
			}
		}

		& + .formRow--mergePrev,
		& + * > .formRow:first-of-type.formRow--mergePrev,
		&.formRow--mergeNext + &,
		&.formRow--mergeNext + * > &:first-of-type
		{
			border-top: 0;

			> dt
			{
				padding-top: 0;
			}
		}

		&.formRow--noGutter
		{
			> dt,
			> dd
			{
				padding-left: 0;
				padding-right: 0;
			}
		}

		&.formRow--noPadding
		{
			> dt,
			> dd
			{
				padding: 0;
			}
		}

		&.formRow--noPadding + &,
		&.formRow--noPadding + * > &:first-of-type
		{
			> dt
			{
				padding-top: @xf-formRowPaddingV;
			}
		}
	}

	&.formRow--inputMultiLine > dd
	{
		> .input,
		> .inputGroup
		{
			margin-bottom: @_form-elementSpacer;

			&:last-child
			{
				margin-bottom: 0;
			}
		}
	}

	.formRow-label
	{
		.m-appendColon();
	}

	&.formRow--noColon .formRow-label:after
	{
		content: "";
	}

	.formRow-explain
	{
		margin: @_form-elementSpacer 0 0;
		.m-formElementExplain();
	}

	&.formRow--explainOffset .formRow-explain
	{
		margin-top: (@_form-elementSpacer) * 2;
	}

	.formRow-hint
	{
		display: block;
		font-style: normal;
		.xf-formHint();

		.m-textColoredLinks();

		.formRow-hint-featured
		{
			display: block;
			//font-weight: @xf-fontWeightHeavy;
			color: @xf-textColorFeature;
		}
	}

	+ .formInfoRow
	{
		border-top: @xf-borderSize solid @xf-borderColorLight;
	}

	@media (max-width: @xf-formResponsive)
	{
		.m-formRowBlockStyle();
	}
}

.formButtonGroup
{
	display: flex;
	flex-wrap: wrap;
	margin-top: @xf-paddingLarge;
	margin-bottom: -5px;

	&.formButtonGroup--close
	{
		margin-top: 0;
	}
}

.formButtonGroup-primary
{
	order: 2;
	margin-left: auto;
	margin-bottom: 5px;

	.formButtonGroup--simple &
	{
		margin-left: 0;
	}
}

.formButtonGroup-extra
{
	order: 1;
	margin-bottom: 5px;
}

.formInfoRow
{
	padding: @xf-formRowPaddingV @xf-formRowPaddingHOuter;

	&.formInfoRow--close
	{
		padding-top: ((@xf-formRowPaddingV) / 2);
		padding-bottom: ((@xf-formRowPaddingV) / 2);
	}

	&.formInfoRow--noPadding
	{
		padding: 0;
	}

	&.formInfoRow--confirm
	{
		text-align: center;

		strong
		{
			display: block;
			margin: .5em 0;
			font-size: @xf-fontSizeLarger;

			&:last-child
			{
				margin-bottom: 0;
			}
		}
	}

	+ .formRow
	{
		border-top: @xf-borderSize solid @xf-borderColorLight;
	}

	&.u-hidden:not(.is-active)
	{
		+ .formRow
		{
			border-top: none;
		}
	}

	> .blockMessage
	{
		&:first-child { margin-top: 0; }
		&:last-child { margin-bottom: 0; }
	}
}

.formSubmitRow
{
	position: relative;

	> dt
	{
		display: none;
	}

	> dd
	{
		width: 100%;
		padding: 0;
	}

	&.formSubmitRow--sticky.is-sticky
	{
		.formSubmitRow-main
		{
			position: fixed;
			bottom: 0;
			z-index: @zIndex-2;
		}

		.formSubmitRow-bar
		{
			box-shadow: 0px -5px 15px fade(black, 15%);
		}
	}

	&.formSubmitRow--simple,
	&.formSubmitRow--standalone
	{
		> dt
		{
			visibility: hidden;
		}

		.formSubmitRow-controls
		{
			text-align: center;
			padding-left: 0;
			margin-left: 0;
		}
	}

	&.formSubmitRow--standalone
	{
		.formSubmitRow-bar
		{
			border: @xf-borderSize solid @xf-borderColor;
			border-radius: @block-borderRadius-inner;

			@media (max-width: @xf-responsiveEdgeSpacerRemoval)
			{
				border-radius: 0;
				border-left: none;
				border-right: none;
			}
		}

		&.is-sticky
		{
			.formSubmitRow-bar
			{
				border-bottom: 0;
			}
		}
	}

	.block-body--collapsible:not(.is-active) + &:not(.formSubmitRow--simple, .formSubmitRow--standalone)
	{
		> dt
		{
			visibility: hidden;
		}
	}
}

.formSubmitRow-main
{
	position: relative;
}

.formSubmitRow-bar
{
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;

	.xf-formSubmitRow();
}

.formSubmitRow-controls
{
	position: relative;
	padding-left: @xf-formLabelWidth;
	padding-top: @xf-paddingMedium;
	padding-bottom: @xf-paddingMedium;
	margin-left: @xf-formRowPaddingHInner;
	margin-right: @xf-formRowPaddingHOuter;

	> .button:first-child:last-child
	{
		min-width: 120px;
	}
}

@media (max-width: @xf-formResponsive)
{
	.formSubmitRow-controls
	{
		padding-left: 0;
		text-align: center;
	}
}

.formRowSep
{
	margin: -1px @xf-formRowPaddingHOuter 0;
	border: none;
	border-top: @xf-borderSize solid @xf-borderColor;

	+ .formRowSep,
	&:last-child
	{
		display: none;
	}

	.block-body > &:first-child
	{
		display: none;
	}
}]]></template>
  <template type="public" title="core_globalaction.less" version_id="2000033" version_string="2.0.0 Beta 3"><![CDATA[// #################################### GLOBAL ACTION INDICATOR ##########################

.globalAction
{
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
	z-index: @zIndex-9;
	opacity: 0;
	.m-transition(opacity);
	pointer-events: none;

	&.is-active
	{
		opacity: 1;
	}
}

.globalAction-bar
{
	position: absolute;
	left: 0;
	top: 0;
	width: 33%;
	height: 3px;
	background: @xf-globalActionColor;
	pointer-events: none;

	-ltr-transform: translateX(-33vw);
	-rtl-transform: translateX(33vw);

	.m-animation(1.5s ease-in-out infinite globalActionBar);

	&:before
	{
		content: '';
		position: absolute;
		right: 0;
		height: 100%;
		width: 100px;
		box-shadow: 0 0 10px 2px @xf-globalActionColor;

		-ltr-transform: rotate(2deg) translate(0px, -3px);
		-rtl-transform: rotate(-2deg) translate(0px, -3px);
	}
}

.m-keyframes(globalActionBar, {
	from
	{
		-ltr-transform: translateX(-33vw);
		-rtl-transform: translateX(33vw);
	}
	to
	{
		-ltr-transform: translateX(100vw);
		-rtl-transform: translateX(-100vw);
	}
});

.globalAction-block
{
	position: fixed;
	top: 20px;
	right: 10px;
	pointer-events: none;

	i
	{
		display: inline-block;
		content: ' ';
		font-size: 10px;
		width: 1em;
		height: 2.5em;
		margin-right: .3em;
		background-color: @xf-globalActionColor;
		box-shadow: 1px 1px 2px rgba(0, 0, 0, .5);
		.m-animation(1s ease infinite globalActionPulse);
		opacity: .35;

		&:last-child
		{
			margin-right: 0;
		}

		&:nth-child(2)
		{
			animation-delay: .2s;
		}

		&:nth-child(3)
		{
			animation-delay: .4s;
		}
	}

	@media (max-width: @xf-responsiveNarrow)
	{
		display: none;
	}
}

.m-keyframes(globalActionPulse, {
	from
	{
		.m-transform(scaleY(1.5));
		opacity: 1;
	}
	to
	{
		.m-transform(scaleY(1));
		opacity: .35;
	}
});]]></template>
  <template type="public" title="core_hscroller.less" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[// ##################################### HORIZONTAL SCROLLER ###################

.hScroller
{
	overflow-y: hidden;
	position: relative;
	-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
	-webkit-overflow-scrolling: touch;

	&.hScroller--scrollHidden
	{
		.hScroller-action
		{
			opacity: 0;
			.m-transition();
		}

		html:not(.has-touchevents) &:hover .hScroller-action
		{
			opacity: 1;
		}
	}
}

.hScroller-scroll
{
	display: block;
	white-space: nowrap;
	word-wrap: normal;
	overflow-x: hidden;

	&.is-calculated
	{
		overflow-x: scroll;
		padding-bottom: 30px;
		margin-bottom: -30px;
		// pushes the scrollbar out of view
	}
}

.hScroller-action
{
	position: absolute;
	top: 0;
	bottom: 0;
	width: 40px;
	padding: 0 5px;
	display: none;
	cursor: pointer;

	&.is-active
	{
		display: block;
		display: flex;
		align-items: center;
	}

	&:after
	{
		.m-faBase();
		font-size: 120%;
	}

	&.hScroller-action--start
	{
		left: 0;
		justify-content: flex-start;
		text-align: left;

		&:after
		{
			.m-faContent(@fa-var-chevron-left, .63em, ltr);
			.m-faContent(@fa-var-chevron-right, .63em, rtl);
		}
	}

	&.hScroller-action--end
	{
		right: 0;
		justify-content: flex-end;
		text-align: right;

		&:after
		{
			.m-faContent(@fa-var-chevron-right, .63em, ltr);
			.m-faContent(@fa-var-chevron-left, .63em, rtl);
		}
	}
}

.scrollMeasure
{
	position: absolute;
	top: -1000px;
	width: 100px;
	height: 100px;
	overflow: scroll;
	visibility: hidden;
}]]></template>
  <template type="public" title="core_input.less" version_id="2010131" version_string="2.1.1 Beta 1"><![CDATA[// ###################################### INPUTS ##########################

@_input-numberWidth: 150px;
@_input-numberNarrowWidth: 90px;
@_input-textColor: xf-default(@xf-input--color, @xf-textColor);
@_input-elementSpacer: @xf-paddingMedium;
@_input-checkBoxSpacer: 1.5em;

.m-inputReadOnly()
{
	color: mix(xf-default(@xf-input--color, @xf-textColor), xf-default(@xf-inputDisabled--color, @xf-textColorMuted));
	background: mix(xf-default(@xf-input--background-color, @xf-contentBg), xf-default(@xf-inputDisabled--background-color, @xf-paletteNeutral1));
}

.input
{
	.xf-input();
	display: block;
	width: 100%;
	line-height: @xf-lineHeightDefault;
	text-align: left; // this will be flipped in RTL
	word-wrap: break-word;
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
	.m-transition();
	.m-placeholder({color: fade(@_input-textColor, 40%); });

	&:focus,
	&.is-focused
	{
		outline: 0;
		.xf-inputFocus();
		.m-placeholder({color: fade(@_input-textColor, 50%); });
	}

	&[readonly],
	&.is-readonly
	{
		.m-inputReadOnly();
	}

	&[disabled]
	{
		.xf-inputDisabled();
	}

	&[type=number],
	&.input--number
	{
		text-align: right;
		max-width: @_input-numberWidth;

		&.input--numberNarrow
		{
			width: @_input-numberNarrowWidth;
		}
	}

	&.input--date
	{
		max-width: @_input-numberWidth;
	}

	textarea&
	{
		min-height: 0;
		max-height: 400px;
		max-height: 75vh;
		resize: vertical;

		&.input--fitHeight
		{
			resize: none;

			&.input--fitHeight--short
			{
				max-height: 200px;
				max-height: 35vh;
			}
		}

		&.input--code
		{
			overflow-x: auto;
			-ltr-rtl-text-align: left; // force blocks of code back to left align
		}

		&.input--maxHeight-300px
		{
			max-height: 300px;
		}

		.has-js &[rows="1"][data-single-line]
		{
			overflow: hidden;
			resize: none;
		}
	}

	// this makes select inputs consistent across all browsers and OSes
	select&,
	&.input--select
	{
		padding-right: 1em !important;
		.m-selectGadgetColor(@_input-textColor);
		background-size: 1em !important;
		background-repeat: no-repeat !important;
		-ltr-background-position: 100% !important;
		white-space: nowrap;
		word-wrap: normal;
		-webkit-appearance: none !important;
		-moz-appearance: none !important;
		appearance: none !important;

		overflow-x: hidden; // iOS seems to require this to prevent overflow with long options...
		overflow-y: auto; // ...and Firefox seems to require this to prevent the above from breaking vertical scroll...

		&[disabled]
		{
			.m-selectGadgetColor(xf-default(@xf-inputDisabled--color, @xf-textColor));
		}

		&[size],
		&[multiple]
		{
			background-image: none !important;
			padding-right: xf-default(@xf-input--padding, 5px) !important;
		}
	}

	&.input--autoSize
	{
		width: auto;
	}

	&.input--inline
	{
		display: inline;
		width: auto;
	}

	&.input--code
	{
		font-family: @xf-fontFamilyCode;
		direction: ltr;
		//white-space: nowrap;
		word-wrap: normal;
	}

	&.input--title
	{
		font-size: @xf-fontSizeLargest;
	}

	&.input--avatarSizeS
	{
		min-height: @avatar-s;
	}

	&.input--passwordHideShow
	{
		::-ms-reveal,
		::-ms-clear
		{
			display: none !important;
		}
	}

	.m-inputZoomFix();

	.fa--inputOverlay + &
	{
		padding-left: 2em;
	}
}

// Overlay a FontAwesome icon over the start of a text box as a hint to its usem
// Use the 'fa' attribute in XF template syntax for xf:textbox, xf:numberbox and xf:textarea
.fa--xf.fa--inputOverlay
{
	position: absolute;
	padding: @xf-input--padding;
	line-height: @xf-lineHeightDefault;
	color: @xf-input--border-top-color;

	& + .input
	{
		padding-left: @xf-input--padding * 2 + @xf-input--font-size;
	}
}

// ############################# NEW ICONIC CONTROLS ######################

@controlColor: xf-default(@xf-buttonPrimary--background-color, @xf-paletteColor4);
@controlColor--hover: xf-intensify(@controlColor, 25%);

.iconicIcon(@setPosition: true)
{
	display: inline-block;
	min-width: 1em;
	height: .9em;// prevents some zoom-related issues
	-ltr-rtl-text-align: left;

	&:before,
	&:after
	{
		.m-faBase('Pro'; inherit);
		//.m-transition(opacity, color; @xf-animationSpeed, @xf-animationSpeed / 2);

		position: absolute;

		& when (@setPosition = true)
		{
			left: 0;
			top: 0;
		}

		opacity: 1;
	}
}

.iconic
{
	display: inline-block;
	position: relative;

	> input
	{
		.m-visuallyHidden();
		position: absolute;
		left: 0;
		width: auto;
		height: auto;

		+ i
		{
			.iconicIcon();
		}

		& + i:after
		{
			opacity: 0;
		}

		&:disabled + i:before
		{
			opacity: .3;
		}

		&:disabled:checked + i:after
		{
			opacity: .3;
		}

		&:checked
		{
			& + i:before
			{
				opacity: 0;
			}

			& + i:after
			{
				opacity: 1;
			}
		}

		&:focus + i
		{
			&:before,
			&:after
			{
				outline: Highlight solid 2px;
				-moz-outline-radius: 5px;

				@media (-webkit-min-device-pixel-ratio: 0)
				{
					outline: -webkit-focus-ring-color auto 5px;
				}
			}
		}
	}

	// handler for labelled inputs - indent the text away from the control
	.iconic-label:before
	{
		content: '';
		display: inline-block;
		width: @_input-checkBoxSpacer - 1em; // min-width of input > i
	}

	&.iconic--hideShow
	{
		min-width: 56px;

		> input[type=checkbox] + i
		{
			&:before
			{
				.m-faContent(@fa-var-eye);
			}

			&:after
			{
				.m-faContent(@fa-var-eye-slash);
			}
		}

		.iconic-label
		{
			font-size: @xf-fontSizeSmall;
			vertical-align: text-top;
		}
	}

	&.iconic--hiddenLabel .iconic-label:before {
		display: none;
	}

	> input[type=checkbox] + i
	{
		&:before
		{
			.m-faContent(@fa-var-square, .875em);
		}

		&:after
		{
			.m-faContent(@fa-var-check-square, .875em);
		}
	}

	> input[type=radio] + i
	{
		&:before
		{
			.m-faContent(@fa-var-circle, 1em);
		}

		&:after
		{
			.m-faContent(@fa-var-check-circle, 1em);
		}
	}
}

// Fix position for inputChoices to allow nested indenting

.inputChoices > .inputChoices-choice
{
	position: relative;

	.iconic
	{
		position: static;

		> input + i
		{
			position: absolute;
			left: 0;
		}

		&.iconic--noLabel
		{
			display: inline;
		}
	}

	// undo the normal indenting of text from checkbox
	.iconic-label:before {
		display: none;
	}
}

// Basic control colours for common scenarios

.formRow,
.inputGroup,
.inputChoices,
.block-footer,
.dataList-cell,
.message-cell--extra
{
	.iconic,
	&.dataList-cell--fa > a
	{
		> i
		{
			color: @controlColor;
		}

		&:hover > i
		{
			color: @controlColor--hover;
		}
	}
}

// ############################# END ICONIC CONTROLS ######################

.u-inputSpacer
{
	margin-top: @_input-elementSpacer;
}

.inputGroup
{
	display: flex;
	align-items: stretch;
	max-width: 100%;

	.inputGroup-text
	{
		flex-grow: 0;
		display: flex;
		align-items: center;

		white-space: nowrap;
		vertical-align: middle;
		padding: 0 @xf-paddingMedium;

		&:first-child { padding-left: 0; }
		&:last-child { padding-right: 0; }
	}

	.inputGroup-splitter
	{
		display: inline-block;
		width: @_form-elementSpacer;
		flex-shrink: 0;
	}

	.input
	{
		flex-shrink: 1;
		min-width: 0; // firefox bug - https://bugzilla.mozilla.org/show_bug.cgi?id=1021913
	}

	.button
	{
		flex-shrink: 0;
	}

	&:not(.inputGroup--joined)
	{
		.input,
		.button
		{
			+ .input,
			+ .button
			{
				margin-left: @_form-elementSpacer;
			}
		}
	}

	.inputGroup-label
	{
		flex-shrink: 1;
		width: 100%;
		padding: 0 0 @xf-paddingMedium;

		.m-appendColon();
	}

	@media (max-width: @xf-formResponsive)
	{
		.input:not(.input--autoSize):not(.input--numberNarrow)
		{
			width: 100%;
		}
	}

	&.inputGroup--inline
	{
		display: inline-flex;
	}

	&.inputGroup--auto
	{
		.input
		{
			width: auto;
		}
	}

	&.inputGroup--joined
	{
		.input
		{
			border-radius: 0;

			&:first-child
			{
				border-top-left-radius: @xf-borderRadiusMedium;
				border-bottom-left-radius: @xf-borderRadiusMedium;
				border-right: none;
			}

			&:last-child
			{
				border-top-right-radius: @xf-borderRadiusMedium;
				border-bottom-right-radius: @xf-borderRadiusMedium;
				border-left: none;
			}
		}

		.inputGroup-text
		{
			.xf-input(border);
			.xf-inputFocus(background);
			text-align: center;
			padding: @xf-paddingSmall @xf-paddingMedium;

			&.inputGroup-text--disabled,
			&.is-disabled,
			&[disabled]
			{
				.xf-inputDisabled();

				a { text-decoration: none; }
			}

			&:first-child
			{
				border-right: 0;
				border-top-left-radius: @xf-borderRadiusMedium;
				border-bottom-left-radius: @xf-borderRadiusMedium;
			}

			&:last-child
			{
				border-left: 0;
				border-top-right-radius: @xf-borderRadiusMedium;
				border-bottom-right-radius: @xf-borderRadiusMedium;
			}
		}

		.input + .inputGroup-text,
		.input + .input,
		.inputGroup-text + .input
		{
			border-left: @xf-borderSize solid @xf-borderColorLight;
		}

		.inputGroup-text + .inputGroup-text,
		.inputGroup-text + select.input
		{
			border-left: 0;
		}
	}
}

.inputGroup-container > .inputGroup
{
	margin-top: @xf-paddingMedium;

	&:first-child
	{
		margin-top: 0;
	}
}

.inputNumber
{
	.input--number
	{
		-moz-appearance: textfield !important;

		&::-webkit-inner-spin-button,
		&::-webkit-outer-spin-button
		{
			margin: 0 !important;
			-webkit-appearance: none !important;
		}

		@media (max-width: @xf-formResponsive)
		{
			min-width: auto;
			max-width: 120px;
		}
	}
}

.inputNumber-button
{
	position: relative;

	.m-faBase();
	color: @controlColor;
	font-size: 1.0em;
	font-style: normal !important;
	line-height: .75em;
	vertical-align: -15%;

	width: 45px;
	justify-content: center;
	text-align: center;

	cursor: pointer;

	-webkit-touch-callout: none;
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;

	&.inputNumber-button--smaller
	{
		vertical-align: 0;
		width: 35px;
	}

	&--up::before
	{
		.m-faContent(@fa-var-plus, .88em);
	}

	&--down::before
	{
		.m-faContent(@fa-var-minus, .8em);
	}

	.inputGroup.inputGroup--joined &
	{
		&:hover,
		&:active,
		&:focus
		{
			background-color: saturate(xf-intensify(@xf-paletteColor1, 4%), 12%);
			color: @controlColor--hover;
		}
	}

	.input.input--number[readonly] ~ &
	{
		.m-inputReadOnly();
	}

	.input.input--number[disabled] ~ &
	{
		cursor: default;
		.xf-inputDisabled();
	}
}

.inputDate
{
	.inputDate-icon
	{
		position: relative;

		.m-faBase();
		color: @xf-linkColor;
		font-size: 1.0em;
		font-style: normal !important;
		line-height: .75em;
		vertical-align: -15%;

		width: 45px;
		justify-content: center;
		text-align: center;

		-webkit-touch-callout: none;
		-webkit-user-select: none;
		-moz-user-select: none;
		-ms-user-select: none;
		user-select: none;

		@media (max-width: @xf-formResponsive)
		{
			vertical-align: 0;
			width: 25px;
		}

		&::before
		{
			.m-faContent(@fa-var-calendar, .88em);
		};
	}
}

.inputList
{
	.m-listPlain();

	> li
	{
		margin-top: @xf-paddingMedium;

		&:first-child
		{
			margin-top: 0;
		}
	}
}

.inputPair
{
	.m-clearFix();

	> .input,
	.inputPair-input
	{
		float: right;
		width: 49%; // fallback
		width: ~"calc(50% - 2px)";

		&:first-child
		{
			float: left;
		}
	}
}

.inputPair-container > .inputPair
{
	margin-top: @xf-paddingMedium;

	&:first-child
	{
		margin-top: 0;
	}
}

.inputLabelPair
{
	.m-clearFix();
	margin: @xf-paddingMedium 0;
	padding: 0;

	> dt,
	> dd
	{
		float: left;
		margin: 0;
		padding: 0;
	}

	> dt
	{
		width: 65%;
		padding-right: @xf-paddingMedium;
		padding-top: .6em;

		> label
		{
			.m-appendColon();
		}
	}

	> dd
	{
		width: 35%;
		text-align: right;

		.input
		{
			width: 100%;
			max-width: none;
		}
	}

	@media (max-width: @xf-responsiveNarrow)
	{
		> dt,
		> dd
		{
			width: 50%;
		}
	}
}

.inputChoices
{
	list-style: none;
	padding: 0;
	margin: 0;

	> .inputChoices-choice
	{
		margin-bottom: @_input-elementSpacer;
		padding-left: @_input-checkBoxSpacer;

		&:last-child
		{
			margin-bottom: 0;
		}

		> .inputChoices,
		.inputChoices-spacer
		{
			margin-top: @_input-elementSpacer;
		}
	}

	&.inputChoices--noChoice > .inputChoices-choice,
	.inputChoices-plainChoice
	{
		padding-left: 0;
	}

	&.inputChoices--inline > .inputChoices-choice
	{
		display: inline-block;
		margin-right: @_input-elementSpacer;
		margin-bottom: 0;

		&:last-child
		{
			margin-right: 0;
		}
	}

	.inputChoices-label
	{
		padding-left: 0;
		font-size: @xf-fontSizeSmall;
		color: @xf-textColorMuted;
	}

	+ .inputChoices:not(.inputChoices--inline)
	{
		margin-top: @_input-elementSpacer;
	}
}

.inputChoices-group + .inputChoices-group,
.inputChoices-choice + .inputChoices-group
{
	margin-top: (@xf-paddingMedium) * 2;
}

.inputChoices-spacer + .inputChoices
{
	margin-top: @_input-elementSpacer;
}

.inputChoices-heading
{
	color: @xf-textColorMuted;
	padding-bottom: (@xf-paddingMedium) / 2;
	border-bottom: @xf-borderSize solid @xf-borderColorFaint;
	margin-bottom: @xf-paddingMedium;
	position: relative;

	&.inputChoices-heading--checkAll {
		.iconic {
			position: static;

			& > input + i {
				position: absolute;
				right: 0;
				left: auto;
				width: auto;
			}
		}
	}
}

.inputChoices-explain
{
	.m-formElementExplain();

	&.inputChoices-explain--after
	{
		margin-top: @_input-elementSpacer;
	}
}

.inputChoices-dependencies
{
	list-style: none;
	padding: 0;
	margin: 0;

	> li
	{
		margin-top: @_input-elementSpacer;

		> label
		{
			display: block;
			padding: @xf-paddingSmall 0;

			&.iconic--labelled > input + i
			{
				margin-left: 0;
			}
		}
	}
}

@media (max-width: @xf-responsiveNarrow)
{
	.input.input--title
	{
		font-size: @xf-fontSizeLarge;
	}
}]]></template>
  <template type="public" title="core_labels.less" version_id="2001070" version_string="2.0.10"><![CDATA[.label
{

	display: inline-block;
	padding: 1px .35em;
	border: 1px solid transparent;
	border-radius: @xf-borderRadiusMedium;
	font-size: 80%;
	line-height: ((@xf-lineHeightDefault) * .9);
	text-decoration: none;

	&:hover,
	a:hover &
	{
		text-decoration: none;
	}

	&.label--fullSize
	{
		font-size: 100%;
	}

	&.label--small
	{
		font-size: @xf-fontSizeSmall;
	}

	&.label--smallest
	{
		font-size: @xf-fontSizeSmallest;
	}

	// Label variations

	&.label--hidden
	{
		// this has to essentially undo all the adjustments made by .label
		padding: inherit;
		border: none;
		font-size: inherit;
		line-height: inherit;
		text-decoration: inherit;

		&:hover
		{
			text-decoration: underline;
		}
	}

	&.label--subtle
	{
		.m-labelVariation(@xf-textColorMuted, @xf-contentAltBg);
	}

	&.label--primary
	{
		.m-labelVariation(@xf-linkColor, @xf-contentHighlightBg, @xf-borderColorHighlight);
	}

	&.label--accent
	{
		.m-labelVariation(@xf-textColorAccentContent, @xf-contentAccentBg, @xf-borderColorAccentContent);
	}

	&.label--red { .m-labelVariation(white, #e20000); }
	&.label--green { .m-labelVariation(white, green); }
	&.label--olive { .m-labelVariation(white, olive); }
	&.label--lightGreen { .m-labelVariation(black, #ccf9c8, #bee8ba); }
	&.label--blue { .m-labelVariation(white, #0008e3); }
	&.label--royalBlue { .m-labelVariation(white, royalblue); }
	&.label--skyBlue { .m-labelVariation(white, #7cc3e0); }
	&.label--gray { .m-labelVariation(white, gray); }
	&.label--silver { .m-labelVariation(black, silver); }
	&.label--yellow { .m-labelVariation(black, #ffff91, #e6e687); }
	&.label--orange { .m-labelVariation(black, #ffcb00); }

	&.label--error { .m-labelVariation(#c84448, #fde9e9, #c84448); }
}

.label-append
{
	display: inline-block;
}

.labelLink,
.labelLink:hover
{
	text-decoration: none;
}]]></template>
  <template type="public" title="core_list.less" version_id="2010037" version_string="2.1.0 Beta 7"><![CDATA[// ##################################### LISTS ##################

.pairs
{
	padding: 0;
	margin: 0;
	overflow: hidden;

	&.pairs--plainLabel
	{
		> dt
		{
			color: inherit;
		}
	}

	&.pairs--spaced + .pairs
	{
		margin-top: @xf-paddingMedium;
	}

	&.pairs--noColon
	{
		> dt
		{
			&:after
			{
				content: "";
			}
		}
	}

	> dt
	{
		padding: 0;
		margin: 0;
		color: @xf-textColorMuted;

		.m-appendColon();
	}

	> dd
	{
		padding: 0;
		margin: 0;
	}

	&.pairs--inline
	{
		display: inline;

		> dt,
		> dd
		{
			display: inline;
		}
	}

	&.pairs--columns
	{
		display: table;
		table-layout: fixed;
		width: 100%;

		> dt,
		> dd
		{
			display: table-cell;
		}

		> dt
		{
			width: 50%;
			padding-right: @xf-paddingMedium;
		}

		&.pairs--fixedSmall > dt
		{
			width: 200px;
		}
		&.pairs--fluidSmall > dt
		{
			width: 25%;
		}
		&.pairs--fluidHuge > dt
		{
			width: 70%;
		}

		@media (max-width: 500px)
		{
			display: block;

			> dt,
			> dd
			{
				display: block;
			}

			&.pairs > dt // the .pairs repetition is to increase specificity to override all fixed/fluid options
			{
				width: auto;
				padding-right: 0;
			}

			& + .pairs
			{
				margin-top: @xf-paddingMedium;
			}
		}
	}

	&.pairs--justified
	{
		.m-clearFix();

		> dt
		{
			float: left;
			max-width: 100%;
			margin-right: @xf-paddingMedium;
		}

		> dd
		{
			float: right;
			text-align: right;
			max-width: 100%;
		}
	}

	&.pairs--rows
	{
		display: inline-table;
		margin-right: @xf-paddingMedium;

		&.pairs--rows--centered
		{
			> dt,
			> dd
			{
				text-align: center;
			}
		}

		&:last-of-type
		{
			margin-right: 0;
		}

		> dt
		{
			display: table-row;
			font-size: 80%;

			&:after
			{
				content: '';
				display: none;
			}
		}

		> dd
		{
			display: table-row;
		}
	}
}

.pairWrapper
{
	&.pairWrapper--spaced
	{
		.pairs
		{
			margin-top: @xf-paddingMedium;

			&:first-child
			{
				margin-top: 0;
			}
		}
	}
}

.pairJustifier
{
	display: flex;
	flex-wrap: wrap;
	justify-content: space-between;

	margin-right: -5px;
	margin-bottom: -5px;

	.pairs.pairs--rows
	{
		margin-right: 5px;
		margin-bottom: 5px;
	}
}

.listPlain
{
	.m-listPlain();
}

.listInline
{
	.m-listPlain();

	&.listInline--selfInline
	{
		display: inline;
	}

	> li
	{
		display: inline;
		margin: 0;
		padding: 0;
	}

	&.listInline--block
	{
		> li
		{
			display: inline-block;
		}
	}

	&.listInline--comma
	{
		> li:after
		{
			content: "{$xf.language.comma_separator}";
		}

		> li:last-child:after
		{
			content: "";
			display: none;
		}
	}

	&.listInline--bullet
	{
		> li:before
		{
			content: "\00B7\20";
		}

		> li:first-child:before
		{
			content: "";
			display: none;
		}
	}
}

.listHeap
{
	.m-listPlain();
	margin-top: -4px;

	> li
	{
		margin: 0;
		padding: 0;
		display: inline-block;
		margin-right: -1px;
		margin-top: 4px;

		&:last-child
		{
			margin-right: 0;
		}
	}
}

.listColumns
{
	.m-columns(2, @xf-responsiveNarrow);

	> li
	{
		.m-columnBreakAvoid();
		position: relative; // workaround Chrome quirk with hover triggers in visitor menu
	}

	&.listColumns--spaced
	{
		> li
		{
			margin-bottom: .5em;
		}
	}

	&.listColumns--narrow
	{
		.m-columns(2);
	}

	&.listColumns--together
	{
		-moz-column-gap: 0;
		-webkit-column-gap: 0;
		column-gap: 0;
	}

	&.listColumns--collapsed
	{
		display: inline-block;
	}

	&.listColumns--3
	{
		.m-columns(3);

		@media (max-width: @xf-responsiveWide)
		{
			.m-columns(2, @xf-responsiveNarrow);
		}
	}

	&.listColumns--4
	{
		.m-columns(4);

		@media (max-width: @xf-responsiveWide)
		{
			.m-columns(2, @xf-responsiveNarrow);
		}
	}
}

.textHighlight
{
	font-style: normal;
	font-weight: @xf-fontWeightHeavy;

	&.textHighlight--attention
	{
		color: @xf-textColorAttention;
	}
}]]></template>
  <template type="public" title="core_menu.less" version_id="2010131" version_string="2.1.1 Beta 1"><![CDATA[// ###################################### MENUS ######################

@_menu-arrowSize: 8px;
@_menu-edgePadding: @xf-pageEdgeSpacer;
@_menu-paddingV: @xf-paddingMedium;
@_menu-closePaddingH: @xf-paddingLarge;
@_menu-paddingH: @xf-paddingLargest;

.menuTrigger
{
	cursor: pointer;

	&:after
	{
		.m-menuGadget(true);
	}
}

.menuOutsideClicker
{
	position: fixed;
	display: none;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	z-index: 2; // above non set stuff but below anything intentionally set

	&.is-active
	{
		display: block;
		-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
	}
}

.menu
{
	.m-transitionFade();

	position: absolute;
	z-index: @zIndex-2;
	margin: @_menu-arrowSize 0 0;
	min-width: 240px;
	max-width: 320px;
	border-radius: @xf-menuBorderRadius;

	.m-dropShadow(0, 5px, 10px, 0, .35);

	&.menu--structural
	{
		margin-top: 0;

		// when menus nudge up against structure, the joined corner should not be radiused
		&.menu--left
		{
			border-top-left-radius: 0;
		}
		&.menu--right
		{
			border-top-right-radius: 0;
		}
	}

	&.menu--superWide
	{
		width: 75%;
		max-width: ~"calc(100% - @{xf-pageEdgeSpacer})";
	}

	&.menu--veryWide
	{
		width: 500px;
		max-width: ~"calc(100% - @{xf-pageEdgeSpacer})";
	}

	&.menu--wide
	{
		width: 350px;
		max-width: ~"calc(100% - @{xf-pageEdgeSpacer})";
	}

	&.menu--medium
	{
		width: 300px;
		max-width: ~"calc(100% - @{xf-pageEdgeSpacer})";
	}

	&.menu--potentialFixed
	{
		z-index: @zIndex-4;
	}
}

.menu-arrow
{
	position: absolute;
	width: 0;
	height: 0;
	border: 0 solid transparent;

	top: -@_menu-arrowSize;
	-ltr-rtl-left: 50%;
	-ltr-rtl-margin-left: -@_menu-arrowSize;
	.m-triangleUp(@xf-menuFeatureBorderColor, @_menu-arrowSize);

	.menu--structural &
	{
		top: -@_menu-arrowSize;
	}

	.menu--up &
	{
		display: none;
	}
}

.menu-content
{
	margin: 0;
	padding: 0;
	list-style: none;
	text-align: left;
	.xf-menu();
	border-radius: @xf-menuBorderRadius;
	border-top: @xf-borderSizeFeature solid @xf-menuFeatureBorderColor;

	// when menus nudge up against structure, the joined corner should not be radiused
	.menu--structural.menu--left &
	{
		border-top-left-radius: 0;
	}
	.menu--structural.menu--right &
	{
		border-top-right-radius: 0;
	}

	// potentially fixed menus
	.menu--potentialFixed &
	{
		overflow: auto;
		max-height: 450px;
		max-height: 80vh;
	}

	> :last-child
	{
		border-bottom-left-radius: @xf-menuBorderRadius;
		border-bottom-right-radius: @xf-menuBorderRadius;
	}
}

.menu--pageJump
{
	width: auto;
	min-width: 0;
}

.menu-header
{
	padding: @xf-blockPaddingV @_menu-paddingH;
	margin: 0;
	font-weight: @xf-fontWeightNormal;
	text-decoration: none;
	.xf-menuHeader();

	.m-clearFix();
	.m-hiddenLinks();
}

.menu-tabHeader
{
	padding: 0;
	margin: 0;
	font-weight: @xf-fontWeightNormal;
	text-decoration: none;
	.xf-menuTabHeader();
	.m-tabsTogether(xf-default(@xf-menuTabHeader--font-size, @xf-fontSizeNormal));

	.tabs-tab
	{
		padding: @xf-blockPaddingV @_menu-paddingH max(0px, @xf-blockPaddingV - @xf-borderSizeFeature);
		border-bottom: @xf-borderSizeFeature solid transparent;

		&:hover
		{
			color: @xf-blockMinorTabHeaderSelected--color;
		}

		&.is-active
		{
			.xf-menuTabHeaderSelected();
		}
	}

	.hScroller-action
	{
		.m-hScrollerActionColorVariation(
			xf-default(@xf-menuTabHeader--background-color, transparent),
			xf-default(@xf-menuTabHeader--color, ~""),
			xf-default(@xf-blockMinorTabHeaderSelected--color, ~"")
		);
	}
}

.menu-scroller
{
	overflow: auto;
	max-height: 300px;
	max-height: 60vh;
	-webkit-overflow-scrolling: touch;

	.menu-row + &
	{
		border-top: @xf-borderSize solid @xf-borderColorLight;
	}
}

.menu-row
{
	margin: 0;
	padding: @_menu-paddingV @_menu-paddingH;
	.m-clearFix();

	&.menu-row--alt
	{
		.xf-contentAltBase();
	}

	&.menu-row--highlighted
	{
		.xf-contentHighlightBase();
	}

	&.menu-row--close
	{
		padding-left: @_menu-closePaddingH;
		padding-right: @_menu-closePaddingH;
	}

	&.menu-row--separated
	{
		+ .menu-row
		{
			border-top: @xf-borderSize solid @xf-borderColorLight;
		}
	}

	&.menu-row--clickable:hover
	{
		background: @xf-contentHighlightBg;
	}

	&:empty
	{
		padding: 0;
	}
}

.menu-linkRow
{
	display: block;
	padding: @_menu-paddingV @_menu-paddingH @_menu-paddingV (@_menu-paddingH) - (@xf-borderSizeFeature);
	border-left: @xf-borderSizeFeature solid transparent;
	.xf-menuLinkRow();

	&.menu-linkRow--alt
	{
		.xf-contentAltBase();
	}

	&.is-selected,
	&:hover,
	&:focus
	{
		.xf-menuLinkRowSelected();

		border-left-color: fade(@xf-borderColorFeature, 50%);

		&:focus
		{
			outline: 0;
		}

		&.is-selected
		{
			border-left-color: @xf-borderColorFeature;
		}
	}

	i[aria-hidden=true]
	{
		font-size: @xf-fontSizeSmall;
		display: inline-block;
		width: 23px; // about 1.75em at this font size

		&:after
		{
			.m-faBase();
			color: @xf-textColorMuted;
			left: @xf-blockPaddingH;
		}

		& ~ .menu-linkRow-hint
		{
			padding-left: 23px;
		}
	}

	&:hover i[aria-hidden=true]:after
	{
		color: @xf-linkHoverColor;
	}
}

.menu-linkRow-hint
{
	font-style: inherit;
	font-size: @xf-fontSizeSmallest;
	color: @xf-textColorMuted;
	display: block;
}

.menu-separator
{
	margin: 0 (@_menu-paddingH) / 2;
	padding: 0;
	border: none;
	border-top: @xf-borderSize solid @xf-borderColorLight;

	&.menu-separator--hard
	{
		margin: 0;
	}

	& + .menu-separator,
	&:last-child
	{
		display: none;
	}
}

.menu-footer
{
	padding: @xf-blockPaddingV @_menu-paddingH;
	.xf-menuFooter();
	.m-clearFix();

	&.menu-footer--close
	{
		padding-left: @_menu-closePaddingH;
		padding-right: @_menu-closePaddingH;
	}

	&:not(.menu-footer--split)
	{
		.menu-footer-counter
		{
			float: left;
		}

		.menu-footer-controls
		{
			float: right;
		}
	}

	&.menu-footer--split
	{
		display: flex;
		align-items: center;

		.menu-footer-main,
		.menu-footer-counter
		{
			flex-grow: 1;
		}

		.menu-footer-select:not(:last-child)
		{
			margin: 0 1em;
		}

		.menu-footer-opposite,
		.menu-footer-controls
		{
			margin-left: auto;
		}
	}
}]]></template>
  <template type="public" title="core_meter_bar.less" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[meter.meterBar
{
	margin: @xf-paddingSmall auto @xf-paddingSmall;
	width: 100%;
	height: 10px;

	&::-webkit-meter-bar
	{
		.m-meterVariantEmpty();
	}

	&::-webkit-meter-optimum-value
	{
		.m-meterVariantOptimum();
	}

	&::-webkit-meter-suboptimum-value
	{
		.m-meterVariantSubOptimum();
	}

	&::-webkit-meter-even-less-good-value
	{
		.m-meterVariantSubSubOptimum();
	}

	.m-meterVariantEmpty();
}

:-moz-meter-optimum::-moz-meter-bar
{
	.m-meterVariantOptimum();
}

:-moz-meter-sub-optimum::-moz-meter-bar
{
	.m-meterVariantSubOptimum();
}

:-moz-meter-sub-sub-optimum::-moz-meter-bar
{
	.m-meterVariantSubSubOptimum();
}

@_emptyColor: xf-intensify(@xf-paletteNeutral1, 6%);
@_optimumColor: #63b265;
@_subOptimumColor: #dcda54;
@_subSubOptimumColor: #c84448;

.meterBarLabel
{
	font-size: @xf-fontSizeSmall;
}

.m-meterVariantEmpty()
{
	background: none;
	background-color: @_emptyColor;
}

.m-meterVariantOptimum()
{
	background: @_optimumColor;
}

.m-meterVariantSubOptimum()
{
	background: @_subOptimumColor;
}

.m-meterVariantSubSubOptimum()
{
	background: @_subSubOptimumColor;
}]]></template>
  <template type="public" title="core_offcanvas.less" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[// ################################## OFF CANVAS MENU #########################

@_offCanvas-animationLength: (2 * (@xf-animationSpeed));

.offCanvasMenu
{
	display: none;
	position: fixed;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	z-index: @zIndex-5;
	.m-transition(none; @_offCanvas-animationLength); // needed to keep the children displayed through animation
	.m-transform(scale(1)); // forces instant repaint in iOS

	// every tap on iOS causes a brief highlight, disable it for off canvas menu
	// then restore it for some tappable elements to retain it
	-webkit-tap-highlight-color: rgba(0, 0, 0, 0);

	a
	{
		-webkit-tap-highlight-color: initial;
	}

	&.is-transitioning
	{
		display: block;
	}

	&.is-active
	{
		display: block;
	}

	.offCanvasMenu-hidden
	{
		display: none;
	}

	.offCanvasMenu-shown
	{
		display: block;
	}

	.offCanvasMenu-closer
	{
		float: right;
		cursor: pointer;
		text-decoration: none;
		-webkit-tap-highlight-color: initial;
		padding: @xf-paddingLarge;
		margin: -@xf-paddingLarge;

		&:hover
		{
			text-decoration: none;
		}

		&:after
		{
			.m-faBase();
			.m-faContent(@fa-var-times);
		}
	}

	.block-container,
	.blockMessage
	{
		margin-left: 0;
		margin-right: 0;
		border-radius: 0;
		border-left: none;
		border-right: none;
	}
}

.offCanvasMenu-shown
{
	display: none;
}

.offCanvasMenu-backdrop
{
	position: absolute;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	background: rgba(0, 0, 0, .25);
	opacity: 0;
	.m-transition(all; @_offCanvas-animationLength; ease-in-out);

	.is-active &
	{
		opacity: 1;
	}
}

.offCanvasMenu-content
{
	position: relative;
	width: 280px;
	max-width: 85%;
	height: 100%;
	padding-bottom: 44px;
	overflow: auto;
	.m-transition(all; @_offCanvas-animationLength; ease-in-out);
	-webkit-overflow-scrolling: touch;

	& when(@ltr)
	{
		.m-dropShadow(2px, 0, 5px, 0, .25);
		.m-transform(translateX(-280px));
	}

	& when(@rtl)
	{
		.m-dropShadow(-2px, 0, 5px, 0, .25);
		.m-transform(translateX(280px));
	}

	.is-active &
	{
		.m-transform(translateX(0));
	}
}

.offCanvasMenu-header
{
	padding: @xf-paddingLarge;
	margin: 0;
	font-size: @xf-fontSizeLarger;
	font-weight: @xf-fontWeightNormal;

	.m-clearFix();
	.m-hiddenLinks();

	&.offCanvasMenu-header--separated
	{
		margin-bottom: @xf-paddingLarge;
	}
}

.offCanvasMenu-row
{
	padding: @xf-paddingLarge;
}

.offCanvasMenu-separator
{
	padding: 0;
	margin: 0;
	border: none;
	border-top: 1px solid transparent;
}

.offCanvasMenu-link
{
	display: block;
	padding: @xf-paddingLarge;
	font-size: @xf-fontSizeLarge;
	text-decoration: inherit;

	&:hover
	{
		text-decoration: inherit;
	}

	&.offCanvasMenu-link--splitToggle
	{
		position: relative;
		text-decoration: inherit;

		&:before
		{
			content: '';
			position: absolute;
			left: 0;
			top: (@xf-paddingLarge - 4px);
			bottom: (@xf-paddingLarge - 4px);
			width: 0;
			border-left: 1px solid currentColor;
		}

		&:after
		{
			.m-faBase();
			.m-faContent(@fa-var-chevron-down, 1em);
		}

		&.is-active:after
		{
			.m-faContent(@fa-var-chevron-up, 1em);
		}
	}
}

.offCanvasMenu-linkHolder
{
	display: flex;

	&.is-selected
	{
		a
		{
			color: inherit;
		}

		.offCanvasMenu-link:first-child
		{
			padding-left: @xf-paddingLarge;
		}
	}

	.offCanvasMenu-link
	{
		flex-grow: 1;

		&.offCanvasMenu-link--splitToggle
		{
			flex-grow: 0;
		}

		&:hover
		{
			background: none;
		}
	}
}

.offCanvasMenu-list
{
	.m-listPlain();

	> li
	{
		border-top: @xf-borderSize solid transparent;
	}

	&:first-child > li:first-child
	{
		border-top: none;
	}
}

.offCanvasMenu-subList
{
	.m-listPlain();
	.m-transitionFadeDown();

	padding-bottom: @xf-paddingLargest;

	.offCanvasMenu-link
	{
		padding-left: @xf-paddingLarge;
		padding-top: @xf-paddingMedium;
		padding-bottom: @xf-paddingMedium;
		font-size: @xf-fontSizeSmall;
	}
}

.offCanvasMenu--blocks
{
	.offCanvasMenu-content
	{
		.xf-pageBackground();
		color: @xf-textColor;
	}

	.offCanvasMenu-header
	{
		color: @xf-textColorEmphasized;
		background: @xf-contentHighlightBg;
		border-bottom: @xf-borderSize solid @xf-borderColorHeavy;
	}

	.offCanvasMenu-separator
	{
		border-top-color: @xf-borderColor;
	}

	.offCanvasMenu-list > li
	{
		border-top-color: @xf-borderColor;
	}
}

.offCanvasMenu--nav
{
	.offCanvasMenu-content
	{
		.xf-publicNav();

		a
		{
			color: inherit;
		}
	}

	.offCanvasMenu-header
	{
		background: @xf-publicHeaderAdjustColor;
		border-bottom: @xf-borderSize solid fadein(@xf-publicHeaderAdjustColor, 10%);
	}

	.offCanvasMenu-list
	{
		border-bottom: @xf-borderSize solid fadein(@xf-publicHeaderAdjustColor, 10%);
	}

	.offCanvasMenu-separator
	{
		border-top-color: fadein(@xf-publicHeaderAdjustColor, 10%);
	}

	.offCanvasMenu-link.offCanvasMenu-link--splitToggle:before
	{
		border-left-color: fadein(@xf-publicHeaderAdjustColor, 1%);
	}

	.offCanvasMenu-linkHolder
	{
		text-decoration: none;

		&:hover
		{
			background: fadeout(@xf-publicHeaderAdjustColor, 6%);
		}

		&.is-selected
		{
			.xf-publicNavSelected(no-border, no-border-radius);

			.offCanvasMenu-link.offCanvasMenu-link--splitToggle:before
			{
				border-left-color: fade(xf-default(@xf-publicNavSelected--color, transparent), 20%);
			}
		}
	}

	.offCanvasMenu-subList
	{
		background: @xf-publicHeaderAdjustColor;

		.offCanvasMenu-link:hover
		{
			text-decoration: none;
			background: @xf-publicHeaderAdjustColor;
		}
	}

	.offCanvasMenu-list > li
	{
		border-top-color: @xf-publicHeaderAdjustColor;
	}
}]]></template>
  <template type="public" title="core_overlay.less" version_id="2010052" version_string="2.1.0 Release Candidate 2"><![CDATA[// #################################### OVERLAYS ################################

.overlay-container
{
	display: none;
	position: fixed;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	z-index: @zIndex-9;
	background: @xf-overlayMaskColor;
	-webkit-overflow-scrolling: touch;
	opacity: 0;
	.m-transition(opacity);

	&.is-transitioning
	{
		display: block;
	}

	&.is-active
	{
		display: block;
		opacity: 1;
	}
}

.overlay
{
	position: relative;
	margin: 40px auto 10px;
	margin-top: @xf-overlayTopMargin;
	width: 100%;
	max-width: 800px;
	.xf-pageBackground();
	color: @xf-textColor;
	.xf-blockBorder();
	border-radius: @xf-blockBorderRadius;
	.m-dropShadow(0, 5px, 15px, 0, .5);
	outline: none;

	> .overlay-title:first-child,
	.overlay-firstChild
	{
		border-top-left-radius: @xf-blockBorderRadius;
		border-top-right-radius: @xf-blockBorderRadius;
	}

	> .overlay-content > *:last-child,
	.overlay-lastChild
	{
		border-bottom-left-radius: @xf-blockBorderRadius;
		border-bottom-right-radius: @xf-blockBorderRadius;
	}
}

@media (max-width: 820px)
{
	.overlay
	{
		max-width: ~"calc(100% - 20px)";
	}
}

.overlay-title
{
	.m-clearFix();

	display: none;
	margin: 0;
	font-weight: @xf-fontWeightNormal;
	.xf-overlayHeader();

	.overlay &
	{
		display: block;
	}
}

.overlay-titleCloser
{
	float: right;
	cursor: pointer;
	margin-left: 5px;
	text-decoration: none;
	opacity: .5;
	.m-transition();

	&:after
	{
		.m-faBase();
		.m-faContent(@fa-var-times);
	}

	&:hover
	{
		text-decoration: none;
		opacity: 1;
	}
}

.overlay-content
{
	.m-clearFix();
}

// when displaying a modal, prevent scrolling on the main content but allow it on the overlay
body.is-modalOpen
{
	overflow: hidden !important;

	.overlay-container,
	.offCanvasMenu
	{
		overflow-y: scroll !important;
	}
}

@media (max-width: @xf-responsiveNarrow)
{
	.overlay-title
	{
		font-size: @xf-fontSizeLarger;
	}
}

// ############################### OVERLAY/BLOCK NESTING ##############################

.block-container > .tabPanes > li,
.block-container > .block-body,
.block-container > .block-body > .block-row,
.overlay-content
{
	> .blocks > .block > .block-container,
	> .block > .block-container,
	> .blockMessage
	{
		margin-left: 0;
		margin-right: 0;
		border-radius: @xf-blockBorderRadius; // restore the radius that might be removed for some viewports as we're within the overlay
		border-left: none;
		border-right: none;
	}

	> .blocks > .block:first-child,
	> .block:first-child,
	> .blockMessage:first-child
	{
		margin-top: 0;

		.block-outer:not(.block-outer--after)
		{
			border-bottom: @xf-borderSize solid @xf-borderColorLight;
			padding: @xf-blockPaddingV;
		}
	}

	> .blocks > .block:last-child,
	> .block:last-child,
	> .blockMessage:last-child
	{
		margin-bottom: 0;

		.block-outer.block-outer--after
		{
			border-top: @xf-borderSize solid @xf-borderColorLight;
			padding: @xf-blockPaddingV;
		}
	}

	> .blocks > .block:first-child > .block-container,
	> .block:first-child > .block-container,
	> .blockMessage:first-child
	{
		border-top: none;
	}

	> .blocks > .block:last-child > .block-container,
	> .block:last-child > .block-container,
	> .blockMessage:last-child
	{
		border-bottom: none;
	}

	> .blocks > .block:not(:first-child) > .block-container,
	> .block:not(:first-child) > .block-container,
	> .blockMessage:not(:first-child)
	{
		.m-borderTopRadius(0);
	}

	> .blocks > .block:not(:last-child) > .block-container,
	> .block:not(:last-child) > .block-container,
	> .blockMessage:not(:last-child)
	{
		.m-borderBottomRadius(0);
	}
}

.overlay-content
{
	> .blocks > .block > .block-container,
	> .block > .block-container,
	> .blockMessage
	{
		.m-borderTopRadius(0);
	}

	> .blocks > .block > .block-container,
	> .block > .block-container
	{
		> :first-child
		{
			.m-borderTopRadius(0);
		}

		> .block-body:first-child > .formRow:first-child
		{
			> dt { border-top-left-radius: 0; }
			> dd { border-top-right-radius: 0; }
		}

		> .dataList:first-child
		{
			tbody:first-child .dataList-row:first-child,
			thead:first-child .dataList-row:first-child
			{
				> .dataList-cell:first-child { border-top-left-radius: 0; }
				> .dataList-cell:last-child { border-top-right-radius: 0; }
			}
		}
	}

	> .block:last-child > .block-container > .formSubmitRow:not(.is-sticky):last-child .formSubmitRow-bar
	{
		border-bottom-left-radius: @block-borderRadius-inner;
		border-bottom-right-radius: @block-borderRadius-inner;
	}
}]]></template>
  <template type="public" title="core_pagenav.less" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[// ####################################### PAGE NAVIGATION ########################

@_page-paddingV: xf-default(@xf-buttonBase--padding-top, 6px);
@_page-paddingH: 8px;
@_page-paddingHSimple: 10px;

.pageNavWrapper {}

.m-pageNavElCore()
{
	background: linear-gradient(0deg, @xf-contentHighlightBg, mix(@xf-contentHighlightBg, @xf-contentBg, 25%));
	color: @xf-linkColor;
	.xf-blockBorder();
	font-size: @xf-fontSizeSmall;
	white-space: nowrap;

	&:hover,
	&:active
	{
		background: xf-intensify(@xf-contentHighlightBg, 3%);
		text-decoration: none;
	}
}

.pageNav-jump
{
	display: inline-block;
	.m-pageNavElCore();
	border-radius: @xf-borderRadiusSmall;
	padding: @_page-paddingV @_page-paddingH;

	&.pageNav-jump--prev:before,
	&.pageNav-jump--next:after
	{
		.m-faBase('Pro', @faWeight-solid);
		font-size: 80%;
		unicode-bidi: isolate; // maintain position in RTL with LTR text
	}

	&.pageNav-jump--prev:before
	{
		.m-faContent("@{fa-var-caret-left}\00a0", .61em, ltr);
		.m-faContent("@{fa-var-caret-right}\00a0", .61em, rtl);
	}

	&.pageNav-jump--next:after
	{
		.m-faContent("\00a0@{fa-var-caret-right}", .61em, ltr);
		.m-faContent("\00a0@{fa-var-caret-left}", .61em, rtl);
	}
}

.pageNav-main
{
	.m-listPlain();
	display: inline-table;
}

.pageNav-page
{
	display: table-cell;
	.m-pageNavElCore();

	&:not(:last-child)
	{
		border-right: none;
	}

	&:not(:first-child)
	{
		border-left-color: @xf-borderColorLight;
	}

	&:first-child
	{
		.m-borderLeftRadius(@xf-borderRadiusSmall);
	}

	&:last-child
	{
		.m-borderRightRadius(@xf-borderRadiusSmall);
	}

	> a
	{
		display: block;
		padding: @_page-paddingV @_page-paddingH;
		text-decoration: none;
		color: inherit;
	}

	&.pageNav-page--current
	{
		background: @xf-contentAccentBg;
		color: @xf-textColorAccentContent;

		border: @xf-borderSize solid @xf-borderColorAccentContent;
		cursor: pointer;

		&:hover,
		&:active
		{
			background: xf-intensify(@xf-contentAccentBg, 3%);
		}

		+ .pageNav-page
		{
			border-left: none;
		}
	}
}

// Hide relative page numbers on narrow devices when we have a skip entry as we don't necessarily have space.
@media (max-width: @xf-responsiveNarrow)
{
	.pageNav--skipStart
	{
		.pageNav-page.pageNav-page--earlier
		{
			display: none;
		}
	}

	.pageNav--skipEnd
	{
		.pageNav-page.pageNav-page--later
		{
			display: none;
		}

		.pageNav-page.pageNav-page--skipEnd
		{
			border-left: none;
		}
	}
}

// ########################### SIMPLE PAGE NAV VARIANT ########################

.pageNavSimple
{
	display: inline-flex;
}

.pageNavSimple-el
{
	display: inline-block;
	.xf-blockBorder();
	border-radius: @xf-borderRadiusSmall;
	padding: @_page-paddingV @_page-paddingHSimple;
	font-size: @xf-fontSizeSmall;
	text-align: center;
	white-space: nowrap;
	margin-right: 4px;

	&:last-child
	{
		margin-right: 0;
	}

	&.pageNavSimple-el--current
	{
		.xf-contentAccentBase();

		&:hover,
		&:active
		{
			background: xf-intensify(@xf-contentAccentBg, 3%);
			text-decoration: none;
		}
	}

	&.pageNavSimple-el--prev,
	&.pageNavSimple-el--next
	{
		background: linear-gradient(0deg, @xf-contentHighlightBg, mix(@xf-contentHighlightBg, @xf-contentBg, 25%));
		color: @xf-linkColor;
		min-width: 75px;

		@media (max-width: 350px)
		{
			min-width: 0;
		}

		&:hover,
		&:active
		{
			background: xf-intensify(@xf-contentHighlightBg, 3%);
			text-decoration: none;
		}

		i:before
		{
			.m-faBase('Pro', @faWeight-solid);
		}
	}

	&.pageNavSimple-el--prev i:before
	{
		.m-faContent(@fa-var-caret-left, .44em, ltr);
		.m-faContent(@fa-var-caret-right, .44em, rtl);
	}

	&.pageNavSimple-el--next i:before
	{
		.m-faContent(@fa-var-caret-right, .44em, ltr);
		.m-faContent(@fa-var-caret-left, .44em, rtl);
	}

	&.pageNavSimple-el--first,
	&.pageNavSimple-el--last
	{
		border-color: transparent;
		padding-left: (@_page-paddingHSimple / 2);
		padding-right: (@_page-paddingHSimple / 2);
		color: fade(@xf-linkColor, 60%);

		&:hover,
		&:active
		{
			.xf-blockBorder();
			background: xf-intensify(@xf-contentHighlightBg, 3%);
			color: @xf-linkColor;
			text-decoration: none;
		}

		i:before
		{
			.m-faBase('Pro', @faWeight-solid);
		}
	}

	&.pageNavSimple-el--first i:before
	{
		.m-faContent(@fa-var-backward, 1em, ltr);
		.m-faContent(@fa-var-forward, 1em, rtl);
	}

	&.pageNavSimple-el--last i:before
	{
		.m-faContent(@fa-var-forward, 1em, ltr);
		.m-faContent(@fa-var-backward, 1em, rtl);
	}

	&.is-disabled
	{
		border-color: transparent;
		background: none;
		color: @xf-textColorMuted;
		text-decoration: none;
		pointer-events: none;

		&:hover
		{
			background: none;
			color: @xf-textColorMuted;
		}
	}
}

// #################### DISPLAY VARIANTS #########################

.pageNavWrapper--simple
{
	.pageNav
	{
		display: none;
	}
}

.pageNavWrapper--full
{
	.pageNavSimple
	{
		display: none;
	}
}

.pageNavWrapper--mixed
{
	.pageNavSimple
	{
		display: none;
	}

	@media (max-width: @xf-responsiveMedium)
	{
		.pageNav
		{
			display: none;
		}

		.pageNavSimple
		{
			display: inline-flex;
		}
	}
}

// Hide any block page nav that goes before the block as we will be wasting vertical space.
@media (max-width: @xf-responsiveNarrow)
{
	.block-outer:not(.block-outer--after) .pageNavWrapper:not(.pageNavWrapper--forceShow)
	{
		display: none;
	}

	// this is a sanity check in case .block-outer--after is forgotten
	.block-container + .block-outer .pageNavWrapper
	{
		display: block;
	}
}]]></template>
  <template type="public" title="core_pikaday.less" version_id="2010132" version_string="2.1.1 Beta 2"><![CDATA[@pd-text-color: @xf-textColor;
@pd-title-color: @xf-textColorEmphasized;
@pd-title-bg: transparent;
@pd-picker-bg: @xf-contentBg;
@pd-picker-border: @xf-borderColorHeavy;
@pd-picker-border-radius: @xf-borderRadiusMedium;
@pd-th-color: @xf-textColorEmphasized;
@pd-day-color: @xf-textColor;
@pd-day-bg: @xf-contentHighlightBg;
@pd-day-hover-color: @xf-textColor;
@pd-day-hover-bg: xf-intensify(@pd-day-bg, 5%);
@pd-day-today-color: @xf-textColorFeature;
@pd-day-selected-color: contrast(@xf-textColorFeature);
@pd-day-selected-bg: @xf-textColorFeature;
@pd-day-selected-shadow: transparent;
@pd-day-disabled-color: @xf-textColor;
@pd-week-color: @xf-textColorEmphasized;
@pd-range-color: @xf-textColorAccentContent;
@pd-range-bg: @xf-contentAccentBg;
@pd-range-border: @xf-borderColorAccentContent;

.pika-single {
	z-index: 9999;
	display: block;
	position: relative;
	color: @pd-text-color;
	background: @pd-picker-bg;
	border: 1px solid;
	border-color: @pd-picker-border;
	border-radius: @pd-picker-border-radius;

	&.is-hidden {
		display: none;
	}

	&.is-bound {
		position: absolute;
		.m-dropShadow(0, 5px, 10px, 0, .25);
	}
}

// clear child float (pika-lendar), using the famous micro clearfix hack
// http://nicolasgallagher.com/micro-clearfix-hack/
.pika-single {
	*zoom: 1;

	&:before,
	&:after {
		content: " ";
		display: table;
	}

	&:after { clear: both }
}

.pika-lendar {
	float: left;
	width: 240px;
	margin: 8px;
}

.pika-title {
	position: relative;
	text-align: center;

	select {
		cursor: pointer;
		position: absolute;
		z-index: 9998;
		margin: 0;
		left: 0;
		top: 5px;
		filter: alpha(opacity=0);
		opacity: 0;
	}
}

.pika-label {
	display: inline-block;
	*display: inline;
	position: relative;
	z-index: 9999;
	overflow: hidden;
	margin: 0;
	padding: 5px 3px;
	font-size: 14px;
	line-height: 20px;
	font-weight: bold;
	color: @pd-title-color;
	background-color: @pd-title-bg;
}

.pika-prev,
.pika-next
{
	display: block;
	cursor: pointer;
	position: relative;
	outline: none;
	background: none;
	border: 0;
	padding: 0;
	width: 20px;
	height: 30px;
	white-space: nowrap;
	overflow: hidden;
	opacity: .5;
	font-size: 0;
	color: @pd-title-color;
	background-color: @pd-title-bg;

	&::before
	{
		.m-faBase();
		font-size: @xf-fontSizeLarge;
		vertical-align: middle;
		display: inline-block;
		margin: -4px 6px -4px 0;
	}

	&:hover {
		opacity: 1;
	}

	&.is-disabled {
		cursor: default;
		opacity: .2;
	}
}

.pika-prev
{
	&::before
	{
		.m-faContent(@fa-var-caret-left);
	}
}

.pika-next
{
	&::before
	{
		.m-faContent(@fa-var-caret-right);
	}
}

.pika-prev,
.is-rtl .pika-next {
	float: left;
	*left: 0;
}

.pika-next,
.is-rtl .pika-prev {
	float: right;
	*right: 0;
}

.pika-select {
	display: inline-block;
	*display: inline;
}

.pika-table {
	width: 100%;
	border-collapse: collapse;
	border-spacing: 0;
	border: 0;

	th,
	td {
		width: 14.285714285714286%;
		padding: 0;
	}

	th {
		color: @pd-th-color;
		font-size: 12px;
		line-height: 25px;
		font-weight: bold;
		text-align: center;
	}

	abbr {
		border-bottom: none;
	}
}

.pika-button {
	cursor: pointer;
	display: block;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
	outline: none;
	border: 0;
	margin: 0;
	width: 100%;
	padding: 5px;
	color: @pd-day-color;
	font-size: 12px;
	line-height: 15px;
	text-align: right;
	background: @pd-day-bg;

	.is-today & {
		color: @pd-day-today-color;
		font-weight: bold;
	}

	.is-inrange &,
	.is-startrange &,
	.is-endrange & {
		color: @pd-range-color;
		background: @pd-range-bg;
	}

	.is-startrange &
	{
		.m-borderLeftRadius(3px);
		border-left: 2px solid @pd-range-border;
	}

	.is-endrange &
	{
		.m-borderRightRadius(3px);
		border-right: 2px solid @pd-range-border;
	}

	.is-selected & {
		color: @pd-day-selected-color;
		font-weight: bold;
		background: @pd-day-selected-bg;
		box-shadow: inset 0 1px 3px @pd-day-selected-shadow;
		border-radius: 3px;
	}

	.is-disabled &,
	.is-outside-current-month & {
		pointer-events: none;
		cursor: default;
		color: @pd-day-disabled-color;
		opacity: .3;
	}

	&:hover {
		color: @pd-day-hover-color;
		background: @pd-day-hover-bg;
		box-shadow: none;
		border-radius: 3px;
	}
}

.pika-week {
	font-size: 11px;
	color: @pd-week-color;
}

.pika-time-container {
	clear: both;
}

.pika-time {
	margin: 7px auto 7px;
}]]></template>
  <template type="public" title="core_reaction.less" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[.reaction
{
	display: flex;
	-webkit-touch-callout: none;

	&.reaction--imageHidden
	{
		img
		{
			display: none;
		}

		&.reaction--1
		{
			i
			{
				.m-faBefore(@fa-var-thumbs-up);
				.m-faBase();
			}
		}
	}

	&.reaction--small,
	&.reaction--medium
	{
		display: inline-block;

		.reaction-text
		{
			margin-left: 0;
		}
	}

	&.reaction--right
	{
		justify-content: flex-end;
	}

	&.reaction--inline
	{
		display: inline-flex;;
	}

	a&:hover,
	a&:focus
	{
		text-decoration: none;

		.reaction-text
		{
			text-decoration: underline;
		}
	}
}

.reactionScore
{
	display: inline-block;
	padding: 2px 3px;
	min-width: 16px;
	text-align: center;
	vertical-align: text-bottom;
	border-radius: @xf-borderRadiusMedium;
	font-size: @xf-fontSizeSmallest;
	.xf-chip();

	&:hover
	{
		.xf-chipHover();
	}
}

.reaction-image
{
	vertical-align: text-bottom;

	.reaction--small &
	{
		max-width: 16px;
		max-height: 16px;
	}

	.reaction--medium &
	{
		max-width: 21px;
		max-height: 21px;
	}
}

.reaction-sprite
{
	vertical-align: text-bottom;

	<xf:if is="$reactionSprites">
		<xf:foreach loop="$reactionSprites" key="$reactionId" value="$reactionSprite">
			<xf:if is="$reactionSprite.sprite_css">
				.reaction--{$reactionId} &
				{
					{$reactionSprite.sprite_css|raw}
				}
			</xf:if>
			<xf:if is="$reactionSprite.small_sprite_css">
				.reaction--small.reaction--{$reactionId} &
				{
					{$reactionSprite.small_sprite_css|raw}
				}
			</xf:if>
			<xf:if is="$reactionSprite.medium_sprite_css">
				.reaction--medium.reaction--{$reactionId} &
				{
					{$reactionSprite.medium_sprite_css|raw}
				}
			</xf:if>
		</xf:foreach>
	</xf:if>
}

.reaction-text
{
	margin-left: 10px;
	align-self: center;

	// note: when we add a reaction we make the text bold
	// the below approach sets the space for that to ensure
	// the text doesn't jump when the bold happens.
	&::after
	{
		content: " ";
		font-weight: @xf-fontWeightHeavy;
		height: 1px;
		color: transparent;
		overflow: hidden;
		visibility: hidden;
	}

	.has-reaction &
	{
		font-weight: @xf-fontWeightHeavy;
	}

	.reaction--small &
	{
		margin-left: 0;
	}

	<xf:if is="$reactionColors">
		<xf:foreach loop="$reactionColors" key="$reactionId" value="$reactionColor">
			<xf:if is="$reactionColor">
				.reaction--{$reactionId} &
				{
					color: {$reactionColor};
				}
			</xf:if>
		</xf:foreach>
	</xf:if>
}

<xf:if is="$reactionColors">
	<xf:foreach loop="$reactionColors" key="$reactionId" value="$reactionColor">
		<xf:if is="$reactionColor">
			.is-active.tabs-tab--reaction{$reactionId}
			{
				border-color: {$reactionColor} !important;
			}
		</xf:if>
	</xf:foreach>
</xf:if>]]></template>
  <template type="public" title="core_setup.less" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[// Vital base setup, don't change these!

html:after
{
	content: 'full';
	display: none;

	@media (max-width: @xf-responsiveWide) { content: 'wide'; }
	@media (max-width: @xf-responsiveMedium) { content: 'medium'; }
	@media (max-width: @xf-responsiveNarrow) { content: 'narrow'; }
}

*
{
	// global sizing calculations expect border-box
	box-sizing: border-box;
}

body
{
	// don't hide the vertical scrollbar
	overflow-y: scroll !important;
}


[data-xf-click], a[tabindex]
{
	// iOS doesn't bubble clicks up to the body where we have a listener, so we need to force that
	cursor: pointer;
}

[dir=auto]
{
	// this will get flipped in RT
	text-align: left;
}

pre, textarea
{
	// soft line wraps
	word-wrap: normal;
}

img
{
	// without specifying this, resized images look worse
	-ms-interpolation-mode: bicubic;
}

// #################################################
// Focus handlers, set by XF.NavDeviceWatcher (core.js)

.has-pointer-nav
{
	:focus
	{
		outline: 0
	}

	::-moz-focus-inner
	{
		border: 0;
	}

	.iconic > input:focus + i
	{
		&:before,
		&:after
		{
			outline: 0;
		}
	}
}]]></template>
  <template type="public" title="core_smilie.less" version_id="2010053" version_string="2.1.0 Release Candidate 3"><![CDATA[.smilie
{
	vertical-align: text-bottom;
	max-width: none;

	&.smilie--emoji
	{
		width: 1.467em;
	}

	&.is-clicked
	{
		transform: rotate(45deg);
		transition: all 0.25s;
	}
}

.contentRow-figure--emoji
{
	.smilie.smilie--emoji
	{
		width: 22px;
	}

	img
	{
		max-width: 24px;
		max-height: 24px;
		vertical-align: top;
	}
}

<xf:if is="$smilieSprites">
	<xf:foreach loop="$smilieSprites" key="$smilieId" value="$smilieSprite">
		<xf:if is="$smilieSprite.sprite_css">
			.smilie--sprite.smilie--sprite{$smilieId}
			{
				{$smilieSprite.sprite_css|raw}
			}
		</xf:if>
	</xf:foreach>
</xf:if>]]></template>
  <template type="public" title="core_tab.less" version_id="2010131" version_string="2.1.1 Beta 1"><![CDATA[// ################################## TABS ####################################

.tabs
{
	display: flex;

	&.tabs--wrappable
	{
		flex-wrap: wrap;
	}
}

.tabs-tab
{
	display: inline-block;
	cursor: pointer;
	white-space: nowrap;
	color: inherit;
	font-weight: inherit;
	text-decoration: none;
	.m-transition();

	&:hover
	{
		text-decoration: none;
	}
}

.tabs-extra
{
	float: right;
	position: relative;
	margin-left: auto;
	padding: 0 0 0 @xf-paddingMedium;
	align-self: center;
	white-space: nowrap;

	a
	{
		color: inherit;
		text-decoration: none;
		display: block;
		padding: @xf-paddingMedium;
	}
}

.tabPanes
{
	.m-listPlain();

	> li
	{
		display: none;

		&.is-active
		{
			display: block;
		}
	}
}

// ################################# OUTER TABS #########################

.tabs--standalone
{
	padding: 0;
	margin-bottom: @xf-elementSpacer;
	font-weight: @xf-fontWeightNormal;
	.xf-blockBorder();
	.xf-standaloneTab();
	.m-tabsTogether(xf-default(@xf-standaloneTab--font-size, @xf-fontSizeNormal));

	.tabs-tab
	{
		padding: @xf-blockPaddingV @xf-blockPaddingH max(0px, @xf-blockPaddingV - @xf-borderSizeFeature);
		border-bottom: @xf-borderSizeFeature solid transparent;

		&:hover
		{
			color: @xf-standaloneTabSelected--color;
		}

		&.is-active
		{
			.xf-standaloneTabSelected();
		}
	}

	.hScroller-action
	{
		.m-hScrollerActionColorVariation(
			xf-default(@xf-standaloneTab--background-color, transparent),
			xf-default(@xf-standaloneTab--color, ~""),
			xf-default(@xf-standaloneTabSelected--color, ~"")
		);
	}
}

@media (max-width: @xf-responsiveEdgeSpacerRemoval)
{
	.tabs--standalone
	{
		margin-left: -@xf-pageEdgeSpacer;
		margin-right: -@xf-pageEdgeSpacer;
		border-radius: 0;
		border-left: none;
		border-right: none;
	}
}]]></template>
  <template type="public" title="core_tooltip.less" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[// ######################################### TOOLTIPS #######################################

@_tooltip-arrowSize: 5px;
@_tooltip-arrowSizeLarge: 10px;
@_tooltip-zIndex: @zIndex-3;

.tooltip
{
	position: absolute;
	z-index: @_tooltip-zIndex;
	line-height: @xf-lineHeightDefault;
	padding: 0 5px;
	display: none;

	&.tooltip--basic
	{
		max-width: 300px;

		// Tooltip positioning is literal.
		&.tooltip--top
		{
			margin-bottom: 3px;
			padding-bottom: @_tooltip-arrowSize;
		}
		&.tooltip--right
		{
			-ltr-rtl-margin-left: 3px;
			-ltr-rtl-padding-left: @_tooltip-arrowSize;
		}
		&.tooltip--bottom
		{
			margin-top: 3px;
			padding-top: @_tooltip-arrowSize;

			.has-touchevents &.tooltip--selectToQuote
			{
				margin-top: .75em;
			}
		}
		&.tooltip--left
		{
			-ltr-rtl-margin-right: 3px;
			-ltr-rtl-padding-right: @_tooltip-arrowSize;
		}

		.m-textColoredLinks();
	}

	&.tooltip--description
	{
		max-width: 350px;
	}

	&.tooltip--selectToQuote
	{
		.m-hiddenLinks();
	}

	&.tooltip--preview
	{
		max-width: 100%;
		width: 400px;
	}

	&.tooltip--member
	{
		max-width: 100%;
		width: 450px;
		padding: 0 10px;
	}

	&.tooltip--reaction
	{
		max-width: 100%;
		padding: 0 15px;
		margin: 5px 0;
	}

	&.tooltip--bookmark,
	&.tooltip--share
	{
		max-width: 100%;
		width: 340px;
		padding: 0 15px;
	}

	&.tooltip--bookmark,
	&.tooltip--member,
	&.tooltip--preview,
	&.tooltip--share
	{
		// Tooltip positioning is literal.
		&.tooltip--top { padding-bottom: @_tooltip-arrowSizeLarge; }
		&.tooltip--right { -ltr-rtl-padding-left: @_tooltip-arrowSizeLarge; }
		&.tooltip--bottom { padding-top: @_tooltip-arrowSizeLarge; }
		&.tooltip--left { -ltr-rtl-padding-right: @_tooltip-arrowSizeLarge; }
	}
}
.tooltip-content
{
	.tooltip--basic &
	{
		text-align: center;
		.xf-tooltip();
	}

	.tooltip--description &
	{
		text-align: left;
	}

	.tooltip--preview &
	{
		.xf-contentBase();
		padding: @xf-paddingMedium;
		text-align: left;
		border: 1px solid @xf-borderColor;

		.m-dropShadow(0, 5px, 10px, 0, .35);
	}

	.tooltip--bookmark &,
	.tooltip--member &,
	.tooltip--share &
	{
		.xf-contentBase();
		padding: 0;
		text-align: left;
		border: 1px solid @xf-borderColor;

		.m-dropShadow(0, 5px, 10px, 0, .35);
	}

	.tooltip--reaction &
	{
		.xf-contentBase();
		padding: 0;
		text-align: center;
		border: 1px solid @xf-borderColor;
		border-radius: @xf-borderRadiusLarge;
	}
}

.tooltip-content-inner
{
	position: relative;

	.tooltip--basic &
	{
		max-height: 200px;
		overflow: hidden;
	}

	.tooltip--preview &
	{
		max-height: 200px;
		overflow: hidden;

		.tooltip-content-cover
		{
			.m-gradient(fade(@xf-contentBg, 0%), @xf-contentBg, transparent, 160px, 200px);
		}
	}

	.tooltip-content-cover
	{
		position: absolute;
		top: 0;
		bottom: 0;
		left: 0;
		right: 0;
	}
}

// Tooltip side positioning is literal.
/* XF-RTL:disable */
.tooltip-arrow
{
	position: absolute;
	width: 0;
	height: 0;
	border: 0 solid transparent;

	.m-tooltipArrow(
		xf-default(@xf-tooltip--background-color, transparent),
		@_tooltip-arrowSize,
		~'.tooltip--basic'
	);

	@classes: tooltip--preview tooltip--member tooltip--share tooltip--bookmark;
	.m-tooltipArrowList(@xf-borderColor, @_tooltip-arrowSizeLarge + 1px, @classes, @xf-contentBg);

	.tooltip--member.tooltip--bottom &:after
	{
		.m-triangleUp(xf-default(@xf-memberTooltipHeader--background-color, transparent), @_tooltip-arrowSizeLarge);
	}
}

.m-tooltipArrowList(@color, @size, @classes, @fillColor: false)
{
	.variations(@classes, @i: 1) when (@i <= length(@classes))
	{
		@variation: extract(@classes, @i);

		.m-tooltipArrow(@color, @size, ~'.@{variation}', @fillColor);

		.variations(@classes, @i + 1);
	}

	.variations(@classes);
}
/* XF-RTL:enable */

.tooltipCover
{
	display: none;
	position: absolute;
	opacity: 0;
	z-index: (@_tooltip-zIndex - 1);
	-webkit-tap-highlight-color: rgba(0, 0, 0, 0);

	&.is-active
	{
		display: block;
	}
}]]></template>
  <template type="public" title="core_utilities.less" version_id="2010131" version_string="2.1.1 Beta 1"><![CDATA[// ############################# BASIC UTILITY CLASSES #######################

.u-concealed,
.u-concealed a,
.u-cloaked,
.u-cloaked a,
.u-concealed--icon,
.u-concealed--icon a
{
	text-decoration: inherit !important;
	color: inherit !important;
}

a.u-concealed:hover,
.u-concealed a:hover
{
	text-decoration: underline !important;

	.fa
	{
		color: @xf-linkHover--color;
	}
}

a.u-concealed--icon:hover,
.u-concealed--icon a:hover
{
	.fa
	{
		color: @xf-linkHover--color;
	}
}

.u-textColor { color: @xf-textColor; }
.u-dimmed { color: @xf-textColorDimmed; }
.u-muted { color: @xf-textColorMuted; }

.u-dimmed,
.u-muted,
.u-faint
{
	.m-hiddenLinks();
}

.u-featuredText { color: @xf-textColorFeature; }

.u-accentText
{
	color: @xf-textColorAccentContent;

	a { .xf-contentAccentLink(); }
}

.u-prependAsterisk:before { content: "* "; }
.u-appendAsterisk:after { content: " *"; }

.u-dt[title] { border: none; text-decoration: none; }

.u-clearFix
{
	.m-clearFix();
}

.u-appendColon
{
	.m-appendColon();
}

.u-pullLeft
{
	float: left !important;
}

.u-pullRight
{
	float: right !important;
}

.u-alignCenter
{
	text-align: center;
}

.u-showWideInline,
.u-showWideBlock,
.u-showMediumInline,
.u-showMediumBlock,
.u-showNarrowInline,
.u-showNarrowBlock
{
	display: none;
}

.u-smaller
{
	font-size: small;
}

@media (max-width: @xf-responsiveWide)
{
	.u-hideWide { display: none !important; }
	.u-showWideInline { display: inline; }
	.u-showWideBlock { display: block; }
}
@media (max-width: @xf-responsiveMedium)
{
	.u-hideMedium { display: none !important; }
	.u-showMediumInline { display: inline; }
	.u-showMediumBlock { display: block; }
}
@media (max-width: @xf-responsiveNarrow)
{
	.u-hideNarrow { display: none !important; }
	.u-showNarrowInline { display: inline; }
	.u-showNarrowBlock { display: block; }
}

.u-ltr { direction: ltr; text-align: left; }
.u-rtl { direction: rtl; text-align: right; }

.generateDepth(@n, @i: 1) when (@i =< @n)
{
	.u-depth@{i} { padding-left: (@i * 1em); }
	.u-indentDepth@{i} { text-indent: (@i * 1em); }
	.generateDepth(@n, (@i + 1));
}
.generateDepth(9);

.u-hidden
{
	.m-hiddenEl(false);

	&.u-hidden--transition
	{
		.m-hiddenEl(true);
	}
}

.u-srOnly
{
	.m-visuallyHidden();
}

.has-no-js .u-jsOnly
{
	display: none !important;
}

.has-js .u-noJsOnly
{
	display: none !important;
}

img.u-imgContained
{
	max-height: 100%;
	max-width: 100%;
}

.u-bottomFixer
{
	position: fixed;
	left: 0;
	right: 0;
	bottom: 0;
	z-index: @zIndex-8;
	pointer-events: none;

	> *
	{
		pointer-events: auto;
	}
}

.u-anchorTarget
{
	display: block;
	height: 0;
	width: 0;
	visibility: hidden;
	pointer-events: none;
	position: absolute;
}

.u-flex-1 { flex: 1 }
.u-flex-2 { flex: 2 }
.u-flex-3 { flex: 3 }
.u-flex-4 { flex: 4 }

.u-splitter
{
	display: inline-block;
	width: @_form-elementSpacer;
	flex-shrink: 0;
}

.u-screenContained
{
	max-height: 70vh;
	overflow: auto;
	-webkit-overflow-scrolling: touch;
}]]></template>
  <template type="public" title="currency_macros" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro name="currency_list" arg-value="!" arg-includePopular="{{ true }}" arg-row="{{ false }}" arg-rowLabel="" arg-name="cost_currency" arg-rowClass="" arg-class="">
	<xf:set var="$currencyData" value="{{ $xf.app.data('XF:Currency') }}" />
	<xf:set var="$currencies" value="{$currencyData.getCurrencyOptions()}" />
	<xf:if is="$includePopular">
		<xf:set var="$popularCurrencies" value="{$currencyData.getCurrencyOptions(true)}" />
	</xf:if>

	<xf:set var="$select">
		<xf:select name="{$name}" value="{$value}" class="{$class}">
			<xf:option value="">&nbsp;</xf:option>
			<xf:if is="$popularCurrencies">
				<xf:optgroup label="{{ phrase('popular_currencies') }}">
					<xf:options source="{$popularCurrencies}" />
				</xf:optgroup>
				<xf:optgroup label="{{ phrase('other_currencies') }}">
					<xf:options source="{$currencies}" />
				</xf:optgroup>
			<xf:else />
				<xf:options source="{$currencies}" />
			</xf:if>
		</xf:select>
	</xf:set>

	<xf:if is="$row">
		<xf:formrow rowtype="input" class="{$rowClass}"
			label="{$rowLabel}">

			{$select|raw}
		</xf:formrow>
	<xf:else />
		{$select|raw}
	</xf:if>
</xf:macro>]]></template>
  <template type="public" title="custom_fields_display_thread" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:if is="{{ $post.position < 1 AND $customFields is not empty }}">
	<div>
		<xf:foreach loop="$customFields" key="$fieldId" value="$field">
			<dl class="pairs pairs--inline">
				<dt>{$field.label}</dt>
				<dd>{$field.value|raw}</dd>
			</dl>
		</xf:foreach>
	</div>
</xf:if>]]></template>
  <template type="public" title="custom_fields_macros" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:macro name="custom_fields_view"
	arg-type="!"
	arg-group="!"
	arg-set="!"
	arg-onlyInclude="{{ null }}"
	arg-additionalFilters="{{ [] }}"
	arg-wrapperClass=""
	arg-valueClass="pairs pairs--columns pairs--fixedSmall">

	<xf:if contentcheck="true">
		<div class="{$wrapperClass}">
		<xf:contentcheck>
			<xf:macro name="custom_fields_values"
				arg-type="{$type}"
				arg-group="{$group}"
				arg-set="{$set}"
				arg-onlyInclude="{$onlyInclude}"
				arg-additionalFilters="{$additionalFilters}"
				arg-valueClass="{$valueClass}" />
		</xf:contentcheck>
		</div>
	</xf:if>
</xf:macro>

<xf:macro name="custom_fields_values"
	arg-type="!"
	arg-group="!"
	arg-set="!"
	arg-onlyInclude="{{ null }}"
	arg-additionalFilters="{{ [] }}"
	arg-valueClass="pairs pairs--columns pairs--fixedSmall">

	<xf:foreach loop="$xf.app.getCustomFields({$type}, {$group}, {$onlyInclude}, {$additionalFilters})" key="$fieldId" value="$fieldDefinition">
		<xf:if is="$fieldDefinition.hasValue({$set.{$fieldDefinition.field_id}})">
			<dl class="{$valueClass}">
				<dt>{$fieldDefinition.title}</dt>
				<dd>
					<xf:macro name="custom_field_value"
						arg-definition="{$fieldDefinition}"
						arg-value="{$set.{$fieldDefinition.field_id}}" />
				</dd>
			</dl>
		</xf:if>
	</xf:foreach>
</xf:macro>

<xf:macro name="custom_field_value" arg-definition="!" arg-value="!">
	<xf:if is="$definition.field_type == 'stars'">
		<xf:macro template="rating_macros" name="stars" arg-rating="{$value}" />
	<xf:else />
		<xf:if is="$definition.match_type == 'date'">
			<xf:macro name="custom_field_value_date" arg-date="{$value}" />
		<xf:elseif is="$definition.match_type == 'color'" />
			<xf:macro name="custom_field_value_color" arg-color="{$value}" />
		<xf:else />
			{$definition.getFormattedValue($value)|raw}
		</xf:if>
	</xf:if>
</xf:macro>

<xf:macro name="custom_field_value_date"
	arg-date="!">

	{{ date(date_from_format('Y-m-d', $date)) }}
</xf:macro>

<xf:macro name="custom_field_value_color"
	arg-color="!">

	<span class="colorChip" data-xf-init="tooltip" title="{$color}">
		<span class="colorChip-inner" style="background-color: {$color}">
			<span class="colorChip-value">{$color}</span>
		</span>
	</span>
</xf:macro>

<xf:macro name="custom_fields_edit"
	arg-type="!"
	arg-group="{{ null }}"
	arg-set="!"
	arg-editMode="user"
	arg-onlyInclude="{{ null }}"
	arg-additionalFilters="{{ [] }}"
	arg-rowType=""
	arg-rowClass=""
	arg-namePrefix="custom_fields"
	arg-requiredOnly="{{ false }}">

	<xf:foreach loop="$xf.app.getCustomFieldsForEdit({$type}, {$set}, {$editMode}, {$group}, {$onlyInclude}, {$additionalFilters})" key="$fieldId" value="$fieldDefinition">
		<xf:if is="!$requiredOnly OR ($requiredOnly AND $fieldDefinition.required)">
			<xf:formrow label="{$fieldDefinition.title}"
				explain="{$fieldDefinition.description}"
				hint="{{ $fieldDefinition.isRequired($editMode) ? phrase('required') : '' }}"
				rowtype="{$rowType} customField {{ in_array($fieldDefinition.field_type, ['textbox', 'textarea', 'bbcode', 'select']) ? 'input' : '' }}"
				rowclass="{$rowClass}"
				data-field="{$fieldDefinition.field_id}">

				<xf:macro name="custom_fields_edit_{$fieldDefinition.field_type}" arg-set="{$set}" arg-definition="{$fieldDefinition}" arg-editMode="{$editMode}" arg-namePrefix="{$namePrefix}" />
			</xf:formrow>
		</xf:if>
	</xf:foreach>
</xf:macro>

<xf:macro name="custom_fields_edit_groups"
	arg-type="!"
	arg-groups="!"
	arg-set="!"
	arg-editMode="user"
	arg-onlyInclude="{{ null }}"
	arg-additionalFilters="{{ [] }}"
	arg-rowType=""
	arg-namePrefix="custom_fields"
	arg-requiredOnly="">

	<xf:foreach loop="$groups" value="$group">
		<xf:macro name="custom_fields_edit"
			arg-type="{$type}"
			arg-group="{$group}"
			arg-set="{$set}"
			arg-editMode="{$editMode}"
			arg-onlyInclude="{$onlyInclude}"
			arg-additionalFilters="{$additionalFilters}"
			arg-rowType="{$rowType}"
			arg-namePrefix="{$namePrefix}"
			arg-requiredOnly="{$requiredOnly}" />
	</xf:foreach>
</xf:macro>

<xf:macro name="custom_fields_edit_textbox" arg-set="!" arg-definition="!" arg-editMode="!" arg-namePrefix="custom_fields">

	<xf:if is="$definition.match_type == 'date'">

		<xf:dateinput name="{$namePrefix}[{$definition.field_id}]" value="{$set.{$definition.field_id}}"
			data-field="{$definition.field_id}"
			maxlength="{{ $definition.max_length ? $definition.max_length : '' }}"
			required="{{ $definition.isRequired($editMode) ? 'required' : '' }}"
			class="field_{$definition.field_id}" />

	<xf:elseif is="$definition.match_type == 'color'" />

		<xf:macro template="color_picker_macros" name="color_picker"
			arg-name="{$namePrefix}[{$definition.field_id}]"
			arg-value="{$set.{$definition.field_id}}"
			arg-mapName=""
			arg-row="{{ false }}"
			arg-required="{$definition.isRequired($editMode)}" />

	<xf:elseif is="$definition.match_type == 'number'" />

		<xf:set var="$step" value="1" />

		<xf:if is="$definition.match_params.number_integer">
			<xf:if is="$definition.match_params.number_min >= 0">
				<xf:set var="$pattern" value="\d*" />
			</xf:if>
		<xf:else />
			<xf:set var="$step" value="any" />
		</xf:if>
		<xf:if is="$definition.match_params.number_min !== ''">
			<xf:set var="$min" value="{$definition.match_params.number_min}" />
		</xf:if>
		<xf:if is="$definition.match_params.number_max !== ''">
			<xf:set var="$max" value="{$definition.match_params.number_max}" />
		</xf:if>

		<xf:numberbox name="{$namePrefix}[{$definition.field_id}]" value="{$set.{$definition.field_id}}"
			maxlength="{{ $definition.max_length ? $definition.max_length : '' }}"
			pattern="{$pattern}"
			min="{$min}"
			max="{$max}"
			step="{$step}"
			required="{{ $definition.isRequired($editMode) ? 'required' : '' }}"
			class="field_{$definition.field_id}" />

	<xf:else />

		<xf:if is="in_array($definition.match_type, ['regex', 'alphanumeric'])">

			<xf:set var="$type" value="text" />
			<xf:set var="$pattern" value="{{ $definition.match_type == 'regex' ? $definition.match_params.regex : '\w+' }}" />
			<xf:set var="$title">{{ phrase('please_enter_value_that_matches_required_format') }}</xf:set>

		<xf:elseif is="in_array($definition.match_type, ['date', 'email', 'url', 'color'])" />

			<xf:set var="$type" value="{$definition.match_type}" />

		<xf:else />

			<xf:set var="$type" value="text" />

		</xf:if>

		<xf:textbox name="{$namePrefix}[{$definition.field_id}]" value="{$set.{$definition.field_id}}"
			type="{$type}"
			maxlength="{{ $definition.max_length ? $definition.max_length : '' }}"
			pattern="{$pattern}"
			title="{$title}"
			min="{$min}"
			max="{$max}"
			step="{$step}"
			required="{{ $definition.isRequired($editMode) ? 'required' : '' }}"
			class="field_{$definition.field_id}" />
	</xf:if>
</xf:macro>

<xf:macro name="custom_fields_edit_textarea" arg-set="!" arg-definition="!" arg-editMode="!" arg-namePrefix="custom_fields">

	<xf:textarea name="{$namePrefix}[{$definition.field_id}]" value="{$set.{$definition.field_id}}"
		maxlength="{{ $definition.max_length ? $definition.max_length : '' }}"
		autosize="true"
		required="{{ $definition.isRequired($editMode) ? 'required' : '' }}"
		class="field_{$definition.field_id}" />
</xf:macro>

<xf:macro name="custom_fields_edit_bbcode" arg-set="!" arg-definition="!" arg-editMode="!" arg-namePrefix="custom_fields">

	<xf:editor name="{$namePrefix}[{$definition.field_id}]" value="{$set.{$definition.field_id}}"
		previewable="0"
		data-min-height="80"
		class="field_{$definition.field_id}" />
</xf:macro>

<xf:macro name="custom_fields_edit_select" arg-set="!" arg-definition="!" arg-editMode="!" arg-multi="" arg-namePrefix="custom_fields">

	<xf:select name="{$namePrefix}[{$definition.field_id}]"
		value="{{ $set.{$definition.field_id} === null ? '' : {$set.{$definition.field_id}} }}"
		multiple="{$multi}"
		class="field_{$definition.field_id}">
			<xf:option value="" />
			<xf:options source="$definition.field_choices" />
	</xf:select>
</xf:macro>

<xf:macro name="custom_fields_edit_radio" arg-set="!" arg-definition="!" arg-editMode="!" arg-namePrefix="custom_fields">

	<xf:radio name="{$namePrefix}[{$definition.field_id}]"
		value="{{ $set.{$definition.field_id} === null ? '' : {$set.{$definition.field_id}} }}"
		required="{{ $definition.isRequired($editMode) ? 'required' : '' }}"
		class="field_{$definition.field_id}"
		listclass="listColumns">
			<xf:if is="!$definition.isRequired($editMode)">
				<xf:option value="">{{ phrase('no_selection') }}</xf:option>
			</xf:if>
			<xf:options source="$definition.field_choices" />
	</xf:radio>
</xf:macro>

<xf:macro name="custom_fields_edit_checkbox" arg-set="!" arg-definition="!" arg-editMode="!" arg-namePrefix="custom_fields">

	<xf:checkbox name="{$namePrefix}[{$definition.field_id}]" value="{$set.{$definition.field_id}}"
		required="{{ $definition.isRequired($editMode) ? 'required' : '' }}"
		listclass="field_{$definition.field_id} listColumns">
			<xf:options source="$definition.field_choices" />
	</xf:checkbox>
</xf:macro>

<xf:macro name="custom_fields_edit_multiselect" arg-set="!" arg-definition="!" arg-editMode="!" arg-namePrefix="custom_fields">

	<xf:macro name="custom_fields_edit_select"
		arg-set="{$set}"
		arg-definition="{$definition}"
		arg-editMode="!"
		arg-multi="1"
		arg-namePrefix="{$namePrefix}" />
</xf:macro>

<xf:macro name="custom_fields_edit_stars" arg-set="!" arg-definition="!" arg-editMode="!" arg-namePrefix="custom_fields">

	<xf:macro template="rating_macros" name="rating"
		arg-name="{$namePrefix}[{$definition.field_id}]"
		arg-currentRating="{$set.{$definition.field_id}}"
		arg-deselectable="{{ $definition.isRequired($editMode) ? 'false' : 'true' }}"
		arg-row="{{ false }}" />
</xf:macro>]]></template>
  <template type="public" title="debug_macros" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:macro name="debug" arg-controller="!" arg-action="!" arg-template="!" arg-link="{{ true }}" arg-classInfo="{{ true }}">
	<xf:if is="{$xf.debug}">
		<ul class="listInline listInline--bullet listInline--selfInline">
			<li><dl class="pairs pairs--inline debugResolution" title="{{ phrase('responsive_width')|for_attr }}">
				<dt class="debugResolution-label">{{ phrase('width') }}</dt>
				<dd class="debugResolution-output"></dd>
			</dl></li>
			<li><dl class="pairs pairs--inline">
				<dt>{{ phrase('total_queries') }}</dt>
				<dd><!--XF:QUERIES--></dd>
			</dl></li>
			<li><dl class="pairs pairs--inline">
				<xf:if is="$link">
					<dt>{{ phrase('total_time') }}</dt>
					<dd><a href="{{ debug_url() }}" rel="nofollow"><!--XF:PAGE_TIME-->s</a></dd>
				<xf:else />
					<dt>{{ phrase('total_time') }}</dt>
					<dd><!--XF:PAGE_TIME-->s</dd>
				</xf:if>
			</dl></li>
			<li><dl class="pairs pairs--inline">
				<dt>{{ phrase('max_memory') }}</dt>
				<dd><!--XF:MEMORY_PEAK--></dd>
			</dl></li>
			<xf:if is="$classInfo">
				<li class="cog-info">
					<xf:macro name="class_info"
						arg-controller="{$controller}"
						arg-action="{$action}"
						arg-template="{$template}" />
				</li>
			</xf:if>
		</ul>
	</xf:if>
</xf:macro>

<xf:macro name="class_info" arg-controller="!" arg-action="!" arg-template="!">
	<a data-xf-init="tooltip" data-click-hide="false"
		data-trigger="hover focus click"
		title="{$controller} :: {$action} &middot; {$template}"
		role="button" tabindex="0"><xf:fa icon="fa-cog" /></a>
</xf:macro>

<xf:macro name="debug_resolution">
	<xf:if is="{$xf.debug}">
		<span class="debugResolution" title="{{ phrase('responsive_width')|for_attr }}">
			<span class="debugResolution-label">{{ phrase('responsive_width:') }}</span>
			<span class="debugResolution-output"></span>
		</span>
	</xf:if>
</xf:macro>]]></template>
  <template type="public" title="delete_confirm" version_id="2010037" version_string="2.1.0 Beta 7"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{$confirmUrl}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('please_confirm_that_you_want_to_delete_following:') }}
				<xf:if is="$contentUrl">
					<strong><a href="{$contentUrl}">{$contentTitle}</a></strong>
				<xf:else />
					<strong>{$contentTitle}</strong>
				</xf:if>
			</xf:inforow>
		</div>
		<xf:submitrow rowtype="simple" icon="delete" />
	</div>
</xf:form>]]></template>
  <template type="public" title="deletion_macros" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro name="notice" arg-log="!" arg-message="">
	<ul class="listInline listInline--bullet listInline--selfInline">
		<xf:if is="$message is not empty">
			<li>{$message}</li>
		</xf:if>
		<li>{{ phrase('deleted_by_x', {'name': $log.delete_username ?: phrase('n_a')}) }}</li>
		<xf:if is="{$log}">
			<li><xf:date time="{$log.delete_date}" /></li>
			<xf:if is="{$log.delete_reason}">
				<li>{{ phrase('reason:') }} {$log.delete_reason}</li>
			</xf:if>
		</xf:if>
	</ul>
</xf:macro>]]></template>
  <template type="public" title="diff.less" version_id="2000033" version_string="2.0.0 Beta 3"><![CDATA[.diffListContainer
{
	overflow: auto;
	max-height: 400px;
	max-height: 80vh;
}

.diffList
{
	margin: 0;
	padding: 0;
	list-style: none;
	display: table;
	width: 100%;

	&.diffList--code
	{
		direction: ltr;

		.diffList-line
		{
			font-family: @xf-fontFamilyCode;
			white-space: pre;
			word-wrap: normal;
		}

		textarea
		{
			font-family: @xf-fontFamilyCode;
		}

		&.diffList--wrapped .diffList-line
		{
			white-space: pre-wrap;
			word-wrap: break-word;
		}
	}

	&.diffList--editable
	{
		.diffList-line--u,
		.diffList-conflict.is-resolved .is-chosen
		{
			cursor: pointer;
		}
	}
}

.diffList-line
{
	line-height: 1.5;
	min-height: 8px;
	padding: 0 @xf-paddingSmall;

	&.diffList-line--u
	{
		background-color: #F0F8FF;
		border: 1px solid #D0D8DF;
		color: #4040A0;
	}

	&.diffList-line--d
	{
		background-color: #FAE4E4;
		border: 1px solid #C86060;
		color: #882020;
	}

	&.diffList-line--i
	{
		background-color: #E4FBE4;
		border: 1px solid #60C860;
		color: #208820;
	}

	&.diffList-line--d + .diffList-line--i,
	&.diffList-line--i + .diffList-line--d
	{
		border-top: none;
	}

	textarea
	{
		box-sizing: border-box;
		width: 100%;
	}
}

.diffList-conflict
{
	background-color: #FFFADD;
	border: 1px solid #ddcaad;
	color: #4F4A2D;
}

.diffList-resolve
{
	border-bottom: 1px solid #ddcaad;
	border-top: 1px solid #ddcaad;
	padding: 5px 0;
	text-align: center;
}

.diffList
{
	.diffLine
	{
		line-height: 1.5;
		min-height: 8px;
		padding: 0 @xf-paddingSmall 0 @xf-paddingSmall;
	}
	
	.diff_d
	{
		background-color: #FAE4E4;
		border: 1px solid #C86060;
		color: #882020;
	}
	
	.diff_d+.diff_i
	{
		border-top: none;
	}
	
	.diff_i+.diff_d
	{
		border-top: none;
	}
	
	.diff_i
	{
		background-color: #E4FBE4;
		border: 1px solid #60C860;
		color: #208820;
	}
	
	.diff_u
	{
		background-color: #F0F8FF;
		border: 1px solid #D0D8DF;
		color: #4040A0;
	}
	
	.conflict
	{
		background-color: #FFFADD;
		border: 1px solid #ddcaad;
		color: #4F4A2D;
		
		.resolve
		{
			border-bottom: 1px solid #ddcaad;
			border-top: 1px solid #ddcaad;
			padding: 5px 0;
			text-align: center;
		}
	}
	
	textarea.editor
	{
		box-sizing: border-box;
		margin-top: 5px;
		margin: 0;
		width: 100%;
	}
}
]]></template>
  <template type="public" title="dragula.less" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[.gu-mirror {
	position: fixed !important;
	margin: 0 !important;
	z-index: 9999 !important;
	opacity: 0.8;
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=80)";
	filter: alpha(opacity=80);
}
.gu-hide {
	display: none !important;
}
.gu-unselectable {
	-webkit-user-select: none !important;
	-moz-user-select: none !important;
	-ms-user-select: none !important;
	user-select: none !important;
}
.gu-transit {
	opacity: 0.2;
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=20)";
	filter: alpha(opacity=20);
}]]></template>
  <template type="public" title="edit_history_compare" version_id="2001170" version_string="2.0.11"><![CDATA[<xf:title>{$title} - {{ phrase('version_comparison') }}</xf:title>

<xf:breadcrumb source="$breadcrumbs" />

<xf:css src="public:diff.less" />

<div class="block">
	<div class="block-container">
		<div class="block-body block-row">
			<ul class="diffList">
				<xf:foreach loop="$diffs" value="$diff">
					<xf:set var="$diffHtml">{{ $diff.1|join('<br />') }}</xf:set>
					<li class="diffList-line diffList-line--{$diff.0}">{{ trim($diffHtml) !== '' ? $diffHtml : '&nbsp;' }}</li>
				</xf:foreach>
			</ul>
		</div>
	</div>
</div>]]></template>
  <template type="public" title="edit_history_index" version_id="2000170" version_string="2.0.1"><![CDATA[<xf:title>{$title} - {{ phrase('edit_history') }}</xf:title>

<xf:breadcrumb source="$breadcrumbs" />

<xf:form action="{{ link('edit-history') }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:datalist>
				<xf:datarow rowtype="header">
					<xf:cell class="dataList-cell--min">{{ phrase('old') }}</xf:cell>
					<xf:cell class="dataList-cell--min">{{ phrase('new') }}</xf:cell>
					<xf:cell width="30%">{{ phrase('edit_date') }}</xf:cell>
					<xf:cell colspan="2">{{ phrase('member') }}</xf:cell>
				</xf:datarow>
				<xf:datarow rowclass="dataList-row--noHover">
					<xf:cell class="dataList-cell--min dataList-cell--alt dataList-cell--action">
						&nbsp;
					</xf:cell>
					<xf:cell class="dataList-cell--min dataList-cell--alt dataList-cell--action">
						<label><input type="radio" name="new" value="0" checked="true" /></label>
					</xf:cell>
					<xf:cell colspan="3">
						<em>{{ phrase('current_version') }}</em>
					</xf:cell>
				</xf:datarow>
				<xf:foreach loop="$editHistory" key="$historyId" value="$history">
					<xf:datarow rowclass="dataList-row--noHover">
						<xf:cell class="dataList-cell--min dataList-cell--alt dataList-cell--action">
							<label><input type="radio" name="old" value="{$historyId}" {{ $oldId == $historyId ? "checked" : "" }} /></label>
						</xf:cell>
						<xf:cell class="dataList-cell--min dataList-cell--alt dataList-cell--action">
							<label><input type="radio" name="new" value="{$historyId}" /></label>
						</xf:cell>
						<xf:cell>
							<xf:date time="{$history.edit_date}" />
						</xf:cell>
						<xf:cell>
							<xf:username user="{$history.User}" />
						</xf:cell>
						<xf:action href="{{ link('edit-history/view', $history) }}" overlay="true" >
							{{ phrase('view') }}
						</xf:action>
					</xf:datarow>
				</xf:foreach>
				<xf:if is="$editCount && $editCount > $editHistory.count()">
					<xf:datarow>
						<xf:cell class="dataList-cell--alt" colspan="5">
							{{ phrase('this_content_edited_total_of_x_times_old_records_removed', {'count': $editCount|number}) }}
						</xf:cell>
					</xf:datarow>
				</xf:if>
			</xf:datalist>
		</div>
		<div class="block-footer">
			<span class="block-footer-controls">
				<xf:button type="submit" name="compare" value="1" class="button--primary">{{ phrase('compare_versions') }}</xf:button>
			</span>
		</div>
	</div>
	<xf:hiddenval name="content_type">{$contentType}</xf:hiddenval>
	<xf:hiddenval name="content_id">{$contentId}</xf:hiddenval>
</xf:form>]]></template>
  <template type="public" title="edit_history_view" version_id="2001170" version_string="2.0.11"><![CDATA[<xf:title>{$title} - {{ phrase('content_history') }}</xf:title>

<xf:breadcrumb source="$breadcrumbs" />

<div class="block">
	<div class="block-container">
		<h2 class="block-tabHeader tabs" data-xf-init="tabs" role="tablist">
			<a class="tabs-tab is-active" role="tab" tabindex="0" aria-controls="{{ unique_id('ehFormatted') }}">{{ phrase('formatted') }}</a>
			<a class="tabs-tab" role="tab" tabindex="0" aria-controls="{{ unique_id('ehRaw') }}">{{ phrase('raw') }}</a>
		</h2>
		<ul class="tabPanes block-body">
			<li class="block-row is-active" role="tabpanel" id="{{ unique_id('ehFormatted') }}">
				{$handler.getHtmlFormattedContent({$editHistory.old_text}, $content)|raw}
			</li>
			<li class="block-row" role="tabpanel" id="{{ unique_id('ehRaw') }}">
				<xf:textarea rows="10" readonly="readonly" value="{$editHistory.old_text}" />
			</li>
		</ul>
		<xf:form action="{{ link('edit-history/revert', $editHistory) }}" class="block-footer" ajax="true">
			<span class="block-footer-controls">
				<xf:checkbox>
					<xf:option name="confirm" value="1">
						<xf:dependent>
							<xf:button type="submit" name="revert" value="1" class="button--primary">
								{{ phrase('revert') }}
							</xf:button>
						</xf:dependent>
					</xf:option>
				</xf:checkbox>
			</span>
		</xf:form>
	</div>
</div>]]></template>
  <template type="public" title="editor" version_id="2010036" version_string="2.1.0 Beta 6"><![CDATA[<xf:css src="editor.less" />

<xf:if is="$fullEditorJs">
	<xf:js src="vendor/froala/froala-compiled.full.js, xf/editor.js" />
<xf:else />
	<xf:js prod="xf/editor-compiled.js" dev="vendor/froala/froala-compiled.js, xf/editor.js" />
</xf:if>
<!--[XF:include_js]-->

<xf:if is="is_editor_capable()">

	<script class="js-editorToolbars" type="application/json">{$editorToolbars|json|raw}</script>
	<script class="js-editorDropdowns" type="application/json">{$editorDropdowns|json|raw}</script>

	<script class="js-editorLanguage" type="application/json">
		{
			"Align Center": "{{ phrase('align_center')|escape('json') }}",
			"Align Left": "{{ phrase('align_left')|escape('json') }}",
			"Align Right": "{{ phrase('align_right')|escape('json') }}",
			"Align": "{{ phrase('alignment')|escape('json') }}",
			"Alignment": "{{ phrase('alignment')|escape('json') }}",
			"Back": "{{ phrase('back')|escape('json') }}",
			"Bold": "{{ phrase('weight_bold')|escape('json') }}",
			"By URL": "{{ phrase('by_url')|escape('json') }}",
			"Clear Formatting": "{{ phrase('remove_formatting')|escape('json') }}",
			"Code": "{{ phrase('code')|escape('json') }}",
			"Colors": "{{ phrase('text_color')|escape('json') }}",
			"Decrease Indent": "{{ phrase('outdent')|escape('json') }}",
			"Delete Draft": "{{ phrase('delete_draft')|escape('json') }}",
			"Drafts": "{{ phrase('drafts')|escape('json') }}",
			"Drop image": "{{ phrase('drop_image')|escape('json') }}",
			"Drop video": "{{ phrase('drop_video')|escape('json') }}",
			"Edit Link": "{{ phrase('edit_link')|escape('json') }}",
			"Font Family": "{{ phrase('font_family')|escape('json') }}",
			"Font Size": "{{ phrase('font_size')|escape('json') }}",
			"Increase Indent": "{{ phrase('indent')|escape('json') }}",
			"Inline Code": "{{ phrase('inline_code')|escape('json') }}",
			"Inline Spoiler": "{{ phrase('inline_spoiler')|escape('json') }}",
			"Insert Image": "{{ phrase('insert_image')|escape('json') }}",
			"Insert Link": "{{ phrase('insert_link')|escape('json') }}",
			"Insert": "{{ phrase('insert')|escape('json') }}",
			"Italic": "{{ phrase('italic')|escape('json') }}",
			"List": "{{ phrase('list')|escape('json') }}",
			"Loading image": "{{ phrase('loading_image')|escape('json') }}",
			"Media": "{{ phrase('media')|escape('json') }}",
			"Open Link": "{{ phrase('open_link')|escape('json') }}",
			"or click": "{{ phrase('or_click_here')|escape('json') }}",
			"Ordered List": "{{ phrase('ordered_list')|escape('json') }}",
			"Quote": "{{ phrase('quote')|escape('json') }}",
			"Redo": "{{ phrase('redo')|escape('json') }}",
			"Remove": "{{ phrase('remove')|escape('json') }}",
			"Replace": "{{ phrase('replace')|escape('json') }}",
			"Save Draft": "{{ phrase('save_draft')|escape('json') }}",
			"Smilies": "{{ phrase('smilies')|escape('json') }}",
			"Something went wrong. Please try again.": "{{ phrase('something_went_wrong_please_try_again')|escape('json') }}",
			"Spoiler": "{{ phrase('spoiler')|escape('json') }}",
			"Strikethrough": "{{ phrase('strike_through')|escape('json') }}",
			"Text": "{{ phrase('text')|escape('json') }}",
			"Toggle BB Code": "{{ phrase('toggle_bb_code')|escape('json') }}",
			"Underline": "{{ phrase('underline')|escape('json') }}",
			"Undo": "{{ phrase('undo')|escape('json') }}",
			"Unlink": "{{ phrase('unlink')|escape('json') }}",
			"Unordered List": "{{ phrase('unordered_list')|escape('json') }}",
			"Update": "{{ phrase('update')|escape('json') }}",
			"Upload Image": "{{ phrase('upload_image')|escape('json') }}",
			"Uploading": "{{ phrase('uploading')|escape('json') }}",
			"URL": "{{ phrase('url')|escape('json') }}",
			"Insert Table": "{{ phrase('insert_table')|escape('json') }}",
			"Table Header": "{{ phrase('table_header')|escape('json') }}",
			"Remove Table": "{{ phrase('remove_table')|escape('json') }}",
			"Row": "{{ phrase('row')|escape('json') }}",
			"Column": "{{ phrase('column')|escape('json') }}",
			"Insert row above": "{{ phrase('insert_row_above')|escape('json') }}",
			"Insert row below": "{{ phrase('insert_row_below')|escape('json') }}",
			"Delete row": "{{ phrase('delete_row')|escape('json') }}",
			"Insert column before": "{{ phrase('insert_column_before')|escape('json') }}",
			"Insert column after": "{{ phrase('insert_column_after')|escape('json') }}",
			"Delete column": "{{ phrase('delete_column')|escape('json') }}",
			"Ctrl": "{{ phrase('ctrl')|escape('json') }}",
			"Shift": "{{ phrase('shift')|escape('json') }}",
			"Alt": "{{ phrase('alt')|escape('json') }}",
			"Insert Video": "{{ phrase('insert_video')|escape('json') }}",
			"Upload Video": "{{ phrase('upload_video')|escape('json') }}",
			"Width": "{{ phrase('width')|escape('json') }}",
			"Height": "{{ phrase('height')|escape('json') }}",
			"Change Size": "{{ phrase('change_size')|escape('json') }}",
			"None": "{{ phrase('none')|escape('json') }}",
			"Alternative Text": "{{ phrase('alt_text')|escape('json') }}",
			"__lang end__": ""
		}
	</script>

	<script class="js-editorCustom" type="application/json">
		{$customIcons|json|raw}
	</script>

	<script class="js-xfSmilieMenu" type="text/template">
		<div class="menu menu--emoji" data-menu="menu" aria-hidden="true"
			data-href="{{ link('editor/smilies-emoji') }}"
			data-load-target=".js-xfSmilieMenuBody">
			<div class="menu-content">
				<div class="js-xfSmilieMenuBody">
					<div class="menu-row">{{ phrase('loading...') }}</div>
				</div>
			</div>
		</div>
	</script>

	<textarea name="{$htmlName}"
		class="input js-editor u-jsOnly"
		data-xf-init="editor"
		data-original-name="{$name}"
		data-buttons-remove="{$removeButtons|join(',')}"
		style="visibility: hidden; height: {{ $height + 37 }}px; {$styleAttr}"
		aria-label="{{ phrase('rich_text_box')|for_attr }}"
		{$attrsHtml|raw}>{$htmlValue}</textarea>

	<xf:comment>37, above, refers to the total height of the editor toolbar</xf:comment>

	<input type="hidden" value="{$value}" data-bb-code="{$name}" />

	<noscript>
		<textarea name="{$name}" class="input" aria-label="{{ phrase('rich_text_box')|for_attr }}">{$value}</textarea>
	</noscript>

<xf:else />

	<textarea name="{$name}" class="input input--fitHeight js-editor" style="min-height: {$height}px; {$styleAttr}" data-xf-init="textarea-handler user-mentioner emoji-completer" aria-label="{{ phrase('rich_text_box')|for_attr }}" {$attrsHtml|raw}>{$value}</textarea>

</xf:if>
<xf:if is="$previewable">
	<div class="js-previewContainer"></div>
</xf:if>]]></template>
  <template type="public" title="editor.less" version_id="2010131" version_string="2.1.1 Beta 1"><![CDATA[/* XF-RTL:disable */
{{ include('editor_base.less') }}
/* XF-RTL:enable */

// this allows us to ensure that when we scroll the editor into view, this goes below the fixed header
.fr-box.is-scrolling-to:before
{
	display: block;
	content: '';

	.m-stickyHeaderConfig(@xf-publicNavSticky);
	height: (@_stickyHeader-height + @_stickyHeader-offset);
	margin-top: -(@_stickyHeader-height + @_stickyHeader-offset);

	@media (max-height: 360px)
	{
		display: none;
	}
}

.fr-view
{
	.m-inputZoomFix();

	img.fr-draggable:not(.smilie),
	.bbImage
	{
		max-width: 100%;
		height: auto;
	}

	// remove image margins from images - they give the illusion of added spaces
	// extra specificity required for correct behaviour
	&&.fr-element img.fr-dii
	{
		margin: 0;
	}

	.fr-video
	{
		position: relative;

		video
		{
			width: 560px;
			max-width: 100%;
		}
	}

	p
	{
		margin-bottom: 0;
		margin-top: 0;
	}

	&.fr-element
	{
		.fr-disabled
		{
			.xf-inputDisabled() !important;
		}

		@attach-margin: @xf-bbCodeImgFloatMargin;

		img.fr-dii
		{
			display: inline-block;
			float: none;
			vertical-align: bottom;
			margin-left: @attach-margin;
			margin-right: @attach-margin;
			max-width: calc(100% - (2 * @attach-margin));

			&.fr-fil {
				float: left;
				margin: @attach-margin @attach-margin @attach-margin 0;
				max-width: calc(100% - @attach-margin);
			}

			&.fr-fir {
				float: right;
				margin: @attach-margin 0 @attach-margin @attach-margin;
				max-width: calc(100% - @attach-margin);
			}
		}

		.fr-video.fr-dvi
		{
			display: inline-block;
			float: none;
			vertical-align: bottom;
			margin-left: @attach-margin;
			margin-right: @attach-margin;
			max-width: calc(100% - (2 * @attach-margin));

			&.fr-fvl {
				float: left;
				margin: @attach-margin @attach-margin @attach-margin 0;
				max-width: calc(100% - @attach-margin);
			}

			&.fr-fvr {
				float: right;
				margin: @attach-margin 0 @attach-margin @attach-margin;
				max-width: calc(100% - @attach-margin);
			}
		}
	}

	.m-tableBase();
}

.fr-command.fr-btn + .fr-dropdown-menu
{
	display: none;

    .fr-dropdown-wrapper
	{
		background: @xf-contentBg;
		border: @xf-borderSize solid @xf-borderColor;

		.fr-dropdown-content ul.fr-dropdown-list li a img
		{
			// note: this selector roughly matches a core froala selector
			height: 1em;
		}
	}
}

.fr-toolbar .fr-btn.fr-active[data-cmd="xfBbCode"]
{
	color: @xf-textColorAttention;
}

.fr-popup
{
	background: @xf-contentBg;
}

.fr-popup .fr-input-line
{
	padding: 16px 0 8px;

	input[type="text"],
	textarea
	{
		.xf-input();
		margin: 0;
		line-height: @xf-lineHeightDefault;
		.m-transition(background, color;);

		&:focus
		{
			.xf-input(border);
			.xf-inputFocus();
		}

		.m-inputZoomFix();
	}

	input + label,
	textarea + label
	{
		line-height: 1.2;
		font-size: 12px;
		background: transparent;
	}

	input.fr-not-empty:focus + label,
	textarea.fr-not-empty:focus + label
	{
		color: @xf-textColorMuted;
	}
}

.fr-popup .fr-color-set
{
	> span .fr-selected-color
	{
		font-family: 'Font Awesome 5 Pro';
		font-weight: @xf-fontAwesomeWeight;
	}
}

.fr-popup .fr-color-hex-layer
{
	.fr-input-line
	{
		padding-top: 16px;
		width: 150px;
	}

	.fr-action-buttons
	{
		margin-top: 18px;
	}
}

.fr-popup .fr-action-buttons
{
	height: auto;

	button.fr-command
	{
		.m-buttonBase();
		.xf-buttonPrimary();
		.m-buttonBlockColorVariationSimple(xf-default(@xf-buttonPrimary--background-color, transparent));
		height: auto;
		min-width: 0;
		line-height: @xf-lineHeightDefault;

		&:hover,
		&:active,
		&:focus
		{
			// overriding Froala's hover
			color: @xf-buttonPrimary--color;
		}
	}
}

@_menu-arrowSize: 8px;

.fr-popup.fr-active
{
	margin-top: 15px;

	border-left: 0;
	border-right: 0;
	border-bottom: 0;
	border-radius: @xf-menuBorderRadius;
	opacity: 1;
	.m-dropShadow(0, 5px, 10px, 0, .35);

	.fr-buttons
	{
		border: 0;
	}
}

.fr-popup .fr-arrow
{
	top: -@_menu-arrowSize - 3px;
	border-left-width: @_menu-arrowSize;
	border-right-width: @_menu-arrowSize;
	border-bottom-width: @_menu-arrowSize;
	margin-left: -@_menu-arrowSize;
}

// RTE disabled case
.fr-box textarea.input
{
	border-top: none;
	.border-radius(0 0 @border-radius @border-radius);
}

.editorDraftIndicator
{
	.m-transition();
	opacity: 0;
	position: absolute;
	bottom: 7px;
	right: 12px;
	width: 7px;
	height: 7px;
	border-radius: 3.5px;
	background: rgb(127, 185, 0);

	&.is-active
	{
		opacity: 1;
	}
}

@editorSmiliesBg: xf-intensify(@xf-contentBg, 1%);

.editorSmilies
{
	display: none;
	border: @xf-borderSize solid @xf-borderColorHeavy;
	border-top: none;
	background: @xf-editorToolbarBg;
	overflow: hidden;
	.m-transition(all, -xf-height;);
	height: 0;

	&.is-active
	{
		display: block;
		height: auto;
	}

	&.is-transitioning
	{
		display: block;
	}

	.smilie
	{
	//	cursor: pointer;
	}

	.tabPanes > li
	{
		padding: @xf-blockPaddingV @xf-blockPaddingH;
	}
}

.tabs--editor // takes some hints from .tabs--standalone
{
	color: @xf-paletteColor4;
	background: @editorSmiliesBg;
	font-weight: @xf-fontWeightNormal;
	border-bottom:  @xf-borderSize solid @xf-borderColor;

	.m-tabsTogether(@xf-fontSizeSmall);

	.tabs-tab
	{
		padding: @xf-blockPaddingV @xf-blockPaddingH max(0px, @xf-blockPaddingV - @xf-borderSizeFeature);
		border-bottom: @xf-borderSizeFeature solid transparent;

		&:hover
		{
			color: @xf-standaloneTab--color;
		}

		&.is-active
		{
			color: @xf-textColorFeature;
			border-color: @xf-borderColorFeature;
		}
	}

	.hScroller-action
	{
		.m-hScrollerActionColorVariation(
			@editorSmiliesBg,
			xf-default(@xf-standaloneTab--color, ~""),
			xf-default(@xf-standaloneTabSelected--color, ~"")
		);
	}
}

@_menu-padding: @xf-paddingMedium;
@_menu-padding-large: @xf-paddingLarge;

.menu--emoji
{
	width: 412px;
	max-width: ~"calc(100% - @{xf-pageEdgeSpacer})";

	.menu-content
	{
		position: relative;
	}

	.menu-scroller
	{
		max-height: 250px;
		border-top: 0;
	}

	.menu-row
	{
		padding: @_menu-padding @_menu-padding;

		&.menu-row--insertedMessage
		{
			.m-hiddenEl(true);
			position: absolute;
			top: 0;
			left: 0;
			right: 0;
			border-bottom: @xf-borderSize solid @xf-borderColorLight;
		}
	}

	.menu-emojiInsertedMessage
	{
		display: flex;
		align-items: center;
		justify-content: center;
		min-height: 35px;
		font-size: @xf-fontSizeNormal;

		img { max-height: 32px; }
		span { margin-left: .5em }
	}

	.menu-header
	{
		background: none;
		.xf-formSectionHeader();
		background-color: @xf-contentBg;
		z-index: @zIndex-1;
		font-size: @xf-fontSizeNormal;
		position: -webkit-sticky;
		position: sticky;
		padding: @_menu-padding @_menu-padding-large;
		top: 0;
	}

	.block-body--emoji
	{
		border-top: @xf-borderSize solid @xf-borderColorLight;
	}

	.is-hidden
	{
		display: none;
	}
}

.emojiList
{
	.m-listPlain();

	display: flex;
	flex-wrap: wrap;
	justify-content: flex-start;

	margin-right: -3px;
	margin-bottom: -3px;

	> li
	{
		min-width: 32px;
		margin-right: 3px;
		margin-bottom: 3px;
		
		border-radius: @xf-borderRadiusMedium;
		cursor: pointer;

		&:hover,
		&:focus
		{
			background-color: @xf-paletteColor2;
		}

		a
		{
			min-width: 32px;
			height: 32px;
			font-size: 24px;

			display: flex;
			justify-content: center;
			align-items: center;
			cursor: pointer;
			overflow: hidden;

			&:hover,
			&:focus
			{
				text-decoration: none;
			}

			img
			{
				max-height: 32px;
			}

			.smilie.smilie--emoji
			{
				width: 22px;
			}

			.smilie--lazyLoad
			{
				visibility: hidden;
			}
		}
	}
}

.editorPlaceholder
{
	.is-hidden
	{
		display: none;
	}

	cursor: text;

	.editorPlaceholder-placeholder
	{
		.input
		{
			padding: @xf-paddingLarge;
			//border-radius: 0;
			//border-top: 3px solid #47a7eb;

			span
			{
				&:before
				{
					.m-faBase();
					.m-faContent(@fa-var-pen);
				}
			}
		}
	}
}]]></template>
  <template type="public" title="editor_base.less" version_id="2010052" version_string="2.1.0 Release Candidate 2"><![CDATA[/***** froala.less *****/

/***** variables.less *****/

// Theme Name.
@theme: 'theme';

// UI colors
@ui-color: #1E88E5;
@ui-text: #222222;
@ui-hover-light-color: mix(@white, #999, 90%);
@ui-hover-color: mix(@white, #999, 80%);
@ui-focused-color: mix(@white, #999, 60%);
@ui-disabled-color: mix(@white, #000, 74%);
@ui-bg: @white;
@ui-font-size: 14px;
@ui-border-color: #222222;
@ui-border-top: 5px solid @ui-border-color;

// Separator
@separator-size: 1px;
@separator-color: mix(@white, #999, 80%);

// Generic.
@white: #FFF;
@black: #000;
@gray: #CCCCCC;
@font-family: Arial, Helvetica, sans-serif;
@border-radius: 2px;
@arrow-size: 5px;
@transition-timing: 0.2s ease 0s;

// Screen sizes.
@screen-xs: 480px;
@screen-sm: 768px;
@screen-md: 992px;
@screen-lg: 1200px;
@screen-xs-max: (@screen-sm - 1);
@screen-sm-max: (@screen-md - 1);
@screen-md-max: (@screen-lg - 1);
@screen-lg-max: 'auto';

// Tooltip
@tooltip-bg: #222222;
@tooltip-text: #FFFFFF;
@tooltip-font-size: 11px;
@tooltip-line-height: 22px;

// Editor properties.
@editor-padding: 16px;
@editor-bg: #FFF;
@editor-text: #000;
@editor-shadow-level: 1;
@editor-border: 0px;

// Text selection colors.
@selection-bg: #b5d6fd;
@selection-text: #000;

// Placeholder properties.
@placeholder-size: 12px;
@placeholder-color: #AAA;

// Button colors.
@btn-text: #222222;
@btn-hover-text: #222222;
@btn-hover-bg: @ui-hover-color;

@btn-active-text: @ui-color;
@btn-active-bg: transparent;
@btn-active-hover-text: @ui-color;
@btn-active-hover-bg: @btn-hover-bg;

@btn-selected-text: @btn-text;
@btn-selected-bg: @ui-focused-color;
@btn-active-selected-text: @ui-color;
@btn-active-selected-bg: @btn-selected-bg;

@btn-disabled-color: @ui-disabled-color;

// Button size.
@btn-width: 38px;
@btn-height: 38px;
@btn-margin: 2px;
@btn-font-size: 14px;

// Image.
@image-margin: 5px;

// Image and Video
@handler-size: 12px;
@handler-size-lg: 10px;

// Code View
@code-view-bg: #FFF;
@code-view-text: #000;

// Table properties.
@table-border: 1px solid #DDD;
@table-resizer: 1px solid @ui-color;

// Insert table grid.
@insert-table-grid: @table-border;

// Quick insert.
@floating-btn-bg: #FFF;
@floating-btn-text: @ui-color;
@floating-btn-hover-bg: @ui-hover-color;
@floating-btn-hover-text: @ui-color;
@floating-btn-size: 32px;
@floating-btn-font-size: 14px;
@floating-btn-border: none;

// List menu.
@dropdown-arrow-width: 4px;
@dropdown-item-active-bg: @ui-focused-color;
@dropdown-max-height: 275px;

// Image manager.
@modal-bg: @white;
@modal-overlay-color: #000;

// Destroy buttons (delete in image manager).
@modal-destroy-btn-bg: #B8312F;
@modal-destroy-btn-text: @white;
@modal-destroy-btn-hover-bg: mix(contrast(@modal-destroy-btn-bg, @black, @white, 50%), @modal-destroy-btn-bg, 10%);
@modal-destroy-btn-hover-text: @white;

// Popups.
@popup-layer-width: 300px;

// Inputs.
@input-border-color: mix(@white, #000, 74%);
@input-label-color: mix(@white, #000, 50%);

// Quote.
@blockquote-level1-color: #5E35B1;
@blockquote-level2-color: #00BCD4;
@blockquote-level3-color: #43A047;

// Char counter.
@char-counter-border: solid 1px mix(@white, #999, 80%);

@drag-helper-border: solid 1px @ui-color;
@drag-helper-bg: @ui-color;


// ################# CUSTOM OVERRIDES ################
{{ include('editor_override.less') }}


/***** mixins.less *****/

.resize(@val) {
  resize: @val;
  -moz-resize: @val;
  -webkit-resize: @val;
}

.opacity (@opacity: 0.5) {
	-webkit-opacity: 	@opacity;
	-moz-opacity: 		@opacity;
	opacity: 		@opacity;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
}

.transition(@transition) {
	-webkit-transition: @transition;
	-moz-transition:    @transition;
	-ms-transition:     @transition;
	-o-transition:      @transition;
}

.transform(@string){
	-webkit-transform: @string;
	-moz-transform: 	 @string;
	-ms-transform: 		 @string;
	-o-transform: 		 @string;
}

.box-sizing (@type: border-box) {
	-webkit-box-sizing: @type;
	-moz-box-sizing:    @type;
	box-sizing:         @type;
}

.border-radius (@radius: 0) {
  border-radius: @radius;
  -moz-border-radius: @radius;
  -webkit-border-radius: @radius;

  -moz-background-clip:    padding;
	-webkit-background-clip: padding-box;
	background-clip:         padding-box;
}

.user-select(@select) {
  user-select: @select;
  -o-user-select:@select;
  -moz-user-select: @select;
  -khtml-user-select: @select;
  -webkit-user-select: @select;
  -ms-user-select: @select;
}

.box-shadow(@shadow) {
  -webkit-box-shadow: @shadow;
  -moz-box-shadow: @shadow;
  box-shadow: @shadow;
}

.material-box-shadow (@level: 1, @direction: 1) when (@level = 0) {
  .box-shadow(none);
}

.material-box-shadow (@level: 1, @direction: 1) when (@level = 1) {
  @shadow: 0 (@direction * 1px) 3px rgba(0,0,0,0.12), 0 (@direction * 1px) 1px 1px rgba(0,0,0,0.16);
  .box-shadow(@shadow);
}

.material-box-shadow (@level: 1, @direction: 1) when (@level = 2) {
  @shadow: 0 (@direction * 3px) 6px rgba(0,0,0,0.16), 0 (@direction * 2px) 2px 1px rgba(0,0,0,0.14);
  .box-shadow(@shadow);
}

.material-box-shadow (@level: 1, @direction: 1) when (@level = 3) {
  @shadow: 0 (@direction * 5px) 8px rgba(0,0,0,0.19), 0 (@direction * 4px) 3px 1px rgba(0,0,0,0.14);
  .box-shadow(@shadow);
}

.material-box-shadow (@level: 1, @direction: 1) when (@level = 4) {
  @shadow: 0 (@direction * 8px) 12px rgba(0,0,0,0.25), 0 (@direction * 6px) 3px 1px rgba(0,0,0,0.12);
  .box-shadow(@shadow);
}

.material-box-shadow (@level: 1, @direction: 1) when (@level >= 5) {
  @shadow: 0 (@direction * 10px) 16px rgba(0,0,0,0.30), 0 (@direction * 6px) 8px rgba(0,0,0,0.22);
  .box-shadow(@shadow);
}

.clearfix {
  &::after {
    clear: both;
    display: block;
    content: "";
    height: 0;
  }
}

.column-count(@count) {
  column-count: @count;
  -moz-column-count: @count;
  -webkit-column-count: @count;
}

.column-gap(@gap) {
  column-gap: @gap;
  -moz-column-gap: @gap;
  -webkit-column-gap: @gap;
}

.animation (@val) {
	-webkit-animation: @val;
  -moz-animation: @val;
  -o-animation: @val;
  animation: @val;
}

.handler-size(@size) {
  .fr-handler {
    width: @size;
    height: @size;

    &.fr-hnw {
      left: (-@size / 2);
      top: (-@size / 2);
    }

    &.fr-hne {
      right: (-@size / 2);
      top: (-@size / 2);
    }

    &.fr-hsw {
      left: (-@size / 2);
      bottom: (-@size / 2);
    }

    &.fr-hse {
      right: (-@size / 2);
      bottom: (-@size / 2);
    }
  }
}

.font-smoothing() {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.hide-by-clipping {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0,0,0,0);
  border: 0;
}
.display-inline-flex() {

  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

/***** core/element.less *****/

.fr-element, .fr-element:focus {
  outline: 0px solid transparent;
}

.fr-box.fr-basic {
  .fr-element {
    color: @editor-text;
    padding: @editor-padding;
    .box-sizing(border-box);
    overflow-x: auto;
    min-height: (20px + (2 * @editor-padding));
  }

  &.fr-rtl {
    .fr-element {
      text-align: right;
    }
  }
}

.fr-element {
  background: transparent;
  position: relative;
  z-index: 2;

  // CSS rule for iPad not being able to select sometimes.
  -webkit-user-select: auto;

  // Fix bootstrap select.
  a {
    .user-select(auto);
  }

  &.fr-disabled {
    .user-select(none);
  }

  [contenteditable="true"] {
    outline: 0px solid transparent;
  }
}

.fr-box {
  a.fr-floating-btn {
    .material-box-shadow (@editor-shadow-level);
    .border-radius(100%);
    height: @floating-btn-size;
    width: @floating-btn-size;
    text-align: center;
    background: @floating-btn-bg;
    color: @floating-btn-text;
    .transition(background @transition-timing, color @transition-timing, transform @transition-timing;);
    outline: none;
    left: 0;
    top: 0;
    line-height: (@floating-btn-size);
    .transform(scale(0));
    text-align: center;
    display: block;
    .box-sizing(border-box);
    border: @floating-btn-border;

    svg {
      .transition(transform @transition-timing;);
      fill: @floating-btn-text;
    }

    i, svg {
      font-size: @floating-btn-font-size;
      line-height: @floating-btn-size;
    }

    &.fr-btn + .fr-btn {
      margin-left: 10px;
    }

    &:hover {
      background: @floating-btn-hover-bg;
      cursor: pointer;

      svg {
        fill: @floating-btn-hover-text;
      }
    }
  }

  .fr-visible {
    a.fr-floating-btn {
      .transform(scale(1));
    }
  }
}

/***** core/iframe.less *****/

iframe.fr-iframe {
  width: 100%;
  border: none;
  position: relative;
  display: block;
  z-index: 2;
  .box-sizing(border-box);
}

/***** core/wrapper.less *****/

.fr-wrapper {
  position: relative;
  z-index: 1;
  .clearfix();

  .fr-placeholder {
    position: absolute;
    font-size: @placeholder-size;
    color: @placeholder-color;
    z-index: 1;
    display: none;
    top: 0;
    left: 0;
    right: 0;
    overflow: hidden;
  }

  &.show-placeholder {
    .fr-placeholder {
      display: block;
    }
  }

  ::-moz-selection {
    background: @selection-bg;
    color: @selection-text;
  }

  ::selection {
    background: @selection-bg;
    color: @selection-text;
  }
}

.fr-box.fr-basic {
  .fr-wrapper {
    background: @editor-bg;
    border: @editor-border;
    border-top: 0;
    top: 0;
    left: 0;
  }
}

.fr-box.fr-basic {
  &.fr-top .fr-wrapper {
    border-top: 0;
    .border-radius(0 0 @border-radius @border-radius);
    .material-box-shadow(@editor-shadow-level);
  }

  &.fr-bottom .fr-wrapper {
    border-bottom: 0;
    .border-radius(@border-radius @border-radius 0 0);
    .material-box-shadow(@editor-shadow-level, -1);
  }
}


/***** tooltip.less *****/

.fr-tooltip {
  position: absolute;
  top: 0;
  left: 0;
  padding: 0 8px;
  .border-radius(@border-radius);
  .material-box-shadow(((@editor-shadow-level + 1) * min(@editor-shadow-level, 1)));
  background: @tooltip-bg;
  color: @tooltip-text;
  font-size: @tooltip-font-size;
  line-height: @tooltip-line-height;
  font-family: @font-family;
  .transition(opacity @transition-timing);
  .opacity(0);
  left: -3000px;
  .user-select(none);
  z-index: 2147483647;
  text-rendering: optimizelegibility;
  .font-smoothing();

  &.fr-visible {
    .opacity(1);
  }
}

/***** ui/buttons.less *****/

// Command button.

.fr-toolbar, .fr-popup {
  .fr-command.fr-btn {
    background: transparent;
    color: @btn-text;
  	-moz-outline: 0;
  	outline: 0;
    border: 0;
    line-height: 1;
  	cursor: pointer;
    text-align: left;
  	margin: 0px @btn-margin;
    .transition(background @transition-timing);
    .border-radius(0);
    z-index: 2;
    position: relative;
    .box-sizing(border-box);
    text-decoration: none;
    .user-select(none);
    float: left;
    padding: 0;
    width: @btn-width;
    height: @btn-height;

    &::-moz-focus-inner {
      border: 0;
      padding: 0
    }

    &.fr-btn-text {
      width: auto;
    }

    i, svg {
      display: block;
      font-size: @btn-font-size;
      width: @btn-font-size;
      margin: ((@btn-height - @btn-font-size) / 2) ((@btn-width - @btn-font-size) / 2);
      text-align: center;
      float: none;
    }

    // Used for accessibility instead of aria-label.
    span.fr-sr-only {
      .hide-by-clipping();
    }

    span {
      font-size: @ui-font-size;
      display: block;
      line-height:  (@ui-font-size + 3px);
      min-width: (@btn-width - 2 * @btn-margin);
      float: left;
      text-overflow: ellipsis;
      overflow: hidden;
      white-space: nowrap;
      height: (@btn-font-size + 3px);
      font-weight: bold;
      padding: 0 @btn-margin;
    }

    img {
      margin: ((@btn-height - @btn-font-size) / 2) ((@btn-width - @btn-font-size) / 2);
      width: @btn-font-size;
    }

    // Button is active.
    &.fr-active {
      color: @btn-active-text;
      background: @btn-active-bg;
    }

    &.fr-dropdown {
      &.fr-selection {
        width: auto;

        span {
          font-weight: normal;
        }
      }

      i, span, img, svg {
        margin-left: (((@btn-width - @btn-font-size) / 2) - @dropdown-arrow-width);
        margin-right: (((@btn-width - @btn-font-size) / 2) + @dropdown-arrow-width);
      }

      // Dropdown is visible.
      &.fr-active {
        color: @btn-text;
        background: @btn-selected-bg;

        &:hover, &:focus {
          background: @btn-selected-bg !important;
          color: @btn-selected-text !important;

          &::after {
            border-top-color: @btn-selected-text !important;
          }
        }
      }

      &::after {
        position: absolute;
        width: 0;
      	height: 0;
      	border-left: @dropdown-arrow-width solid transparent;
      	border-right: @dropdown-arrow-width solid transparent;
      	border-top: @dropdown-arrow-width solid @btn-text;
        right: (((@btn-width - @btn-font-size) / 2 - @dropdown-arrow-width) / 2);
        top: ((@btn-height - @dropdown-arrow-width) / 2);
        content: "";
      }
    }

    &.fr-disabled {
      color: @btn-disabled-color;
      cursor: default;

      &::after {
        border-top-color: @btn-disabled-color !important;
      }
    }

    &.fr-hidden {
      display: none;
    }
  }

  &.fr-disabled {
    .fr-btn, .fr-btn.fr-active {
      color: @btn-disabled-color;

      &.fr-dropdown::after {
        border-top-color: @btn-disabled-color;
      }
    }
  }

  &.fr-rtl {
    .fr-command.fr-btn {
      float: right;
    }
  }
}

.fr-toolbar.fr-inline {
  .fr-command.fr-btn:not(.fr-hidden) {
    .display-inline-flex();
    float: none;
  }
}

.fr-desktop {
  .fr-command {
    // Hover.
    &:hover, &:focus {
      outline: 0;
      color: @btn-hover-text;
      background: @btn-hover-bg;

      &::after {
        border-top-color: @btn-hover-text !important;
      }
    }

    // Button is selected.
    &.fr-selected {
      color: @btn-selected-text;
      background: @btn-selected-bg;
    }

    &.fr-active {
      &:hover, &:focus {
        color: @btn-active-hover-text;
        background: @btn-active-hover-bg;
      }

      &.fr-selected {
        color: @btn-active-selected-text;
        background: @btn-active-selected-bg;
      }
    }

    &.fr-disabled {
      &:hover, &:focus, &.fr-selected {
        background: transparent;
      }
    }
  }

  &.fr-disabled {
    .fr-command {
      &:hover, &:focus, &.fr-selected {
        background: transparent;
      }
    }
  }
}

.fr-toolbar.fr-mobile, .fr-popup.fr-mobile {
  .fr-command.fr-blink {
    background: @btn-active-bg;
  }
}

/***** ui/dropdown.less *****/

.fr-command.fr-btn {
  + .fr-dropdown-menu {
    display: inline-block;
    position: absolute;
    right: auto;
    bottom: auto;
    height: auto;
    z-index: 4;
    -webkit-overflow-scrolling: touch;
    overflow: hidden;
    zoom: 1;
    .border-radius(0 0 @border-radius @border-radius);

    &.test-height {
      .fr-dropdown-wrapper {
        .transition(none);
        height: auto;
        max-height: @dropdown-max-height;
      }
    }

    .fr-dropdown-wrapper {
      background: @ui-bg;
      padding: 0;
      margin: auto;
      display: inline-block;
      text-align: left;
      position: relative;
      .box-sizing(border-box);
      .transition(max-height @transition-timing);
      margin-top: 0;
      float: left;
      max-height: 0;
      height: 0;
      margin-top: 0 !important;

      .fr-dropdown-content {
        overflow: auto;
        position: relative;
        max-height: @dropdown-max-height;

        ul.fr-dropdown-list {
          list-style-type: none;
          margin: 0;
          padding: 0;

          li {
            padding: 0;
            margin: 0;
            font-size: 15px;

            a {
              padding: 0 24px;
              line-height: 200%;
              display: block;
              cursor: pointer;
              white-space: nowrap;
              color: inherit;
              text-decoration: none;

              &.fr-active {
                background: @dropdown-item-active-bg;
              }

              &.fr-disabled {
                color: @btn-disabled-color;
                cursor: default;
              }
            }
          }
        }
      }
    }
  }

  &:not(.fr-active) {
    + .fr-dropdown-menu {
      left: -3000px !important;
    }
  }

  &.fr-active {
    + .fr-dropdown-menu {
      display: inline-block;
      .material-box-shadow(((@editor-shadow-level + 1) * min(@editor-shadow-level, 1)));

      .fr-dropdown-wrapper {
        height: auto;
        max-height: @dropdown-max-height;
      }
    }
  }
}

.fr-bottom > .fr-command.fr-btn {
  + .fr-dropdown-menu {
    .border-radius(@border-radius @border-radius 0 0);
    .material-box-shadow((@editor-shadow-level + 1) * min(@editor-shadow-level, 1), -1);
  }
}

.fr-toolbar, .fr-popup {
  &.fr-rtl {
    .fr-dropdown-wrapper {
      text-align: right !important;
    }
  }
}

/***** ui/modal.less *****/

body.prevent-scroll {
  overflow: hidden;

  &.fr-mobile {
    position: fixed;
    -webkit-overflow-scrolling: touch;
  }
}

.fr-modal {
  color: @ui-text;
  font-family: @font-family;
  position: fixed;
  overflow-x: auto;
  overflow-y: scroll;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  width: 100%;
  z-index: 2147483640;
  text-rendering: optimizelegibility;
  .font-smoothing();
  text-align: center;
  line-height: 1.2;

  &.fr-middle {
    .fr-modal-wrapper {
      margin-top: 0;
      margin-bottom: 0;
      margin-left: auto;
      margin-right: auto;
      top: 50%;
      left: 50%;
      .transform(translate(-50%, -50%));
      position: absolute;
    }
  }

  .fr-modal-wrapper {
    .border-radius(@border-radius);
    margin: 20px auto;
    display: inline-block;
    background: @modal-bg;
    min-width: 300px;
    .material-box-shadow(((@editor-shadow-level + 2) * min(@editor-shadow-level, 1)));
    border: @editor-border;
    border-top: @ui-border-top;
    overflow: hidden;
    width: 90%;
    position: relative;

    @media (min-width: @screen-sm) and (max-width: @screen-sm-max) {
      margin: 30px auto;
      width: 70%;
    }

    @media (min-width: @screen-md) {
      margin: 50px auto;
      width: 600px;
    }

    .fr-modal-head {
      background: @ui-bg;
      .material-box-shadow(((@editor-shadow-level + 1) * min(@editor-shadow-level, 1)));
      border-bottom: @editor-border;
      overflow: hidden;
      position: absolute;
      width: 100%;
      min-height: 42px;
      z-index: 3;
      .transition(height @transition-timing);

      .fr-modal-close {
        padding: 12px;
        width: 20px;
        font-size: 16px;
        cursor: pointer;
        line-height: 18px;
        color: @ui-text;
        .box-sizing(content-box);
        position: absolute;
        top: 0;
        right: 0;
        .transition(color @transition-timing);
      }

      h4 {
        font-size: 18px;
        padding: 12px 10px;
        margin: 0;
        font-weight: 400;
        line-height: 18px;
        display: inline-block;
        float: left;
      }
    }

    div.fr-modal-body {
      height: 100%;
      min-height: 150px;
      overflow-y: scroll;
      padding-bottom: 10px;

      &:focus {
        outline: 0;
      }

      button.fr-command {
        height: 36px;
        line-height: 1;
        color: @ui-color;
        padding: 10px;
        cursor: pointer;
        text-decoration: none;
        border: none;
        background: none;
        font-size: 16px;
        outline: none;
        .transition(background @transition-timing);
        .border-radius(@border-radius);

        + button {
          margin-left: 24px;
        }

        &:hover, &:focus {
          background: @ui-hover-color;
          color: @ui-color;
        }

        &:active {
          background: @ui-focused-color;
          color: @ui-color;
        }
      }

      button::-moz-focus-inner {
        border: 0;
      }
    }
  }
}

&.fr-desktop .fr-modal-wrapper {
  .fr-modal-head {
    i:hover {
      background: @ui-hover-color;
    }
  }
}

// Overlay that appears with modal.
.fr-overlay {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background: @modal-overlay-color;
  .opacity(0.5);
  z-index: 2147483639;
}


/***** ui/popup.less *****/

.fr-popup {
  position: absolute;
  display: none;
  color: @ui-text;
  background: @ui-bg;
  .material-box-shadow(@editor-shadow-level);
  .border-radius(@border-radius);
  font-family: @font-family;
  .box-sizing(border-box);
  .user-select(none);
  margin-top: 10px;
  z-index: 2147483635;
  text-align: left;
  border: @editor-border;
  border-top: @ui-border-top;
  text-rendering: optimizelegibility;
  .font-smoothing();
  line-height: 1.2;

  .fr-input-focus {
    background: @ui-hover-light-color;
  }

  &.fr-above {
    margin-top: -10px;
    border-top: 0;
    border-bottom: @ui-border-top;
    .material-box-shadow(@editor-shadow-level, -1);
  }

  &.fr-active {
    display: block;
  }


  &.fr-hidden {
    .opacity(0);
  }

  &.fr-empty {
    display: none !important;
  }

  .fr-hs {
    display: block !important;

    &.fr-hidden {
      display: none !important;
    }
  }

  .fr-input-line {
    position: relative;
    padding: 8px 0;

    input[type="text"], textarea {
      width: 100%;
      margin: 0px 0 1px 0;
      border: none;
      border-bottom: solid 1px @input-border-color;
      color: @ui-text;
      font-size: 14px;
      padding: 6px 0 2px;
      background: rgba(0, 0, 0, 0);
      position: relative;
      z-index: 2;
      .box-sizing(border-box);

      &:focus {
        border-bottom: solid 2px @ui-color;
        margin-bottom: 0px;
      }
    }

    input + label, textarea + label {
      position: absolute;
      top: 0;
      left: 0;
      font-size: 12px;
      color: rgba(0, 0, 0, 0);
      .transition(color @transition-timing);
      z-index: 3;
      width: 100%;
      display: block;
      background: @ui-bg;
    }

    input.fr-not-empty:focus + label, textarea.fr-not-empty:focus + label {
      color: @ui-color;
    }

    input.fr-not-empty + label, textarea.fr-not-empty + label {
      color: @input-label-color;
    }
  }

  input, textarea {
    .user-select(text);
    .border-radius(0);
    outline: none;
  }

  textarea {
    resize: none;
  }

  .fr-buttons {
    .clearfix();
    .material-box-shadow(@editor-shadow-level);
    padding: 0 @btn-margin;
    white-space: nowrap;
    line-height: 0;
    border-bottom: @editor-border;

    .fr-btn {
      display: inline-block;
      float: none;

      i {
        float: left;
      }
    }

    .fr-separator {
      display: inline-block;
      float: none;
    }
  }

  .fr-layer {
    width: (@popup-layer-width * 0.75);
    @media (min-width: @screen-sm) {
      width: @popup-layer-width;
    }

    .box-sizing(border-box);
    margin: 10px;
    display: none;

    &.fr-active {
      display: inline-block;
    }
  }

  .fr-action-buttons {
    z-index: 7;
    height: 36px;
    text-align: right;

    button.fr-command {
      height: 36px;
      line-height: 1;
      color: @ui-color;
      padding: 10px;
      cursor: pointer;
      text-decoration: none;
      border: none;
      background: none;
      font-size: 16px;
      outline: none;
      .transition(background @transition-timing);
      .border-radius(@border-radius);

      + button {
        margin-left: 24px;
      }

      &:hover, &:focus {
        background: @ui-hover-color;
        color: @ui-color;
      }

      &:active {
        background: @ui-focused-color;
        color: @ui-color;
      }
    }

    button::-moz-focus-inner {
      border: 0;
    }
  }

  .fr-checkbox {
    position: relative;
    display: inline-block;
    width: 16px;
    height: 16px;
    line-height: 1;
    .box-sizing(content-box);
    vertical-align: middle;

    svg {
      margin-left: 2px;
      margin-top: 2px;
      display: none;
      width: 10px;
      height: 10px;
    }

    span {
      border: solid 1px @ui-text;
      .border-radius(@border-radius);
      width: 16px;
      height: 16px;
      display: inline-block;
      position: relative;
      z-index: 1;
      .box-sizing(border-box);
      .transition(background @transition-timing, border-color @transition-timing;);
    }

    input {
      position: absolute;
      z-index: 2;
      .opacity(0);
      border: 0 none;
      cursor: pointer;
      height: 16px;
      margin: 0;
      padding: 0;
      width: 16px;
      top: 1px;
      left: 1px;

      &:checked + span {
        background: @ui-color;
        border-color: @ui-color;

        svg {
          display: block;
        }
      }

      &:focus + span {
        border-color: @ui-color;
      }
    }
  }

  .fr-checkbox-line {
    font-size: 14px;
    line-height: 1.4px;
    margin-top: 10px;

    label {
      cursor: pointer;
      margin: 0 5px;
      vertical-align: middle;
    }
  }

  &.fr-rtl {
    direction: rtl;
    text-align: right;

    .fr-action-buttons {
      text-align: left;
    }

    .fr-input-line {
      input + label, textarea + label {
        left: auto;
        right: 0;
      }
    }

    .fr-buttons .fr-separator.fr-vs {
      float: right;
    }
  }

  .fr-arrow {
    width: 0;
    height: 0;
    border-left: @arrow-size solid transparent;
    border-right: @arrow-size solid transparent;
    border-bottom: @arrow-size solid @ui-border-color;
    position: absolute;
    top: ((-@arrow-size * 2) + 1);
    left: 50%;
    margin-left: (-@arrow-size);
    display: inline-block;
  }

  &.fr-above {
    .fr-arrow {
      top: auto;
      bottom: ((-@arrow-size * 2) + 1);
      border-bottom: 0;
      border-top: @arrow-size solid @ui-border-color;
    }
  }
}

/***** ui/text_edit.less *****/

.fr-text-edit-layer {
  width: 250px;
  .box-sizing(border-box);
  display: block !important;
}


/***** ui/toolbar.less *****/

.fr-toolbar {
  color: @ui-text;
  background: @ui-bg;
  position: relative;
  z-index: 4;
  font-family: @font-family;
  .clearfix();
  .box-sizing(border-box);
  .user-select(none);
  padding: 0 @btn-margin;
  .border-radius(@border-radius);
  .material-box-shadow(@editor-shadow-level);
  text-align: left;
  border: @editor-border;
  border-top: @ui-border-top;
  text-rendering: optimizelegibility;
  .font-smoothing();
  line-height: 1.2;

  &.fr-rtl {
    text-align: right;
  }

  &.fr-inline {
    display: none;

    white-space: nowrap;
    position: absolute;
    margin-top: 10px;

    .fr-arrow {
      width: 0;
      height: 0;
      border-left: @arrow-size solid transparent;
      border-right: @arrow-size solid transparent;
      border-bottom: @arrow-size solid @ui-border-color;
      position: absolute;
      top: ((-@arrow-size * 2) + 1);
      left: 50%;
      margin-left: (-@arrow-size);
      display: inline-block;
    }

    &.fr-above {
      margin-top: -10px;
      .material-box-shadow(@editor-shadow-level, -1);
      border-bottom: @ui-border-top;
      border-top: 0;

      .fr-arrow {
        top: auto;
        bottom: ((-@arrow-size * 2) + 1);
        border-bottom: 0;
        border-top-color: inherit;
        border-top-style: solid;
        border-top-width: @arrow-size;
      }
    }
  }

  &.fr-top {
    top: 0;
    .border-radius(@border-radius @border-radius 0 0);
    .material-box-shadow(@editor-shadow-level);
  }

  &.fr-bottom {
    bottom: 0;
    .border-radius(0 0 @border-radius @border-radius);
    .material-box-shadow(@editor-shadow-level);
  }
}

.fr-separator {
  background: @separator-color;
  display: block;
  vertical-align: top;
  float: left;

  + .fr-separator {
    display: none;
  }

  &.fr-vs {
    height: (@btn-height - 2 * @btn-margin);
    width: @separator-size;
    margin: @btn-margin;
  }

  &.fr-hs {
    clear: both;
    height: @separator-size;
    width: calc(100% - (2 * @btn-margin));
    margin: 0 @btn-margin;
  }

  &.fr-hidden {
    display: none !important;
  }
}

.fr-rtl .fr-separator {
  float: right;
}

.fr-toolbar.fr-inline .fr-separator.fr-hs {
  float: none;
}

.fr-toolbar.fr-inline .fr-separator.fr-vs {
  float: none;
  display: inline-block;
}

/***** helpers.less *****/

.fr-visibility-helper {
  display: none;
  margin-left: 0px !important;

  @media (min-width: @screen-sm) {
    margin-left: 1px !important;
  }

  @media (min-width: @screen-md) {
    margin-left: 2px !important;
  }

  @media (min-width: @screen-lg) {
    margin-left: 3px !important;
  }
}

.fr-opacity-0 {
  .opacity(0);
}

.fr-box {
  position: relative;
}

/**
 * Postion sticky hacks.
 */
.fr-sticky {
  position: -webkit-sticky;
	position: -moz-sticky;
	position: -ms-sticky;
	position: -o-sticky;
	position: sticky;
}

.fr-sticky-off {
	position: relative;
}

.fr-sticky-on {
	position: fixed;

  &.fr-sticky-ios {
    position: absolute;
    left: 0;
    right: 0;
    width: auto !important;
  }
}

.fr-sticky-dummy {
	display: none;
}

.fr-sticky-on + .fr-sticky-dummy, .fr-sticky-box > .fr-sticky-dummy {
	display: block;
}

// Used for accessibility instead of aria-label.
span.fr-sr-only {
  .hide-by-clipping();
}


/***** plugins/colors.less *****/

.fr-popup {
  .fr-colors-tabs {
    .material-box-shadow(@editor-shadow-level);
    margin-bottom: 5px;
    line-height: 16px;
    margin-left: -2px;
    margin-right: -2px;

    .fr-colors-tab {
      display: inline-block;
      width: 50%;
      cursor: pointer;
      text-align: center;
      color: @ui-text;
      font-size: 13px;
      padding: 8px 0;
      position: relative;

      &:hover, &:focus {
        color: @ui-color;
      }

      &[data-param1="background"]::after {
      	position: absolute;
      	bottom: 0;
      	left: 0;
      	width: 100%;
      	height: 2px;
      	background: @ui-color;
      	content: '';
        .transition(transform @transition-timing);
      }

      &.fr-selected-tab {
        color: @ui-color;

        &[data-param1="text"] ~ [data-param1="background"]::after {
          .transform(translate3d(-100%,0,0));
        }
      }
    }
  }

  .fr-color-hex-layer {
    width: 100%;
    margin: 0px;
    padding: 10px;

    .fr-input-line {
      float: left;
      width: calc(100% - 50px);
      padding: 8px 0 0;
    }

    .fr-action-buttons {
      float: right;
      width: 50px;
    }

    .fr-action-buttons {
      button {
        background-color: @ui-color;
        color: #FFF;
        .border-radius(@border-radius);
        font-size: 13px;
        height: 32px;

        &:hover {
          background-color: darken(@ui-color, 10%);
          color: #FFF;
        }
      }
    }
  }

  .fr-separator + .fr-colors-tabs {
    .material-box-shadow(0, 0);
    margin-left: 2px;
    margin-right: 2px;
  }

  .fr-color-set {
    line-height: 0;
    display: none;

    &.fr-selected-set {
      display: block;
    }

    > span {
      display: inline-block;
      width: 32px;
      height: 32px;
      position: relative;
      z-index: 1;

      > i, > svg {
        text-align: center;
        line-height: 32px;
        height: 32px;
        width: 32px;
        font-size: 13px;
        position: absolute;
        bottom: 0;
        cursor: default;
        left: 0;
      }

      .fr-selected-color {
        color: @white;
        font-family: FontAwesome;
        font-size: 13px;
        font-weight: 400;
        line-height: 32px;
        position: absolute;
        top: 0;
        bottom: 0;
        right: 0;
        left: 0;
        text-align: center;
        cursor: default;
      }

      &:hover, &:focus {
        outline: 1px solid @ui-text;
        z-index: 2;
      }
    }
  }
}

.fr-rtl .fr-popup {
  .fr-colors-tabs {
    .fr-colors-tab {
      &.fr-selected-tab {
        &[data-param1="text"] ~ [data-param1="background"]::after {
          .transform(translate3d(100%,0,0));
        }
      }
    }
  }
}


/***** plugins/draggable.less *****/

.fr-drag-helper {
  background: @drag-helper-bg;
  height: 2px;
  margin-top: -1px;
  .opacity(0.2);
  position: absolute;
  z-index: 2147483640;
  display: none;

  &.fr-visible {
    display: block;
  }
}

.fr-dragging {
  .opacity(0.4);
}

/***** plugins/file.less *****/

.fr-popup {
  .fr-file-upload-layer {
    border: dashed 2px @ui-disabled-color;
    padding: 25px 0;
    position: relative;
    font-size: 14px;
    letter-spacing: 1px;
    line-height: 140%;
    .box-sizing(border-box);
    text-align: center;

    &:hover {
      background: @ui-hover-color;
    }

    &.fr-drop {
      background: @ui-hover-color;
      border-color: @ui-color;
    }

    .fr-form {
      .opacity(0);
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      z-index: 2147483640;
      overflow: hidden;
      margin: 0 !important;
      padding: 0 !important;
      width: 100% !important;

      input {
        cursor: pointer;
        position: absolute;
        right: 0px;
        top: 0px;
        bottom: 0px;
        width: 500%;
        height: 100%;
        margin: 0px;
        font-size: 400px;
      }
    }
  }

  .fr-file-progress-bar-layer {
    .box-sizing(border-box);

    > h3 {
      font-size: 16px;
      margin: 10px 0;
      font-weight: normal;
    }

    > div.fr-action-buttons {
      display: none;
    }

    > div.fr-loader {
      background: mix(@white, @ui-color, 70%);
      height: 10px;
      width: 100%;
      margin-top: 20px;
      overflow: hidden;
      position: relative;

      span {
        display: block;
        height: 100%;
        width: 0%;
        background: @ui-color;
        .transition(width @transition-timing);
      }

      &.fr-indeterminate {
        span {
          width: 30% !important;
          position: absolute;
          top: 0;
          .animation(loading 2s linear infinite);
        }
      }
    }

    &.fr-error {
      > div.fr-loader {
        display: none;
      }

      > div.fr-action-buttons {
        display: block;
      }
    }
  }
}


@keyframes loading {
  from {left: -25%;}
  to {left: 100%}
}

@-webkit-keyframes loading {
  from {left: -25%;}
  to {left: 100%}
}

@-moz-keyframes loading {
  from {left: -25%;}
  to {left: 100%}
}

@-o-keyframes loading {
  from {left: -25%;}
  to {left: 100%}
}

/***** plugins/image.less *****/

.fr-element img {
  cursor: pointer;
}

.fr-image-resizer {
  position: absolute;
  border: solid 1px @ui-color;
  display: none;
  .user-select(none);
  .box-sizing(content-box);

  &.fr-active {
    display: block;
  }

  .fr-handler {
    display: block;
    position: absolute;
    background: @ui-color;
    border: solid 1px @white;
    z-index: 4;
    .box-sizing(border-box);

    &.fr-hnw {
      cursor: nw-resize;
    }

    &.fr-hne {
      cursor: ne-resize;
    }

    &.fr-hsw {
      cursor: sw-resize;
    }

    &.fr-hse {
      cursor: se-resize;
    }
  }

  .handler-size(@handler-size);

  @media(min-width: @screen-lg) {
    .handler-size(@handler-size-lg);
  }
}

.fr-image-overlay {
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  z-index: 2147483640;
  display: none;
}

.fr-popup {
  .fr-image-upload-layer {
    border: dashed 2px @ui-disabled-color;
    padding: 25px 0;
    position: relative;
    font-size: 14px;
    letter-spacing: 1px;
    line-height: 140%;
    text-align: center;

    &:hover {
      background: @ui-hover-color;
    }

    &.fr-drop {
      background: @ui-hover-color;
      border-color: @ui-color;
    }

    .fr-form {
      .opacity(0);
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      z-index: 2147483640;
      overflow: hidden;
      margin: 0 !important;
      padding: 0 !important;
      width: 100% !important;

      input {
        cursor: pointer;
        position: absolute;
        right: 0px;
        top: 0px;
        bottom: 0px;
        width: 500%;
        height: 100%;
        margin: 0px;
        font-size: 400px;
      }
    }
  }

  .fr-image-progress-bar-layer {
    > h3 {
      font-size: 16px;
      margin: 10px 0;
      font-weight: normal;
    }

    > div.fr-action-buttons {
      display: none;
    }

    > div.fr-loader {
      background: mix(@white, @ui-color, 70%);
      height: 10px;
      width: 100%;
      margin-top: 20px;
      overflow: hidden;
      position: relative;

      span {
        display: block;
        height: 100%;
        width: 0%;
        background: @ui-color;
        .transition(width @transition-timing);
      }

      &.fr-indeterminate {
        span {
          width: 30% !important;
          position: absolute;
          top: 0;
          .animation(loading 2s linear infinite);
        }
      }
    }

    &.fr-error {
      > div.fr-loader {
        display: none;
      }

      > div.fr-action-buttons {
        display: block;
      }
    }
  }
}

.fr-image-size-layer {
  .fr-image-group {
    .fr-input-line {
      width: calc(50% - 5px);
      display: inline-block;

      + .fr-input-line {
        margin-left: 10px;
      }
    }
  }
}

.fr-uploading {
  .opacity(0.4);
}

@keyframes loading {
  from {left: -25%;}
  to {left: 100%}
}

@-webkit-keyframes loading {
  from {left: -25%;}
  to {left: 100%}
}

@-moz-keyframes loading {
  from {left: -25%;}
  to {left: 100%}
}

@-o-keyframes loading {
  from {left: -25%;}
  to {left: 100%}
}

/***** plugins/table.less *****/

.fr-element {
  table {
    td.fr-selected-cell, th.fr-selected-cell {
      border: 1px double @ui-color;
    }

    // Prevent Firefox selection.
    tr {
      .user-select(none);
    }

    td, th {
      .user-select(text);
    }
  }

  // Prevent Firefox selection.
  .fr-no-selection {
    table {
      td, th {
        .user-select(none);
      }
    }
  }
}

.fr-table-resizer {
  cursor: col-resize;
  position: absolute;
  z-index: 3;
  display: none;

  &.fr-moving {
    z-index: 2;
  }

  div {
    .opacity(0);
    border-right: @table-resizer;
  }
}

.fr-no-selection {
  .user-select(none);
}

// Table popups.
.fr-popup {
  .fr-table-colors-hex-layer {
    width: 100%;
    margin: 0px;
    padding: 10px;

    .fr-input-line {
      float: left;
      width: calc(100% - 50px);
      padding: 8px 0 0;
    }

    .fr-action-buttons {
      float: right;
      width: 50px;
    }

    .fr-action-buttons {
      button {
        background-color: @ui-color;
        color: #FFF;
        .border-radius(@border-radius);
        font-size: 13px;
        height: 32px;

        &:hover {
          background-color: darken(@ui-color, 10%);
          color: #FFF;
        }
      }
    }
  }

  // Insert table.
  .fr-table-size {
    .fr-table-size-info {
      text-align: center;
      font-size: 14px;
      padding: 8px;
    }

    .fr-select-table-size {
      line-height: 0;
      padding: 0 5px 5px;
      white-space: nowrap;

      > span {
        display: inline-block;
        padding: 0px 4px 4px 0;
        background: transparent;

        > span {
          display: inline-block;
          width: 18px;
          height: 18px;
          border: @insert-table-grid;
        }

        &.hover {
          background: transparent;

          > span {
            background: rgba(red(@ui-color), green(@ui-color), blue(@ui-color), 0.3);
            border: solid 1px @ui-color;
          }
        }
      }

      .new-line {
        .clearfix();
      }
    }
  }

  &.fr-above {
    .fr-table-size {
      .fr-select-table-size {
        > span {
          display: inline-block !important;
        }
      }
    }
  }

  // Table colors.
  .fr-table-colors-buttons {
    margin-bottom: 5px;
  }

  .fr-table-colors {
    line-height: 0;
    display: block;

    > span {
      display: inline-block;
      width: 32px;
      height: 32px;
      position: relative;
      z-index: 1;

      > i {
        text-align: center;
        line-height: 32px;
        height: 32px;
        width: 32px;
        font-size: 13px;
        position: absolute;
        bottom: 0;
        cursor: default;
        left: 0;
      }

      &:focus {
        outline: 1px solid @ui-text;
        z-index: 2;
      }
    }
  }
}

.fr-popup.fr-desktop .fr-table-size .fr-select-table-size > span > span {
  width: 12px;
  height: 12px;
}

.fr-insert-helper {
  position: absolute;
  z-index: 9999;
  white-space: nowrap;
}


/***** plugins/video.less *****/

.fr-element {
  .fr-video {
    .user-select(none);

    &::after {
      position: absolute;
      content: '';
      z-index: 1;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      cursor: pointer;
      display: block;
      background: rgba(0,0,0,0);
    }

    &.fr-active > * {
      z-index: 2;
      position: relative;
    }

    > * {
      .box-sizing(content-box);
      max-width: 100%;
      border: none;
    }
  }
}

.fr-box .fr-video-resizer {
  position: absolute;
  border: solid 1px @ui-color;
  display: none;
  .user-select(none);

  &.fr-active {
    display: block;
  }

  .fr-handler {
    display: block;
    position: absolute;
    background: @ui-color;
    border: solid 1px @white;
    z-index: 4;
    .box-sizing(border-box);

    &.fr-hnw {
      cursor: nw-resize;
    }

    &.fr-hne {
      cursor: ne-resize;
    }

    &.fr-hsw {
      cursor: sw-resize;
    }

    &.fr-hse {
      cursor: se-resize;
    }
  }

  .handler-size(@handler-size);

  @media(min-width: @screen-lg) {
    .handler-size(@handler-size-lg);
  }
}

.fr-popup {
  .fr-video-size-layer {
    .fr-video-group {
      .fr-input-line {
        width: calc(50% - 5px);
        display: inline-block;

        + .fr-input-line {
          margin-left: 10px;
        }
      }
    }
  }

  .fr-video-upload-layer {
    border: dashed 2px @ui-disabled-color;
    padding: 25px 0;
    position: relative;
    font-size: 14px;
    letter-spacing: 1px;
    line-height: 140%;
    text-align: center;

    &:hover {
      background: @ui-hover-color;
    }

    &.fr-drop {
      background: @ui-hover-color;
      border-color: @ui-color;
    }

    .fr-form {
      .opacity(0);
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      z-index: 2147483640;
      overflow: hidden;
      margin: 0 !important;
      padding: 0 !important;
      width: 100% !important;

      input {
        cursor: pointer;
        position: absolute;
        right: 0px;
        top: 0px;
        bottom: 0px;
        width: 500%;
        height: 100%;
        margin: 0px;
        font-size: 400px;
      }
    }
  }

  .fr-video-progress-bar-layer {
    > h3 {
      font-size: 16px;
      margin: 10px 0;
      font-weight: normal;
    }

    > div.fr-action-buttons {
      display: none;
    }

    > div.fr-loader {
      background: mix(@white, @ui-color, 70%);
      height: 10px;
      width: 100%;
      margin-top: 20px;
      overflow: hidden;
      position: relative;

      span {
        display: block;
        height: 100%;
        width: 0%;
        background: @ui-color;
        .transition(width @transition-timing);
      }

      &.fr-indeterminate {
        span {
          width: 30% !important;
          position: absolute;
          top: 0;
          .animation(loading 2s linear infinite);
        }
      }
    }

    &.fr-error {
      > div.fr-loader {
        display: none;
      }

      > div.fr-action-buttons {
        display: block;
      }
    }
  }
}

.fr-video-overlay {
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  z-index: 2147483640;
  display: none;
}

/* Files: froala.less, plugins/colors.less, plugins/draggable.less, plugins/file.less, plugins/image.less, plugins/table.less, plugins/video.less */]]></template>
  <template type="public" title="editor_dialog_code" version_id="2000051" version_string="2.0.0 Release Candidate 1"><![CDATA[<xf:title>{{ phrase('insert_code') }}</xf:title>

<form class="block" id="editor_code_form">
	<div class="block-container">
		<div class="block-body" data-xf-init="code-editor-switcher-container">
			<xf:selectrow id="editor_code_type" class="js-codeEditorSwitcher"
				label="{{ phrase('language_code') }}">

				<xf:optgroup label="{{ phrase('non_language_specific') }}">
					<xf:option value="">{{ phrase('code_language.general') }}</xf:option>
					<xf:option value="rich">{{ phrase('code_language.rich') }}</xf:option>
				</xf:optgroup>

				<xf:optgroup label="{{ phrase('common_languages') }}">
					<xf:foreach loop="$languages" key="$key" value="$language">
						<xf:if is="$language.common">
							<xf:option value="{$key}">{$language.phrase}</xf:option>
						</xf:if>
					</xf:foreach>
				</xf:optgroup>

				<xf:optgroup label="{{ phrase('other_languages') }}">
					<xf:foreach loop="$languages" key="$key" value="$language">
						<xf:option value="{$key}">{$language.phrase}</xf:option>
					</xf:foreach>
				</xf:optgroup>

			</xf:selectrow>

			<xf:codeeditorrow
				id="editor_code_code"
				class="codeEditor--short"
				autofocus="autofocus"
				rowtype="fullWidth noLabel"
				rowclass="js-codeEditorContainer"
				label="{{ phrase('code') }}" />
		</div>
		<xf:submitrow submit="{{ phrase('continue') }}" id="editor_code_submit" />
	</div>
</form>]]></template>
  <template type="public" title="editor_dialog_media" version_id="2000051" version_string="2.0.0 Release Candidate 1"><![CDATA[<xf:title>{{ phrase('insert_media') }}</xf:title>

<form class="block" id="editor_media_form">
	<div class="block-container">
		<div class="block-body">
			<xf:textboxrow id="editor_media_url" type="url"
				label="{{ phrase('enter_media_url') }}"/>

			<xf:formrow
				label="{{ phrase('approved_sites') }}"
				hint="{{ phrase('you_may_insert_media_from_these_sources') }}">

				<ul class="listInline listInline--comma u-smaller">
					<xf:foreach loop="$sites" key="$siteId" value="$site">
						<li><a href="{$site.site_url}" target="_blank">{$site.site_title}</a></li>
					</xf:foreach>
				</ul>
				<div class="formRow-explain">
					<a href="{{ link('help', {'page_name': 'bb-codes'}) }}#media" target="_blank">{{ phrase('help') }}</a>
				</div>
			</xf:formrow>
		</div>
		<xf:submitrow submit="{{ phrase('continue') }}" id="editor_media_submit" />
	</div>
</form>
]]></template>
  <template type="public" title="editor_dialog_spoiler" version_id="2000051" version_string="2.0.0 Release Candidate 1"><![CDATA[<xf:title>{{ phrase('insert_spoiler') }}</xf:title>

<form class="block" id="editor_spoiler_form">
	<div class="block-container">
		<div class="block-body">
			<xf:textboxrow id="editor_spoiler_title"
				label="{{ phrase('enter_spoiler_title') }}"
				explain="{{ phrase('enter_spoiler_title_explain') }}" />
		</div>
		<xf:submitrow submit="{{ phrase('continue') }}" id="editor_spoiler_submit" />
	</div>
</form>]]></template>
  <template type="public" title="editor_override.less" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[@font-family: @xf-fontFamilyUi;
@border-radius: @xf-borderRadiusSmall;
@arrow-size: 4px;
@transition-timing: @xf-animationSpeed ease 0s;

@ui-color: @xf-editorToolbarActiveColor;
@ui-text: @xf-textColor;
@ui-hover-color: fade(@xf-textColor, 6%);
@ui-focused-color: fade(@xf-textColor, 12%);
@ui-disabled-color: mix(@xf-textColor, @xf-editorToolbarBg, 20%);
@ui-bg: @xf-editorToolbarBg;
@ui-font-size: @xf-fontSizeNormal;
@ui-border-color: @xf-editorToolbarBorderColor;
@ui-border-top: @xf-borderSizeFeature solid @xf-editorToolbarBorderColor;

@input-label-color: @xf-textColorMuted;

@tooltip-bg: xf-default(@xf-tooltip--background-color, black);
@tooltip-text: xf-default(@xf-tooltip--color, white);
@tooltip-font-size: @xf-fontSizeSmaller;
@tooltip-line-height: ((@xf-fontSizeSmaller) * 2);

@editor-padding: @xf-paddingLarge;
@editor-bg: xf-default(@xf-input--background-color, white);
@editor-text: xf-default(@xf-input--color, black);
@editor-shadow-level: 0;
@editor-border: @xf-borderSize solid @xf-borderColorHeavy;

@selection-bg: @xf-editorSelectedBg;
@selection-text: @xf-editorSelectedColor;

@btn-width: 32px;
@btn-height: 32px;
@btn-margin: 1px;
@btn-font-size: 16px;
@btn-text: @xf-editorToolbarColor;
@btn-hover-text: @xf-textColor;
@btn-hover-bg: fade(@xf-textColor, 6%);

@separator-color: @xf-borderColorLight;]]></template>
  <template type="public" title="editor_smilies" version_id="2000038" version_string="2.0.0 Beta 8"><![CDATA[<xf:if is="count($smiliesInfo.smilies) > 1">
	<div>
		<h3 class="tabs tabs--editor hScroller" data-xf-init="tabs h-scroller" role="tablist">
			<span class="hScroller-scroll">
			<xf:foreach loop="$smiliesInfo.smilieCategories" key="$categoryId" value="$category"
				if="{$smiliesInfo.smilies.{$categoryId}} is not empty" i="$i">

				<a class="tabs-tab {{ $i == 1 ? 'is-active' : '' }}"
					role="tab" tabindex="0" aria-controls="{{ unique_id('smilies' . $i) }}">{$category.title}</a>
			</xf:foreach>
			</span>
		</h3>

		<ul class="tabPanes is-structureList">
			<xf:foreach loop="$smiliesInfo.smilieCategories"
				key="$categoryId"
				value="$category"
				if="{$smiliesInfo.smilies.{$categoryId}} is not empty"
				i="$i">

				<li class="{{ $i == 1 ? 'is-active' : '' }}" role="tabpanel" id="{{ unique_id('smilies' . $i) }}">
				<xf:foreach loop="{$smiliesInfo.smilies.{$categoryId}}" value="$smilie">
					{{ smilie($smilie.smilie_text_options.0) }}
				</xf:foreach>
				</li>
			</xf:foreach>
		</ul>
	</div>
<xf:else />
	<div class="block-body block-row">
	<xf:foreach loop="$smiliesInfo.smilieCategories"
		key="$categoryId"
		value="$category"
		if="{$smiliesInfo.smilies.{$categoryId}} is not empty"
		i="$i">

		<xf:foreach loop="{$smiliesInfo.smilies.{$categoryId}}" value="$smilie">
			{{ smilie($smilie.smilie_text_options.0) }}
		</xf:foreach>
	</xf:foreach>
	</div>
</xf:if>]]></template>
  <template type="public" title="editor_smilies_emoji" version_id="2010052" version_string="2.1.0 Release Candidate 2"><![CDATA[<div class="menu-row menu-row--highlighted menu-row--insertedMessage js-emojiInsertedRow">
	<div class="menu-emojiInsertedMessage">
		{{ phrase('inserted:') }} <span class="js-emojiInsert"></span>
	</div>
</div>
<div class="menu-row menu-row--alt menu-row--close">
	<div class="inputGroup">
		<xf:textbox class="js-emojiSearch" placeholder="{{ phrase('search...') }}" data-no-auto-focus="true" />
		<xf:button icon="close" class="button--iconOnly button--plain js-emojiCloser" title="{{ phrase('close') }}"
			data-no-auto-focus="true" data-menu-closer="true">
			<span class="u-srOnly">{{ phrase('close') }}</span>
		</xf:button>
	</div>
</div>
<div class="menu-scroller js-emojiFullList">
	<h3 class="menu-header js-recentHeader {{ !$recent ? 'is-hidden' : '' }}">{{ phrase('recently_used') }}</h3>
	<div class="menu-row js-recentBlock {{ !$recent ? 'is-hidden' : '' }}">
		<ul class="emojiList js-recentList">
			<xf:foreach loop="$recent" key="$shortname" value="$emoji">
				<li><a class="js-emoji" data-shortname="{$shortname}">
					<xf:if is="$emoji.smilie_id">
						{{ smilie($shortname) }}
					<xf:else />
						{$emoji.html|raw}
					</xf:if>
				</a></li>
			</xf:foreach>
		</ul>
	</div>
	<xf:foreach loop="$smilieCategories"
		key="$categoryId"
		value="$category">
		<xf:if contentcheck="true">
			<h3 class="menu-header">{{ $categoryId ? $category.title : phrase('smilies') }}</h3>
			<div class="menu-row">
				<ul class="emojiList js-emojiList">
					<xf:contentcheck>
						<xf:foreach loop="{$groupedSmilies.{$categoryId}}" value="{$smilie}">
							<li><a class="js-emoji" data-shortname="{$smilie.smilie_text_options.0}">{{ smilie($smilie.smilie_text_options.0) }}</a></li>
						</xf:foreach>
					</xf:contentcheck>
				</ul>
			</div>
		</xf:if>
	</xf:foreach>
	<xf:foreach loop="$emojiCategories" key="$categoryId" value="$name">
		<h3 class="menu-header">{$name}</h3>
		<div class="menu-row">
			<ul class="emojiList js-emojiList">
				<xf:foreach loop="{$groupedEmoji.{$categoryId}}" value="{$emoji}">
					<li><a class="js-emoji" data-shortname="{$emoji.shortname}">{$emoji.html|raw}</a></li>
				</xf:foreach>
			</ul>
		</div>
	</xf:foreach>
</div>
<div class="menu-scroller js-emojiSearchResults" style="display: none;"></div>]]></template>
  <template type="public" title="editor_smilies_emoji_search_results" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[<div class="block-body block-body--emoji js-emojiSearchResults">
	<div class="block-row">
		<xf:if is="$results">
			<ul class="emojiList">
				<xf:foreach loop="$results" value="{$result}">
					<li><a class="js-emoji" data-shortname="{$result.shortname}">{$result.html|raw}</a></li>
				</xf:foreach>
			</ul>
		<xf:else />
			{{ phrase('no_results_found') }}
		</xf:if>
	</div>
</div>]]></template>
  <template type="public" title="email_stop_confirm" version_id="2000570" version_string="2.0.5"><![CDATA[<xf:title>{{ phrase('stop_email_notifications') }}</xf:title>

<xf:form action="{{ link('email-stop', $user) }}" class="block">
	<div class="block-container">
		<xf:if is="$actions">
			<div class="block-body">
				<xf:radiorow name="stop" value="{{ $defaultAction ?: 'all' }}" label="{{ phrase('confirm_action') }}">
					<xf:options source="$actions" />
					<xf:option value="all">{{ phrase('stop_all_emails_from_x', {'title': $xf.options.boardTitle}) }}</xf:option>
				</xf:radiorow>
			</div>
			<xf:submitrow submit="{{ phrase('stop_emails') }}" />
		<xf:else />
			<div class="block-body">
				<xf:inforow rowtype="confirm">
					{{ phrase('you_sure_you_want_to_stop_all_emails_from_x', {'board_title': $xf.options.boardTitle}) }}
				</xf:inforow>
			</div>
			<xf:submitrow rowtype="simple" submit="{{ phrase('stop_emails') }}" icon="notificationsOff" />
			<xf:hiddenval name="stop">all</xf:hiddenval>
		</xf:if>
	</div>

	<xf:hiddenval name="c">{$confirmKey}</xf:hiddenval>
</xf:form>]]></template>
  <template type="public" title="error" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('oops_we_ran_into_some_problems') }}</xf:title>

<div class="blockMessage">
	<xf:if is="$error">
		{$error|raw}
	<xf:else />
		<ul>
		<xf:foreach loop="$errors" value="$error">
			<li>{$error|raw}</li>
		</xf:foreach>
		</ul>
	</xf:if>
</div>]]></template>
  <template type="public" title="extra.less" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[]]></template>
  <template type="public" title="filter_macros" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro name="find_new_filter_footer">
	<hr class="menu-separator" />
	<div class="menu-row">
		<xf:checkbox>
			<xf:option name="save"
				label="{{ phrase('save_as_default') }}"
				hint="{{ phrase('these_filters_will_be_used_by_default_whenever_you_return') }}" />
		</xf:checkbox>
	</div>
	<div class="menu-footer">
		<span class="menu-footer-controls">
			<xf:button type="submit" class="button--primary">{{ phrase('filter') }}</xf:button>
		</span>
		<xf:hiddenval name="skip">1</xf:hiddenval>
	</div>
</xf:macro>]]></template>
  <template type="public" title="find_threads_list" version_id="2010035" version_string="2.1.0 Beta 5"><![CDATA[<xf:if is="$pageSelected == 'started'">
	<xf:title page="{$page}">{{ phrase('threads_started_by_x', {'username': $user.username}) }}</xf:title>
<xf:elseif is="$pageSelected == 'contributed'" />
	<xf:title page="{$page}">{{ phrase('threads_with_posts_by_x', {'username': $user.username}) }}</xf:title>
<xf:else />
	<xf:title page="{$page}">{{ phrase('threads_with_no_replies') }}</xf:title>
	<xf:head option="metaNoindex"><meta name="robots" content="noindex" /></xf:head>
</xf:if>

<xf:macro name="navigation" arg-pageSelected="{$pageSelected}" />

<xf:if is="$threads is not empty">

	<xf:if is="$canInlineMod">
		<xf:js src="xf/inline_mod.js" min="1" />
	</xf:if>

	<div class="block" data-xf-init="{{ $canInlineMod ? 'inline-mod' : '' }}" data-type="thread" data-href="{{ link('inline-mod') }}">

		<div class="block-outer">
			<xf:pagenav page="{$page}" perpage="{$perPage}" total="{$total}"
				link="find-threads/{$pageSelected}"
				wrapperclass="block-outer-main" />

			<xf:if is="$canInlineMod">
				<div class="block-outer-opposite">
					<div class="buttonGroup">
						<xf:macro template="inline_mod_macros" name="button" />
					</div>
				</div>
			</xf:if>
		</div>

		<div class="block-container">
			<div class="block-body">
				<div class="structItemContainer">
					<xf:foreach loop="$threads" value="$thread">
						<xf:set var="$extra" value=""/>
						<xf:macro template="thread_list_macros" name="item"
							arg-thread="{$thread}"
							arg-allowEdit_xxx="{{ false }}" />
					</xf:foreach>
				</div>
			</div>
		</div>

		<xf:pagenav link="find-threads/{$pageSelected}" page="{$page}" perpage="{$perPage}" total="{$total}"
			wrapperclass="block-outer block-outer--after" />
	</div>
<xf:else />
	<div class="blockMessage">{{ phrase('there_no_threads_to_display') }}</div>
</xf:if>

<xf:macro name="navigation" arg-pageSelected="!">
	<xf:if is="property('findThreadsNavStyle') == 'tabs'">
		<div class="tabs tabs--standalone">
			<div class="hScroller" data-xf-init="h-scroller">
				<span class="hScroller-scroll">
					<xf:macro name="links"
						arg-pageSelected="{$pageSelected}"
						arg-baseClass="tabs-tab"
						arg-selectedClass="is-active" />
				</span>
			</div>
		</div>
	<xf:else />
		<xf:sidenav>
			<div class="block">
				<div class="block-container">
					<h3 class="block-header">{{ phrase('thread_lists') }}</h3>
					<div class="block-body">
						<xf:macro name="links"
							arg-pageSelected="{$pageSelected}"
							arg-baseClass="blockLink"
							arg-selectedClass="is-selected" />
					</div>
				</div>
			</div>

			<xf:widgetpos id="find_threads_sidenav" />
		</xf:sidenav>
		<xf:page option="sideNavTitle">{{ phrase('thread_lists') }}</xf:page>
	</xf:if>
</xf:macro>

<xf:macro name="links" arg-pageSelected="!" arg-baseClass="!" arg-selectedClass="!">
	<a class="{$baseClass} {{ $pageSelected == 'started' ? {$selectedClass} : '' }}"
		href="{{ link('find-threads/started') }}" rel="nofollow">{{ phrase('your_threads') }}</a>
	<a class="{$baseClass} {{ $pageSelected == 'contributed' ? {$selectedClass} : '' }}"
		href="{{ link('find-threads/contributed') }}" rel="nofollow">{{ phrase('threads_with_your_posts') }}</a>
	<a class="{$baseClass} {{ $pageSelected == 'unanswered' ? {$selectedClass} : '' }}"
		href="{{ link('find-threads/unanswered') }}" rel="nofollow">{{ phrase('unanswered_threads') }}</a>
	<a class="{$baseClass} {{ $pageSelected == 'watched' ? {$selectedClass} : '' }}"
		href="{{ link('watched/threads') }}" rel="nofollow">{{ phrase('watched_threads') }}</a>
</xf:macro>]]></template>
  <template type="public" title="font_awesome_setup" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:if is="fa_weight() == 'l'">
	<link rel="preload" href="{{ base_url('styles/fonts/fa/fa-light-300.woff2') }}" as="font" type="font/woff2" crossorigin="anonymous" />
<xf:elseif is="fa_weight() == 'r'" />
	<link rel="preload" href="{{ base_url('styles/fonts/fa/fa-regular-400.woff2') }}" as="font" type="font/woff2" crossorigin="anonymous" />
<xf:elseif is="fa_weight() == 's'" />
	<link rel="preload" href="{{ base_url('styles/fonts/fa/fa-solid-900.woff2') }}" as="font" type="font/woff2" crossorigin="anonymous" />
</xf:if>
<xf:if is="fa_weight() != 's'">
	<link rel="preload" href="{{ base_url('styles/fonts/fa/fa-solid-900.woff2') }}" as="font" type="font/woff2" crossorigin="anonymous" />
</xf:if>

<link rel="preload" href="{{ base_url('styles/fonts/fa/fa-brands-400.woff2') }}" as="font" type="font/woff2" crossorigin="anonymous" />]]></template>
  <template type="public" title="forum_filters" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:form action="{{ link('forums/filters', $forum) }}">
	<!--[XF:above_prefixes]-->
	<xf:if is="$prefixes is not empty">
		<div class="menu-row menu-row--separated">
			{{ phrase('prefix:') }}
			<div class="u-inputSpacer">
				<xf:macro template="prefix_macros" name="select"
					arg-prefixes="{$prefixes}"
					arg-type="thread"
					arg-selected="{{ $filters.prefix_id ? $filters.prefix_id : 0 }}"
					arg-name="prefix_id"
					arg-noneLabel="{{ phrase('(any)') }}" />
			</div>
		</div>
	</xf:if>

	<!--[XF:above_started_by]-->
	<div class="menu-row menu-row--separated">
		<label for="ctrl_started_by">{{ phrase('started_by:') }}</label>
		<div class="u-inputSpacer">
			<xf:textbox name="starter" value="{{ $starterFilter ? $starterFilter.username : '' }}" ac="single"
				maxlength="{{ max_length($xf.visitor, 'username') }}" id="ctrl_started_by" />
		</div>
	</div>

	<!--[XF:above_last_updated]-->
	<div class="menu-row menu-row--separated">
		<label for="ctrl_last_updated">{{ phrase('last_updated:') }}</label>
		<div class="u-inputSpacer">
			<xf:if is="$filters.no_date_limit">
				<xf:set var="$lastDays" value="" />
			<xf:else />
				<xf:set var="$lastDays" value="{{ $filters.last_days ?: $forum.list_date_limit_days }}" />
			</xf:if>
			<xf:select name="last_days" value="{$lastDays}" id="ctrl_last_updated">
				<xf:option value="-1">{{ phrase('any_time') }}</xf:option>
				<xf:option value="7">{{ phrase('x_days', {'days': '7'}) }}</xf:option>
				<xf:option value="14">{{ phrase('x_days', {'days': '14'}) }}</xf:option>
				<xf:option value="30">{{ phrase('x_days', {'days': '30'}) }}</xf:option>
				<xf:option value="60">{{ phrase('x_months', {'months': '2'}) }}</xf:option>
				<xf:option value="90">{{ phrase('x_months', {'months': '3'}) }}</xf:option>
				<xf:option value="182">{{ phrase('x_months', {'months': '6'}) }}</xf:option>
				<xf:option value="365">{{ phrase('1_year') }}</xf:option>
			</xf:select>
		</div>
	</div>

	<!--[XF:above_sort_by]-->
	<div class="menu-row menu-row--separated">
		{{ phrase('sort_by:') }}
		<div class="inputGroup u-inputSpacer">
			<span class="u-srOnly" id="ctrl_sort_by">{{ phrase('sort_order') }}</span>
			<xf:select name="order" value="{{ $filters.order ?: $forum.default_sort_order }}" aria-labelledby="ctrl_sort_by">
				<xf:option value="last_post_date">{{ phrase('last_message') }}</xf:option>
				<xf:option value="post_date">{{ phrase('first_message') }}</xf:option>
				<xf:option value="title">{{ phrase('title') }}</xf:option>
				<xf:option value="reply_count">{{ phrase('replies') }}</xf:option>
				<xf:option value="view_count">{{ phrase('views') }}</xf:option>
				<xf:option value="first_post_reaction_score">{{ phrase('first_message_reaction_score') }}</xf:option>
			</xf:select>
			<span class="inputGroup-splitter"></span>
			<span class="u-srOnly" id="ctrl_sort_direction">{{ phrase('sort_direction') }}</span>
			<xf:select name="direction" value="{{ $filters.direction ?: $forum.default_sort_direction }}" aria-labelledby="ctrl_sort_direction">
				<xf:option value="desc">{{ phrase('descending') }}</xf:option>
				<xf:option value="asc">{{ phrase('ascending') }}</xf:option>
			</xf:select>
		</div>
	</div>

	<div class="menu-footer">
		<span class="menu-footer-controls">
			<xf:button type="submit" class="button--primary">{{ phrase('filter') }}</xf:button>
		</span>
	</div>
	<xf:hiddenval name="apply">1</xf:hiddenval>
</xf:form>]]></template>
  <template type="public" title="forum_list" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:h1>{$xf.options.boardTitle}</xf:h1>
<xf:if is="{$xf.options.forumsDefaultPage} != 'forums'">
	<xf:title>{{ phrase('forum_list') }}</xf:title>
</xf:if>

<xf:macro template="metadata_macros" name="metadata"
	arg-description="{$xf.options.boardDescription}"
	arg-canonicalUrl="{{ link('canonical:' . $selfRoute) }}" />


<xf:wrap template="forum_overview_wrapper">
	<xf:set var="$pageSelected">forums</xf:set>
</xf:wrap>

<xf:widgetpos id="forum_list_sidebar" position="sidebar" />

<xf:widgetpos id="forum_list_above_nodes" />
<xf:macro name="node_list" arg-children="{$nodeTree}" arg-extras="{$nodeExtras}" />
<xf:widgetpos id="forum_list_below_nodes" />

<xf:head option="rss_forum"><link rel="alternate" type="application/rss+xml" title="{{ phrase('rss_feed_for_x', {'title': $xf.options.boardTitle})|for_attr }}" href="{{ link('forums/index.rss', '-') }}" /></xf:head>

<xf:macro name="node_list_entry" arg-node="!" arg-extras="!" arg-children="!" arg-childExtras="!" arg-depth="1">
	<xf:css src="node_list.less" />
	<xf:set var="$nodeTemplate" value="{{ $node.getNodeTemplateRenderer($depth) }}" />
	<xf:if is="$nodeTemplate.macro">
		<xf:macro template="{$nodeTemplate.template}" name="{$nodeTemplate.macro}"
			arg-node="{$node}"
			arg-extras="{$extras}"
			arg-children="{$children}"
			arg-childExtras="{$childExtras}"
			arg-depth="{$depth}" />
	<xf:elseif is="{$nodeTemplate.template}" />
		<xf:include template="{$nodeTemplate.template}" />
	</xf:if>
</xf:macro>

<xf:macro name="node_list" arg-children="!" arg-extras="!" arg-depth="1">
	<xf:css src="node_list.less" />
	<xf:foreach loop="$children" key="$id" value="$child">
		<xf:macro name="node_list_entry"
			arg-node="{$child.record}"
			arg-extras="{$extras.{$id}}"
			arg-children="{$child.children}"
			arg-childExtras="{$extras}"
			arg-depth="{$depth}" />
	</xf:foreach>
</xf:macro>

<xf:macro name="sub_node_list" arg-children="!" arg-childExtras="!" arg-depth="3">
	<xf:if contentcheck="true">
		<ol>
		<xf:contentcheck>
			<xf:macro template="forum_list" name="node_list"
				arg-children="{$children}"
				arg-extras="{$childExtras}"
				arg-depth="{{ $depth + 1 }}" />
		</xf:contentcheck>
		</ol>
	</xf:if>
</xf:macro>

<xf:macro name="sub_nodes_flat" arg-children="!" arg-childExtras="!" arg-depth="3">
	<xf:css src="node_list.less" />
	<xf:if contentcheck="true">
		<div class="node-subNodesFlat">
			<span class="node-subNodesLabel">{{ phrase('sub_forums:') }}</span>
			<ol class="node-subNodeFlatList">
			<xf:contentcheck>
				<xf:macro template="forum_list" name="node_list"
					arg-children="{$children}"
					arg-extras="{$childExtras}"
					arg-depth="{{ $depth + 1 }}" />
			</xf:contentcheck>
			</ol>
		</div>
	</xf:if>
</xf:macro>

<xf:macro name="sub_nodes_menu" arg-children="!" arg-childExtras="!" arg-depth="3">
	<xf:css src="node_list.less" />
	<xf:if contentcheck="true">
		<div class="node-subNodeMenu">
			<a class="menuTrigger" data-xf-click="menu" role="button" tabindex="0" aria-expanded="false" aria-haspopup="true">{{ phrase('sub_forums') }}</a>
			<div class="menu" data-menu="menu" aria-hidden="true">
				<div class="menu-content">
					<h4 class="menu-header">{{ phrase('sub_forums') }}</h4>
					<ol class="subNodeMenu">
					<xf:contentcheck>
						<xf:macro template="forum_list" name="node_list"
							arg-children="{$children}"
							arg-extras="{$childExtras}"
							arg-depth="{{ $depth + 1 }}" />
					</xf:contentcheck>
					</ol>
				</div>
			</div>
		</div>
	</xf:if>
</xf:macro>]]></template>
  <template type="public" title="forum_macros" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro name="forum_page_options" arg-forum="!" arg-thread="">
	<xf:page option="forum" value="{$forum}" />

	<xf:if is="{$thread}">
		<xf:page option="searchConstraints" value="{{ {
			phrase('threads'): {'search_type': 'post'},
			phrase('this_forum'): {'search_type': 'post', 'c': {'nodes': [$forum.node_id], 'child_nodes': 1}},
			phrase('this_thread'): {'search_type': 'post', 'c': {'thread': $thread.thread_id}}
		} }}" />
	<xf:else />
		<xf:page option="searchConstraints" value="{{ {
			phrase('threads'): {'search_type': 'post'},
			phrase('this_forum'): {'search_type': 'post', 'c': {'nodes': [$forum.node_id], 'child_nodes': 1}}
		} }}" />
	</xf:if>
</xf:macro>]]></template>
  <template type="public" title="forum_mark_read" version_id="2000036" version_string="2.0.0 Beta 6"><![CDATA[<xf:if is="$forum">
	<xf:title>{{ phrase('mark_forum_read') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('mark_forums_read') }}</xf:title>
</xf:if>

<xf:form action="{{ link('forums/mark-read', $forum, {'date': $date}) }}" class="block" ajax="true">
	<div class="block-container">
		<xf:if is="$forum">
			<div class="block-body">
				<xf:inforow rowtype="confirm">
					{{ phrase('you_sure_you_want_to_mark_this_forum_read') }}
					<strong><a href="{{ link('forums', $forum) }}">{$forum.title}</a></strong>
				</xf:inforow>
			</div>
			<xf:submitrow submit="{{ phrase('mark_forum_read') }}" rowtype="simple" icon="markRead" />
		<xf:else />
			<div class="block-body">
				<xf:inforow rowtype="confirm">{{ phrase('you_sure_you_want_to_mark_all_forums_read') }}</xf:inforow>
			</div>
			<xf:submitrow submit="{{ phrase('mark_forums_read') }}" rowtype="simple" icon="markRead" />
		</xf:if>
	</div>
</xf:form>]]></template>
  <template type="public" title="forum_new_posts" version_id="2000170" version_string="2.0.1"><![CDATA[<xf:h1>{$xf.options.boardTitle}</xf:h1>
<xf:if is="{$xf.options.forumsDefaultPage} != 'new_posts'">
	<xf:title page="{$page}">{{ phrase('new_posts') }}</xf:title>
</xf:if>

<xf:macro template="metadata_macros" name="metadata"
	arg-description="{$xf.options.boardDescription}" />

<xf:if is="$page > 1 OR $originalFindNewId">
	<xf:head option="metaNoindex"><meta name="robots" content="noindex" /></xf:head>
</xf:if>
<xf:if is="$page <= 1">
	<xf:macro template="metadata_macros" name="canonical_url" arg-canonicalUrl="{{ link('canonical:' . $selfRoute) }}" />
</xf:if>

<xf:wrap template="forum_overview_wrapper">
	<xf:set var="$pageSelected">new_posts</xf:set>
</xf:wrap>

<xf:widgetpos id="forum_new_posts_sidebar" position="sidebar" />

<xf:if is="$canInlineMod">
	<xf:js src="xf/inline_mod.js" min="1" />
</xf:if>

<div class="block" data-xf-init="{{ $canInlineMod ? 'inline-mod' : '' }}" data-type="thread" data-href="{{ link('inline-mod') }}">
	<xf:if is="$findNew.result_count">
		<div class="block-outer"><xf:trim>
			<xf:pagenav
				page="{$page}" perpage="{$perPage}" total="{$findNew.result_count}"
				link="forums/new-posts" params="{{ {'f': $findNew.find_new_id} }}"
				wrapperclass="block-outer-main" />

			<xf:if contentcheck="true">
				<div class="block-outer-opposite">
					<div class="buttonGroup">
					<xf:contentcheck>
						<xf:macro template="whats_new_posts" name="buttons"
							arg-findNew="{$findNew}"
							arg-canInlineMod="{$canInlineMod}" />
					</xf:contentcheck>
					</div>
				</div>
			</xf:if>
		</xf:trim></div>
	</xf:if>

	<div class="block-container">
		<xf:macro template="whats_new_posts" name="filter_bar"
			arg-findNew="{$findNew}"
			arg-rerunRoute="forums/new-posts"
			arg-rerunQuery="{{ {'f': $findNew.find_new_id} }}"
			arg-filterRoute="forums/new-posts" />

		<xf:macro template="whats_new_posts" name="results"
			arg-findNew="{$findNew}"
			arg-threads="{$threads}"
			arg-latestRoute="forums/new-posts" />
	</div>

	<xf:if is="$findNew.result_count">
		<div class="block-outer block-outer--after">
			<xf:pagenav
				page="{$page}" perpage="{$perPage}" total="{$findNew.result_count}"
				link="forums/new-posts" params="{{ {'f': $findNew.find_new_id} }}"
				wrapperclass="block-outer-main" />

			<xf:showignored wrapperclass="block-outer-opposite" />
		</div>
	</xf:if>
</div>]]></template>
  <template type="public" title="forum_overview_wrapper" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:ad position="forum_overview_top" />
<xf:widgetpos id="forum_overview_top" />

<xf:pageaction>
	<xf:if is="$pageSelected == 'new_posts' ">
		<xf:button href="{{ link('forums/list') }}" icon="list">
			{{ phrase('forum_list') }}
		</xf:button>
	<xf:else />
		<xf:button href="{{ $xf.options.forumsDefaultPage == 'new_posts' ? link('forums/new-posts') : link('whats-new/posts') }}" icon="bolt">
			{{ phrase('new_posts') }}
		</xf:button>
	</xf:if>
	<xf:if is="$xf.visitor.canCreateThread()">
		<xf:button href="{{ link('forums/create-thread') }}" class="button--cta" icon="write" overlay="true">
			{{ phrase('post_thread...') }}
		</xf:button>
	</xf:if>
</xf:pageaction>

{$innerContent|raw}

<xf:ad position="forum_overview_bottom" />
<xf:widgetpos id="forum_overview_bottom" />]]></template>
  <template type="public" title="forum_post_quick_thread" version_id="2001070" version_string="2.0.10"><![CDATA[<xf:form action="{{ link('forums/post-thread', $forum) }}" draft="{{ link('forums/draft', $forum) }}">

	<div class="js-quickThreadFields" data-xf-init="attachment-manager">

		<xf:if is="$forum.draft_thread.exists()">
			<xf:formrow rowtype="fullWidth noGutter noLabel mergeNext">
				<div class="block-rowMessage block-rowMessage--important block-rowMessage--small">
					<a href="{{ link('forums/post-thread', $forum) }}">{{ phrase('you_have_saved_draft_click_to_load') }}</a>
				</div>
			</xf:formrow>
		</xf:if>

		<xf:editorrow name="message" value="{$post.message}" rows="3" rowtype="fullWidth noGutter noLabel mergeNext"
			data-min-height="100"
			data-max-height="300"
			placeholder="{{ phrase('message...') }}"
			label="{{ phrase('message') }}" />

		<xf:macro template="custom_fields_macros" name="custom_fields_edit"
			arg-type="threads"
			arg-set="{$thread.custom_fields}"
			arg-editMode="{{ $thread.getFieldEditMode() }}"
			arg-onlyInclude="{$forum.field_cache}"
			arg-rowType="fullWidth noGutter"
			arg-requiredOnly="{{ $inlineMode ? true : false }}" />

		<xf:if is="$forum.canEditTags() && $forum.min_tags">
			<hr class="formRowSep" />
			<xf:tokeninputrow name="tags"
				href="{{ link('misc/tag-auto-complete') }}"
				min-length="{$xf.options.tagLength.min}"
				max-length="{$xf.options.tagLength.max}"
				max-tokens="{$xf.options.maxContentTags}"
				rowtype="fullWidth noGutter"
				label="{{ phrase('tags') }}">

				<xf:explain>
					{{ phrase('multiple_tags_may_be_separated_by_commas') }}
					<xf:if is="$forum.min_tags">
						{{ phrase('this_content_must_have_at_least_x_tags', {'min': $forum.min_tags}) }}
					</xf:if>
				</xf:explain>
			</xf:tokeninputrow>
		</xf:if>

		<xf:if is="!$xf.visitor.user_id">
			<xf:textboxrow name="_xfUsername" data-xf-init="guest-username" rowtype="fullWidth noGutter"
				maxlength="{{ max_length($xf.visitor, 'username') }}"
				label="{{ phrase('name') }}" />

			<xf:captcharow label="{{ phrase('verification') }}" rowtype="fullWidth noGutter noLabel" />
		<xf:else />
			<xf:macro template="helper_thread_options" name="watch_input"
				arg-thread="{$thread}"
				arg-rowType="fullWidth noGutter noLabel"
				arg-visible="{{ false }}" />
		</xf:if>

		<xf:if is="$attachmentData">
			<xf:macro template="helper_attach_upload" name="uploaded_files_list"
				arg-attachments="{$attachmentData.attachments}"
				arg-listClass="attachUploadList--spaced" />
		</xf:if>

		<div class="formButtonGroup">
			<div class="formButtonGroup-primary">
				<xf:button type="submit" class="button--primary" icon="write">
					{{ phrase('post_thread') }}
				</xf:button>

				<xf:button type="submit" formnovalidate="formnovalidate" name="more-options" value="1"
					title="{{ phrase('show_full_post_thread_editor') }}"
					data-prevent-ajax="true"
					data-xf-init="tooltip">{{ phrase('more_options...') }}</xf:button>

				<xf:button type="reset" class="button--icon button--icon--cancel button--iconOnly"
					title="{{ phrase('button.cancel') }}"
					data-xf-init="tooltip">
					<span class="u-srOnly">{{ phrase('button.cancel') }}</span>
				</xf:button>
			</div>
			<xf:if contentcheck="true">
				<div class="formButtonGroup-extra">
					<xf:contentcheck>
						<xf:if is="$attachmentData">
							<xf:macro template="helper_attach_upload" name="upload_link_from_data"
								arg-attachmentData="{$attachmentData}" />
						</xf:if>

						<xf:if is="$xf.options.multiQuote">
							<xf:macro template="multi_quote_macros" name="button"
								arg-href="{{ link('threads/multi-quote', $thread) }}"
								arg-messageSelector=".js-post"
								arg-storageKey="multiQuoteThread" />
						</xf:if>
					</xf:contentcheck>
				</div>
			</xf:if>
		</div>
	</div>
</xf:form>]]></template>
  <template type="public" title="forum_post_thread" version_id="2010132" version_string="2.1.1 Beta 2"><![CDATA[<xf:title>{{ phrase('post_thread') }}</xf:title>

<xf:head option="metaNoindex"><meta name="robots" content="noindex" /></xf:head>

<xf:breadcrumb source="$forum.getBreadcrumbs()" />

<xf:form action="{{ link('forums/post-thread', $forum) }}" ajax="true" class="block" data-xf-init="attachment-manager"
	draft="{{ link('forums/draft', $forum) }}"
	data-preview-url="{{ link('forums/thread-preview', $forum) }}">

	<div class="block-container">
		<div class="block-body">

			<xf:prefixinputrow
				label="{{ phrase('title') }}"
				prefixes="{$prefixes}"
				type="thread"
				prefix-value="{{ $forum.draft_thread.prefix_id ?: ($thread.prefix_id ?: $forum.default_prefix_id) }}"
				textbox-value="{{ $title ?: $thread.title ?: $forum.draft_thread.title }}"
				textbox-class="input--title"
				placeholder="{$forum.thread_prompt}"
				rowtype="fullWidth noLabel"
				autofocus="autofocus"
				maxlength="{{ max_length('XF:Thread', 'title') }}" />

			<div class="js-inlineNewPostFields">
				<xf:editorrow name="message"
					value="{{ $post.message ?: $forum.draft_thread.message }}"
					attachments="{{ $attachmentData ? $attachmentData.attachments : [] }}"
					rowtype="fullWidth noLabel mergePrev"
					label="{{ phrase('message') }}" />

				<xf:formrow>
					<xf:if is="$attachmentData">
						<xf:macro template="helper_attach_upload" name="upload_block"
							arg-attachmentData="{$attachmentData}"
							arg-forceHash="{$forum.draft_thread.attachment_hash}" />
					</xf:if>

					<xf:if is="$xf.options.multiQuote">
						<xf:macro template="multi_quote_macros" name="button"
							arg-href="{{ link('threads/multi-quote', $thread) }}"
							arg-messageSelector=".js-post"
							arg-storageKey="multiQuoteThread" />
					</xf:if>

					<xf:button class="button--link u-jsOnly" data-xf-click="preview-click" icon="preview" />
				</xf:formrow>

				<xf:if contentcheck="true">
					<hr class="formRowSep" />
					<xf:contentcheck>
						<xf:macro template="custom_fields_macros" name="custom_fields_edit"
							arg-type="threads"
							arg-set="{$thread.custom_fields}"
							arg-editMode="{{ $thread.getFieldEditMode() }}"
							arg-onlyInclude="{$forum.field_cache}"
							arg-requiredOnly="{{ $inlineMode ? true : false }}" />
					</xf:contentcheck>
				</xf:if>

				<xf:if is="$forum.canEditTags()">
					<hr class="formRowSep" />
					<xf:tokeninputrow name="tags" value="{{ $thread.tags ? $thread.tags|join(', ') : $forum.draft_thread.tags }}"
						href="{{ link('misc/tag-auto-complete') }}"
						min-length="{$xf.options.tagLength.min}"
						max-length="{$xf.options.tagLength.max}"
						max-tokens="{$xf.options.maxContentTags}"
						label="{{ phrase('tags') }}">

						<xf:explain>
							{{ phrase('multiple_tags_may_be_separated_by_commas') }}
							<xf:if is="$forum.min_tags">
								{{ phrase('this_content_must_have_at_least_x_tags', {'min': $forum.min_tags}) }}
							</xf:if>
						</xf:explain>
					</xf:tokeninputrow>
				</xf:if>

				<xf:if is="!$xf.visitor.user_id">
					<hr class="formRowSep" />
					<xf:textboxrow name="_xfUsername" data-xf-init="guest-username"
						maxlength="{{ max_length($xf.visitor, 'username') }}"
						label="{{ phrase('name') }}" />

					<xf:captcharow label="{{ phrase('verification') }}" />
				<xf:else />
					<hr class="formRowSep" />
					<xf:macro template="helper_thread_options" name="watch_input" arg-thread="{$thread}" />
					<xf:macro template="helper_thread_options" name="thread_status" arg-thread="{$thread}" />
				</xf:if>
			</div>
		</div>

		<xf:if is="$forum.canCreatePoll()">
			<h2 class="block-formSectionHeader">
				<span class="collapseTrigger collapseTrigger--block{{ $forum.draft_thread.poll ? ' is-active' : '' }}" data-xf-click="toggle" data-target="< :up :next">
					<span class="block-formSectionHeader-aligner">{{ phrase('post_poll') }}</span>
				</span>
			</h2>
			<div class="block-body block-body--collapsible{{ $forum.draft_thread.poll ? ' is-active' : '' }}">
				<xf:macro template="poll_macros" name="add_edit_inputs" arg-draft="{$forum.draft_thread.poll}" />
			</div>
		</xf:if>

		<xf:submitrow submit="{{ phrase('post_thread') }}" icon="write" sticky="true">
			<xf:html>
				<xf:button class="u-jsOnly" data-xf-click="preview-click" icon="preview" />
			</xf:html>
		</xf:submitrow>
	</div>
</xf:form>]]></template>
  <template type="public" title="forum_post_thread_chooser" version_id="2001070" version_string="2.0.10"><![CDATA[<xf:title>{{ phrase('post_thread_in') }}</xf:title>

<xf:head option="metaNoindex"><meta name="robots" content="noindex" /></xf:head>

<xf:macro name="node_list" arg-children="{$nodeTree}" arg-extras="{$nodeExtras}" />

<xf:macro name="node_list" arg-children="!" arg-extras="!"  arg-depth="0">
	<xf:foreach loop="$children" key="$id" value="$child">
		<xf:macro name="node_list_entry"
			arg-node="{$child.record}" arg-extras="{$extras.{$id}}"
			arg-children="{$child.children}" arg-childExtras="{$extras}"
			arg-depth="{$depth}" />
	</xf:foreach>
</xf:macro>

<xf:macro name="node_list_entry" arg-node="!" arg-extras="!" arg-children="!" arg-childExtras="!" arg-depth="0">
	<xf:if is="$depth == 0">
		<xf:if is="$node.node_type_id == 'Category'">
			<xf:macro name="node_list_entry_category_level_0"
				arg-node="{$node}"
				arg-extras="{$extras}"
				arg-children="{$children}"
				arg-childExtras="{$childExtras}"
				arg-depth="{$depth}" />
		<xf:elseif is="$node.node_type_id == 'Forum' AND $node.Data.canCreateThread()" />
			<xf:macro name="node_list_entry_forum_level_0"
				arg-node="{$node}"
				arg-extras="{$extras}"
				arg-children="{$children}"
				arg-childExtras="{$childExtras}"
				arg-depth="{$depth}" />
		<xf:else />
			<xf:macro name="node_list_entry_no_posting_level_0"
				arg-node="{$node}"
				arg-extras="{$extras}"
				arg-children="{$children}"
				arg-childExtras="{$childExtras}"
				arg-depth="{$depth}" />
		</xf:if>
	<xf:else />
		<xf:if is="$node.node_type_id == 'Forum' AND $node.Data.canCreateThread()">
			<xf:macro name="node_list_entry_forum"
				arg-node="{$node}"
				arg-extras="{$extras}"
				arg-children="{$children}"
				arg-childExtras="{$childExtras}"
				arg-depth="{$depth}" />
		<xf:else />
			<xf:macro name="node_list_entry_no_posting"
				arg-node="{$node}"
				arg-extras="{$extras}"
				arg-children="{$children}"
				arg-childExtras="{$childExtras}"
				arg-depth="{$depth}" />
		</xf:if>
	</xf:if>
</xf:macro>

<xf:macro name="node_list_entry_category_level_0"
	arg-node="!"
	arg-extras="!"
	arg-children="!"
	arg-childExtras="!"
	arg-depth="0">

	<div class="block block--treeEntryChooser">
		<div class="block-container">
			<h2 class="block-header">
				{$node.title}
				<xf:if is="$node.description">
					<span class="block-desc">
						{$node.description|strip_tags}
					</span>
				</xf:if>
			</h2>
			<div class="block-body">
				<xf:macro name="node_list"
					arg-children="{$children}" arg-extras="{$childExtras}" arg-depth="{{ $depth + 1 }}" />
			</div>
		</div>
	</div>
</xf:macro>

<xf:macro name="node_list_entry_forum_level_0"
	arg-node="!"
	arg-extras="!"
	arg-children="!"
	arg-childExtras="!"
	arg-depth="0">

	<div class="block block--treeEntryChooser">
		<div class="block-container">
			<xf:macro name="node_list_entry_forum"
				arg-node="{$node}"
				arg-extras="{$extras}"
				arg-children="{$children}"
				arg-childExtras="{$childExtras}"
				arg-depth="{$depth}" />
		</div>
	</div>
</xf:macro>

<xf:macro name="node_list_entry_no_posting_level_0"
	arg-node="!"
	arg-extras="!"
	arg-children="!"
	arg-childExtras="!"
	arg-depth="0">

	<div class="block block--treeEntryChooser">
		<div class="block-container">
			<xf:macro name="node_list_entry_no_posting"
				arg-node="{$node}"
				arg-extras="{$extras}"
				arg-children="{$children}"
				arg-childExtras="{$childExtras}"
				arg-depth="{$depth}" />
		</div>
	</div>
</xf:macro>

<xf:macro name="node_list_entry_forum"
	arg-node="!"
	arg-extras="!"
	arg-children="!"
	arg-childExtras="!"
	arg-depth="0">

	<div class="block-row block-row--clickable block-row--separated fauxBlockLink">
		<div class="contentRow contentRow--alignMiddle{{ $depth > 1 ? ' u-depth' . ($depth - 1) : '' }}">
			<div class="contentRow-main">
				<h2 class="contentRow-title">
					<a href="{{ link('forums/post-thread', $node) }}" class="fauxBlockLink-blockLink">
						{$node.title}
					</a>
				</h2>
				<xf:if is="$node.description">
					<div class="contentRow-minor contentRow-minor--singleLine">
						{$node.description|strip_tags}
					</div>
				</xf:if>
			</div>
			<div class="contentRow-suffix">
				<dl class="pairs pairs--rows pairs--rows--centered">
					<dt>{{ phrase('threads') }}</dt>
					<dd>{$extras.discussion_count|number_short}</dd>
				</dl>
			</div>
		</div>
	</div>
	<xf:macro name="node_list"
		arg-children="{$children}" arg-extras="{$childExtras}" arg-depth="{{ $depth + 1 }}" />
</xf:macro>

<xf:macro name="node_list_entry_no_posting"
	arg-node="!"
	arg-extras="!"
	arg-children="!"
	arg-childExtras="!"
	arg-depth="0">

	<div class="block-row block-row--separated">
		<div class="contentRow contentRow--alignMiddle{{ $depth > 1 ? ' u-depth' . ($depth - 1) : '' }} is-disabled">
			<div class="contentRow-main">
				<h2 class="contentRow-title">
					{$node.title}
				</h2>
				<xf:if is="$node.node_type_id == 'Forum'">
					<div class="contentRow-minor contentRow-minor--singleLine">
						{{ phrase('no_permission_to_post') }}
					</div>
				</xf:if>
			</div>
			<div class="contentRow-suffix">
				<dl class="pairs pairs--rows pairs--rows--centered">
					<dt>{{ phrase('threads') }}</dt>
					<dd>{{ $node.node_type_id == 'Forum' ? $extras.discussion_count|number_short : phrase('n_a') }}</dd>
				</dl>
			</div>
		</div>
	</div>
	<xf:macro name="node_list"
		arg-children="{$children}"
		arg-extras="{$childExtras}"
		arg-depth="{{ $depth + 1 }}" />
</xf:macro>]]></template>
  <template type="public" title="forum_prefixes" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro template="prefix_macros" name="select"
	arg-name="na"
	arg-prefixes="{$prefixes}"
	arg-type="thread" />
]]></template>
  <template type="public" title="forum_view" version_id="2010170" version_string="2.1.1"><![CDATA[<xf:title page="{$page}">{$forum.Node.title}</xf:title>
<xf:description>{$forum.Node.description|raw}</xf:description>

<xf:css src="structured_list.less" />

<xf:macro template="metadata_macros" name="canonical_url"
	arg-canonicalUrl="{{ link('canonical:forums', $forum, $canonicalFilters + {'page': $page}) }}" />

<xf:head option="rss_forum"><link rel="alternate" type="application/rss+xml" title="{{ phrase('rss_feed_for_x', {'title': $forum.title})|for_attr }}" href="{{ link('forums/index.rss', $forum) }}" /></xf:head>

<xf:macro template="forum_macros" name="forum_page_options" arg-forum="{$forum}" />
<xf:breadcrumb source="$forum.getBreadcrumbs(false)" />

<xf:pageaction if="$forum.canCreateThread()">
	<xf:button href="{{ link('forums/post-thread', $forum) }}" class="button--cta" icon="write">
		{{ phrase('post_thread') }}
	</xf:button>
</xf:pageaction>

<xf:if is="$pendingApproval">
	<div class="blockMessage blockMessage--important">{{ phrase('content_submitted_displayed_pending_approval') }}</div>
</xf:if>

<xf:if is="$nodeTree">
	<xf:ad position="forum_view_above_node_list" arg-forum="{$forum}" />
	<div class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:macro template="forum_list" name="node_list"
					arg-children="{$nodeTree}"
					arg-extras="{$nodeExtras}"
					arg-depth="2" />
			</div>
		</div>
	</div>
	<xf:ad position="forum_view_below_node_list" arg-forum="{$forum}" />
</xf:if>

<xf:if is="$canInlineMod">
	<xf:js src="xf/inline_mod.js" min="1" />
</xf:if>

<xf:ad position="forum_view_above_thread_list" arg-forum="{$forum}" />
<div class="block" data-xf-init="{{ $canInlineMod ? 'inline-mod' : '' }}" data-type="thread" data-href="{{ link('inline-mod') }}">

	<div class="block-outer"><xf:trim>
		<xf:pagenav page="{$page}" perpage="{$perPage}" total="{$total}"
			link="forums" data="{$forum}" params="{$filters}"
			wrapperclass="block-outer-main" />
		<xf:if contentcheck="true">
			<div class="block-outer-opposite">
				<div class="buttonGroup">
				<xf:contentcheck>
					<xf:if is="$canInlineMod">
						<xf:macro template="inline_mod_macros" name="button" />
					</xf:if>
					<xf:if is="$xf.visitor.user_id">
						<xf:button href="{{ link('forums/mark-read', $forum, {'date': $xf.time}) }}"
							class="button--link" overlay="true">
							{{ phrase('mark_read') }}
						</xf:button>
					</xf:if>
					<xf:if is="$forum.canWatch()">
						<xf:button href="{{ link('forums/watch', $forum) }}" class="button--link"
							data-xf-click="switch-overlay"
							data-sk-watch="{{ phrase('watch') }}"
							data-sk-unwatch="{{ phrase('unwatch') }}">
							<xf:if is="{$forum.Watch.{$xf.visitor.user_id}}">{{ phrase('unwatch') }}<xf:else />{{ phrase('watch') }}</xf:if>
						</xf:button>
					</xf:if>
				</xf:contentcheck>
				</div>
			</div>
		</xf:if>
	</xf:trim></div>

	<xf:set var="$dateLimits" value="{{ {
		'-1': phrase('any_time'),
		'7': phrase('x_days', {'days': '7'}),
		'14': phrase('x_days', {'days': '14'}),
		'30': phrase('x_days', {'days': '30'}),
		'60': phrase('x_months', {'months': '2'}),
		'90': phrase('x_months', {'months': '3'}),
		'182': phrase('x_months', {'months': '6'}),
		'365': phrase('1_year')
	} }}" />
	<xf:set var="$sortOrders" value="{{ {
		'last_post_date': phrase('last_message'),
		'post_date': phrase('first_message'),
		'title': phrase('title'),
		'reply_count': phrase('replies'),
		'view_count': phrase('views'),
		'first_post_reaction_score': phrase('first_message_reaction_score')
	} }}" />

	<div class="block-container">
		<div class="block-filterBar">
			<div class="filterBar">
				<xf:if contentcheck="true">
					<ul class="filterBar-filters">
					<xf:contentcheck>
						<xf:if is="$filters.prefix_id">
							<li><a href="{{ link('forums', $forum, $filters|replace('prefix_id', null)) }}"
								class="filterBar-filterToggle" data-xf-init="tooltip" title="{{ phrase('remove_this_filter')|for_attr }}">
								<span class="filterBar-filterToggle-label">{{ phrase('prefix:') }}</span>
								{{ prefix_title('thread', $filters.prefix_id) }}</a></li>
						</xf:if>
						<xf:if is="$filters.starter_id AND $starterFilter">
							<li><a href="{{ link('forums', $forum, $filters|replace('starter_id', null)) }}"
								class="filterBar-filterToggle" data-xf-init="tooltip" title="{{ phrase('remove_this_filter')|for_attr }}">
								<span class="filterBar-filterToggle-label">{{ phrase('started_by:') }}</span>
								{$starterFilter.username}</a></li>
						</xf:if>
						<xf:if is="$filters.last_days AND {$dateLimits.{$filters.last_days}}">
							<li><a href="{{ link('forums', $forum, $filters|replace('last_days', null)) }}"
								class="filterBar-filterToggle" data-xf-init="tooltip" title="{{ phrase('remove_this_filter')|for_attr }}">
								<span class="filterBar-filterToggle-label">{{ phrase('last_updated:') }}</span>
								{$dateLimits.{$filters.last_days}}</a></li>
						</xf:if>
						<xf:if is="$filters.order AND {$sortOrders.{$filters.order}}">
							<li><a href="{{ link('forums', $forum, $filters|replace({'order': null, 'direction': null})) }}"
								class="filterBar-filterToggle" data-xf-init="tooltip" title="{{ phrase('return_to_default_order')|for_attr }}">
								<span class="filterBar-filterToggle-label">{{ phrase('sort_by:') }}</span>
								{$sortOrders.{$filters.order}}
								<xf:fa icon="{{ $filters.direction == 'asc' ? 'fa-angle-up' : 'fa-angle-down' }}" />
								<span class="u-srOnly"><xf:if is="$filters.direction == 'asc'">{{ phrase('ascending') }}<xf:else />{{ phrase('descending') }}</xf:if></span>
							</a></li>
						</xf:if>
					</xf:contentcheck>
					</ul>
				</xf:if>

				<a class="filterBar-menuTrigger" data-xf-click="menu" role="button" tabindex="0" aria-expanded="false" aria-haspopup="true">{{ phrase('filters') }}</a>
				<div class="menu menu--wide" data-menu="menu" aria-hidden="true"
					data-href="{{ link('forums/filters', $forum, $filters) }}"
					data-load-target=".js-filterMenuBody">
					<div class="menu-content">
						<h4 class="menu-header">{{ phrase('show_only:') }}</h4>
						<div class="js-filterMenuBody">
							<div class="menu-row">{{ phrase('loading...') }}</div>
						</div>
					</div>
				</div>
			</div>
		</div>

		<xf:set var="$qtPos">{{ ($sortInfo.order == 'last_post_date' && $sortInfo.direction == 'asc') ? 'bottom' : 'top' }}</xf:set>

		<div class="block-body">
			<div class="structItemContainer">
				<xf:macro template="thread_list_macros" name="quick_thread"
					arg-forum="{$forum}"
					arg-page="{$page}"
					arg-order="{$sortInfo.order}"
					arg-direction="{$sortInfo.direction}" />
				<xf:if is="$stickyThreads is not empty OR $threads is not empty">
					<xf:if is="$stickyThreads is not empty">
						<div class="structItemContainer-group structItemContainer-group--sticky">
							<xf:foreach loop="$stickyThreads" value="$thread">
								<xf:macro template="thread_list_macros" name="item" arg-thread="{$thread}" arg-forum="{$forum}" />
							</xf:foreach>
						</div>

						<xf:ad position="forum_view_below_stickies" arg-forum="{$forum}" />
					</xf:if>

					<div class="structItemContainer-group js-threadList">
						<xf:if is="$threads is not empty">
							<xf:foreach loop="$threads" value="$thread">
								<xf:macro template="thread_list_macros" name="item" arg-thread="{$thread}" arg-forum="{$forum}" />
							</xf:foreach>
							<xf:if is="$showDateLimitDisabler">
								<div class="structItem structItem--note">
									<div class="structItem-cell">
										<a href="{{ link('forums', $forum, {'page': $page, 'no_date_limit': 1} + $filters) }}">
											{{ phrase('show_older_items') }}
										</a>
									</div>
								</div>
							</xf:if>
						</xf:if>
					</div>
				<xf:elseif is="$filters" />
					<div class="structItemContainer-group js-threadList">
						<div class="structItem js-emptyThreadList">
							<div class="structItem-cell">{{ phrase('there_no_threads_matching_your_filters') }}</div>
						</div>
					</div>
				<xf:else />
					<div class="structItemContainer-group js-threadList">
						<div class="structItem js-emptyThreadList">
							<div class="structItem-cell">{{ phrase('there_no_threads_in_this_forum') }}</div>
						</div>
					</div>
				</xf:if>
			</div>
		</div>
	</div>

	<div class="block-outer block-outer--after">
		<xf:pagenav
			page="{$page}" perpage="{$perPage}" total="{$total}"
			link="forums" data="{$forum}" params="{$filters}"
			wrapperclass="block-outer-main" />
		<xf:showignored wrapperclass="block-outer-opposite" />
		<xf:if is="!$forum.canCreateThread()">
			<div class="block-outer-opposite">
				<xf:if is="$xf.visitor.user_id">
					<span class="button is-disabled">
						{{ phrase('no_permission_to_post') }}
						<!-- this is not interactive so shouldn't be a button element -->
					</span>
				<xf:else />
					<xf:button href="{{ link('login') }}" class="button--link" overlay="true">
						{{ phrase('log_in_or_register_to_post') }}
					</xf:button>
				</xf:if>
			</div>
		</xf:if>
	</div>
</div>
<xf:ad position="forum_view_below_thread_list" arg-forum="{$forum}" />

<xf:widgetpos id="forum_view_sidebar" context-forum="{$forum}" position="sidebar" />]]></template>
  <template type="public" title="forum_watch" version_id="2000036" version_string="2.0.0 Beta 6"><![CDATA[<xf:if is="$isWatched">
	<xf:title>{{ phrase('unwatch_forum') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('watch_forum') }}</xf:title>
</xf:if>

<xf:breadcrumb source="{$forum.getBreadcrumbs()}" />

<xf:form action="{{ link('forums/watch', $forum) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:if is="$isWatched">
				<xf:inforow rowtype="confirm">
					{{ phrase('you_sure_you_want_to_unwatch_this_forum') }}
				</xf:inforow>
				<xf:hiddenval name="stop">1</xf:hiddenval>
			<xf:else />
				<xf:if is="$forum.allowed_watch_notifications != 'none'">
					<xf:radiorow name="notify" value="thread"
						label="{{ phrase('send_notifications_for') }}">

						<xf:option value="thread">{{ phrase('new_threads') }}</xf:option>
						<xf:if is="$forum.allowed_watch_notifications == 'all'">
							<xf:option value="message">{{ phrase('new_messages') }}</xf:option>
						</xf:if>
						<xf:option value="" hint="{{ phrase('no_notifications_forum_watch_description') }}">{{ phrase('dont_send_notifications') }}</xf:option>
					</xf:radiorow>

					<xf:checkboxrow label="{{ phrase('send_notifications_via') }}">
						<xf:option name="send_alert" value="1" selected="true">{{ phrase('alerts') }}</xf:option>
						<xf:option name="send_email" value="1">{{ phrase('emails') }}</xf:option>
					</xf:checkboxrow>
				</xf:if>
			</xf:if>
		</div>
		<xf:if is="$isWatched">
			<xf:submitrow submit="{{ phrase('unwatch') }}" rowtype="simple" icon="notificationsOff" />
		<xf:else />
			<xf:submitrow submit="{{ phrase('watch') }}" icon="notificationsOn" />
		</xf:if>
	</div>
</xf:form>]]></template>
  <template type="public" title="google_analytics" version_id="2010131" version_string="2.1.1 Beta 1"><![CDATA[<xf:if is="$xf.options.googleAnalyticsWebPropertyId">
	<script async src="https://www.googletagmanager.com/gtag/js?id={$xf.options.googleAnalyticsWebPropertyId}"></script>
	<script>
		window.dataLayer = window.dataLayer || [];
		function gtag(){dataLayer.push(arguments);}
		gtag('js', new Date());
		gtag('config', '{$xf.options.googleAnalyticsWebPropertyId|escape("js")}', {
			// <!--[XF:ga:config_start]-->
			<xf:if is="$xf.cookie.domain">
				'cookie_domain': '{$xf.cookie.domain}',
			</xf:if>
			<xf:if is="$xf.options.googleAnalyticsAnonymize">
				'anonymize_ip': true,
			</xf:if>
		});
	</script>
</xf:if>]]></template>
  <template type="public" title="help_bb_codes.less" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[.bbCodeDemoBlock
{
	.m-clearFix();
	padding: .25em 0;
}

.bbCodeDemoBlock-item
{
	width: 50%;
	margin: 0;
	padding: 0;
	padding-left: 8px;
	float: left;

	&:first-child
	{
		padding-left: 0;
	}

	> dt
	{
		font-size: @xf-fontSizeSmall;
		color: @xf-textColorMuted;
	}

	> dd
	{
		margin: 0;
		.xf-minorBlockContent();
		padding: @xf-paddingMedium;
		zoom: 1;
	}
}]]></template>
  <template type="public" title="help_bb_codes_example" version_id="2000038" version_string="2.0.0 Beta 8"><![CDATA[<dl class="example">
	<dt>{{ phrase('example:') }}</dt>
	<dd>{{ $bbCodeExampleHtml ? $bbCodeExampleHtml|raw|nl2br : $bbCodeEval|nl2br }}</dd>
</dl>
<dl class="output">
	<dt>{{ phrase('output:') }}</dt>
	<dd>{{ bb_code($bbCodeEval, 'help', null) }}</dd>
</dl>]]></template>
  <template type="public" title="help_index" version_id="2010052" version_string="2.1.0 Release Candidate 2"><![CDATA[<xf:title>{{ phrase('help') }}</xf:title>

<xf:macro template="metadata_macros" name="canonical_url" arg-canonicalUrl="{{ link('canonical:help') }}" />

<xf:wrap template="help_wrapper" />

<xf:if is="$pages is not empty">
	<div class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:foreach loop="$pages" value="$page">
					<xf:if is="($page.page_id == 'trophies' AND $xf.options.enableTrophies) OR $page.page_id != 'trophies'">
						<div class="block-row block-row--separated">
							<h3 class="block-textHeader">
								<a href="{$page.public_url}">{$page.title}</a>
							</h3>
							{$page.description}
						</div>
					</xf:if>
				</xf:foreach>
			</div>
		</div>
	</div>
<xf:else />
	<div class="blockMessage">{{ phrase('no_items_have_been_created_yet') }}</div>
</xf:if>]]></template>
  <template type="public" title="help_page" version_id="2000631" version_string="2.0.6 Beta 1"><![CDATA[<xf:title>{$page.title}</xf:title>

<xf:macro template="metadata_macros" name="canonical_url" arg-canonicalUrl="{{ link('canonical:help', $page) }}" />

<xf:breadcrumb href="{{ link('help') }}">{{ phrase('help') }}</xf:breadcrumb>

<xf:wrap template="help_wrapper" />

<xf:if is="$page.advanced_mode">
	{$templateHtml|raw}
<xf:else />
	<div class="block">
		<div class="block-container">
			<div class="block-body block-row">
				{$templateHtml|raw}
			</div>
		</div>
	</div>
</xf:if>]]></template>
  <template type="public" title="help_page_smilies.less" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[.smilieText
{
	display: inline-block;
	padding: 2px 3px;
	min-width: 16px;
	text-align: center;
	vertical-align: text-bottom;
	border-radius: @xf-borderRadiusMedium;
	font-size: @xf-fontSizeSmallest;
	.xf-chip();

	&:hover
	{
		.xf-chipHover();
	}
}]]></template>
  <template type="public" title="help_wrapper" version_id="2001070" version_string="2.0.10"><![CDATA[<xf:if is="$pages is not empty">
	<xf:sidenav>
		<div class="block">
			<div class="block-container">
				<h2 class="block-header">{{ phrase('help') }}</h2>
				<div class="block-body">
					<xf:foreach loop="$pages" value="$page">
						<xf:if is="($page.page_id == 'trophies' AND $xf.options.enableTrophies) OR $page.page_id != 'trophies'">
							<a href="{$page.public_url}" class="blockLink {{ $pageSelected == $page.page_name ? 'is-selected' : '' }}">{$page.title}</a>
						</xf:if>
					</xf:foreach>
				</div>
			</div>
		</div>
	</xf:sidenav>
	<xf:page option="sideNavTitle">{{ phrase('help_pages') }}</xf:page>
</xf:if>

<xf:widgetpos id="help_page_sidenav" position="sidenav" />

{$innerContent|raw}]]></template>
  <template type="public" title="helper_account" version_id="2000770" version_string="2.0.7"><![CDATA[<xf:macro name="dob_privacy_row" arg-hint="">
	<xf:checkboxrow hint="{{ $hint ? $hint : ''  }}">
		<xf:option value="1" name="option[show_dob_date]" checked="{$xf.visitor.Option.show_dob_date}"
			label="{{ phrase('show_day_and_month_of_birth') }}">

			<xf:checkbox>
				<xf:option value="1" name="option[show_dob_year]" checked="{$xf.visitor.Option.show_dob_year}"
					label="{{ phrase('show_year_of_birth') }}"
					hint="{{ phrase('this_will_allow_people_to_see_your_age') }}" />
			</xf:checkbox>
		</xf:option>
	</xf:checkboxrow>
</xf:macro>

<xf:macro name="activity_privacy_row">
	<xf:checkboxrow label="{{ phrase('privacy_options') }}">
		<xf:option name="user[visible]" checked="{$xf.visitor.visible}"
			label="{{ phrase('show_your_online_status') }}"
			hint="{{ phrase('this_will_allow_other_people_to_see_when_you_online') }}">

			<xf:checkbox>
				<xf:option name="user[activity_visible]" checked="{$xf.visitor.activity_visible}"
					label="{{ phrase('show_your_current_activity') }}"
					hint="{{ phrase('this_will_allow_other_people_to_see_what_page_you_currently_viewing') }}" />
			</xf:checkbox>
		</xf:option>
	</xf:checkboxrow>
</xf:macro>

<xf:macro name="email_options_row" arg-showExplain="{{ false }}" arg-showConversationOption="{{ false }}">
	<xf:checkboxrow label="{{ phrase('email_options') }}">
		<xf:option name="option[receive_admin_email]" checked="{$xf.visitor.Option.receive_admin_email}"
			label="{{ phrase('receive_site_mailings_option') }}"
			hint="{{ phrase('receive_site_mailings_hint') }}" />

		<xf:if is="$showConversationOption">
			<xf:option name="option[email_on_conversation]" checked="{$xf.visitor.Option.email_on_conversation}"
				label="{{ phrase('receive_email_when_new_conversation_message_is_received') }}" />
		</xf:if>

		<xf:explain><xf:if is="$showExplain">{{ phrase('email_options_row_explain', {'preferencesLink': link('account/preferences')}) }}</xf:if></xf:explain>
	</xf:checkboxrow>
</xf:macro>]]></template>
  <template type="public" title="helper_action" version_id="2000270" version_string="2.0.2"><![CDATA[<xf:macro name="edit_type" arg-canEditSilently="{{ false }}" arg-silentName="silent" arg-clearEditName="clear_edit" arg-silentEdit="{{ false }}" arg-clearEdit="{{ false }}">
	<xf:if is="$canEditSilently">
		<xf:checkbox>
			<xf:option name="{$silentName}" checked="{$silentEdit}"
				label="{{ phrase('edit_silently') }}"
				hint="{{ phrase('if_selected_no_last_edited_note_will_be_added_for_this_edit') }}">

				<xf:checkbox>
					<xf:option name="{$clearEditName}" checked="{$clearEdit}"
						label="{{ phrase('clear_last_edit_information') }}"
						hint="{{ phrase('if_selected_any_existing_last_edited_note_will_be_removed') }}" />
				</xf:checkbox>
			</xf:option>
		</xf:checkbox>
	</xf:if>
</xf:macro>

<xf:macro name="delete_type" arg-canHardDelete="{{ false }}" arg-typeName="hard_delete" arg-reasonName="reason">
	<xf:if is="$canHardDelete">
		<xf:radiorow name="{$typeName}" value="0"
			label="{{ phrase('deletion_type') }}">

			<xf:option value="0"
				label="{{ phrase('remove_from_public_view') }}">

				<xf:textbox name="{$reasonName}" placeholder="{{ phrase('reason...') }}"
					maxlength="{{ max_length('XF:DeletionLog', 'delete_reason') }}" />
			</xf:option>

			<xf:option value="1"
				label="{{ phrase('permanently_delete') }}"
				hint="{{ phrase('selecting_this_option_will_permanently_and_irreversibly_delete_item') }}" />
		</xf:radiorow>
	<xf:else />
		<xf:textboxrow name="{$reasonName}" maxlength="{{ max_length('XF:DeletionLog', 'delete_reason') }}"
			label="{{ phrase('reason_for_deletion') }}" />

		<xf:hiddenval name="{$typeName}">0</xf:hiddenval>
	</xf:if>
</xf:macro>

<xf:macro name="author_alert" arg-selected="{{ false }}" arg-alertName="author_alert" arg-reasonName="author_alert_reason" arg-row="{{ true }}">
	<xf:set var="$checkbox">
		<xf:checkbox>
			<xf:option name="{$alertName}" selected="{$selected}"
				label="{{ phrase('notify_author_of_this_action') }} {{ phrase('reason:') }}">

				<xf:textbox name="{$reasonName}" placeholder="{{ phrase('optional') }}" />
				<xf:afterhint>{{ phrase('note_that_author_will_see_alert_even_no_longer_view_content') }}</xf:afterhint>
			</xf:option>
		</xf:checkbox>
	</xf:set>
	<xf:if is="$row">
		<xf:formrow>
			{$checkbox|raw}
		</xf:formrow>
	<xf:else />
		{$checkbox|raw}
	</xf:if>
</xf:macro>

<xf:macro name="thread_alert" arg-selected="{{ false }}" arg-alertName="starter_alert" arg-reasonName="starter_alert_reason">
	<xf:checkboxrow>
		<xf:option name="{$alertName}" selected="{$selected}"
			label="{{ phrase('notify_thread_starter_of_this_action') }} {{ phrase('reason:') }}">

			<xf:textbox name="{$reasonName}" placeholder="{{ phrase('optional') }}" />
			<xf:afterhint>{{ phrase('note_thread_starter_see_alert_even_no_longer_view_thread') }}</xf:afterhint>
		</xf:option>
	</xf:checkboxrow>
</xf:macro>

<xf:macro name="thread_redirect" arg-label="!">
	<xf:radiorow name="redirect_type" value="none"
		label="{{ phrase('redirection_notice') }}">

		<xf:option value="none">{{ phrase('do_not_leave_redirect') }}</xf:option>
		<xf:option value="permanent">{{ phrase('leave_permanent_redirect') }}</xf:option>
		<xf:option value="temporary" label="{{ phrase('leave_redirect_that_expires_after:') }}">
			<xf:dependent>
				<div class="inputGroup">
					<xf:numberbox name="redirect_length[amount]" value="1" min="0" />
					<span class="inputGroup-splitter"></span>
					<xf:select name="redirect_length[unit]" value="days" class="input--inline">
						<xf:option value="hours">{{ phrase('hours') }}</xf:option>
						<xf:option value="days">{{ phrase('days') }}</xf:option>
						<xf:option value="weeks">{{ phrase('weeks') }}</xf:option>
						<xf:option value="months">{{ phrase('months') }}</xf:option>
					</xf:select>
				</div>
			</xf:dependent>
		</xf:option>
	</xf:radiorow>
</xf:macro>]]></template>
  <template type="public" title="helper_attach_upload" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:macro name="upload_link"
	arg-type="!"
	arg-hash="!"
	arg-context="!"
	arg-constraints="!"
	arg-hiddenName="attachment_hash">

	<xf:js prod="xf/attachment_manager-compiled.js" dev="vendor/flow.js/flow-compiled.js, xf/attachment_manager.js" />

	<xf:button href="{{ link('attachments/upload', null, {'type': $type, 'context': $context, 'hash': $hash}) }}"
		target="_blank" class="button--link js-attachmentUpload" icon="attach"
		data-accept=".{$constraints.extensions|join(',.')}"
		data-video-size="{$constraints.video_size}" />
	<xf:hiddenval name="{$hiddenName}">{$hash}</xf:hiddenval>
	<xf:hiddenval name="{$hiddenName}_combined">{{ {'type': $type, 'context': $context, 'hash': $hash}|json }}</xf:hiddenval>
</xf:macro>

<xf:macro name="upload_link_from_data" arg-attachmentData="!" arg-forceHash="" arg-hiddenName="attachment_hash">
	<xf:macro name="upload_link"
		arg-type="{$attachmentData.type}"
		arg-hash="{{ $forceHash ? $forceHash : $attachmentData.hash }}"
		arg-context="{$attachmentData.context}"
		arg-constraints="{$attachmentData.constraints}"
		arg-hiddenName="{$hiddenName}" />
</xf:macro>

<xf:macro name="uploaded_files_list" arg-attachments="{{ [] }}" arg-listClass="">
	<xf:css src="attachments.less" />
	<ul class="attachUploadList {$listClass} js-attachmentFiles u-hidden {{ $attachments is not empty ? 'is-active' : '' }}">
		<li class="attachUploadList-insertAll js-attachmentInsertAllRow u-hidden">
			<span>{{ phrase('insert_all:') }}</span>
			<span class="buttonGroup buttonGroup--aligned">
				<xf:button class="button--small js-attachmentAllAction" data-action="thumbnail">
					{{ phrase('thumbnail') }}
				</xf:button>
				<xf:button class="button--small js-attachmentAllAction" data-action="full">
					{{ phrase('full_image') }}
				</xf:button>
			</span>
		</li>
	<xf:foreach loop="$attachments" value="$attachment">
		<xf:macro name="uploaded_file" arg-attachment="{$attachment}" />
	</xf:foreach>
	</ul>
	<xf:macro name="uploaded_file_template" />
</xf:macro>

<xf:macro name="uploaded_file" arg-attachment="!" arg-noJsFallback="{{ false }}">
	<li class="js-attachmentFile" data-attachment-id="{$attachment.attachment_id}">
		<div class="contentRow">
			<span class="contentRow-figure attachUploadList-figure">
				<xf:if is="$attachment.has_thumbnail">
					<a href="{{ link('attachments', $attachment, {'hash': $attachment.temp_hash}) }}" target="_blank">
						<img src="{{ base_url($attachment.thumbnail_url) }}" class="js-attachmentThumb" alt="{$attachment.filename}" />
					</a>
				<xf:elseif is="$attachment.is_video" />
					<a href="{$attachment.video_url}" target="_blank">
						<video data-xf-init="video-init">
							<source src="{{ base_url($attachment.video_url) }}" />
							<i class="attachUploadList-placeholder" aria-hidden="true"></i>
						</video>
					</a>
				<xf:else />
					<a href="{{ link('attachments', $attachment, {'hash': $attachment.temp_hash}) }}" target="_blank">
						<i class="attachUploadList-placeholder" aria-hidden="true"></i>
					</a>
				</xf:if>
			</span>

			<div class="contentRow-main">
				<xf:if is="$noJsFallback">
					<span class="contentRow-extra">
						<xf:button type="submit" class="button--small" name="delete" value="{$attachment.attachment_id}">
							{{ phrase('button.delete') }}
						</xf:button>
					</span>
				<xf:else />
					<span class="contentRow-extra u-jsOnly">
						<xf:button class="button--small js-attachmentAction" data-action="delete" data-type="{{ $attachment.is_video ? 'video' : 'image' }}">
							{{ phrase('button.delete') }}
						</xf:button>
					</span>
				</xf:if>
				<div class="contentRow-title">
					<a href="{{ $attachment.is_video ? $attachment.video_url : link('attachments', $attachment, {'hash': $attachment.temp_hash}) }}" class="js-attachmentView" target="_blank">{$attachment.filename}</a>
				</div>
				<xf:if is="($attachment.has_thumbnail OR $attachment.is_video) AND !$noJsFallback">
					<div class="contentRow-spaced contentRow-minor attachUploadList-insertRow js-attachmentInsertRow">
						<span>{{ phrase('insert:') }}</span>
						<span class="buttonGroup buttonGroup--aligned">
							<xf:if is="$attachment.has_thumbnail">
								<xf:button class="button--small js-attachmentAction" data-action="thumbnail">
									{{ phrase('thumbnail') }}
								</xf:button>
							</xf:if>
							<xf:button class="button--small js-attachmentAction" data-action="full" data-type="{{ $attachment.is_video ? 'video' : 'image' }}">
								<xf:if is="$attachment.is_video">
									{{ phrase('video') }}
								<xf:else />
									{{ phrase('full_image') }}
								</xf:if>
							</xf:button>
						</span>
					</div>
				</xf:if>
			</div>
		</div>
	</li>
</xf:macro>

<xf:macro name="uploaded_file_template">
	<script type="text/template" class="js-attachmentUploadTemplate">
		<li class="js-attachmentFile" {{ mustache('#attachment_id', 'data-attachment-id="{{attachment_id}}"') }}>
			<div class="contentRow">
				<span class="contentRow-figure attachUploadList-figure">
					<xf:mustache name="#thumbnail_url">
						<a href="{{ mustache('link') }}" target="_blank"><img src="{{ mustache('thumbnail_url') }}" class="js-attachmentThumb" alt="{{ mustache('filename') }}" /></a>
					</xf:mustache>
					<xf:mustache name="^thumbnail_url">
						<xf:mustache name="#is_video">
							<a href="{{ mustache('video_url') }}" target="_blank">
								<video data-xf-init="video-init">
									<source src="{{ mustache('video_url') }}" />
									<i class="attachUploadList-placeholder" aria-hidden="true"></i>
								</video>
							</a>
						</xf:mustache>
						<xf:mustache name="^is_video">
							<i class="attachUploadList-placeholder" aria-hidden="true"></i>
						</xf:mustache>
					</xf:mustache>
				</span>
				<div class="contentRow-main">
					<span class="contentRow-extra u-jsOnly">
						<xf:mustache name="^uploading">
							<xf:mustache name="#is_video">
								<xf:button class="button--small js-attachmentAction" data-action="delete" data-type="video">
									{{ phrase('button.delete') }}
								</xf:button>
							</xf:mustache>
							<xf:mustache name="^is_video">
								<xf:button class="button--small js-attachmentAction" data-action="delete" data-type="image">
									{{ phrase('button.delete') }}
								</xf:button>
							</xf:mustache>
						</xf:mustache>
						<xf:mustache name="#uploading">
							<xf:button class="button--small js-attachmentAction" data-action="cancel">
								{{ phrase('button.cancel') }}
							</xf:button>
						</xf:mustache>
					</span>
					<div class="contentRow-title">
						<xf:mustache name="#link">
							<a href="{{ mustache('link') }}" class="js-attachmentView" target="_blank">{{ mustache('filename') }}</a>
						</xf:mustache>
						<xf:mustache name="^link">
							<span>{{ mustache('filename') }}</span>
						</xf:mustache>
					</div>

					<xf:mustache name="#uploading">
						<div class="contentRow-spaced">
							<div class="attachUploadList-progress js-attachmentProgress"></div>
							<div class="attachUploadList-error js-attachmentError"></div>
						</div>
					</xf:mustache>

					<xf:mustache name="^uploading">
						<xf:mustache name="#thumbnail_url">
							<div class="contentRow-spaced attachUploadList-insertRow js-attachmentInsertRow">
								<span>{{ phrase('insert:') }}</span>
								<span class="buttonGroup buttonGroup--aligned">
									<xf:button class="button--small js-attachmentAction" data-action="thumbnail">
										{{ phrase('thumbnail') }}
									</xf:button>
									<xf:button class="button--small js-attachmentAction" data-action="full">
										{{ phrase('full_image') }}
									</xf:button>
								</span>
							</div>
						</xf:mustache>
						<xf:mustache name="#is_video">
							<span>{{ phrase('insert:') }}</span>
							<span class="buttonGroup buttonGroup--aligned">
								<xf:button class="button--small js-attachmentAction" data-action="full" data-type="video">
									{{ phrase('video') }}
								</xf:button>
							</span>
						</xf:mustache>
					</xf:mustache>
				</div>
			</div>
		</li>
	</script>
</xf:macro>

<xf:macro name="upload_block" arg-attachmentData="!" arg-forceHash="" arg-hiddenName="attachment_hash">
	<xf:macro name="uploaded_files_list" arg-attachments="{$attachmentData.attachments}" />

	<xf:macro name="upload_link_from_data"
		arg-attachmentData="{$attachmentData}"
		arg-forceHash="{$forceHash}"
		arg-hiddenName="{$hiddenName}" />
</xf:macro>]]></template>
  <template type="public" title="helper_ip" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro name="ip_block" arg-ip="!" arg-user="{{ null }}" arg-heading="">
<div class="block">
	<div class="block-container">
		<xf:if is="$heading is not empty">
			<div class="block-header">
				{$heading}
			</div>
		</xf:if>
		<div class="block-body">
			<xf:formrow label="{{ phrase('content_ip') }}">
				<strong><a class="ip" href="{{ link('misc/ip-info', null, {'ip': $ip|ip}) }}" target="_blank">{$ip|ip}</a></strong> {$ip|host|parens}
			</xf:formrow>

			<xf:if is="$user">
				<xf:set var="$registerIp" value="{$user.getIp('register')}" />
				<xf:if is="$registerIp">
					<xf:formrow label="{{ phrase('user_registration_ip') }}">
						<strong><a class="ip" href="{{ link('misc/ip-info', null, {'ip': $registerIp|ip}) }}" target="_blank">{$registerIp|ip}</a></strong> {$registerIp|host|parens}
					</xf:formrow>
				</xf:if>
			</xf:if>
		</div>
	</div>
</div>
</xf:macro>]]></template>
  <template type="public" title="helper_js_global" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[<xf:macro name="head" arg-app="!">
	<xf:set var="$cssUrls" value="{{ ['public:normalize.css', 'public:core.less', $app . ':app.less'] }}" />

	<xf:include template="font_awesome_setup" />

	<link rel="stylesheet" href="{{ css_url($cssUrls) }}" />

	<!--XF:CSS-->
	<xf:if is="$xf.fullJs">
		<script src="{{ js_url('xf/preamble.js') }}"></script>
	<xf:else />
		<script src="{{ js_url('xf/preamble.min.js') }}"></script>
	</xf:if>
</xf:macro>

<xf:macro name="body" arg-app="!" arg-jsState="{{ null }}">
	<xf:corejs />
	<!--XF:JS-->
	<script>
		jQuery.extend(true, XF.config, {
			// <!--[XF:js_global:xf_extend_start]-->
			userId: {$xf.visitor.user_id},
			enablePush: {{ $xf.options.enablePush ? 'true' : 'false' }},
			pushAppServerKey: '{$xf.options.pushKeysVAPID.publicKey}',
			url: {
				fullBase: '{{ base_url(null, true)|escape("js") }}',
				basePath: '{{ base_url(null, false)|escape("js") }}',
				css: '{{ css_url(["__SENTINEL__"], false)|escape("js") }}',
				keepAlive: '{{ link_type($app, "login/keep-alive")|escape("js") }}'
			},
			cookie: {
				path: '{{ $xf.cookie.path|escape("js") }}',
				domain: '{{ $xf.cookie.domain|escape("js") }}',
				prefix: '{{ $xf.cookie.prefix|escape("js") }}',
				secure: {{ $xf.cookie.secure ? 'true' : 'false' }}
			},
			csrf: '{{ csrf_token()|escape("js") }}',
			js: {'<!--XF:JS:JSON-->'},
			css: {'<!--XF:CSS:JSON-->'},
			time: {
				now: {$xf.time},
				today: {$xf.timeDetails.today},
				todayDow: {$xf.timeDetails.todayDow}
			},
			borderSizeFeature: '{{ property('borderSizeFeature') }}',
			fontAwesomeWeight: '{{ fa_weight() }}',
			enableRtnProtect: {{ $xf.enableRtnProtect ? 'true' : 'false' }},
			enableFormSubmitSticky: {{ property('formSubmitSticky') ? 'true' : 'false' }},
			uploadMaxFilesize: {$xf.uploadMaxFilesize},
			allowedVideoExtensions: {$xf.allowedVideoExtensions|json|raw},
			shortcodeToEmoji: {{ $xf.options.shortcodeToEmoji ? 'true' : 'false' }},
			visitorCounts: {
				conversations_unread: '{$xf.visitor.conversations_unread|number}',
				alerts_unread: '{$xf.visitor.alerts_unread|number}',
				total_unread: '{{ ($xf.visitor.conversations_unread + $xf.visitor.alerts_unread)|number }}',
				title_count: {{ in_array($xf.options.displayVisitorCount, ['title_count', 'title_and_icon']) ? 'true' : 'false' }},
				icon_indicator: {{ in_array($xf.options.displayVisitorCount, ['icon_indicator', 'title_and_icon']) ? 'true' : 'false' }}
			},
			jsState: {{ $jsState ? $jsState|json|raw : '{}' }},
			publicMetadataLogoUrl: '{{ property('publicMetadataLogoUrl') ? base_url(property('publicMetadataLogoUrl'), true) : '' }}',
			publicPushBadgeUrl: '{{ property('publicPushBadgeUrl') ? base_url(property('publicPushBadgeUrl'), true) : '' }}'
		});

		jQuery.extend(XF.phrases, {
			// <!--[XF:js_global:xf_phrase_start]-->
			date_x_at_time_y: "{{ phrase('date_x_at_time_y')|escape('js') }}",
			day_x_at_time_y:  "{{ phrase('day_x_at_time_y')|escape('js') }}",
			yesterday_at_x:   "{{ phrase('yesterday_at_x')|escape('js') }}",
			x_minutes_ago:    "{{ phrase('x_minutes_ago')|escape('js') }}",
			one_minute_ago:   "{{ phrase('one_minute_ago')|escape('js') }}",
			a_moment_ago:     "{{ phrase('a_moment_ago')|escape('js') }}",
			today_at_x:       "{{ phrase('today_at_x')|escape('js') }}",
			in_a_moment:      "{{ phrase('in_a_moment')|escape('js') }}",
			in_a_minute:      "{{ phrase('in_a_minute')|escape('js') }}",
			in_x_minutes:     "{{ phrase('in_x_minutes')|escape('js') }}",
			later_today_at_x: "{{ phrase('later_today_at_x')|escape('js') }}",
			tomorrow_at_x:    "{{ phrase('tomorrow_at_x')|escape('js') }}",

			day0: "{{ phrase('day_sunday')|escape('js') }}",
			day1: "{{ phrase('day_monday')|escape('js') }}",
			day2: "{{ phrase('day_tuesday')|escape('js') }}",
			day3: "{{ phrase('day_wednesday')|escape('js') }}",
			day4: "{{ phrase('day_thursday')|escape('js') }}",
			day5: "{{ phrase('day_friday')|escape('js') }}",
			day6: "{{ phrase('day_saturday')|escape('js') }}",

			dayShort0: "{{ phrase('day_sunday_short')|escape('js') }}",
			dayShort1: "{{ phrase('day_monday_short')|escape('js') }}",
			dayShort2: "{{ phrase('day_tuesday_short')|escape('js') }}",
			dayShort3: "{{ phrase('day_wednesday_short')|escape('js') }}",
			dayShort4: "{{ phrase('day_thursday_short')|escape('js') }}",
			dayShort5: "{{ phrase('day_friday_short')|escape('js') }}",
			dayShort6: "{{ phrase('day_saturday_short')|escape('js') }}",

			month0: "{{ phrase('month_1')|escape('js') }}",
			month1: "{{ phrase('month_2')|escape('js') }}",
			month2: "{{ phrase('month_3')|escape('js') }}",
			month3: "{{ phrase('month_4')|escape('js') }}",
			month4: "{{ phrase('month_5')|escape('js') }}",
			month5: "{{ phrase('month_6')|escape('js') }}",
			month6: "{{ phrase('month_7')|escape('js') }}",
			month7: "{{ phrase('month_8')|escape('js') }}",
			month8: "{{ phrase('month_9')|escape('js') }}",
			month9: "{{ phrase('month_10')|escape('js') }}",
			month10: "{{ phrase('month_11')|escape('js') }}",
			month11: "{{ phrase('month_12')|escape('js') }}",

			active_user_changed_reload_page: "{{ phrase('active_user_changed_reload_page')|escape('js') }}",
			server_did_not_respond_in_time_try_again: "{{ phrase('server_did_not_respond_in_time_try_again')|escape('js') }}",
			oops_we_ran_into_some_problems: "{{ phrase('oops_we_ran_into_some_problems')|escape('js') }}",
			oops_we_ran_into_some_problems_more_details_console: "{{ phrase('oops_we_ran_into_some_problems_more_details_console')|escape('js') }}",
			file_too_large_to_upload: "{{ phrase('file_too_large_to_upload')|escape('js') }}",
			uploaded_file_is_too_large_for_server_to_process: "{{ phrase('uploaded_file_is_too_large_for_server_to_process')|escape('js') }}",
			files_being_uploaded_are_you_sure: "{{ phrase('files_being_uploaded_are_you_sure')|escape('js') }}",
			attach: "{{ phrase('button.attach')|escape('js') }}",
			rich_text_box: "{{ phrase('rich_text_box')|escape('js') }}",
			close: "{{ phrase('close')|escape('js') }}",
			link_copied_to_clipboard: "{{ phrase('link_copied_to_clipboard')|escape('js') }}",
			text_copied_to_clipboard: "{{ phrase('text_copied_to_clipboard')|escape('js') }}",
			loading: "{{ phrase('loading...')|escape('js') }}",

			processing: "{{ phrase('processing')|escape('js') }}",
			'processing...': "{{ phrase('processing...')|escape('js') }}",

			showing_x_of_y_items: "{{ phrase('showing_x_of_y_items')|escape('js') }}",
			showing_all_items: "{{ phrase('showing_all_items')|escape('js') }}",
			no_items_to_display: "{{ phrase('no_items_to_display')|escape('js') }}",

			push_enable_notification_title: "{{ phrase('push_enable_notification_title', {'boardTitle': $xf.options.boardTitle})|escape('js') }}",
			push_enable_notification_body: "{{ phrase('push_enable_notification_body')|escape('js') }}"
		});
	</script>

	<form style="display:none" hidden="hidden">
		<input type="text" name="_xfClientLoadTime" value="" id="_xfClientLoadTime" title="_xfClientLoadTime" tabindex="-1" />
	</form>

	<xf:if is="$xf.visitor.canSearch() && $xf.request.getFullRequestUri() === link('full:index')">
		<script type="application/ld+json">
		{
			"@context": "https://schema.org",
			"@type": "WebSite",
			"url": "{{ link('canonical:index')|escape('js') }}",
			"potentialAction": {
				"@type": "SearchAction",
				"target": "{{ link('canonical:search/search')|escape('js') . ($xf.options.useFriendlyUrls ? '?' : '&') . 'keywords={search_keywords}' }}",
				"query-input": "required name=search_keywords"
			}
		}
		</script>
	</xf:if>
</xf:macro>]]></template>
  <template type="public" title="helper_thread_options" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:macro name="watch_input"
	arg-thread="!"
	arg-rowType=""
	arg-label="{{ phrase('options') }}"
	arg-explain=""
	arg-forceWatchChecked="{{ null }}"
	arg-forceWatchEmailChecked="{{ null }}"
	arg-visible="{{ true }}">

	<xf:set var="$threadWatch" value="{$thread.Watch.{$xf.visitor.user_id}}" />
	<xf:set var="$defaultThreadWatch" value="{{
		$thread.isInsert() ? $xf.visitor.Option.creation_watch_state : $xf.visitor.Option.interaction_watch_state
	}}" />

	<xf:if is="$forceWatchChecked !== null">
		<xf:set var="$watchChecked" value="{$forceWatchChecked}" />
	<xf:else />
		<xf:set var="$watchChecked" value="{{ ($thread.thread_id AND $threadWatch is not empty) ?: ($defaultThreadWatch != '') }}" />
	</xf:if>

	<xf:if is="$forceWatchEmailChecked !== null">
		<xf:set var="$watchEmailChecked" value="{$forceWatchEmailChecked}" />
	<xf:else />
		<xf:set var="$watchEmailChecked" value="{{ ($thread.thread_id AND $threadWatch.email_subscribe) ?: ($defaultThreadWatch == 'watch_email') }}" />
	</xf:if>

	<xf:if is="$visible">
		<xf:checkboxrow label="{$label}" rowtype="{$rowType}">
			<xf:option name="watch_thread" value="1" selected="$watchChecked"
				label="{{ phrase('watch_this_thread...') }}">

				<xf:checkbox>
					<xf:option name="watch_thread_email" value="1" selected="$watchEmailChecked"
						label="{{ phrase('and_receive_email_notifications') }}"/>

				</xf:checkbox>
			</xf:option>
			<xf:explain>{$explain}</xf:explain>
		</xf:checkboxrow>
	<xf:else />
		<xf:hiddenval name="watch_thread" value="{$watchChecked}" />
		<xf:hiddenval name="watch_thread_email" value="{$watchEmailChecked}" />
	</xf:if>
	<xf:hiddenval name="_xfSet[watch_thread]" value="1" />
</xf:macro>

<xf:macro name="thread_status"
	arg-thread="!"
	arg-rowType="">

	<xf:checkboxrow hideempty="true" rowtype="{$rowType}"
		label="{{ phrase('set_thread_status') }}">

		<xf:if is="$thread.canLockUnlock()">
			<xf:option name="discussion_open" value="1" selected="{$thread.discussion_open}"
				label="{{ phrase('open') }}"
				hint="{{ phrase('people_may_reply_to_this_thread') }}">

				<xf:afterhtml>
					<xf:hiddenval name="_xfSet[discussion_open]" value="1" />
				</xf:afterhtml>
			</xf:option>
		</xf:if>
		<xf:if is="$thread.canStickUnstick()">
			<xf:option name="sticky" value="1" selected="{$thread.sticky}"
				label="{{ phrase('sticky') }}"
				hint="{{ phrase('sticky_threads_appear_at_top_of_first_page_of_list_of_threads') }}">

				<xf:afterhtml>
					<xf:hiddenval name="_xfSet[sticky]" value="1" />
				</xf:afterhtml>
			</xf:option>
		</xf:if>
	</xf:checkboxrow>
</xf:macro>]]></template>
  <template type="public" title="helper_user_dob_edit" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro name="dob_edit" arg-dobData="{{ [] }}" arg-row="{{ true }}" arg-required="{{ false }}">
	<xf:set var="$inputGroup">
		<div class="inputGroup inputGroup--auto">
			<xf:select name="dob_month" value="{{ $dobData.dob_month ?: 0 }}">
				<xf:option value="0"></xf:option>
				<xf:option value="1">{{ phrase('month_1') }}</xf:option>
				<xf:option value="2">{{ phrase('month_2') }}</xf:option>
				<xf:option value="3">{{ phrase('month_3') }}</xf:option>
				<xf:option value="4">{{ phrase('month_4') }}</xf:option>
				<xf:option value="5">{{ phrase('month_5') }}</xf:option>
				<xf:option value="6">{{ phrase('month_6') }}</xf:option>
				<xf:option value="7">{{ phrase('month_7') }}</xf:option>
				<xf:option value="8">{{ phrase('month_8') }}</xf:option>
				<xf:option value="9">{{ phrase('month_9') }}</xf:option>
				<xf:option value="10">{{ phrase('month_10') }}</xf:option>
				<xf:option value="11">{{ phrase('month_11') }}</xf:option>
				<xf:option value="12">{{ phrase('month_12') }}</xf:option>
			</xf:select>
			<span class="inputGroup-splitter"></span>
			<xf:textbox name="dob_day" value="{{ $dobData.dob_day ?: '' }}" pattern="\d*" size="4" maxlength="2"
				placeholder="{{ phrase('day') }}" />
			<span class="inputGroup-splitter"></span>
			<xf:textbox name="dob_year" value="{{ $dobData.dob_year ?: '' }}" pattern="\d*" size="6" maxlength="4"
				placeholder="{{ phrase('year') }}" />
		</div>
	</xf:set>
	<xf:if is="$row">
		<xf:formrow rowtype="input"
			label="{{ phrase('date_of_birth') }}"
			hint="{{ $required ? phrase('required') : '' }}">

			{$inputGroup|raw}
		</xf:formrow>
		<xf:else />
		{$inputGroup|raw}
	</xf:if>
</xf:macro>]]></template>
  <template type="public" title="inline_mod_actions" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<div class="inlineModBar">
	<div class="inlineModBar-inner">
		<div class="inlineModBar-close">
			<xf:button class="js-inlineModClose">X</xf:button>
		</div>

		<ul class="inlineModBar-controls">
			<li class="inlineModBar-title">{$title} {$total|number|parens}</li>
			<li><xf:checkbox standalone="true">
				<xf:option labelclass="iconic--inherit-color" class="js-inlineModSelectAll" label="{{ phrase('select_all') }}" />
			</xf:checkbox></li>
			<li>
				<select class="input input--inline js-inlineModAction">
					<optgroup>
						<option value="" hidden="hidden">{{ phrase('choose_action...') }}</option>
						<xf:foreach loop="$actions" key="$id" value="$action">
							<option value="{$id}">{$action}</option>
						</xf:foreach>
					</optgroup>
					<xf:if is="!$actions.deselect">
						<optgroup>
							<option value="deselect">{{ phrase('deselect_all') }}</option>
						</optgroup>
					</xf:if>
				</select>
				<xf:button type="submit" class="button--primary inlineModBar-goButton">{{ phrase('go') }}</xf:button>
			</li>
		</ul>
	</div>
</div>]]></template>
  <template type="public" title="inline_mod_conversation_leave" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('leave_conversations') }}</xf:title>

<xf:form action="{{ link('inline-mod') }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow>
				{{ phrase('leaving_conversation_will_remove_it_from_your_conversation_list') }}
			</xf:inforow>

			<xf:radiorow name="recipient_state"
				label="{{ phrase('future_message_handling') }}">

				<xf:option value="deleted" checked="checked"
					label="{{ phrase('accept_future_messages') }}"
					hint="{{ phrase('should_conversation_receive_responses_restored_to_inbox') }}" />

				<xf:option value="deleted_ignored"
					label="{{ phrase('ignore_future_messages') }}"
					hint="{{ phrase('not_notified_of_responses_conversation_remain_deleted') }}" />
			</xf:radiorow>
		</div>
		<xf:submitrow icon="save" />
	</div>

	<xf:foreach loop="$conversations" value="$conversation">
		<xf:hiddenval name="ids[]">{$conversation.conversation_id}</xf:hiddenval>
	</xf:foreach>

	<xf:hiddenval name="type">conversation</xf:hiddenval>
	<xf:hiddenval name="action">leave</xf:hiddenval>
	<xf:hiddenval name="confirmed">1</xf:hiddenval>

	<xf:redirect url="{$redirect}" />
</xf:form>]]></template>
  <template type="public" title="inline_mod_macros" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro name="button"
	arg-buttonClass="button--link"
	arg-variant=""
	arg-label="{{ null }}"
	arg-tooltip="{{ null }}">

	<xf:button class="{$buttonClass} js-inlineModTrigger"
		data-xf-init="{{ $tooltip === false ? '' : 'tooltip' }}"
		title="{{ $tooltip === false ? '' : ($tooltip ?: phrase('selected_for_moderation')) }}">

		<span class="inlineModButton {$variant}">
			<i aria-hidden="true"></i>
			<span class="inlineModButton-label">{{ $label ?: phrase('moderation') }}</span>
			<span class="inlineModButton-count js-inlineModCounter">0</span>
		</span>
	</xf:button>
</xf:macro>]]></template>
  <template type="public" title="inline_mod_post_copy" version_id="2000053" version_string="2.0.0 Release Candidate 3"><![CDATA[<xf:title>{{ phrase('inline_moderation_copy_posts') }}</xf:title>

<xf:form action="{{ link('inline-mod') }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body js-prefixListenContainer">
			<xf:inforow rowtype="confirm">{{ phrase('you_sure_you_want_to_copy_x_posts_to_new_thread', {'count': $total}) }}</xf:inforow>

			<xf:radiorow name="thread_type" value="{$type}">
				<xf:option value="new" checked="checked" labelclass="u-featuredText">
					<xf:label>{{ phrase('new_thread') }}</xf:label>
					<xf:dependent>
						<label>{{ phrase('destination_forum:') }}</label>
						<xf:select name="node_id" value="{$first.Thread.node_id}" class="js-nodeList">
							<xf:foreach loop="$nodeTree.getFlattened(0)" value="$treeEntry">
								<xf:option value="{$treeEntry.record.node_id}" disabled="{{ $treeEntry.record.node_type_id != 'Forum' ? 'disabled' : '' }}">{{ repeat_raw('&nbsp; ', $treeEntry.depth) }} {$treeEntry.record.title}</xf:option>
							</xf:foreach>
						</xf:select>
					</xf:dependent>

					<xf:dependent>
						<label>{{ phrase('new_thread_title:') }}</label>
						<xf:prefixinput
							prefixes="{$prefixes}"
							type="thread"
							prefix-value="{$first.Thread.prefix_id}"
							textbox-value="{$first.Thread.title}"
							autofocus="autofocus"
							href="{{ link('forums/prefixes') }}"
							listen-to="< .js-prefixListenContainer | .js-nodeList"
							maxlength="{{ max_length($first.Thread, 'title') }}" />
					</xf:dependent>
				</xf:option>

				<xf:option value="existing" labelclass="u-featuredText">
					<xf:label>{{ phrase('existing_thread') }}</xf:label>
					<xf:dependent>
						<label>{{ phrase('thread_url:') }}</label>
						<xf:textbox name="existing_url" type="url" />
					</xf:dependent>
				</xf:option>
			</xf:radiorow>

			<xf:macro template="helper_action" name="author_alert" arg-selected="{{ $total == 1 }}" />
		</div>
		<xf:submitrow icon="copy" />
	</div>

	<xf:foreach loop="$posts" value="$post">
		<xf:hiddenval name="ids[]">{$post.post_id}</xf:hiddenval>
	</xf:foreach>

	<xf:hiddenval name="type">post</xf:hiddenval>
	<xf:hiddenval name="action">copy</xf:hiddenval>
	<xf:hiddenval name="confirmed">1</xf:hiddenval>

	<xf:redirect url="{$redirect}" />
</xf:form>]]></template>
  <template type="public" title="inline_mod_post_delete" version_id="2000052" version_string="2.0.0 Release Candidate 2"><![CDATA[<xf:title>{{ phrase('inline_moderation_delete_posts') }}</xf:title>

<xf:form action="{{ link('inline-mod') }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">{{ phrase('you_sure_you_want_to_delete_x_posts', {'count': $total}) }}</xf:inforow>

			<xf:if is="$firstPostCount">
				<xf:inforow>
					<div class="blockMessage blockMessage--important"><strong>{{ phrase('note:') }}</strong> {{ phrase('x_threads_will_be_deleted_when_these_posts_deleted', {'count': $firstPostCount|number}) }}</div>
				</xf:inforow>
			</xf:if>

			<xf:macro template="helper_action" name="delete_type" arg-canHardDelete="{$canHardDelete}" />

			<xf:macro template="helper_action" name="author_alert" />
		</div>
		<xf:submitrow icon="delete" />
	</div>

	<xf:foreach loop="$posts" value="$post">
		<xf:hiddenval name="ids[]">{$post.post_id}</xf:hiddenval>
	</xf:foreach>

	<xf:hiddenval name="type">post</xf:hiddenval>
	<xf:hiddenval name="action">delete</xf:hiddenval>
	<xf:hiddenval name="confirmed">1</xf:hiddenval>

	<xf:redirect url="{$redirect}" />
</xf:form>]]></template>
  <template type="public" title="inline_mod_post_merge" version_id="2000036" version_string="2.0.0 Beta 6"><![CDATA[<xf:title>{{ phrase('inline_moderation_merge_posts') }}</xf:title>

<xf:form action="{{ link('inline-mod') }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">{{ phrase('you_sure_you_want_to_merge_x_posts_together', {'count': $total}) }}</xf:inforow>

			<xf:selectrow name="target_post_id" value="{$first.post_id}"
				label="{{ phrase('merge_into_post') }}">

				<xf:foreach loop="$posts" key="$postId" value="$post">
					<xf:option value="{$postId}">{{ $post.User.username ?: $post.username }} &middot; {{ date_time($post.post_date) }}</xf:option>
				</xf:foreach>
			</xf:selectrow>

			<xf:textarearow name="message" value="{$message}" rows="5" autosize="true"
				label="{{ phrase('preview') }}"
				maxlength="{$xf.options.messageMaxLength}" />

			<xf:macro template="helper_action" name="author_alert" arg-selected="{{ $total == 1 }}" />
		</div>
		<xf:submitrow icon="merge" />
	</div>

	<xf:foreach loop="$posts" value="$post">
		<xf:hiddenval name="ids[]">{$post.post_id}</xf:hiddenval>
	</xf:foreach>

	<xf:hiddenval name="type">post</xf:hiddenval>
	<xf:hiddenval name="action">merge</xf:hiddenval>
	<xf:hiddenval name="confirmed">1</xf:hiddenval>

	<xf:redirect url="{$redirect}" />
</xf:form>]]></template>
  <template type="public" title="inline_mod_post_move" version_id="2000036" version_string="2.0.0 Beta 6"><![CDATA[<xf:title>{{ phrase('inline_moderation_move_posts') }}</xf:title>

<xf:form action="{{ link('inline-mod') }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body js-prefixListenContainer">
			<xf:inforow rowtype="confirm">{{ phrase('you_sure_you_want_to_move_x_posts_to_new_thread', {'count': $total}) }}</xf:inforow>

			<xf:radiorow name="thread_type" value="{$type}">
				<xf:option value="new" checked="checked" labelclass="u-featuredText">
					<xf:label>{{ phrase('new_thread') }}</xf:label>
					<xf:dependent>
						<label>{{ phrase('destination_forum:') }}</label>
						<xf:select name="node_id" value="{$first.Thread.node_id}" class="js-nodeList">
							<xf:foreach loop="$nodeTree.getFlattened(0)" value="$treeEntry">
								<xf:option value="{$treeEntry.record.node_id}" disabled="{{ $treeEntry.record.node_type_id != 'Forum' ? 'disabled' : '' }}">{{ repeat_raw('&nbsp; ', $treeEntry.depth) }} {$treeEntry.record.title}</xf:option>
							</xf:foreach>
						</xf:select>
					</xf:dependent>

					<xf:dependent>
						<label>{{ phrase('new_thread_title:') }}</label>
						<xf:prefixinput
							prefixes="{$prefixes}"
							type="thread"
							prefix-value="{$first.Thread.prefix_id}"
							textbox-value="{$first.Thread.title}"
							autofocus="autofocus"
							href="{{ link('forums/prefixes') }}"
							listen-to="< .js-prefixListenContainer | .js-nodeList"
							maxlength="{{ max_length($first.Thread, 'title') }}" />
					</xf:dependent>
				</xf:option>

				<xf:option value="existing" labelclass="u-featuredText">
					<xf:label>{{ phrase('existing_thread') }}</xf:label>
					<xf:dependent>
						<label>{{ phrase('thread_url:') }}</label>
						<xf:textbox name="existing_url" type="url" />
					</xf:dependent>
				</xf:option>
			</xf:radiorow>

			<xf:macro template="helper_action" name="author_alert" arg-selected="{{ $total == 1 }}" />
		</div>
		<xf:submitrow icon="move" />
	</div>

	<xf:foreach loop="$posts" value="$post">
		<xf:hiddenval name="ids[]">{$post.post_id}</xf:hiddenval>
	</xf:foreach>

	<xf:hiddenval name="type">post</xf:hiddenval>
	<xf:hiddenval name="action">move</xf:hiddenval>
	<xf:hiddenval name="confirmed">1</xf:hiddenval>

	<xf:redirect url="{$redirect}" />
</xf:form>]]></template>
  <template type="public" title="inline_mod_profile_post_delete" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('inline_moderation_delete_profile_posts') }}</xf:title>

<xf:form action="{{ link('inline-mod') }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">{{ phrase('you_sure_you_want_to_delete_x_profile_posts', {'count': $total}) }}</xf:inforow>

			<xf:macro template="helper_action" name="delete_type" arg-canHardDelete="{$canHardDelete}" />

			<xf:macro template="helper_action" name="author_alert" />
		</div>
		<xf:submitrow icon="delete" />
	</div>

	<xf:foreach loop="$profilePosts" value="$profilePost">
		<xf:hiddenval name="ids[]">{$profilePost.profile_post_id}</xf:hiddenval>
	</xf:foreach>

	<xf:hiddenval name="type">profile_post</xf:hiddenval>
	<xf:hiddenval name="action">delete</xf:hiddenval>
	<xf:hiddenval name="confirmed">1</xf:hiddenval>

	<xf:redirect url="{$redirect}" />
</xf:form>]]></template>
  <template type="public" title="inline_mod_thread_apply_prefix" version_id="2000036" version_string="2.0.0 Beta 6"><![CDATA[<xf:title>{{ phrase('inline_moderation_thread_prefix') }}</xf:title>

<xf:form action="{{ link('inline-mod') }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">{{ phrase('you_sure_you_want_to_prefix_x_threads', {'count': $total}) }}</xf:inforow>

			<xf:macro template="prefix_macros" name="row"
				arg-type="thread"
				arg-prefixes="{$prefixes}"
				arg-selected="{$selectedPrefix}"
				arg-explain="{{ ($forumCount > 1) ? phrase('apply_thread_prefix_to_multiple_forums') : '' }}" />
		</div>
		<xf:submitrow icon="confirm" />
	</div>

	<xf:foreach loop="$threads" value="$thread">
		<xf:hiddenval name="ids[]">{$thread.thread_id}</xf:hiddenval>
	</xf:foreach>

	<xf:hiddenval name="type">thread</xf:hiddenval>
	<xf:hiddenval name="action">apply_prefix</xf:hiddenval>
	<xf:hiddenval name="confirmed">1</xf:hiddenval>

	<xf:redirect url="{$redirect}" />
</xf:form>]]></template>
  <template type="public" title="inline_mod_thread_delete" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('inline_moderation_delete_threads') }}</xf:title>

<xf:form action="{{ link('inline-mod') }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">{{ phrase('you_sure_you_want_to_delete_x_threads', {'count': $total}) }}</xf:inforow>

			<xf:macro template="helper_action" name="delete_type" arg-canHardDelete="{$canHardDelete}" />

			<xf:macro template="helper_action" name="thread_alert" />
		</div>
		<xf:submitrow icon="delete" />
	</div>

	<xf:foreach loop="$threads" value="$thread">
		<xf:hiddenval name="ids[]">{$thread.thread_id}</xf:hiddenval>
	</xf:foreach>

	<xf:hiddenval name="type">thread</xf:hiddenval>
	<xf:hiddenval name="action">delete</xf:hiddenval>
	<xf:hiddenval name="confirmed">1</xf:hiddenval>

	<xf:redirect url="{$redirect}" />
</xf:form>]]></template>
  <template type="public" title="inline_mod_thread_merge" version_id="2000036" version_string="2.0.0 Beta 6"><![CDATA[<xf:title>{{ phrase('inline_moderation_merge_threads') }}</xf:title>

<xf:form action="{{ link('inline-mod') }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">{{ phrase('you_sure_you_want_to_merge_x_threads', {'count': $total}) }}</xf:inforow>

			<xf:selectrow name="target_thread_id" value="{$first.thread_id}"
				label="{{ phrase('destination_thread') }}"
				explain="{{ phrase('all_posts_from_other_threads_will_be_merged_into_this_thread') }}">

				<xf:foreach loop="$threads" value="$thread">
					<xf:option value="{$thread.thread_id}">{{ prefix('thread', $thread, 'escaped') }}{$thread.title}</xf:option>
				</xf:foreach>
			</xf:selectrow>

			<xf:macro template="helper_action" name="thread_redirect" arg-label="{{ phrase('leave_redirect_for_merged_threads') }}" />

			<xf:macro template="helper_action" name="thread_alert" arg-selected="{{ $total == 1 }}" />
		</div>
		<xf:submitrow icon="merge" />
	</div>

	<xf:foreach loop="$threads" value="$thread">
		<xf:hiddenval name="ids[]">{$thread.thread_id}</xf:hiddenval>
	</xf:foreach>

	<xf:hiddenval name="type">thread</xf:hiddenval>
	<xf:hiddenval name="action">merge</xf:hiddenval>
	<xf:hiddenval name="confirmed">1</xf:hiddenval>

	<xf:redirect url="{$redirect}" />
</xf:form>]]></template>
  <template type="public" title="inline_mod_thread_move" version_id="2000036" version_string="2.0.0 Beta 6"><![CDATA[<xf:js src="xf/prefix_menu.js" min="1" />

<xf:title>{{ phrase('inline_moderation_move_threads') }}</xf:title>

<xf:form action="{{ link('inline-mod') }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body js-prefixListenContainer">
			<xf:inforow rowtype="confirm">{{ phrase('you_sure_you_want_to_move_x_threads', {'count': $total}) }}</xf:inforow>
			<xf:selectrow name="target_node_id" value="{$first.node_id}" class="js-nodeList"
				label="{{ phrase('destination_forum') }}">

				<xf:foreach loop="$nodeTree.getFlattened(0)" value="$treeEntry">
					<xf:option value="{$treeEntry.record.node_id}" disabled="{{ $treeEntry.record.node_type_id != 'Forum' ? 'disabled' : '' }}">{{ repeat_raw('&nbsp; ', $treeEntry.depth) }} {$treeEntry.record.title}</xf:option>
				</xf:foreach>
			</xf:selectrow>

			<xf:checkboxrow>
				<xf:option name="apply_thread_prefix"
					label="{{ phrase('apply_prefix_to_selected_threads') }}">

					<xf:dependent>
						<xf:macro template="prefix_macros" name="select"
							arg-type="thread"
							arg-prefixes="{$prefixes}"
							arg-href="{{ link('forums/prefixes') }}"
							arg-listenTo="< .js-prefixListenContainer | .js-nodeList" />
					</xf:dependent>
				</xf:option>
			</xf:checkboxrow>

			<xf:macro template="helper_action" name="thread_redirect" arg-label="{{ phrase('redirection_notice') }}" />

			<xf:checkboxrow>
				<xf:option name="notify_watchers" value="1" selected="{{ $total == 1 }}">{{ phrase('notify_members_watching_destination_forum') }}</xf:option>
			</xf:checkboxrow>

			<xf:macro template="helper_action" name="thread_alert" arg-selected="{{ $total == 1 }}" />
		</div>
		<xf:submitrow icon="move" />
	</div>

	<xf:foreach loop="$threads" value="$thread">
		<xf:hiddenval name="ids[]">{$thread.thread_id}</xf:hiddenval>
	</xf:foreach>

	<xf:hiddenval name="type">thread</xf:hiddenval>
	<xf:hiddenval name="action">move</xf:hiddenval>
	<xf:hiddenval name="confirmed">1</xf:hiddenval>

	<xf:redirect url="{$redirect}" />
</xf:form>]]></template>
  <template type="public" title="language_chooser" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('language_chooser') }}</xf:title>

<xf:head option="metaNoindex"><meta name="robots" content="noindex" /></xf:head>

<div class="block">
	<div class="block-container">
		<div class="block-body">
			<ul class="listPlain listColumns">
				<xf:foreach loop="$languageTree.getFlattened(0)" value="$treeEntry">
					<li>
						<a href="{{ link('misc/language', null, {
							'language_id': $treeEntry.record.language_id,
							'_xfRedirect': $redirect,
							't': csrf_token()
						}) }}" class="menu-linkRow" dir="auto">{$treeEntry.record.title}</a>
					</li>
				</xf:foreach>
			</ul>
		</div>
	</div>
</div>]]></template>
  <template type="public" title="latest_activity" version_id="2000370" version_string="2.0.3"><![CDATA[<xf:title>{{ phrase('latest_activity') }}</xf:title>

<xf:wrap template="whats_new_wrapper">
	<xf:set var="$pageSelected" value="latest_activity" />
</xf:wrap>

<div class="block">
	<div class="block-container">
		<xf:if is="$newsFeedItems is not empty">
			<ul class="block-body js-newsFeedTarget">
				<xf:foreach loop="$newsFeedItems" value="$item">
					<xf:macro template="news_feed_macros" name="feed_row" arg-item="{$item}" />
				</xf:foreach>
			</ul>
			<div class="block-footer js-newsFeedLoadMore">
				<span class="block-footer-controls"><xf:button href="{{ link('whats-new/latest-activity', null, {'before_id': $oldestItemId}) }}"
					rel="nofollow"
					data-xf-click="inserter"
					data-append=".js-newsFeedTarget"
					data-replace=".js-newsFeedLoadMore">
					{{ phrase('show_older_items') }}
				</xf:button></span>
			</div>
		<xf:elseif is="$beforeId" />
			<div class="block-body js-newsFeedTarget">
				<div class="block-row block-row--separated">{{ phrase('there_no_more_items_to_show') }}</div>
			</div>
		<xf:else />
			<div class="block-body js-newsFeedTarget">
				<div class="block-row">{{ phrase('news_feed_is_currently_empty') }}</div>
			</div>
		</xf:if>
	</div>
</div>]]></template>
  <template type="public" title="lightbox.less" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[.lbContainer
{
	&.lbContainer--inline
	{
		display: inline-block;
		max-width: 100%;
	}

	.lbContainer-zoomer
	{
		display: none;
	}

	&.lbContainer--canZoom
	{
		position: relative;

		.lbContainer-zoomer
		{
			display: block;

			cursor: pointer;
			position: absolute;
			top: 0;
			bottom: 0;
			left: 0;
			right: 0;
		}
	}
}

/* Some overrides by XF for lightGallery */
.lg-on
{
	// workaround for scrollbars being visible in the lightbox
	overflow: hidden !important;
}

.xfLb
{
	&.lg-outer .lg-item
	{
		background: none;

		&.lg-complete
		{
			&:after
			{
				display: none;
			}
		}

		&:after
		{
			font-family: 'Font Awesome 5 Pro';
			font-size: 3em;
			.m-faContent(@fa-var-spinner);
			color: white;

			position: absolute;
			left: 0;
			top: 45%;
			width: 100%;

			-webkit-animation: fa-spin 1s infinite steps(8);
			animation: fa-spin 1s infinite steps(8);
		}
	}

	&.lg-zoomed
	{
		.lg-icon
		{
			&#lg-actual-size:after
			{
				.m-faContent(@fa-var-search-minus)
			}
		}
	}

	&.lg-fullscreen-on
	{
		.lg-icon
		{
			&.lg-fullscreen:after
			{
				.m-faContent(@fa-var-compress);
			}
		}
	}

	.lg-icon
	{
		color: #c8c8c8;
		text-shadow: 0 0 2px rgba(0, 0, 0, 0.8);

		.m-faBase();

		&.lg-next:before
		{
			.m-faContent(@fa-var-chevron-right, false, ltr);
			.m-faContent(@fa-var-chevron-left, false, rtl);
		}

		&.lg-prev:after
		{
			.m-faContent(@fa-var-chevron-left, false, ltr);
			.m-faContent(@fa-var-chevron-right, false, rtl);
		}

		&.lg-toogle-thumb:after
		{
			.m-faContent(@fa-var-th);
		}

		&#lg-actual-size
		{
			&.lg-icon--dimmed
			{
				opacity: 0.5;
				pointer-events: none;
			}

			&:after
			{
				.m-faContent(@fa-var-search-plus);
			}
		}

		&#lg-new-window
		{
			&:after
			{
				.m-faContent(@fa-var-external-link);
			}
		}

		&#lg-zoom-in
		{
			display: none;

			&:after
			{
				.m-faContent(@fa-var-search-plus)
			}
		}

		&#lg-zoom-out
		{
			display: none;

			&:after
			{
				.m-faContent(@fa-var-search-minus)
			}
		}

		&.lg-fullscreen:after
		{
			.m-faContent(@fa-var-expand);
		}

		.lg-show-autoplay&
		{
			&.lg-autoplay-button:after
			{
				.m-faContent(@fa-var-pause-circle);
			}
		}

		&.lg-autoplay-button:after
		{
			.m-faContent(@fa-var-play-circle);
		}

		&#lg-download:after
		{
			.m-faContent(@fa-var-download);
		}

		&.lg-close:after
		{
			.m-faContent(@fa-var-times);
		}
	}

	.lg-sub-html
	{
		h4, p
		{
			.m-textColoredLinks();
		}
	}
}

.lg-sub-html {
	opacity: 1;
	-webkit-transition: -webkit-transform 0.35s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.35s cubic-bezier(0, 0, 0.25, 1) 0s, color 0.2s linear;
	-moz-transition: -moz-transform 0.35s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.35s cubic-bezier(0, 0, 0.25, 1) 0s, color 0.2s linear;
	-o-transition: -o-transform 0.35s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.35s cubic-bezier(0, 0, 0.25, 1) 0s, color 0.2s linear;
	transition: transform 0.35s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.35s cubic-bezier(0, 0, 0.25, 1) 0s, color 0.2s linear;
}

.lg-hide-items .lg-sub-html {
	opacity: 0;
	-webkit-transform: translate3d(0, 10px, 0);
	transform: translate3d(0, 10px, 0);
}

/*! lightgallery - v1.6.0 - 2017-08-08
* http://sachinchoolur.github.io/lightGallery/
* Copyright (c) 2017 Sachin N; Licensed GPLv3 */
//@font-face {
//	font-family: 'lg';
//	src: url("../fonts/lg.eot?n1z373");
//	src: url("../fonts/lg.eot?#iefixn1z373") format("embedded-opentype"), url("../fonts/lg.woff?n1z373") format("woff"), url("../fonts/lg.ttf?n1z373") format("truetype"), url("../fonts/lg.svg?n1z373#lg") format("svg");
//	font-weight: normal;
//	font-style: normal;
//}
//.lg-icon {
//	font-family: 'lg';
//	speak: none;
//	font-style: normal;
//	font-weight: normal;
//	font-variant: normal;
//	text-transform: none;
//	line-height: 1;
//	/* Better Font Rendering =========== */
//	-webkit-font-smoothing: antialiased;
//	-moz-osx-font-smoothing: grayscale;
//}

.lg-actions .lg-next, .lg-actions .lg-prev {
	background-color: rgba(0, 0, 0, 0.45);
	border-radius: 2px;
	color: #999;
	cursor: pointer;
	display: block;
	font-size: 22px;
	margin-top: -10px;
	padding: 8px 10px 9px;
	position: absolute;
	top: 50%;
	z-index: 1080;
	border: none;
	outline: none;
}
.lg-actions .lg-next.disabled, .lg-actions .lg-prev.disabled {
	pointer-events: none;
	opacity: 0.5;
}
.lg-actions .lg-next:hover, .lg-actions .lg-prev:hover {
	color: #FFF;
}
.lg-actions .lg-next {
	right: 20px;
}
.lg-actions .lg-next:before {
	content: "\e095";
}
.lg-actions .lg-prev {
	left: 20px;
}
.lg-actions .lg-prev:after {
	content: "\e094";
}

@-webkit-keyframes lg-right-end {
	0% {
		left: 0;
	}
	50% {
		left: -30px;
	}
	100% {
		left: 0;
	}
}
@-moz-keyframes lg-right-end {
	0% {
		left: 0;
	}
	50% {
		left: -30px;
	}
	100% {
		left: 0;
	}
}
@-ms-keyframes lg-right-end {
	0% {
		left: 0;
	}
	50% {
		left: -30px;
	}
	100% {
		left: 0;
	}
}
@keyframes lg-right-end {
	0% {
		left: 0;
	}
	50% {
		left: -30px;
	}
	100% {
		left: 0;
	}
}
@-webkit-keyframes lg-left-end {
	0% {
		left: 0;
	}
	50% {
		left: 30px;
	}
	100% {
		left: 0;
	}
}
@-moz-keyframes lg-left-end {
	0% {
		left: 0;
	}
	50% {
		left: 30px;
	}
	100% {
		left: 0;
	}
}
@-ms-keyframes lg-left-end {
	0% {
		left: 0;
	}
	50% {
		left: 30px;
	}
	100% {
		left: 0;
	}
}
@keyframes lg-left-end {
	0% {
		left: 0;
	}
	50% {
		left: 30px;
	}
	100% {
		left: 0;
	}
}
.lg-outer.lg-right-end .lg-object {
	-webkit-animation: lg-right-end 0.3s;
	-o-animation: lg-right-end 0.3s;
	animation: lg-right-end 0.3s;
	position: relative;
}
.lg-outer.lg-left-end .lg-object {
	-webkit-animation: lg-left-end 0.3s;
	-o-animation: lg-left-end 0.3s;
	animation: lg-left-end 0.3s;
	position: relative;
}

.lg-toolbar {
	z-index: 1082;
	left: 0;
	position: absolute;
	top: 0;
	width: 100%;
	background-color: rgba(0, 0, 0, 0.45);
}
.lg-toolbar .lg-icon {
	color: #999;
	cursor: pointer;
	float: right;
	font-size: 24px;
	height: 47px;
	line-height: 27px;
	padding: 10px 0;
	text-align: center;
	width: 50px;
	text-decoration: none !important;
	outline: medium none;
	-webkit-transition: color 0.2s linear;
	-o-transition: color 0.2s linear;
	transition: color 0.2s linear;
}
.lg-toolbar .lg-icon:hover {
	color: #FFF;
}
.lg-toolbar .lg-close:after {
	content: "\e070";
}
.lg-toolbar .lg-download:after {
	content: "\e0f2";
}

.lg-sub-html {
	background-color: rgba(0, 0, 0, 0.45);
	bottom: 0;
	color: #EEE;
	font-size: 16px;
	left: 0;
	padding: 10px 40px;
	position: fixed;
	right: 0;
	text-align: center;
	z-index: 1080;
}
.lg-sub-html h4 {
	margin: 0;
	font-size: 13px;
	font-weight: bold;
}
.lg-sub-html p {
	font-size: 12px;
	margin: 5px 0 0;
}

#lg-counter {
	color: #999;
	display: inline-block;
	font-size: 16px;
	padding-left: 20px;
	padding-top: 12px;
	vertical-align: middle;
}

.lg-toolbar, .lg-prev, .lg-next {
	opacity: 1;
	-webkit-transition: -webkit-transform 0.35s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.35s cubic-bezier(0, 0, 0.25, 1) 0s, color 0.2s linear;
	-moz-transition: -moz-transform 0.35s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.35s cubic-bezier(0, 0, 0.25, 1) 0s, color 0.2s linear;
	-o-transition: -o-transform 0.35s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.35s cubic-bezier(0, 0, 0.25, 1) 0s, color 0.2s linear;
	transition: transform 0.35s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.35s cubic-bezier(0, 0, 0.25, 1) 0s, color 0.2s linear;
}

.lg-hide-items .lg-prev {
	opacity: 0;
	-webkit-transform: translate3d(-10px, 0, 0);
	transform: translate3d(-10px, 0, 0);
}
.lg-hide-items .lg-next {
	opacity: 0;
	-webkit-transform: translate3d(10px, 0, 0);
	transform: translate3d(10px, 0, 0);
}
.lg-hide-items .lg-toolbar {
	opacity: 0;
	-webkit-transform: translate3d(0, -10px, 0);
	transform: translate3d(0, -10px, 0);
}

body:not(.lg-from-hash) .lg-outer.lg-start-zoom .lg-object {
	-webkit-transform: scale3d(0.5, 0.5, 0.5);
	transform: scale3d(0.5, 0.5, 0.5);
	opacity: 0;
	-webkit-transition: -webkit-transform 250ms cubic-bezier(0, 0, 0.25, 1) 0s, opacity 250ms cubic-bezier(0, 0, 0.25, 1) !important;
	-moz-transition: -moz-transform 250ms cubic-bezier(0, 0, 0.25, 1) 0s, opacity 250ms cubic-bezier(0, 0, 0.25, 1) !important;
	-o-transition: -o-transform 250ms cubic-bezier(0, 0, 0.25, 1) 0s, opacity 250ms cubic-bezier(0, 0, 0.25, 1) !important;
	transition: transform 250ms cubic-bezier(0, 0, 0.25, 1) 0s, opacity 250ms cubic-bezier(0, 0, 0.25, 1) !important;
	-webkit-transform-origin: 50% 50%;
	-moz-transform-origin: 50% 50%;
	-ms-transform-origin: 50% 50%;
	transform-origin: 50% 50%;
}
body:not(.lg-from-hash) .lg-outer.lg-start-zoom .lg-item.lg-complete .lg-object {
	-webkit-transform: scale3d(1, 1, 1);
	transform: scale3d(1, 1, 1);
	opacity: 1;
}

.lg-outer .lg-thumb-outer {
	background-color: #0D0A0A;
	bottom: 0;
	position: absolute;
	width: 100%;
	z-index: 1080;
	max-height: 350px;
	-webkit-transform: translate3d(0, 100%, 0);
	transform: translate3d(0, 100%, 0);
	-webkit-transition: -webkit-transform 0.25s cubic-bezier(0, 0, 0.25, 1) 0s;
	-moz-transition: -moz-transform 0.25s cubic-bezier(0, 0, 0.25, 1) 0s;
	-o-transition: -o-transform 0.25s cubic-bezier(0, 0, 0.25, 1) 0s;
	transition: transform 0.25s cubic-bezier(0, 0, 0.25, 1) 0s;
}
.lg-outer .lg-thumb-outer.lg-grab .lg-thumb-item {
	cursor: -webkit-grab;
	cursor: -moz-grab;
	cursor: -o-grab;
	cursor: -ms-grab;
	cursor: grab;
}
.lg-outer .lg-thumb-outer.lg-grabbing .lg-thumb-item {
	cursor: move;
	cursor: -webkit-grabbing;
	cursor: -moz-grabbing;
	cursor: -o-grabbing;
	cursor: -ms-grabbing;
	cursor: grabbing;
}
.lg-outer .lg-thumb-outer.lg-dragging .lg-thumb {
	-webkit-transition-duration: 0s !important;
	transition-duration: 0s !important;
}
.lg-outer.lg-thumb-open .lg-thumb-outer {
	-webkit-transform: translate3d(0, 0%, 0);
	transform: translate3d(0, 0%, 0);
}
.lg-outer .lg-thumb {
	padding: 10px 0;
	height: 100%;
	margin-bottom: -5px;
}
.lg-outer .lg-thumb-item {
	border-radius: 5px;
	cursor: pointer;
	float: left;
	overflow: hidden;
	height: 100%;
	border: 2px solid #FFF;
	border-radius: 4px;
	margin-bottom: 5px;
}
@media (min-width: 1025px) {
	.lg-outer .lg-thumb-item {
		-webkit-transition: border-color 0.25s ease;
		-o-transition: border-color 0.25s ease;
		transition: border-color 0.25s ease;
	}
}
.lg-outer .lg-thumb-item.active, .lg-outer .lg-thumb-item:hover {
	border-color: #a90707;
}
.lg-outer .lg-thumb-item img {
	width: 100%;
	height: 100%;
	object-fit: cover;
}
.lg-outer.lg-has-thumb .lg-item {
	padding-bottom: 120px;
}
.lg-outer.lg-can-toggle .lg-item {
	padding-bottom: 0;
}
.lg-outer.lg-pull-caption-up .lg-sub-html {
	-webkit-transition: bottom 0.25s ease;
	-o-transition: bottom 0.25s ease;
	transition: bottom 0.25s ease;
}
.lg-outer.lg-pull-caption-up.lg-thumb-open .lg-sub-html {
	bottom: 100px;
}
.lg-outer .lg-toogle-thumb {
	background-color: #0D0A0A;
	border-radius: 2px 2px 0 0;
	color: #999;
	cursor: pointer;
	font-size: 24px;
	height: 39px;
	line-height: 27px;
	padding: 5px 0;
	position: absolute;
	right: 20px;
	text-align: center;
	top: -39px;
	width: 50px;
}
.lg-outer .lg-toogle-thumb:after {
	content: "\e1ff";
}
.lg-outer .lg-toogle-thumb:hover {
	color: #FFF;
}

.lg-outer .lg-video-cont {
	display: inline-block;
	vertical-align: middle;
	max-width: 1140px;
	max-height: 100%;
	width: 100%;
	padding: 0 5px;
}
.lg-outer .lg-video {
	width: 100%;
	height: 0;
	padding-bottom: 56.25%;
	overflow: hidden;
	position: relative;
}
.lg-outer .lg-video .lg-object {
	display: inline-block;
	position: absolute;
	top: 0;
	left: 0;
	width: 100% !important;
	height: 100% !important;
}
.lg-outer .lg-video .lg-video-play {
	width: 84px;
	height: 59px;
	position: absolute;
	left: 50%;
	top: 50%;
	margin-left: -42px;
	margin-top: -30px;
	z-index: 1080;
	cursor: pointer;
}
.lg-outer .lg-has-vimeo .lg-video-play {
	//background: url("../img/vimeo-play.png") no-repeat scroll 0 0 transparent;
}
.lg-outer .lg-has-vimeo:hover .lg-video-play {
	//background: url("../img/vimeo-play.png") no-repeat scroll 0 -58px transparent;
}
.lg-outer .lg-has-html5 .lg-video-play {
	//background: transparent url("../img/video-play.png") no-repeat scroll 0 0;
	height: 64px;
	margin-left: -32px;
	margin-top: -32px;
	width: 64px;
	opacity: 0.8;
}
.lg-outer .lg-has-html5:hover .lg-video-play {
	opacity: 1;
}
.lg-outer .lg-has-youtube .lg-video-play {
	//background: url("../img/youtube-play.png") no-repeat scroll 0 0 transparent;
}
.lg-outer .lg-has-youtube:hover .lg-video-play {
	//background: url("../img/youtube-play.png") no-repeat scroll 0 -60px transparent;
}
.lg-outer .lg-video-object {
	width: 100% !important;
	height: 100% !important;
	position: absolute;
	top: 0;
	left: 0;
}
.lg-outer .lg-has-video .lg-video-object {
	visibility: hidden;
}
.lg-outer .lg-has-video.lg-video-playing .lg-object, .lg-outer .lg-has-video.lg-video-playing .lg-video-play {
	display: none;
}
.lg-outer .lg-has-video.lg-video-playing .lg-video-object {
	visibility: visible;
}

.lg-progress-bar {
	background-color: #333;
	height: 5px;
	left: 0;
	position: absolute;
	top: 0;
	width: 100%;
	z-index: 1083;
	opacity: 0;
	-webkit-transition: opacity 0.08s ease 0s;
	-moz-transition: opacity 0.08s ease 0s;
	-o-transition: opacity 0.08s ease 0s;
	transition: opacity 0.08s ease 0s;
}
.lg-progress-bar .lg-progress {
	background-color: #a90707;
	height: 5px;
	width: 0;
}
.lg-progress-bar.lg-start .lg-progress {
	width: 100%;
}
.lg-show-autoplay .lg-progress-bar {
	opacity: 1;
}

.lg-autoplay-button:after {
	content: "\e01d";
}
.lg-show-autoplay .lg-autoplay-button:after {
	content: "\e01a";
}

.lg-outer.lg-css3.lg-zoom-dragging .lg-item.lg-complete.lg-zoomable .lg-img-wrap, .lg-outer.lg-css3.lg-zoom-dragging .lg-item.lg-complete.lg-zoomable .lg-image {
	-webkit-transition-duration: 0s;
	transition-duration: 0s;
}
.lg-outer.lg-use-transition-for-zoom .lg-item.lg-complete.lg-zoomable .lg-img-wrap {
	-webkit-transition: -webkit-transform 0.3s cubic-bezier(0, 0, 0.25, 1) 0s;
	-moz-transition: -moz-transform 0.3s cubic-bezier(0, 0, 0.25, 1) 0s;
	-o-transition: -o-transform 0.3s cubic-bezier(0, 0, 0.25, 1) 0s;
	transition: transform 0.3s cubic-bezier(0, 0, 0.25, 1) 0s;
}
.lg-outer.lg-use-left-for-zoom .lg-item.lg-complete.lg-zoomable .lg-img-wrap {
	-webkit-transition: left 0.3s cubic-bezier(0, 0, 0.25, 1) 0s, top 0.3s cubic-bezier(0, 0, 0.25, 1) 0s;
	-moz-transition: left 0.3s cubic-bezier(0, 0, 0.25, 1) 0s, top 0.3s cubic-bezier(0, 0, 0.25, 1) 0s;
	-o-transition: left 0.3s cubic-bezier(0, 0, 0.25, 1) 0s, top 0.3s cubic-bezier(0, 0, 0.25, 1) 0s;
	transition: left 0.3s cubic-bezier(0, 0, 0.25, 1) 0s, top 0.3s cubic-bezier(0, 0, 0.25, 1) 0s;
}
.lg-outer .lg-item.lg-complete.lg-zoomable .lg-img-wrap {
	-webkit-transform: translate3d(0, 0, 0);
	transform: translate3d(0, 0, 0);
	-webkit-backface-visibility: hidden;
	-moz-backface-visibility: hidden;
	backface-visibility: hidden;
}
.lg-outer .lg-item.lg-complete.lg-zoomable .lg-image {
	-webkit-transform: scale3d(1, 1, 1);
	transform: scale3d(1, 1, 1);
	-webkit-transition: -webkit-transform 0.3s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.15s !important;
	-moz-transition: -moz-transform 0.3s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.15s !important;
	-o-transition: -o-transform 0.3s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.15s !important;
	transition: transform 0.3s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.15s !important;
	-webkit-transform-origin: 0 0;
	-moz-transform-origin: 0 0;
	-ms-transform-origin: 0 0;
	transform-origin: 0 0;
	-webkit-backface-visibility: hidden;
	-moz-backface-visibility: hidden;
	backface-visibility: hidden;
}

#lg-zoom-in:after {
	content: "\e311";
}

#lg-actual-size {
	font-size: 20px;
}
#lg-actual-size:after {
	content: "\e033";
}

#lg-zoom-out {
	opacity: 0.5;
	pointer-events: none;
}
#lg-zoom-out:after {
	content: "\e312";
}
.lg-zoomed #lg-zoom-out {
	opacity: 1;
	pointer-events: auto;
}

.lg-outer .lg-pager-outer {
	bottom: 60px;
	left: 0;
	position: absolute;
	right: 0;
	text-align: center;
	z-index: 1080;
	height: 10px;
}
.lg-outer .lg-pager-outer.lg-pager-hover .lg-pager-cont {
	overflow: visible;
}
.lg-outer .lg-pager-cont {
	cursor: pointer;
	display: inline-block;
	overflow: hidden;
	position: relative;
	vertical-align: top;
	margin: 0 5px;
}
.lg-outer .lg-pager-cont:hover .lg-pager-thumb-cont {
	opacity: 1;
	-webkit-transform: translate3d(0, 0, 0);
	transform: translate3d(0, 0, 0);
}
.lg-outer .lg-pager-cont.lg-pager-active .lg-pager {
	box-shadow: 0 0 0 2px white inset;
}
.lg-outer .lg-pager-thumb-cont {
	background-color: #fff;
	color: #FFF;
	bottom: 100%;
	height: 83px;
	left: 0;
	margin-bottom: 20px;
	margin-left: -60px;
	opacity: 0;
	padding: 5px;
	position: absolute;
	width: 120px;
	border-radius: 3px;
	-webkit-transition: opacity 0.15s ease 0s, -webkit-transform 0.15s ease 0s;
	-moz-transition: opacity 0.15s ease 0s, -moz-transform 0.15s ease 0s;
	-o-transition: opacity 0.15s ease 0s, -o-transform 0.15s ease 0s;
	transition: opacity 0.15s ease 0s, transform 0.15s ease 0s;
	-webkit-transform: translate3d(0, 5px, 0);
	transform: translate3d(0, 5px, 0);
}
.lg-outer .lg-pager-thumb-cont img {
	width: 100%;
	height: 100%;
}
.lg-outer .lg-pager {
	background-color: rgba(255, 255, 255, 0.5);
	border-radius: 50%;
	box-shadow: 0 0 0 8px rgba(255, 255, 255, 0.7) inset;
	display: block;
	height: 12px;
	-webkit-transition: box-shadow 0.3s ease 0s;
	-o-transition: box-shadow 0.3s ease 0s;
	transition: box-shadow 0.3s ease 0s;
	width: 12px;
}
.lg-outer .lg-pager:hover, .lg-outer .lg-pager:focus {
	box-shadow: 0 0 0 8px white inset;
}
.lg-outer .lg-caret {
	border-left: 10px solid transparent;
	border-right: 10px solid transparent;
	border-top: 10px dashed;
	bottom: -10px;
	display: inline-block;
	height: 0;
	left: 50%;
	margin-left: -5px;
	position: absolute;
	vertical-align: middle;
	width: 0;
}

.lg-fullscreen:after {
	content: "\e20c";
}
.lg-fullscreen-on .lg-fullscreen:after {
	content: "\e20d";
}

.lg-outer #lg-dropdown-overlay {
	background-color: rgba(0, 0, 0, 0.25);
	bottom: 0;
	cursor: default;
	left: 0;
	position: fixed;
	right: 0;
	top: 0;
	z-index: 1081;
	opacity: 0;
	visibility: hidden;
	-webkit-transition: visibility 0s linear 0.18s, opacity 0.18s linear 0s;
	-o-transition: visibility 0s linear 0.18s, opacity 0.18s linear 0s;
	transition: visibility 0s linear 0.18s, opacity 0.18s linear 0s;
}
.lg-outer.lg-dropdown-active .lg-dropdown, .lg-outer.lg-dropdown-active #lg-dropdown-overlay {
	-webkit-transition-delay: 0s;
	transition-delay: 0s;
	-moz-transform: translate3d(0, 0px, 0);
	-o-transform: translate3d(0, 0px, 0);
	-ms-transform: translate3d(0, 0px, 0);
	-webkit-transform: translate3d(0, 0px, 0);
	transform: translate3d(0, 0px, 0);
	opacity: 1;
	visibility: visible;
}
.lg-outer.lg-dropdown-active #lg-share {
	color: #FFF;
}
.lg-outer .lg-dropdown {
	background-color: #fff;
	border-radius: 2px;
	font-size: 14px;
	list-style-type: none;
	margin: 0;
	padding: 10px 0;
	position: absolute;
	right: 0;
	text-align: left;
	top: 50px;
	opacity: 0;
	visibility: hidden;
	-moz-transform: translate3d(0, 5px, 0);
	-o-transform: translate3d(0, 5px, 0);
	-ms-transform: translate3d(0, 5px, 0);
	-webkit-transform: translate3d(0, 5px, 0);
	transform: translate3d(0, 5px, 0);
	-webkit-transition: -webkit-transform 0.18s linear 0s, visibility 0s linear 0.5s, opacity 0.18s linear 0s;
	-moz-transition: -moz-transform 0.18s linear 0s, visibility 0s linear 0.5s, opacity 0.18s linear 0s;
	-o-transition: -o-transform 0.18s linear 0s, visibility 0s linear 0.5s, opacity 0.18s linear 0s;
	transition: transform 0.18s linear 0s, visibility 0s linear 0.5s, opacity 0.18s linear 0s;
}
.lg-outer .lg-dropdown:after {
	content: "";
	display: block;
	height: 0;
	width: 0;
	position: absolute;
	border: 8px solid transparent;
	border-bottom-color: #FFF;
	right: 16px;
	top: -16px;
}
.lg-outer .lg-dropdown > li:last-child {
	margin-bottom: 0px;
}
.lg-outer .lg-dropdown > li:hover a, .lg-outer .lg-dropdown > li:hover .lg-icon {
	color: #333;
}
.lg-outer .lg-dropdown a {
	color: #333;
	display: block;
	white-space: pre;
	padding: 4px 12px;
	font-family: "Open Sans","Helvetica Neue",Helvetica,Arial,sans-serif;
	font-size: 12px;
}
.lg-outer .lg-dropdown a:hover {
	background-color: rgba(0, 0, 0, 0.07);
}
.lg-outer .lg-dropdown .lg-dropdown-text {
	display: inline-block;
	line-height: 1;
	margin-top: -3px;
	vertical-align: middle;
}
.lg-outer .lg-dropdown .lg-icon {
	color: #333;
	display: inline-block;
	float: none;
	font-size: 20px;
	height: auto;
	line-height: 1;
	margin-right: 8px;
	padding: 0;
	vertical-align: middle;
	width: auto;
}
.lg-outer #lg-share {
	position: relative;
}
.lg-outer #lg-share:after {
	content: "\e80d";
}
.lg-outer #lg-share-facebook .lg-icon {
	color: #3b5998;
}
.lg-outer #lg-share-facebook .lg-icon:after {
	content: "\e901";
}
.lg-outer #lg-share-twitter .lg-icon {
	color: #00aced;
}
.lg-outer #lg-share-twitter .lg-icon:after {
	content: "\e904";
}
.lg-outer #lg-share-googleplus .lg-icon {
	color: #dd4b39;
}
.lg-outer #lg-share-googleplus .lg-icon:after {
	content: "\e902";
}
.lg-outer #lg-share-pinterest .lg-icon {
	color: #cb2027;
}
.lg-outer #lg-share-pinterest .lg-icon:after {
	content: "\e903";
}

.lg-group:after {
	content: "";
	display: table;
	clear: both;
}

.lg-outer {
	width: 100%;
	height: 100%;
	position: fixed;
	top: 0;
	left: 0;
	z-index: 1050;
	text-align: left;
	opacity: 0;
	-webkit-transition: opacity 0.15s ease 0s;
	-o-transition: opacity 0.15s ease 0s;
	transition: opacity 0.15s ease 0s;
}
.lg-outer * {
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
}
.lg-outer.lg-visible {
	opacity: 1;
}
.lg-outer.lg-css3 .lg-item.lg-prev-slide, .lg-outer.lg-css3 .lg-item.lg-next-slide, .lg-outer.lg-css3 .lg-item.lg-current {
	-webkit-transition-duration: inherit !important;
	transition-duration: inherit !important;
	-webkit-transition-timing-function: inherit !important;
	transition-timing-function: inherit !important;
}
.lg-outer.lg-css3.lg-dragging .lg-item.lg-prev-slide, .lg-outer.lg-css3.lg-dragging .lg-item.lg-next-slide, .lg-outer.lg-css3.lg-dragging .lg-item.lg-current {
	-webkit-transition-duration: 0s !important;
	transition-duration: 0s !important;
	opacity: 1;
}
.lg-outer.lg-grab img.lg-object {
	cursor: -webkit-grab;
	cursor: -moz-grab;
	cursor: -o-grab;
	cursor: -ms-grab;
	cursor: grab;
}
.lg-outer.lg-grabbing img.lg-object {
	cursor: move;
	cursor: -webkit-grabbing;
	cursor: -moz-grabbing;
	cursor: -o-grabbing;
	cursor: -ms-grabbing;
	cursor: grabbing;
}
.lg-outer .lg {
	height: 100%;
	width: 100%;
	position: relative;
	overflow: hidden;
	margin-left: auto;
	margin-right: auto;
	max-width: 100%;
	max-height: 100%;
}
.lg-outer .lg-inner {
	width: 100%;
	height: 100%;
	position: absolute;
	left: 0;
	top: 0;
	white-space: nowrap;
}
.lg-outer .lg-item {
	//background: url("../img/loading.gif") no-repeat scroll center center transparent;
	display: none !important;
}
.lg-outer.lg-css3 .lg-prev-slide, .lg-outer.lg-css3 .lg-current, .lg-outer.lg-css3 .lg-next-slide {
	display: inline-block !important;
}
.lg-outer.lg-css .lg-current {
	display: inline-block !important;
}
.lg-outer .lg-item, .lg-outer .lg-img-wrap {
	display: inline-block;
	text-align: center;
	position: absolute;
	width: 100%;
	height: 100%;
}
.lg-outer .lg-item:before, .lg-outer .lg-img-wrap:before {
	content: "";
	display: inline-block;
	height: 50%;
	width: 1px;
	margin-right: -1px;
}
.lg-outer .lg-img-wrap {
	position: absolute;
	padding: 0 5px;
	left: 0;
	right: 0;
	top: 0;
	bottom: 0;
}
.lg-outer .lg-item.lg-complete {
	background-image: none;
}
.lg-outer .lg-item.lg-current {
	z-index: 1060;
}
.lg-outer .lg-image {
	display: inline-block;
	vertical-align: middle;
	max-width: 100%;
	max-height: 100%;
	width: auto !important;
	height: auto !important;
}
.lg-outer.lg-show-after-load .lg-item .lg-object, .lg-outer.lg-show-after-load .lg-item .lg-video-play {
	opacity: 0;
	-webkit-transition: opacity 0.15s ease 0s;
	-o-transition: opacity 0.15s ease 0s;
	transition: opacity 0.15s ease 0s;
}
.lg-outer.lg-show-after-load .lg-item.lg-complete .lg-object, .lg-outer.lg-show-after-load .lg-item.lg-complete .lg-video-play {
	opacity: 1;
}
.lg-outer .lg-empty-html {
	display: none;
}
.lg-outer.lg-hide-download #lg-download {
	display: none;
}

.lg-backdrop {
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	z-index: 1040;
	background-color: #000;
	opacity: 0;
	-webkit-transition: opacity 0.15s ease 0s;
	-o-transition: opacity 0.15s ease 0s;
	transition: opacity 0.15s ease 0s;
}
.lg-backdrop.in {
	opacity: 1;
}

.lg-css3.lg-no-trans .lg-prev-slide, .lg-css3.lg-no-trans .lg-next-slide, .lg-css3.lg-no-trans .lg-current {
	-webkit-transition: none 0s ease 0s !important;
	-moz-transition: none 0s ease 0s !important;
	-o-transition: none 0s ease 0s !important;
	transition: none 0s ease 0s !important;
}
.lg-css3.lg-use-css3 .lg-item {
	-webkit-backface-visibility: hidden;
	-moz-backface-visibility: hidden;
	backface-visibility: hidden;
}
.lg-css3.lg-use-left .lg-item {
	-webkit-backface-visibility: hidden;
	-moz-backface-visibility: hidden;
	backface-visibility: hidden;
}
.lg-css3.lg-fade .lg-item {
	opacity: 0;
}
.lg-css3.lg-fade .lg-item.lg-current {
	opacity: 1;
}
.lg-css3.lg-fade .lg-item.lg-prev-slide, .lg-css3.lg-fade .lg-item.lg-next-slide, .lg-css3.lg-fade .lg-item.lg-current {
	-webkit-transition: opacity 0.1s ease 0s;
	-moz-transition: opacity 0.1s ease 0s;
	-o-transition: opacity 0.1s ease 0s;
	transition: opacity 0.1s ease 0s;
}
.lg-css3.lg-slide.lg-use-css3 .lg-item {
	opacity: 0;
}
.lg-css3.lg-slide.lg-use-css3 .lg-item.lg-prev-slide {
	-webkit-transform: translate3d(-100%, 0, 0);
	transform: translate3d(-100%, 0, 0);
}
.lg-css3.lg-slide.lg-use-css3 .lg-item.lg-next-slide {
	-webkit-transform: translate3d(100%, 0, 0);
	transform: translate3d(100%, 0, 0);
}
.lg-css3.lg-slide.lg-use-css3 .lg-item.lg-current {
	-webkit-transform: translate3d(0, 0, 0);
	transform: translate3d(0, 0, 0);
	opacity: 1;
}
.lg-css3.lg-slide.lg-use-css3 .lg-item.lg-prev-slide, .lg-css3.lg-slide.lg-use-css3 .lg-item.lg-next-slide, .lg-css3.lg-slide.lg-use-css3 .lg-item.lg-current {
	-webkit-transition: -webkit-transform 1s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.1s ease 0s;
	-moz-transition: -moz-transform 1s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.1s ease 0s;
	-o-transition: -o-transform 1s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.1s ease 0s;
	transition: transform 1s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.1s ease 0s;
}
.lg-css3.lg-slide.lg-use-left .lg-item {
	opacity: 0;
	position: absolute;
	left: 0;
}
.lg-css3.lg-slide.lg-use-left .lg-item.lg-prev-slide {
	left: -100%;
}
.lg-css3.lg-slide.lg-use-left .lg-item.lg-next-slide {
	left: 100%;
}
.lg-css3.lg-slide.lg-use-left .lg-item.lg-current {
	left: 0;
	opacity: 1;
}
.lg-css3.lg-slide.lg-use-left .lg-item.lg-prev-slide, .lg-css3.lg-slide.lg-use-left .lg-item.lg-next-slide, .lg-css3.lg-slide.lg-use-left .lg-item.lg-current {
	-webkit-transition: left 1s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.1s ease 0s;
	-moz-transition: left 1s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.1s ease 0s;
	-o-transition: left 1s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.1s ease 0s;
	transition: left 1s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.1s ease 0s;
}]]></template>
  <template type="public" title="lightbox_macros" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:macro name="setup" arg-canViewAttachments="!">
	<xf:if is="$canViewAttachments">
		<xf:css src="lightbox.less" />
		<xf:js prod="xf/lightbox-compiled.js" dev="vendor/lightgallery/lightgallery-all.min.js, xf/lightbox.js" />
	</xf:if>
</xf:macro>

<xf:macro name="single_image" arg-canViewAttachments="!" arg-id="!" arg-src="!" arg-dataUrl="" arg-containerZoom="1"
	arg-alt=""
	arg-styleAttr=""
	arg-alignClass="">

	<xf:macro name="setup" arg-canViewAttachments="{$canViewAttachments}" />

	<div class="lbContainer lbContainer--inline {$alignClass}" title="{$alt|for_attr}"
		data-xf-init="lightbox"
		data-lb-single-image="1"
		data-lb-container-zoom="{$containerZoom}"
		data-lb-trigger=".js-lbImage-{$id}"
		data-lb-id="{$id}">
		<xf:if is="{$containerZoom}">
			<div class="lbContainer-zoomer js-lbImage-{$id}" data-src="{$src}" aria-label="{{ phrase('zoom')|for_attr }}"></div>
		</xf:if>
		<img src="{$src}" data-url="{$dataUrl}" class="bbImage" data-zoom-target="1" alt="{$alt|for_attr}" style="{$styleAttr}" />
	</div>
</xf:macro>]]></template>
  <template type="public" title="lightslider.less" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[// NOTE: there are custom XF overrides at the bottom

/*! lightslider - v1.1.6 - 2016-10-25
* https://github.com/sachinchoolur/lightslider
* Copyright (c) 2016 Sachin N; Licensed MIT */
/** /!!! core css Should not edit !!!/**/

.lSSlideOuter {
    overflow: hidden;
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none
}
.lightSlider:before, .lightSlider:after {
    content: " ";
    display: table;
}
.lightSlider {
    overflow: hidden;
    margin: 0;
}
.lSSlideWrapper {
    max-width: 100%;
    overflow: hidden;
    position: relative;
}
.lSSlideWrapper > .lightSlider:after {
    clear: both;
}
.lSSlideWrapper .lSSlide {
    -webkit-transform: translate(0px, 0px);
    -ms-transform: translate(0px, 0px);
    transform: translate(0px, 0px);
    -webkit-transition: all 1s;
    -webkit-transition-property: -webkit-transform,height;
    -moz-transition-property: -moz-transform,height;
    transition-property: transform,height;
    -webkit-transition-duration: inherit !important;
    transition-duration: inherit !important;
    -webkit-transition-timing-function: inherit !important;
    transition-timing-function: inherit !important;
}
.lSSlideWrapper .lSFade {
    position: relative;
}
.lSSlideWrapper .lSFade > * {
    position: absolute !important;
    top: 0;
    left: 0;
    z-index: 9;
    margin-right: 0;
    width: 100%;
}
.lSSlideWrapper.usingCss .lSFade > * {
    opacity: 0;
    -webkit-transition-delay: 0s;
    transition-delay: 0s;
    -webkit-transition-duration: inherit !important;
    transition-duration: inherit !important;
    -webkit-transition-property: opacity;
    transition-property: opacity;
    -webkit-transition-timing-function: inherit !important;
    transition-timing-function: inherit !important;
}
.lSSlideWrapper .lSFade > *.active {
    z-index: 10;
}
.lSSlideWrapper.usingCss .lSFade > *.active {
    opacity: 1;
}
/** /!!! End of core css Should not edit !!!/**/

/* Pager */
.lSSlideOuter .lSPager.lSpg {
    margin: 10px 0 0;
    padding: 0;
    text-align: center;
}
.lSSlideOuter .lSPager.lSpg > li {
    cursor: pointer;
    display: inline-block;
    padding: 0 5px;
}
.lSSlideOuter .lSPager.lSpg > li a {
    background-color: #222222;
    border-radius: 30px;
    display: inline-block;
    height: 8px;
    overflow: hidden;
    text-indent: -999em;
    width: 8px;
    position: relative;
    z-index: 99;
    -webkit-transition: all 0.5s linear 0s;
    transition: all 0.5s linear 0s;
}
.lSSlideOuter .lSPager.lSpg > li:hover a, .lSSlideOuter .lSPager.lSpg > li.active a {
    background-color: #428bca;
}
.lSSlideOuter .media {
    opacity: 0.8;
}
.lSSlideOuter .media.active {
    opacity: 1;
}
/* End of pager */

/** Gallery */
.lSSlideOuter .lSPager.lSGallery {
    list-style: none outside none;
    padding-left: 0;
    margin: 0;
    overflow: hidden;
    transform: translate3d(0px, 0px, 0px);
    -moz-transform: translate3d(0px, 0px, 0px);
    -ms-transform: translate3d(0px, 0px, 0px);
    -webkit-transform: translate3d(0px, 0px, 0px);
    -o-transform: translate3d(0px, 0px, 0px);
    -webkit-transition-property: -webkit-transform;
    -moz-transition-property: -moz-transform;
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}
.lSSlideOuter .lSPager.lSGallery li {
    overflow: hidden;
    -webkit-transition: border-radius 0.12s linear 0s 0.35s linear 0s;
    transition: border-radius 0.12s linear 0s 0.35s linear 0s;
}
.lSSlideOuter .lSPager.lSGallery li.active, .lSSlideOuter .lSPager.lSGallery li:hover {
    border-radius: 5px;
}
.lSSlideOuter .lSPager.lSGallery img {
    display: block;
    height: auto;
    max-width: 100%;
}
.lSSlideOuter .lSPager.lSGallery:before, .lSSlideOuter .lSPager.lSGallery:after {
    content: " ";
    display: table;
}
.lSSlideOuter .lSPager.lSGallery:after {
    clear: both;
}
/* End of Gallery*/

/* slider actions */
.lSAction > a {
    width: 32px;
    display: block;
    top: 50%;
    height: 32px;
    background-image: url('../img/controls.png');
    cursor: pointer;
    position: absolute;
    z-index: 99;
    margin-top: -16px;
    opacity: 0.5;
    -webkit-transition: opacity 0.35s linear 0s;
    transition: opacity 0.35s linear 0s;
}
.lSAction > a:hover {
    opacity: 1;
}
.lSAction > .lSPrev {
    background-position: 0 0;
    left: 10px;
}
.lSAction > .lSNext {
    background-position: -32px 0;
    right: 10px;
}
.lSAction > a.disabled {
    pointer-events: none;
}
.cS-hidden {
    height: 1px;
    opacity: 0;
    filter: alpha(opacity=0);
    overflow: hidden;
}


/* vertical */
.lSSlideOuter.vertical {
    position: relative;
}
.lSSlideOuter.vertical.noPager {
    padding-right: 0px !important;
}
.lSSlideOuter.vertical .lSGallery {
    position: absolute !important;
    right: 0;
    top: 0;
}
.lSSlideOuter.vertical .lightSlider > * {
    width: 100% !important;
    max-width: none !important;
}

/* vertical controlls */
.lSSlideOuter.vertical .lSAction > a {
    left: 50%;
    margin-left: -14px;
    margin-top: 0;
}
.lSSlideOuter.vertical .lSAction > .lSNext {
    background-position: 31px -31px;
    bottom: 10px;
    top: auto;
}
.lSSlideOuter.vertical .lSAction > .lSPrev {
    background-position: 0 -31px;
    bottom: auto;
    top: 10px;
}
/* vertical */


/* Rtl */
.lSSlideOuter.lSrtl {
    direction: rtl;
}
.lSSlideOuter .lightSlider, .lSSlideOuter .lSPager {
    padding-left: 0;
    list-style: none outside none;
}
.lSSlideOuter.lSrtl .lightSlider, .lSSlideOuter.lSrtl .lSPager {
    padding-right: 0;
}
.lSSlideOuter .lightSlider > *,  .lSSlideOuter .lSGallery li {
    float: left;
}
.lSSlideOuter.lSrtl .lightSlider > *,  .lSSlideOuter.lSrtl .lSGallery li {
    float: right !important;
}
/* Rtl */

@-webkit-keyframes rightEnd {
    0% {
        left: 0;
    }

    50% {
        left: -15px;
    }

    100% {
        left: 0;
    }
}
@keyframes rightEnd {
    0% {
        left: 0;
    }

    50% {
        left: -15px;
    }

    100% {
        left: 0;
    }
}
@-webkit-keyframes topEnd {
    0% {
        top: 0;
    }

    50% {
        top: -15px;
    }

    100% {
        top: 0;
    }
}
@keyframes topEnd {
    0% {
        top: 0;
    }

    50% {
        top: -15px;
    }

    100% {
        top: 0;
    }
}
@-webkit-keyframes leftEnd {
    0% {
        left: 0;
    }

    50% {
        left: 15px;
    }

    100% {
        left: 0;
    }
}
@keyframes leftEnd {
    0% {
        left: 0;
    }

    50% {
        left: 15px;
    }

    100% {
        left: 0;
    }
}
@-webkit-keyframes bottomEnd {
    0% {
        bottom: 0;
    }

    50% {
        bottom: -15px;
    }

    100% {
        bottom: 0;
    }
}
@keyframes bottomEnd {
    0% {
        bottom: 0;
    }

    50% {
        bottom: -15px;
    }

    100% {
        bottom: 0;
    }
}
.lSSlideOuter .rightEnd {
    -webkit-animation: rightEnd 0.3s;
    animation: rightEnd 0.3s;
    position: relative;
}
.lSSlideOuter .leftEnd {
    -webkit-animation: leftEnd 0.3s;
    animation: leftEnd 0.3s;
    position: relative;
}
.lSSlideOuter.vertical .rightEnd {
    -webkit-animation: topEnd 0.3s;
    animation: topEnd 0.3s;
    position: relative;
}
.lSSlideOuter.vertical .leftEnd {
    -webkit-animation: bottomEnd 0.3s;
    animation: bottomEnd 0.3s;
    position: relative;
}
.lSSlideOuter.lSrtl .rightEnd {
    -webkit-animation: leftEnd 0.3s;
    animation: leftEnd 0.3s;
    position: relative;
}
.lSSlideOuter.lSrtl .leftEnd {
    -webkit-animation: rightEnd 0.3s;
    animation: rightEnd 0.3s;
    position: relative;
}
/*/  GRab cursor */
.lightSlider.lsGrab > * {
  cursor: -webkit-grab;
  cursor: -moz-grab;
  cursor: -o-grab;
  cursor: -ms-grab;
  cursor: grab;
}
.lightSlider.lsGrabbing > * {
  cursor: move;
  cursor: -webkit-grabbing;
  cursor: -moz-grabbing;
  cursor: -o-grabbing;
  cursor: -ms-grabbing;
  cursor: grabbing;
}






// XENFORO EXTENSIONS AND OVERRIDES

.lSSlideOuter .lSPager.lSpg
{
    line-height: 1;
}

.lSSlideOuter .lSPager.lSpg > li
{
    height: 20px;
    line-height: 20px;
}

.lSSlideOuter .lSPager.lSpg > li a
{
    position: relative;
    top: -2px;
    background-color: @xf-textColor;
    opacity: .3;
}

.lSSlideOuter .lSPager.lSpg > li:hover a,
.lSSlideOuter .lSPager.lSpg > li.active a
{
    background-color: @xf-linkColor;
    opacity: 1;
}

@actionIconColor: white;
@actionBorderColor: black;
@actionBorderWidth: 0.75px;

.lSAction > a
{
    background-image: none;
    text-decoration: none;
    line-height: 32px;
    font-size: 2em;

    color: @actionIconColor;
    opacity: 0.6;

    &.lSNext
    {
        text-align: right;
    }

    &.lSPrev
    {
        text-align: left;
    }

    &:after
    {
        .m-faBase();
        .m-faContent(@fa-var-chevron-right, .63em);
        .m-textOutline();
    }
}

.lSAction > a.lSNext:after
{
 	.m-faContent(@fa-var-chevron-right, .63em, ltr);
    .m-faContent(@fa-var-chevron-left, .63em, rtl);
}
.lSAction > a.lSPrev:after
{
    .m-faContent(@fa-var-chevron-left, .63em, ltr);
	.m-faContent(@fa-var-chevron-right, .63em, rtl);
}]]></template>
  <template type="public" title="like_confirm" version_id="2000036" version_string="2.0.0 Beta 6"><![CDATA[<xf:title>{{ $isLiked ? phrase('unlike_content') : phrase('like_content') }}</xf:title>

<xf:form action="{$confirmUrl}" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				<xf:if is="$isLiked">
					{{ phrase('you_sure_you_want_to_unlike_this_content') }}
				<xf:else />
					{{ phrase('you_sure_you_want_to_like_this_content') }}
					<xf:if is="$contentTitle"><strong>{$contentTitle}</strong></xf:if>
				</xf:if>
			</xf:inforow>
		</div>
		<xf:submitrow icon="confirm" rowtype="simple" />
	</div>
</xf:form>]]></template>
  <template type="public" title="like_list" version_id="2000051" version_string="2.0.0 Release Candidate 1"><![CDATA[<xf:if is="$title">
	<xf:title>{$title}</xf:title>
<xf:else />
	<xf:title>{{ phrase('members_who_liked_this') }}</xf:title>
</xf:if>

<xf:head option="metaNoindex"><meta name="robots" content="noindex" /></xf:head>

<xf:if is="$breadcrumbs">
	<xf:breadcrumb source="$breadcrumbs" />
</xf:if>

<div class="block">
	<div class="block-container js-likeList-{$type}{$id}">
		<ol class="block-body">
			<xf:foreach loop="$likes" value="$like">
				<li class="block-row block-row--separated">
					<xf:macro template="member_list_macros" name="item"
						arg-user="{$like.Liker}"
						arg-extraData="{{ date_dynamic($like.like_date)|preescaped }}" />
				</li>
			</xf:foreach>
		</ol>
		<xf:if is="$hasNext">
			<div class="block-footer">
				<span class="block-footer-controls"><xf:button href="{{ link($linkRoute, $linkData, $linkParams + {'page': $page + 1}) }}"
					data-xf-click="inserter"
					data-replace=".js-likeList-{$type}{$id}"
					data-scroll-target="< .overlay">
					{{ phrase('continue...') }}
				</xf:button></span>
			</div>
		</xf:if>
	</div>
</div>]]></template>
  <template type="public" title="like_list_row" version_id="2000038" version_string="2.0.0 Beta 8"><![CDATA[<i class="likeIcon" title="{{ phrase('likes')|for_attr }}" aria-hidden="true"></i>
<span class="u-srOnly">{{ phrase('likes:') }}</span>
<a href="{$url}" data-xf-click="overlay">{$likes}</a>]]></template>
  <template type="public" title="login" version_id="2010052" version_string="2.1.0 Release Candidate 2"><![CDATA[<xf:js src="xf/login_signup.js" min="1" />

<xf:title>{{ phrase('log_in') }}</xf:title>

<xf:head option="robots"><meta name="robots" content="noindex" /></xf:head>

<xf:if contentcheck="true">
	<div class="blockMessage blockMessage--error blockMessage--iconic">
		<xf:contentcheck>{$error}</xf:contentcheck>
	</div>
</xf:if>

<div class="blocks">
	<xf:form action="{{ link('login/login') }}" class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:textboxrow name="login" value="{$login}" autofocus="autofocus" autocomplete="username"
					label="{{ phrase('your_name_or_email_address') }}" />

				<xf:passwordboxrow name="password" autocomplete="current-password"
					label="{{ phrase('password') }}">

					<xf:html>
						<a href="{{ link('lost-password') }}" data-xf-click="overlay">{{ phrase('forgot_your_password') }}</a>
					</xf:html>
				</xf:passwordboxrow>

				<xf:if is="$captcha">
					<xf:captcharow label="{{ phrase('verification') }}" force="true" />
				</xf:if>

				<xf:checkboxrow>
					<xf:option name="remember" selected="true">{{ phrase('stay_logged_in') }}</xf:option>
				</xf:checkboxrow>

				<xf:hiddenval name="_xfRedirect">{$redirect}</xf:hiddenval>
			</div>
			<xf:submitrow icon="login" />
		</div>
		<xf:if is="$xf.options.registrationSetup.enabled">
			<div class="block-outer block-outer--after">
				<div class="block-outer-middle">
					{{ phrase('dont_have_account_question') }} <xf:button href="{{ link('register') }}">{{ phrase('register_now') }}</xf:button>
				</div>
			</div>
		</xf:if>
	</xf:form>

	<xf:if is="$providers is not empty">
		<div class="blocks-textJoiner"><span></span><em>{{ phrase('or_separator') }}</em><span></span></div>

		<div class="block">
			<div class="block-container">
				<div class="block-body">
					<xf:formrow rowtype="button"
						label="{{ phrase('log_in_using') }}">

						<ul class="listHeap">
							<xf:foreach loop="$providers" value="$provider">
								<li>
									<xf:macro template="connected_account_macros" name="button"
										arg-provider="{$provider}" />
								</li>
							</xf:foreach>
						</ul>
					</xf:formrow>
				</div>
			</div>
		</div>
	</xf:if>
</div>]]></template>
  <template type="public" title="login_password_confirm" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('password_confirmation') }}</xf:title>

<xf:form action="{{ link('login/password-confirm') }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('to_access_this_page_you_must_first_confirm_your_password') }}
			</xf:inforow>

			<xf:formrow label="{{ phrase('user_name') }}">{$xf.visitor.username}</xf:formrow>

			<xf:passwordboxrow name="password" label="{{ phrase('password') }}" />
		</div>
		<xf:submitrow submit="{{ phrase('confirm') }}" />
	</div>
	<xf:redirect url="{{ $redirect ?: $xf.uri }}" />
</xf:form>]]></template>
  <template type="public" title="login_two_step" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('two_step_verification_required') }}</xf:title>

<xf:form action="{{ link('login/two-step') }}" class="block" ajax="true">

	<div class="block-container">
		<h2 class="block-tabHeader tabs hScroller" data-xf-init="h-scroller">
			<span class="hScroller-scroll">
			<xf:foreach loop="$providers" value="$tabProvider">
				<a href="{{ link('login/two-step', null, {'provider': $tabProvider.provider_id, 'remember': $remember ? 1 : null, '_xfRedirect': $redirect}) }}" class="tabs-tab {{ $tabProvider.provider_id == $providerId ? 'is-active' : '' }}">{$tabProvider.title}</a>
			</xf:foreach>
			</span>
		</h2>

		<div class="block-body">
			<xf:formrow label="{{ phrase('logging_in_as') }}">{$user.username}</xf:formrow>

			{{ $provider.render('login', $user, $providerData, $triggerData)|raw }}

			<xf:checkboxrow>
				<xf:option name="trust" value="1" checked="{$trustChecked}"
					label="{{ phrase('trust_this_device_for_30_days') }}"
					hint="{{ phrase('trust_device_desc') }}" />
			</xf:checkboxrow>
		</div>

		<xf:submitrow submit="{{ phrase('confirm') }}" icon="login" />
	</div>

	<xf:hiddenval name="confirm">1</xf:hiddenval>
	<xf:hiddenval name="provider">{$providerId}</xf:hiddenval>
	<xf:hiddenval name="remember">{{ $remember ? 1 : 0 }}</xf:hiddenval>

	<xf:redirect url="{$redirect}" />
</xf:form>]]></template>
  <template type="public" title="lost_password" version_id="2010052" version_string="2.1.0 Release Candidate 2"><![CDATA[<xf:title>{{ phrase('lost_password') }}</xf:title>

<xf:head option="robots"><meta name="robots" content="noindex" /></xf:head>

<xf:form action="{{ link('lost-password') }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow>{{ phrase('if_forgotten_your_password_use_form_to_reset') }}</xf:inforow>

			<xf:textboxrow name="email" type="email" autofocus="autofocus"
				maxlength="{{ max_length($xf.visitor, 'email') }}"
				label="{{ phrase('email') }}"
				explain="{{ phrase('email_address_you_registered_with_is_required_to_reset_your_password') }}" />

			<xf:if is="$xf.options.lostPasswordCaptcha">
				<xf:captcharow label="{{ phrase('verification') }}" />
			</xf:if>
		</div>
		<xf:submitrow submit="{{ phrase('reset') }}" />
	</div>
</xf:form>]]></template>
  <template type="public" title="lost_password_confirm" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('reset_password') }}</xf:title>

<xf:form action="{{ link('lost-password/confirm', $user, {'c': $c}) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:formrow label="{{ phrase('your_name') }}">{$user.username}</xf:formrow>

			<xf:passwordboxrow name="password" label="{{ phrase('new_password') }}" checkstrength="true" />

			<xf:passwordboxrow name="password_confirm" label="{{ phrase('confirm_new_password') }}" />
		</div>
		<xf:submitrow icon="save" />
	</div>
</xf:form>]]></template>
  <template type="public" title="member.less" version_id="2010036" version_string="2.1.0 Beta 6"><![CDATA[@_memberHeader-padding: @xf-paddingLarge;
@_memberHeader-avatarSize: @avatar-l;
@_memberHeader-avatarSizeShrunk: @avatar-m;

.memberHeader
{
	.m-clearFix();
}

.memberHeader-main
{
	.xf-memberHeader();
}

.memberHeader-avatar
{
	float: left;
	padding: @_memberHeader-padding;
}

.memberHeader-content
{
	padding: @_memberHeader-padding;
	padding-left: ((@_memberHeader-padding) * 2 + (@_memberHeader-avatarSize));
}

.memberHeader-actionTop
{
	float: right;
}

.memberHeader-name
{
	margin: 0;
	margin-top: -.15em;
	padding: 0;
	font-weight: @xf-fontWeightNormal;
	.xf-memberHeaderName();
}

.memberHeader-banners,
.memberHeader-blurb
{
	margin-top: @xf-paddingSmall;
}

.memberHeader-separator
{
	margin: @_memberHeader-padding 0;
	border: none;
	border-top: @xf-borderSize solid @xf-borderColorLight;
}

.memberHeader-stats
{
	font-size: @xf-fontSizeLarge;

	.pairs.pairs--row
	{
		min-width: 100px;
	}
}

@media (max-width: @xf-responsiveMedium)
{
	.memberHeader-avatar .avatar
	{
		.m-avatarSize(@_memberHeader-avatarSizeShrunk);
	}

	.memberHeader-content
	{
		padding-left: ((@_memberHeader-padding) * 2 + (@_memberHeader-avatarSizeShrunk));
	}
}

@media (max-width: @xf-responsiveNarrow)
{
	.memberHeader-avatar
	{
		display: block;
		float: none;
		padding-bottom: 0;
		text-align: center;
	}

	.memberHeader-avatar .avatarWrapper-update
	{
		font-size: @xf-fontSizeSmall;
	}

	.memberHeader-content
	{
		padding-left: @_memberHeader-padding;
	}

	.memberHeader-main .memberHeader-content
	{
		display: flex;
		flex-direction: column;
		padding-top: 0;
		min-height: 0;
		text-align: center;
	}

	.memberHeader-name
	{
		text-align: center;
		margin-top: 0;
	}

	.memberHeader-actionTop
	{
		float: none;
		order: 2;
		margin-top: @xf-paddingSmall;
	}

	.memberHeader-buttons
	{
		text-align: center;
	}

	.memberHeader-banners,
	.memberHeader-blurb
	{
		text-align: inherit;
	}
}

.block-tabHeader.block-tabHeader--memberTabs
{
	border-bottom: none;
}



.memberOverviewBlocks
{
	.m-listPlain();

	display: flex;
	flex-wrap: wrap;
	align-items: stretch;

	> li
	{
		width: 33.3%;
		max-width: 100%;
		padding: @xf-blockPaddingV @xf-blockPaddingH;

		@media (max-width: 1150px)
		{
			width: 50%;
		}

		@media (max-width: 580px)
		{
			width: 100%;
		}
	}
}

.memberOverviewBlock
{
	display: flex;
	flex-direction: column;
}
.memberOverviewBlock-list
{
	.m-listPlain();

	> li
	{
		margin: @xf-paddingMedium 0;
	}
}
.memberOverviewBlock-seeMore
{
	.xf-minorBlockContent();
	padding: @xf-paddingSmall;
	text-align: center;

	// pushes this to the bottom with flex box
	margin-top: auto;
}]]></template>
  <template type="public" title="member_about" version_id="2000770" version_string="2.0.7"><![CDATA[<xf:title>{$user.username}</xf:title>

<div class="block">
	<div class="block-container">
		<div class="block-body">
		<xf:if contentcheck="true">
		<xf:contentcheck>
			<xf:if is="$user.Profile.about">
				<div class="block-row block-row--separated">
					{{ bb_code($user.Profile.about, 'user:about', $user) }}
				</div>
			</xf:if>

			<xf:if contentcheck="true">
				<div class="block-row block-row--separated">
				<xf:contentcheck>
					<xf:if contentcheck="true">
						<dl class="pairs pairs--columns pairs--fixedSmall">
							<dt>{{ phrase('birthday') }}</dt>
							<dd>
								<xf:contentcheck>
									<xf:if is="$user.Profile.birthday.timeStamp">
										{{ date($user.Profile.birthday.timeStamp, $user.Profile.birthday.format) }}
										<xf:if is="$user.Profile.birthday.age">
											{{ parens(phrase('age:') . ' ' . {$user.Profile.birthday.age}) }}
										</xf:if>
									</xf:if>
								</xf:contentcheck>
							</dd>
						</dl>
					</xf:if>

					<xf:if is="$user.Profile.website">
						<dl class="pairs pairs--columns pairs--fixedSmall">
							<dt>{{ phrase('website') }}</dt>
							<dd>
								<a href="{$user.Profile.website}" rel="nofollow" target="_blank">{$user.Profile.website}</a>
							</dd>
						</dl>
					</xf:if>

					<xf:if is="$user.Profile.location">
						<dl class="pairs pairs--columns pairs--fixedSmall">
							<dt>{{ phrase('location') }}</dt>
							<dd>
								<xf:if is="$xf.options.geoLocationUrl">
									<a href="{{ link('misc/location-info', '', {'location': $user.Profile.location}) }}" rel="nofollow noreferrer" target="_blank" class="u-concealed">{$user.Profile.location}</a>
								<xf:else />
									{$user.Profile.location}
								</xf:if>
							</dd>
						</dl>
					</xf:if>

					<xf:macro template="custom_fields_macros" name="custom_fields_view"
						arg-type="users"
						arg-group="personal"
						arg-set="{$user.Profile.custom_fields}"
						arg-additionalFilters="{{ ['profile'] }}" />
				</xf:contentcheck>
				</div>
			</xf:if>

			<xf:if is="$user.canViewIdentities()">
				<xf:if contentcheck="true">
					<div class="block-row block-row--separated">
						<h4 class="block-textHeader">{{ phrase('contact') }}</h4>
						<xf:contentcheck>
							<xf:if is="$xf.visitor.canStartConversationWith($user)">
								<dl class="pairs pairs--columns pairs--fixedSmall">
									<dt>{{ phrase('conversation') }}</dt>
									<dd><a href="{{ link('conversations/add', '', {'to': $user.username}) }}">{{ phrase('start_conversation') }}</a></dd>
								</dl>
							</xf:if>

							<xf:macro template="custom_fields_macros" name="custom_fields_view"
								arg-type="users"
								arg-group="contact"
								arg-set="{$user.Profile.custom_fields}"
								arg-additionalFilters="{{ ['profile'] }}" />
						</xf:contentcheck>
					</div>
				</xf:if>
			</xf:if>

			<xf:if is="$user.Profile.signature">
				<div class="block-row block-row--separated">
					<h4 class="block-textHeader">{{ phrase('signature') }}</h4>
					{{ bb_code($user.Profile.signature, 'user:signature', $user) }}
				</div>
			</xf:if>

			<xf:if is="$followingCount">
				<div class="block-row block-row--separated">
					<h4 class="block-textHeader">{{ phrase('following') }}</h4>
					<ul class="listHeap">
						<xf:foreach loop="$following" value="$followingUser">
							<li>
								<xf:avatar user="$followingUser" size="s" />
							</li>
						</xf:foreach>
					</ul>
					<xf:if is="$followingCount > count($following)">
						<a href="{{ link('members/following', $user) }}" data-xf-click="overlay">{{ phrase('ellipsis_and_x_more', {'count': $followingCount - count($following)}) }}</a>
					</xf:if>
				</div>
			</xf:if>

			<xf:if is="$followersCount">
				<div class="block-row block-row--separated">
					<h4 class="block-textHeader">{{ phrase('followers') }}</h4>
					<ul class="listHeap">
						<xf:foreach loop="$followers" value="$followerUser">
							<li>
								<xf:avatar user="$followerUser" size="s" />
							</li>
						</xf:foreach>
					</ul>
					<xf:if is="$followersCount > count($followers)">
						<a href="{{ link('members/followers', $user) }}" data-xf-click="overlay">{{ phrase('ellipsis_and_x_more', {'count': $followersCount - count($followers)}) }}</a>
					</xf:if>
				</div>
			</xf:if>

			<xf:if is="$trophies is not empty AND $xf.options.enableTrophies">
				<div class="block-row block-row--separated">
					<h4 class="block-textHeader">{{ phrase('trophies') }}</h4>
					<ol class="listPlain">
						<xf:foreach loop="$trophies" value="$trophy">
							<li class="block-row">
								<div class="contentRow">
									<span class="contentRow-figure contentRow-figure--text contentRow-figure--fixedSmall">{$trophy.Trophy.trophy_points}</span>
									<div class="contentRow-main">
										<span class="contentRow-extra"><xf:date time="{$trophy.award_date}" /></span>
										<h2 class="contentRow-header">{$trophy.Trophy.title}</h2>
										<div class="contentRow-minor">{$trophy.Trophy.description|raw}</div>
									</div>
								</div>
							</li>
						</xf:foreach>
					</ol>
				</div>
			</xf:if>
		</xf:contentcheck>
		<xf:else />
			<div class="block-row block-row--separated">{{ phrase('x_has_not_provided_any_additional_information', {'name': $user.username}) }}</div>
		</xf:if>
		</div>
	</div>
</div>]]></template>
  <template type="public" title="member_ban_edit" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:if is="$user.is_banned">
	<xf:title>{{ phrase('edit_ban:') }} {$user.username}</xf:title>
<xf:else />
	<xf:title>{{ phrase('ban_member') }}</xf:title>
</xf:if>

<xf:form action="{{ link('members/ban/save', $user) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:if is="$user.is_banned">
				<xf:formrow label="{{ phrase('user_name') }}">{$user.username}</xf:formrow>

				<xf:formrow label="{{ phrase('banned_by') }}">{$userBan.BanUser.username}</xf:formrow>

				<xf:formrow label="{{ phrase('ban_started') }}">{{ date($userBan.ban_date) }}</xf:formrow>

				<xf:formrow label="{{ phrase('ban_ends') }}">
					<xf:if is="$userBan.end_date">
						{{ date($userBan.end_date) }}
					<xf:else />
						{{ phrase('never') }}
					</xf:if>
				</xf:formrow>
			</xf:if>

			<xf:radiorow name="ban_length" value="{{ !$userBan.end_date ? 'permanent' : 'temporary' }}"
				label="{{ phrase('ban_length') }}">

				<xf:option label="{{ phrase('permanent') }}" value="permanent" />
				<xf:option label="{{ phrase('until:') }}" value="temporary">
					<xf:dateinput name="end_date" value="{{ $userBan.end_date ? date($userBan.end_date, 'Y-m-d') : '' }}" />
				</xf:option>
			</xf:radiorow>

			<xf:textboxrow name="user_reason" value="{$userBan.user_reason}"
				maxlength="{{ max_length($userBan, 'user_reason') }}"
				label="{{ phrase('reason_for_banning') }}"
				explain="{{ phrase('this_will_be_shown_to_user_if_provided') }}" />
		</div>
		<xf:submitrow icon="save">
			<xf:html>
				<xf:if is="$user.is_banned">
					<xf:button href="{{ link('members/ban/lift', $userBan) }}" overlay="true">
						{{ phrase('lift_ban') }}
					</xf:button>
				</xf:if>
			</xf:html>
		</xf:submitrow>
	</div>
</xf:form>]]></template>
  <template type="public" title="member_ban_lift" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('confirm_lifting_of_ban:') }} {$user.username}</xf:title>

<xf:form action="{{ link('members/ban/lift', $user) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('please_confirm_that_you_want_to_lift_ban_on_following_user:') }}
				<strong><a href="{{ link('members/ban', $user) }}">{$user.username}</a></strong>
			</xf:inforow>

			<xf:formrow label="{{ phrase('banned_by') }}">{$userBan.BanUser.username}</xf:formrow>

			<xf:formrow label="{{ phrase('ban_started') }}">{{ date($userBan.ban_date) }}</xf:formrow>

			<xf:formrow label="{{ phrase('ban_ends') }}">
				<xf:if is="$userBan.end_date">
					{{ date($userBan.end_date) }}
				<xf:else />
					{{ phrase('never') }}
				</xf:if>
			</xf:formrow>

			<xf:if is="$userBan.user_reason">
				<xf:formrow label="{{ phrase('reason_for_ban') }}">{$userBan.user_reason}</xf:formrow>
			</xf:if>
		</div>
		<xf:submitrow submit="{{ phrase('lift_ban') }}" />
	</div>
</xf:form>]]></template>
  <template type="public" title="member_edit" version_id="2000052" version_string="2.0.0 Release Candidate 2"><![CDATA[<xf:title>{{ phrase('edit_member:') }} {$user.username}</xf:title>

<xf:breadcrumb href="{{ link('members', $user) }}">{$user.username}</xf:breadcrumb>

<xf:form action="{{ link('members/edit', $user) }}" class="block" ajax="true" data-redirect="off">
	<div class="block-container">
		<div class="block-body">
			<xf:if is="$user.getAvatarUrl('s')">
				<xf:formrow label="{{ phrase('avatar') }}">
					<xf:avatar user="{$user}" size="l" />
					<div><br /><xf:checkbox standalone="true">
						<xf:option name="delete_avatar" label="{{ phrase('delete_current_avatar') }}" />
					</xf:checkbox></div>
				</xf:formrow>
			</xf:if>

			<xf:textboxrow name="user[custom_title]" value="{$user.custom_title_}"
				maxlength="{{ max_length($user, 'custom_title') }}"
				label="{{ phrase('custom_title') }}" />

			<xf:textboxrow name="profile[location]" value="{$user.Profile.location_}"
				maxlength="{{ max_length($user.Profile, 'location') }}"
				label="{{ phrase('location') }}" />

			<xf:textboxrow name="profile[website]" value="{$user.Profile.website_}" type="url"
				maxlength="{{ max_length($user.Profile, 'website') }}"
				label="{{ phrase('website') }}" />

			<xf:textarearow name="profile[about]" value="{$user.Profile.about_}" autosize="true"
				maxlength="{{ max_length($user.Profile, 'about') }}"
				label="{{ phrase('about_you') }}" />

			<xf:textarearow name="profile[signature]" value="{$user.Profile.signature_}" autosize="true"
				maxlength="{{ max_length($user.Profile, 'signature') }}"
				label="{{ phrase('signature') }}" />

			<xf:macro template="custom_fields_macros" name="custom_fields_edit"
				arg-type="users"
				arg-set="{$user.Profile.custom_fields}"
				arg-editMode="moderator" />
		</div>
		<xf:submitrow icon="save" sticky="true" />
	</div>
</xf:form>]]></template>
  <template type="public" title="member_follow" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ $isFollowing ? phrase('stop_following_x', {'name': $user.username}) : phrase('follow_x', {'name': $user.username}) }}</xf:title>

<xf:breadcrumb href="{{ link('members', $user) }}">{$user.username}</xf:breadcrumb>

<xf:form action="{{ link('members/follow', $user) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				<xf:if is="$isFollowing">
					{{ phrase('please_confirm_that_you_wish_to_stop_following_this_user:') }}
				<xf:else />
					{{ phrase('please_confirm_that_you_wish_to_start_following_this_user:') }}
				</xf:if>
				<strong><a href="{{ link('members', $user) }}">{$user.username}</a></strong>
			</xf:inforow>
		</div>
		<xf:submitrow submit="{{ $isFollowing ? phrase('unfollow') : phrase('follow') }}" rowtype="simple" />
	</div>

	<xf:redirect />
</xf:form>]]></template>
  <template type="public" title="member_followers" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('members_following_x', {'name': $user.username}) }}</xf:title>

<xf:head option="metaNoindex"><meta name="robots" content="noindex" /></xf:head>

<xf:breadcrumb href="{{ link('members', $user) }}">{$user.username}</xf:breadcrumb>

<div class="block">
	<div class="block-container js-followerList{$user.user_id}">
		<ol class="block-body">
			<xf:foreach loop="$followers" value="$followerUser">
				<li class="block-row block-row--separated">
					<xf:macro template="member_list_macros" name="item" arg-user="{$followerUser}" />
				</li>
			</xf:foreach>
		</ol>
		<xf:if is="$hasMore">
			<div class="block-footer">
				<span class="block-footer-controls"><xf:button href="{{ link('members/followers', $user, {'page': $page + 1}) }}"
					data-xf-click="inserter"
					data-replace=".js-followerList{$user.user_id}"
					data-scroll-target="< .overlay">
					{{ phrase('more...') }}
				</xf:button></span>
			</div>
		</xf:if>
	</div>
</div>]]></template>
  <template type="public" title="member_following" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('members_x_is_following', {'name': $user.username}) }}</xf:title>

<xf:head option="metaNoindex"><meta name="robots" content="noindex" /></xf:head>

<xf:breadcrumb href="{{ link('members', $user) }}">{$user.username}</xf:breadcrumb>

<div class="block">
	<div class="block-container js-followingList{$user.user_id}">
		<ol class="block-body">
			<xf:foreach loop="$following" value="$followingUser">
				<li class="block-row block-row--separated">
					<xf:macro template="member_list_macros" name="item" arg-user="{$followingUser}" />
				</li>
			</xf:foreach>
		</ol>
		<xf:if is="$hasMore">
			<div class="block-footer">
				<span class="block-footer-controls"><xf:button href="{{ link('members/following', $user, {'page': $page + 1}) }}"
					data-xf-click="inserter"
					data-replace=".js-followingList{$user.user_id}"
					data-scroll-target="< .overlay">
					{{ phrase('more...') }}
				</xf:button></span>
			</div>
		</xf:if>
	</div>
</div>]]></template>
  <template type="public" title="member_ignore" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ $isIgnoring ? phrase('stop_ignoring_x', {'name': $user.username}) : phrase('ignore_x', {'name': $user.username}) }}</xf:title>

<xf:breadcrumb href="{{ link('members', $user) }}">{$user.username}</xf:breadcrumb>

<xf:form action="{{ link('members/ignore', $user) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				<xf:if is="$isIgnoring">
					{{ phrase('please_confirm_that_you_wish_to_stop_ignoring_this_user:') }}
				<xf:else />
					{{ phrase('please_confirm_that_you_wish_to_start_ignoring_this_user:') }}
				</xf:if>
				<strong><a href="{{ link('members', $user) }}">{$user.username}</a></strong>
			</xf:inforow>
		</div>
		<xf:submitrow submit="{{ $isIgnoring ? phrase('unignore') : phrase('ignore') }}" rowtype="simple" />
	</div>

	<xf:redirect />
</xf:form>]]></template>
  <template type="public" title="member_ip_list" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('ip_addresses_logged_for_x', {'name': $user.username}) }}</xf:title>

<div class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:datalist data-xf-init="responsive-data-list">
				<xf:datarow rowtype="header">
					<xf:cell>{{ phrase('ip') }}</xf:cell>
					<xf:cell>{{ phrase('total') }}</xf:cell>
					<xf:cell>{{ phrase('earliest') }}</xf:cell>
					<xf:cell>{{ phrase('latest') }}</xf:cell>
					<xf:cell>&nbsp;</xf:cell>
				</xf:datarow>
				<xf:foreach loop="$ips" value="$ip">
					<xf:datarow rowclass="dataList-row--noHover">
						<xf:cell href="{{ link('misc/ip-info', null, {'ip': $ip.ip|ip}) }}" target="_blank">{$ip.ip|ip}</xf:cell>
						<xf:cell>{$ip.total|number}</xf:cell>
						<xf:cell><xf:date time="{$ip.first_date}" /></xf:cell>
						<xf:cell><xf:date time="{$ip.last_date}" /></xf:cell>
						<xf:action href="{{ link('members/ip-users', null, {'ip': $ip.ip|ip}) }}" overlay="true">{{ phrase('more_users') }}</xf:action>
					</xf:datarow>
				</xf:foreach>
			</xf:datalist>
		</div>
	</div>
</div>]]></template>
  <template type="public" title="member_ip_users_list" version_id="2001070" version_string="2.0.10"><![CDATA[<xf:title>{{ phrase('users_logged_at_ip_x', {'ip': $ipPrintable}) }}</xf:title>

<div class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:datalist>
				<xf:foreach loop="$ips" value="$ip" key="$key">
					<xf:set var="$user" value="{$ip.user}" />
					<xf:datarow rowclass="dataList-row--noHover">
						<xf:cell class="dataList-cell--min dataList-cell--alt">
							<xf:avatar user="$user" size="s" href="{{ link('members', $user) }}" />
						</xf:cell>
						<xf:main href="{{ link('members', $user) }}">
							<xf:label><xf:username user="$user" rich="true" notooltip="true" href="" /></xf:label>
							<xf:hint><xf:usertitle user="$user" /></xf:hint>
							<xf:explain>
								<ul class="listInline listInline--bullet">
									<xf:if is="$ip.ip_total > 1">
										<li>{{ phrase('ip_x_and_y_more', {'ip': $ip.ips.0|ip, 'count': $ip.ip_total - 1}) }}</li>
									<xf:else />
										<li>{$ip.ips.0|ip}</li>
									</xf:if>
									<xf:if is="$ip.total > 1">
										<li>{{ phrase('x_times', {'total': $ip.total|number}) }}</li>
										<li><xf:date time="{$ip.first_date}" /> - <xf:date time="{$ip.last_date}" /></li>
									<xf:else />
										<li>{{ phrase('1_time') }}</li>
										<li><xf:date time="{$ip.first_date}" /></li>
									</xf:if>
								</ul>
							</xf:explain>
						</xf:main>
					</xf:datarow>
				</xf:foreach>
			</xf:datalist>
		</div>
	</div>
</div>]]></template>
  <template type="public" title="member_latest_activity" version_id="2000053" version_string="2.0.0 Release Candidate 3"><![CDATA[<xf:title>{{ phrase('xs_latest_activity', {'name': $user.username}) }}</xf:title>

<xf:head option="metaNoindex"><meta name="robots" content="noindex" /></xf:head>

<xf:if is="$restricted">
	<div class="blockMessage">
		{{ phrase('x_restricts_who_may_view_their_latest_activity', {'name': $user.username}) }}
	</div>
<xf:else />
	<div class="block">
		<div class="block-container">
			<xf:if is="$newsFeedItems is not empty">
				<ul class="block-body js-newsFeedTarget">
					<xf:foreach loop="$newsFeedItems" value="$item">
						<xf:macro template="news_feed_macros" name="feed_row" arg-item="{$item}" />
					</xf:foreach>
				</ul>
				<div class="block-footer js-newsFeedLoadMore">
					<span class="block-footer-controls"><xf:button href="{{ link('members/latest-activity', $user, {'before_id': $oldestItemId}) }}"
						data-xf-click="inserter"
						data-append=".js-newsFeedTarget"
						data-replace=".js-newsFeedLoadMore">
						{{ phrase('show_older_items') }}
					</xf:button></span>
				</div>
			<xf:elseif is="$beforeId" />
				<div class="block-body js-newsFeedTarget">
					<div class="block-row block-row--separated">{{ phrase('there_no_more_items_to_show') }}</div>
				</div>
			<xf:else />
				<div class="block-body js-newsFeedTarget">
					<div class="block-row">{{ phrase('news_feed_is_currently_empty') }}</div>
				</div>
			</xf:if>
		</div>
	</div>
</xf:if>]]></template>
  <template type="public" title="member_list" version_id="2000034" version_string="2.0.0 Beta 4"><![CDATA[<xf:title page="{$page}">{{ phrase('registered_members') }}</xf:title>

<xf:wrap template="member_wrapper">
	<xf:set var="$pageSelected" value="member_list" />
</xf:wrap>

<xf:macro template="metadata_macros" name="canonical_url" arg-canonicalUrl="{{ link('canonical:members/list', null, {'page': $page}) }}" />

<div class="block">
	<div class="block-container">
		<ol class="block-body">
			<xf:foreach loop="$users" key="$userId" value="$user">
				<li class="block-row block-row--separated">
					<xf:macro template="member_list_macros" name="item" arg-user="{$user}" />
				</li>
			</xf:foreach>
		</ol>
	</div>
	<xf:pagenav link="members/list" page="{$page}" perpage="{$perPage}" total="{$total}"
		wrapperclass="block-outer block-outer--after" />
</div>

<xf:widgetpos id="member_list_sidebar" position="sidebar" />]]></template>
  <template type="public" title="member_list_macros" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:macro name="item" arg-user="!" arg-extraData="" arg-extraDataBig="{{ false }}">
	<div class="contentRow">
		<div class="contentRow-figure">
			<xf:avatar user="$user" size="s" notooltip="true" />
		</div>
		<div class="contentRow-main">
			<xf:if is="$extraData">
				<div class="contentRow-extra {{ $extraDataBig ? 'contentRow-extra--largest' : '' }}">{$extraData}</div>
			</xf:if>
			<h3 class="contentRow-header"><xf:username user="$user" rich="true" notooltip="true" /></h3>

			<xf:userblurb user="$user" class="contentRow-lesser" />

			<div class="contentRow-minor">
				<ul class="listInline listInline--bullet">
					<!--[XF:stats:start]-->
					<li><dl class="pairs pairs--inline">
						<dt>{{ phrase('messages') }}</dt>
						<dd>{$user.message_count|number}</dd>
					</dl></li>
					<!--[XF:stats:after_messages]-->
					<li><dl class="pairs pairs--inline">
						<dt>{{ phrase('reaction_score') }}</dt>
						<dd>{$user.reaction_score|number}</dd>
					</dl></li>
					<!--[XF:stats:after_likes]-->
					<!--[XF:stats:after_reactions]-->
					<xf:if is="$xf.options.enableTrophies">
						<li><dl class="pairs pairs--inline">
							<dt>{{ phrase('points') }}</dt>
							<dd>{$user.trophy_points|number}</dd>
						</dl></li>
					</xf:if>
					<!--[XF:stats:end]-->
				</ul>
			</div>
		</div>
	</div>
</xf:macro>]]></template>
  <template type="public" title="member_macros" version_id="2010132" version_string="2.1.1 Beta 2"><![CDATA[<xf:macro name="moderator_menu_actions" arg-user="!" arg-context="!">
	<!--[XF:moderator_menu:top]-->
	<xf:if is="$xf.visitor.canCleanSpam() && $user.isPossibleSpammer()">
		<a href="{{ link('spam-cleaner', $user, {'no_redirect': 1}) }}" class="menu-linkRow" data-xf-click="overlay">{{ phrase('spam') }}</a>
	</xf:if>
	<xf:if is="$user.canWarn()">
		<a href="{{ link('members/warn', $user) }}" class="menu-linkRow">{{ phrase('warn') }}</a>
	</xf:if>
	<xf:if is="$xf.visitor.canViewWarnings() && $user.warning_count AND $context == 'tooltip'">
		<a href="{{ link('members', $user) }}#warnings" class="menu-linkRow">{{ phrase('view_warnings_x', {'count': $user.warning_count|number}) }}</a>
	</xf:if>
	<xf:if is="$xf.visitor.canViewIps()">
		<a href="{{ link('members/user-ips', $user) }}" class="menu-linkRow" data-xf-click="overlay">{{ phrase('ip_addresses') }}</a>
		<a href="{{ link('members/shared-ips', $user) }}" class="menu-linkRow" data-xf-click="overlay">{{ phrase('shared_ips') }}</a>
	</xf:if>
	<xf:if is="$user.canBan()">
		<a href="{{ link('members/ban', $user) }}" class="menu-linkRow" data-xf-click="overlay">
			<xf:if is="$user.is_banned">
				{{ phrase('edit_ban') }}
			<xf:else />
				{{ phrase('ban_member') }}
			</xf:if>
		</a>
	</xf:if>
	<xf:if is="$user.canEdit()">
		<a href="{{ link('members/edit', $user) }}" class="menu-linkRow">{{ phrase('edit') }}</a>
	</xf:if>
	<!--[XF:moderator_menu:bottom]-->
</xf:macro>

<xf:macro name="member_stat_pairs" arg-user="!" arg-context="!">
	<!--[XF:stat_pairs:above_joined]-->
	<!--[XF:stat_pairs:above_messages]-->
	<dl class="pairs pairs--rows pairs--rows--centered fauxBlockLink">
		<dt>{{ phrase('messages') }}</dt>
		<dd>
			<a href="{{ link('search/member', null, {'user_id': $user.user_id}) }}" class="fauxBlockLink-linkRow u-concealed">
				{$user.message_count|number}
			</a>
		</dd>
	</dl>
	<!--[XF:stat_pairs:above_likes]-->
	<!--[XF:stat_pairs:above_reactions]-->
	<dl class="pairs pairs--rows pairs--rows--centered">
		<dt title="{{ phrase('reaction_score')|for_attr }}">{{ phrase('reaction_score') }}</dt>
		<dd>
			{$user.reaction_score|number}
		</dd>
	</dl>
	<!--[XF:stat_pairs:above_trophies]-->
	<xf:if is="$xf.options.enableTrophies">
		<dl class="pairs pairs--rows pairs--rows--centered fauxBlockLink">
			<dt title="{{ phrase('trophy_points')|for_attr }}">{{ phrase('points') }}</dt>
			<dd>
				<a href="{{ link('members/trophies', $user) }}" data-xf-click="overlay" class="fauxBlockLink-linkRow u-concealed">
					{$user.trophy_points|number}
				</a>
			</dd>
		</dl>
	</xf:if>
	<!--[XF:stat_pairs:below_trophies]-->
	<xf:if is="$xf.visitor.canViewWarnings() && $user.warning_points">
		<dl class="pairs pairs--rows pairs--rows--centered fauxBlockLink">
			<dt>{{ phrase('warnings') }}</dt>
			<dd>
				<a href="{{ $context == 'tooltip' ? link('members', $user) . '#warnings' : link('members/warnings', $user) }}" data-xf-click="{{ $context == 'tooltip' ? '' : 'overlay' }}" class="fauxBlockLink-linkRow u-concealed">
					{$user.warning_points|number} / {$user.warning_count|number}
				</a>
			</dd>
		</dl>
	</xf:if>
</xf:macro>

<xf:macro name="member_action_buttons" arg-user="!" arg-context="!">
	<!--[XF:action_groups:outer_start]-->
	<xf:if contentcheck="true">
		<!--[XF:action_groups:start]-->
		<div class="buttonGroup">
		<xf:contentcheck>
			<!--[XF:action_group_1:start]-->
			<xf:if is="$xf.visitor.canFollowUser($user)">
				<xf:button href="{{ link('members/follow', $user) }}"
					class="button--link"
					data-xf-click="switch"
					data-sk-follow="{{ phrase('follow') }}"
					data-sk-unfollow="{{ phrase('unfollow') }}">
					{{ $xf.visitor.isFollowing($user) ? phrase('unfollow') : phrase('follow') }}
				</xf:button>
			</xf:if>
			<xf:if is="$xf.visitor.canIgnoreUser($user)">
				<a href="{{ link('members/ignore', $user) }}"
					class="button button--link"
					data-xf-click="switch"
					data-sk-ignore="{{ phrase('ignore') }}"
					data-sk-unignore="{{ phrase('unignore') }}">
					{{ $xf.visitor.isIgnoring($user) ? phrase('unignore') : phrase('ignore') }}
				</a>
			</xf:if>
			<!--[XF:action_group_1:end]-->
		</xf:contentcheck>
		</div>
	</xf:if>

	<!--[XF:action_groups:middle]-->

	<xf:if contentcheck="true">
		<div class="buttonGroup">
		<xf:contentcheck>
			<!--[XF:action_group_2:start]-->
			<xf:if is="$xf.visitor.canStartConversationWith($user)">
				<xf:button href="{{ link('conversations/add', null, {'to': $user.username}) }}" class="button--link">
					{{ phrase('start_conversation') }}
				</xf:button>
			</xf:if>
			<xf:if is="$xf.visitor.canSearch() AND $context != 'tooltip'">
				<div class="buttonGroup-buttonWrapper">
					<xf:button class="button--link menuTrigger" data-xf-click="menu" aria-expanded="false" aria-haspopup="true">{{ phrase('find') }}</xf:button>
					<div class="menu" data-menu="menu" aria-hidden="true">
						<div class="menu-content">
							<h4 class="menu-header">{{ phrase('find_content') }}</h4>
							<!--[XF:find_menu:top]-->
							<a href="{{ link('search/member', null, {'user_id': $user.user_id}) }}" rel="nofollow" class="menu-linkRow">{{ phrase('find_all_content_by_x', {'name': $user.username}) }}</a>
							<a href="{{ link('search/member', null, {'user_id': $user.user_id, 'content': 'thread'}) }}" rel="nofollow" class="menu-linkRow">{{ phrase('find_all_threads_by_x', {'name': $user.username}) }}</a>
							<!--[XF:find_menu:bottom]-->
						</div>
					</div>
				</div>
			</xf:if>
			<!--[XF:action_group_2:end]-->
		</xf:contentcheck>
		</div>
		<!--[XF:action_groups:end]-->
	</xf:if>
	<!--[XF:action_groups:outer_end]-->
</xf:macro>]]></template>
  <template type="public" title="member_notable" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ $active ? $active.title : phrase('notable_members') }}</xf:title>

<xf:wrap template="member_wrapper">
	<xf:set var="$pageSelected" value="{{ $active ? $active.member_stat_key : 'overview' }}" />
</xf:wrap>

<xf:macro template="metadata_macros" name="canonical_url" arg-canonicalUrl="{{ link('canonical:members') }}" />

<xf:css src="member.less" />

<xf:if is="$userNotFound">
	<div class="blockMessage blockMessage--error blockMessage--iconic">{{ phrase('specified_member_cannot_be_found_enter_entire_name') }}</div>
</xf:if>

<xf:if is="$memberStats is empty">
	<div class="blockMessage">{{ phrase('no_notable_members_can_currently_be_shown') }}</div>
<xf:else />
	<section class="block">
		<div class="block-container">
			<xf:if is="$active">
				<ol class="block-body">
					<xf:foreach loop="{$resultsData.{$active.member_stat_key}}" key="$userId" value="$data">
						<li class="block-row block-row--separated">
							<xf:macro template="member_list_macros" name="item"
								arg-user="{$data.user}"
								arg-extraData="{$data.value}"
								arg-extraDataBig="{{ true }}" />
						</li>
					<xf:else />
						<li class="block-row">{{ phrase('no_users_match_specified_criteria') }}</li>
					</xf:foreach>
				</ol>
			<xf:else />
				<div class="block-body">
					<ol class="memberOverviewBlocks">
						<xf:foreach loop="$memberStats" key="$key" value="$memberStat">
							<xf:macro name="overview_block"
								arg-memberStat="{$memberStat}"
								arg-results="{$resultsData.{$key}}" />
						</xf:foreach>
					</ol>
				</div>
			</xf:if>
		</div>
	</section>
</xf:if>

<xf:macro name="overview_block"
	arg-memberStat="!"
	arg-results="!"
	arg-showTitle="{{ true }}"
	arg-showFooter="{{ true }}">

	<xf:if contentcheck="true">
		<li class="memberOverviewBlock">
			<xf:if is="$showTitle">
				<h3 class="block-textHeader">
					<a href="{{ link('members', null, {'key': $memberStat.member_stat_key}) }}"
						class="memberOverViewBlock-title">{$memberStat.title}</a>
				</h3>
			</xf:if>
			<ol class="memberOverviewBlock-list">
				<xf:contentcheck>
					<xf:foreach loop="$results" key="$userId" value="$data">
						<li>
							<xf:macro name="overview_row" arg-data="{$data}" />
						</li>
					</xf:foreach>
				</xf:contentcheck>
			</ol>
			<xf:if is="$showFooter">
				<div class="memberOverviewBlock-seeMore">
					<a href="{{ link('members', null, {'key': $memberStat.member_stat_key}) }}">{{ phrase('see_more...') }}</a>
				</div>
			</xf:if>
		</li>
	</xf:if>
</xf:macro>

<xf:macro name="overview_row" arg-data="!">
	<div class="contentRow contentRow--alignMiddle">
		<div class="contentRow-figure">
			<xf:avatar user="$data.user" size="xs" />
		</div>
		<div class="contentRow-main">
			<xf:if is="$data.value">
				<div class="contentRow-extra contentRow-extra--large">{$data.value}</div>
			</xf:if>
			<h3 class="contentRow-title"><xf:username user="$data.user" rich="true" /></h3>
		</div>
	</div>
</xf:macro>]]></template>
  <template type="public" title="member_post_new_profile_posts" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:if is="$firstUnshownProfilePost">
	<div class="message message--simple">
		<div class="message-inner">
			<div class="message-cell message-cell--alert">
				{{ phrase('there_more_posts_to_display') }} <a href="{{ link('profile-posts', $firstUnshownProfilePost) }}">{{ phrase('view_them') }}</a>
			</div>
		</div>
	</div>
</xf:if>

<xf:foreach loop="$profilePosts" value="$profilePost">
	<xf:if is="$style == 'simple'">
		<div class="block-row">
			<xf:macro template="profile_post_macros" name="profile_post_simple"
				arg-profilePost="{$profilePost}" />
		</div>
	<xf:else />
		<xf:macro template="profile_post_macros" name="profile_post"
			arg-profilePost="{$profilePost}" />
	</xf:if>
</xf:foreach>
]]></template>
  <template type="public" title="member_recent_content" version_id="2000053" version_string="2.0.0 Release Candidate 3"><![CDATA[<xf:title>{{ phrase('recent_content_by_x', {'name': $user.username}) }}</xf:title>

<xf:head option="metaNoindex"><meta name="robots" content="noindex" /></xf:head>

<xf:breadcrumb href="{{ link('members', $user) }}">{$user.username}</xf:breadcrumb>

<xf:css src="search_results.less" />

<xf:if is="$resultCount">
	<div class="block">
		<div class="block-container">
			<ol class="block-body">
				<xf:foreach loop="$results" value="$result">
					{{ $result.render()|raw }}
				</xf:foreach>
			</ol>
			<div class="block-footer">
				<span class="block-footer-controls"><xf:button href="{{ link('search/member', null, {'user_id': $user.user_id}) }}" rel="nofollow">
					{{ phrase('see_more') }}
				</xf:button></span>
			</div>
		</div>
	</div>
<xf:else />
	<div class="blockMessage">{{ phrase('x_has_not_posted_any_content_recently', {'name': $user.username}) }}</div>
</xf:if>]]></template>
  <template type="public" title="member_shared_ips_list" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('shared_ips_for_x', {'name': $user.username}) }}</xf:title>

<xf:breadcrumb href="{{ link('full:members', $user) }}">{$user.username}</xf:breadcrumb>

<xf:macro name="shared_block" arg-user="{$user}" arg-shared="{$shared}" />

<xf:macro name="shared_block" arg-user="!" arg-shared="!">
	<div class="block">
		<div class="block-container">
			<xf:if is="$shared">
				<ol class="block-body">
					<xf:foreach loop="$shared" value="$share">
						<li class="block-row block-row--separated">
							<div class="contentRow">
								<div class="contentRow-figure">
									<xf:avatar user="$share.user" size="s" notooltip="true" />
								</div>
								<div class="contentRow-main">
									<xf:if is="$share.user.isPossibleSpammer()">
										<span class="contentRow-extra">
											<xf:button href="{{ link('spam-cleaner', $share.user) }}"
												class="button--link" overlay="true">
												{{ phrase('spam') }}
											</xf:button>
										</span>
									</xf:if>

									<h3 class="contentRow-header"><xf:username user="$share.user" rich="true" notooltip="true" /></h3>

									<xf:userblurb user="$share.user" class="contentRow-lesser" />

									<div class="contentRow-minor">
										<ul class="listInline listInline--bullet">
											<li><dl class="pairs pairs--inline">
												<dt>{{ phrase('joined') }}</dt>
												<dd><xf:date time="{$share.user.register_date}" /></dd>
											</dl></li>
											<li><dl class="pairs pairs--inline">
												<dt>{{ phrase('messages') }}</dt>
												<dd>{$share.user.message_count|number}</dd>
											</dl></li>
											<li><dl class="pairs pairs--inline">
												<dt>{{ phrase('reaction_score') }}</dt>
												<dd>{$share.user.reaction_score|number}</dd>
											</dl></li>
										</ul>
									</div>

									<div class="contentRow-lesser">
										<ol>
											<xf:foreach loop="{$share.ips}" value="$ip">
												<li>
													<ul class="listInline listInline--bullet">
														<li><a href="{{ link('misc/ip-info', '', {'ip': $ip.ip|ip}) }}" target="_blank">{$ip.ip|ip}</a></li>
														<xf:if is="$ip.total > 1">
															<li>{{ phrase('x_times', {'total': $ip.total|number}) }}</li>
															<li><xf:date time="{$ip.first_date}" /> - <xf:date time="{$ip.last_date}" /></li>
														<xf:else />
															<li>{{ phrase('1_time') }}</li>
															<li><xf:date time="{$ip.first_date}" /></li>
														</xf:if>
													</ul>
												</li>
											</xf:foreach>
										</ol>
									</div>
								</div>
							</div>
						</li>
					</xf:foreach>
				</ol>
				<div class="block-footer">
					<span class="block-footer-counter">{{ phrase('matched_x_users', {'count': count($shared)}) }}</span>
				</div>
			<xf:else />
				<div class="block-body block-row">{{ phrase('no_matching_users_were_found') }}</div>
			</xf:if>
		</div>
	</div>
</xf:macro>]]></template>
  <template type="public" title="member_tooltip" version_id="2010132" version_string="2.1.1 Beta 2"><![CDATA[<xf:css src="member_tooltip.less" />

<div class="tooltip-content-inner">
	<div class="memberTooltip">
		<div class="memberTooltip-header">
			<span class="memberTooltip-avatar">
				<xf:avatar user="{$user}" size="m" notooltip="true" />
			</span>
			<div class="memberTooltip-headerInfo">
				<xf:if contentcheck="true">
					<div class="memberTooltip-headerAction">
						<xf:contentcheck>
						<!--[XF:header_action_start]-->
						<xf:if contentcheck="true">
							<xf:button class="button--link button--small menuTrigger"
								data-xf-click="menu"
								aria-label="{{ phrase('more_options') }}"
								aria-expanded="false"
								aria-haspopup="true">
								<xf:fa icon="fa-cog" />
							</xf:button>

							<div class="menu" data-menu="menu" aria-hidden="true">
								<div class="menu-content">
									<h3 class="menu-header">{{ phrase('moderator_tools') }}</h3>
									<xf:contentcheck>
										<xf:macro template="member_macros" name="moderator_menu_actions"
											arg-user="{$user}"
											arg-context="tooltip" />
									</xf:contentcheck>
								</div>
							</div>
						</xf:if>
						<!--[XF:header_action_end]-->
						</xf:contentcheck>
					</div>
				</xf:if>

				<h4 class="memberTooltip-name"><xf:username user="$user" rich="true" notooltip="true" /></h4>

				<xf:if contentcheck="true">
					<div class="memberTooltip-banners">
						<xf:contentcheck><xf:userbanners user="$user" /></xf:contentcheck>
					</div>
				</xf:if>

				<xf:if contentcheck="true">
					<div class="memberTooltip-blurb">
					<xf:contentcheck>
						<xf:userblurb user="$user" tag="div" />
					</xf:contentcheck>
					</div>
				</xf:if>

				<div class="memberTooltip-blurb">
					<dl class="pairs pairs--inline">
						<dt>{{ phrase('joined') }}</dt>
						<dd><xf:date time="$user.register_date" /></dd>
					</dl>
				</div>

				<xf:if contentcheck="true">
					<div class="memberTooltip-blurb">
						<dl class="pairs pairs--inline">
							<dt>{{ phrase('last_seen') }}</dt>
							<dd dir="auto">
								<xf:contentcheck><xf:useractivity user="$user" class="pairs--plainLabel" /></xf:contentcheck>
							</dd>
						</dl>
					</div>
				</xf:if>
			</div>
		</div>
		<div class="memberTooltip-info">
			<div class="memberTooltip-stats">
				<div class="pairJustifier">
					<xf:macro template="member_macros" name="member_stat_pairs"
						arg-user="{$user}"
						arg-context="tooltip" />
				</div>
			</div>
		</div>

		<xf:if contentcheck="true">
			<hr class="memberTooltip-separator" />

			<div class="memberTooltip-actions">
			<xf:contentcheck>
				<xf:macro template="member_macros" name="member_action_buttons"
					arg-user="{$user}"
					arg-context="tooltip" />
			</xf:contentcheck>
			</div>
		</xf:if>
	</div>
</div>]]></template>
  <template type="public" title="member_tooltip.less" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[@_memberTooltip-padding: @xf-paddingMedium;
@_memberTooltip-avatarSize: @avatar-m;

.memberTooltip-header
{
	display: table;
	table-layout: fixed;
	width: 100%;
	padding: @_memberTooltip-padding;
	.xf-memberTooltipHeader();
}

.memberTooltip-avatar
{
	display: table-cell;
	width: ((@_memberTooltip-padding) * 2 + (@_memberTooltip-avatarSize));
	vertical-align: top;
}

.memberTooltip-headerInfo
{
	display: table-cell;
	vertical-align: top;
}

.memberTooltip-name
{
	margin: 0;
	margin-top: -.15em;
	padding: 0;
	font-weight: @xf-fontWeightNormal;
	line-height: .8 * (@xf-lineHeightDefault);
	.xf-memberTooltipName();

	.m-hiddenLinks();
}

.memberTooltip-headerAction
{
	float: right;
}

.memberTooltip-banners,
.memberTooltip-blurb
{
	margin-top: .25em;
}

.memberTooltip-blurb
{
	font-size: @xf-fontSizeSmall;
}

.memberTooltip-stats
{
	font-size: @xf-fontSizeSmall;

	dl.pairs.pairs--rows > dt
	{
		font-size: @xf-fontSizeSmaller;
	}
}

.memberTooltip-info,
.memberTooltip-actions
{
	padding: @_memberTooltip-padding;
}

.memberTooltip-separator
{
	margin: -@xf-borderSize @_memberTooltip-padding 0;
	border: none;
	border-top: @xf-borderSize solid @xf-borderColorLight;
}

@media (max-width: @xf-responsiveNarrow)
{
	.memberTooltip-avatar
	{
		width: ((@_memberTooltip-padding) * 2 + (@_memberTooltip-avatarSize * 2 / 3));

		.avatar
		{
			.m-avatarSize(@_memberTooltip-avatarSize * 2 / 3);
		}
	}
}]]></template>
  <template type="public" title="member_trophies" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('trophies_awarded_to_x', {'name': $user.username}) }}</xf:title>

<xf:head option="noindex"><meta name="robots" content="noindex" /></xf:head>

<xf:breadcrumb href="{{ link('members', $user) }}">{$user.username}</xf:breadcrumb>

<div class="block">
	<div class="block-container">
		<xf:if is="$trophies is not empty">
			<ol class="block-body">
				<xf:foreach loop="$trophies" value="$trophy">
					<li class="block-row block-row--separated">
						<div class="contentRow">
							<span class="contentRow-figure contentRow-figure--text contentRow-figure--fixedSmall">{$trophy.Trophy.trophy_points}</span>
							<div class="contentRow-main">
								<span class="contentRow-extra"><xf:date time="{$trophy.award_date}" /></span>
								<h2 class="contentRow-header">{$trophy.Trophy.title}</h2>
								<div class="contentRow-minor">{$trophy.Trophy.description|raw}</div>
							</div>
						</div>
					</li>
				</xf:foreach>
			</ol>
		<xf:else />
			<div class="block-body block-row">{{ phrase('x_has_not_been_awarded_any_trophies_yet', {'name': $user.username}) }}</div>
		</xf:if>
		<div class="block-footer block-footer--split">
			<span class="block-footer-counter">{{ phrase('total_points:') }} {{ number($user.trophy_points) }}</span>
			<span class="block-footer-controls">
				<xf:button href="{{ link('help', {'page_name': 'trophies'}) }}">
					{{ phrase('view_all_available_trophies') }}
				</xf:button>
			</span>
		</div>
	</div>
</div>]]></template>
  <template type="public" title="member_view" version_id="2010132" version_string="2.1.1 Beta 2"><![CDATA[<xf:title page="{$page}">{$user.username}</xf:title>
<xf:h1 hidden="true" />

<xf:macro template="metadata_macros" name="metadata"
	arg-shareUrl="{{ link('canonical:members', $user) }}"
	arg-canonicalUrl="{{ link('canonical:members', $user, {'page': $page}) }}"
	arg-imageUrl="{$user.getAvatarUrl('o', null, true)}" />

<xf:page option="ldJsonHtml">
	<script type="application/ld+json">
	{
		"@context": "https://schema.org",
		"@type": "Person",
		"name": "{$user.username|escape('json')}",
		"image": "{$user.getAvatarUrl('o', null, true)|escape('json')}"
	}
	</script>
</xf:page>

<xf:css src="member.less" />

<div class="block">
	<div class="block-container">
		<div class="block-body">
			<div class="memberHeader">

				<div class="memberHeader-main">
					<span class="memberHeader-avatar">
						<span class="avatarWrapper">
							<xf:avatar user="{$user}" size="l"
								href="{{ $user.getAvatarUrl('o') ?: '' }}" />
							<xf:if is="$user.user_id == $xf.visitor.user_id && $xf.visitor.canUploadAvatar()">
								<a class="avatarWrapper-update" href="{{ link('account/avatar') }}" data-xf-click="overlay"><span>{{ phrase('edit') }}</span></a>
							</xf:if>
						</span>
					</span>
					<div class="memberHeader-content memberHeader-content--info">
						<xf:if contentcheck="true">
							<div class="memberHeader-actionTop">
								<xf:contentcheck>
								<!--[XF:action_top_start]-->
								<xf:if contentcheck="true">
									<div class="buttonGroup">
										<xf:contentcheck>
											<xf:if is="$user.canBeReported()">
												<xf:button href="{{ link('members/report', $user) }}"
													class="button--link" overlay="true">
													{{ phrase('report_verb') }}
												</xf:button>
											</xf:if>
											<xf:if contentcheck="true">
												<div class="buttonGroup-buttonWrapper">
													<xf:button class="button--link menuTrigger" data-xf-click="menu" aria-expanded="false" aria-haspopup="true">{{ phrase('moderator_tools') }}</xf:button>
													<div class="menu" data-menu="menu" aria-hidden="true">
														<div class="menu-content">
															<h3 class="menu-header">{{ phrase('moderator_tools') }}</h3>
															<xf:contentcheck>
																<xf:macro template="member_macros" name="moderator_menu_actions"
																	arg-user="{$user}"
																	arg-context="profile" />
															</xf:contentcheck>
														</div>
													</div>
												</div>
											</xf:if>
										</xf:contentcheck>
									</div>
								</xf:if>
								<!--[XF:action_top_end]-->
								</xf:contentcheck>
							</div>
						</xf:if>

						<h1 class="memberHeader-name"><xf:username user="{$user}" rich="true" href="" /></h1>

						<xf:if contentcheck="true">
							<div class="memberHeader-banners">
								<xf:contentcheck><xf:userbanners user="$user" /></xf:contentcheck>
							</div>
						</xf:if>

						<xf:userblurb user="$user" tag="div" class="memberHeader-blurb" />

						<div class="memberHeader-blurb">
							<dl class="pairs pairs--inline">
								<dt>{{ phrase('joined') }}</dt>
								<dd><xf:date time="$user.register_date" /></dd>
							</dl>
						</div>

						<xf:if contentcheck="true">
							<div class="memberHeader-blurb">
								<dl class="pairs pairs--inline">
									<dt>{{ phrase('last_seen') }}</dt>
									<dd dir="auto">
										<xf:contentcheck><xf:useractivity user="$user" class="pairs--plainLabel" /></xf:contentcheck>
									</dd>
								</dl>
							</div>
						</xf:if>
					</div>
				</div>

				<div class="memberHeader-content">
					<div class="memberHeader-stats">
						<div class="pairJustifier">
							<xf:macro template="member_macros" name="member_stat_pairs"
								arg-user="{$user}"
								arg-context="profile" />
						</div>
					</div>

					<xf:if contentcheck="true">
						<hr class="memberHeader-separator" />

						<div class="memberHeader-buttons">
							<xf:contentcheck>
								<xf:macro template="member_macros" name="member_action_buttons"
									arg-user="{$user}"
									arg-context="profile" />
							</xf:contentcheck>
						</div>
					</xf:if>
				</div>

			</div>
		</div>
		<h2 class="block-tabHeader block-tabHeader--memberTabs tabs hScroller"
			data-xf-init="tabs h-scroller"
			data-panes=".js-memberTabPanes"
			data-state="replace"
			role="tablist">
			<span class="hScroller-scroll">
				<!--[XF:tabs:start]-->
				<xf:if is="$user.canViewPostsOnProfile()">
					<a href="{{ link('members', $user) }}"
						class="tabs-tab is-active"
						role="tab"
						aria-controls="profile-posts">{{ phrase('profile_posts') }}</a>
				</xf:if>

				<xf:if is="$user.canViewLatestActivity()">
					<a href="{{ link('members/latest-activity', $user) }}"
						rel="nofollow"
						class="tabs-tab"
						id="latest-activity"
						role="tab">{{ phrase('latest_activity') }}</a>
				</xf:if>

				<a href="{{ link('members/recent-content', $user) }}"
					rel="nofollow"
					class="tabs-tab"
					id="recent-content"
					role="tab">{{ phrase('postings') }}</a>

				<!--[XF:tabs:after_recent_content]-->

				<a href="{{ link('members/about', $user) }}"
					class="tabs-tab"
					id="about"
					role="tab">{{ phrase('about') }}</a>

				<xf:if is="$xf.visitor.canViewWarnings() && $user.warning_count">
					<a href="{{ link('members/warnings', $user) }}"
						class="tabs-tab"
						id="warnings"
						role="tab">{{ phrase('warnings') }}</a>
				</xf:if>
				<!--[XF:tabs:end]-->
			</span>
		</h2>
	</div>
</div>

<xf:ad position="member_view_below_tabs" arg-user="{$user}" />

<ul class="tabPanes js-memberTabPanes">
	<!--[XF:tab_panes:start]-->
	<xf:if is="$user.canViewPostsOnProfile()">
		<li class="is-active" role="tabpanel" id="profile-posts">
			<xf:js src="xf/inline_mod.js" min="1" />
			<div class="block block--messages" data-xf-init="inline-mod" data-type="profile_post" data-href="{{ link('inline-mod') }}">
				<div class="block-container">
					<div class="block-body js-replyNewMessageContainer">
						<xf:if is="$user.canPostOnProfile()">
							<xf:set var="$firstProfilePost" value="{$profilePosts|first}" />
							<xf:macro template="profile_post_macros" name="quick_post"
								arg-user="{$user}"
								arg-lastDate="{{ $firstProfilePost.post_date ?: 0 }}"
								arg-containerSelector="< .js-replyNewMessageContainer" />
						</xf:if>

						<xf:if is="$profilePosts is not empty">
							<xf:foreach loop="$profilePosts" value="$profilePost">
								<xf:macro template="profile_post_macros"
									name="{{ $profilePost.message_state == 'deleted' ? 'profile_post_deleted' : 'profile_post' }}"
									arg-profilePost="{$profilePost}" />
							</xf:foreach>
						<xf:else />
							<div class="block-row js-replyNoMessages">{{ phrase('there_no_messages_on_xs_profile_yet', {'name': $user.username}) }}</div>
						</xf:if>
					</div>
				</div>

				<div class="block-outer block-outer--after">
					<xf:pagenav
						page="{$page}" perpage="{$perPage}" total="{$total}"
						link="members" data="{$user}"
						wrapperclass="block-outer-main" />
					<div class="block-outer-opposite">
						<xf:showignored />
						<xf:if is="$canInlineMod">
							<xf:macro template="inline_mod_macros" name="button" />
						</xf:if>
					</div>
				</div>
			</div>
		</li>
	</xf:if>

	<xf:if is="$user.canViewLatestActivity()">
		<li data-href="{{ link('members/latest-activity', $user) }}" role="tabpanel" aria-labelledby="latest-activity">
			<div class="blockMessage">{{ phrase('loading...') }}</div>
		</li>
	</xf:if>

	<li data-href="{{ link('members/recent-content', $user) }}" role="tabpanel" aria-labelledby="recent-content">
		<div class="blockMessage">{{ phrase('loading...') }}</div>
	</li>

	<!--[XF:tab_panes:after_recent_content]-->

	<li data-href="{{ link('members/about', $user) }}" role="tabpanel" aria-labelledby="about">
		<div class="blockMessage">{{ phrase('loading...') }}</div>
	</li>

	<xf:if is="$xf.visitor.canViewWarnings() && $user.warning_count">
		<li data-href="{{ link('members/warnings', $user) }}" role="tabpanel" aria-labelledby="warnings">
			<div class="blockMessage">{{ phrase('loading...') }}</div>
		</li>
	</xf:if>
	<!--[XF:tab_panes:end]-->
</ul>

<xf:widgetpos id="member_view_sidebar" context-user="{$user}" position="sidebar" />]]></template>
  <template type="public" title="member_warn" version_id="2000035" version_string="2.0.0 Beta 5"><![CDATA[<xf:title>{{ phrase('warn_member:') }} {$user.username}</xf:title>

<xf:if is="$breadcrumbs">
	<xf:breadcrumb source="$breadcrumbs" />
</xf:if>

<xf:js src="xf/form_fill.js" min="1" />

<xf:form action="{$warnUrl}" ajax="true" class="block" data-xf-init="form-fill">
	<div class="block-container">
		<div class="block-body">
			<xf:formrow label="{{ phrase('member') }}"><xf:username user="{$user}" /></xf:formrow>

			<xf:formrow label="{{ phrase('content') }}">
				<xf:if is="{$contentUrl}">
					<a href="{$contentUrl}">{$title}</a>
				<xf:else />
					{$title}
				</xf:if>
			</xf:formrow>

			<xf:radiorow name="warning_definition_id" value="0"
				label="{{ phrase('warning_type') }}">

				<xf:foreach loop="$warnings" value="$warning">
					<xf:option value="{$warning.warning_definition_id}" class="js-FormFiller">{$warning.title}</xf:option>
				</xf:foreach>
				<xf:option value="0" class="js-FormFiller"
					label="{{ phrase('custom_warning:') }}">

					<xf:textbox name="custom_title" maxlength="{{ max_length($warning, 'title') }}" />
				</xf:option>
			</xf:radiorow>

			<div id="WarningEditableContainer">
				<xf:checkboxrow label="{{ phrase('warning_points') }}">
					<xf:option name="points_enable" value="1" selected="true"
						label="{{ phrase('apply_warning_points:') }}">

						<xf:numberbox name="points" value="1" min="0" />
					</xf:option>
				</xf:checkboxrow>

				<xf:checkboxrow label="{{ phrase('points_expiry') }}">
					<xf:option name="expiry_enable" value="1" selected="true"
						label="{{ phrase('points_expire_after:') }}">

						<xf:dependent>
							<div class="inputGroup">
								<xf:numberbox name="expiry_value" value="1" min="0" />
								<span class="inputGroup-splitter"></span>
								<xf:select name="expiry_unit" value="months" class="input--inline">
									<xf:option value="days">{{ phrase('days') }}</xf:option>
									<xf:option value="weeks">{{ phrase('weeks') }}</xf:option>
									<xf:option value="months">{{ phrase('months') }}</xf:option>
									<xf:option value="years">{{ phrase('years') }}</xf:option>
								</xf:select>
							</div>
						</xf:dependent>
					</xf:option>
				</xf:checkboxrow>
			</div>

			<xf:textarearow name="notes" autosize="true"
				label="{{ phrase('notes') }}"
				explain="{{ phrase('this_will_not_be_shown_to_member_receiving_warning') }}" />
		</div>

		<h2 class="block-formSectionHeader"><span class="block-formSectionHeader-aligner">{{ phrase('member_notification') }}</span></h2>
		<div class="block-body">
			<xf:checkboxrow>
				<xf:option name="start_conversation" value="1"
					data-xf-init="disabler"
					data-container="#WarningConversation"
					data-hide="true"
					label="{{ phrase('start_conversation_with_x', {'name': $user.username}) }}" />
			</xf:checkboxrow>

			<div id="WarningConversation">
				<xf:textboxrow name="conversation_title"
					maxlength="{{ max_length('XF:ConversationMaster', 'title') }}"
					label="{{ phrase('title') }}" />

				<xf:textarearow name="conversation_message" rows="6" autosize="true"
					maxlength="{$xf.options.messageMaxLength}"
					label="{{ phrase('message') }}" />

				<xf:checkboxrow>
					<xf:option name="open_invite" value="1">
						{{ phrase('allow_x_to_invite_others_to_this_conversation', {'user': $user.username}) }}
					</xf:option>
					<xf:option name="conversation_locked" value="1">
						{{ phrase('lock_conversation_no_responses_will_be_allowed') }}
					</xf:option>
				</xf:checkboxrow>
			</div>
		</div>

		<xf:if is="$contentActions.delete OR $contentActions.public">
			<h2 class="block-formSectionHeader"><span class="block-formSectionHeader-aligner">{{ phrase('content_action') }}</span></h2>
			<div class="block-body">
				<xf:radiorow name="content_action" value=""
					label="{{ phrase('content_action') }}">

					<xf:option value="">{{ phrase('do_nothing') }}</xf:option>
					<xf:if is="$contentActions.delete">
						<xf:option value="delete"
							label="{{ phrase('delete_the_content') }}"
							hint="{{ phrase('item_will_remain_viewable_by_moderators_and_may_be_restored_at_later') }}">

							<xf:textbox name="action_options[delete_reason]"
								placeholder="{{ phrase('reason_for_deletion...') }}"
								maxlength="{{ max_length('XF:DeletionLog', 'delete_reason') }}" />
						</xf:option>
					</xf:if>
					<xf:if is="$contentActions.public">
						<xf:option value="public"
							label="{{ phrase('post_public_warning') }}"
							hint="{{ phrase('this_will_be_visible_to_anyone_who_can_see_content_for_warning') }}">

							<xf:textbox name="action_options[public_message]" maxlength="255"
								placeholder="{{ phrase('public_warning_text...') }}" />
						</xf:option>
					</xf:if>
				</xf:radiorow>
			</div>
		</xf:if>

		<xf:submitrow submit="{{ phrase('warn') }}" sticky="true" />
	</div>

	<xf:redirect />
	<xf:hiddenval name="filled_warning_definition_id">0</xf:hiddenval>
	<input type="checkbox" id="WarningEditableInput"
		data-xf-init="disabler" data-container="#WarningEditableContainer"
		checked="checked" style="display: none" />
</xf:form>]]></template>
  <template type="public" title="member_warnings" version_id="2001070" version_string="2.0.10"><![CDATA[<xf:title>{{ phrase('warnings:') }} {$user.username}</xf:title>

<xf:breadcrumb href="{{ link('members', $user) }}">{$user.username}</xf:breadcrumb>

<div class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:datalist data-xf-init="responsive-data-list">
				<xf:datarow rowtype="header">
					<xf:cell>{{ phrase('warning') }}</xf:cell>
					<xf:cell>{{ phrase('date') }}</xf:cell>
					<xf:cell>{{ phrase('points') }}</xf:cell>
					<xf:cell>{{ phrase('expiry') }}</xf:cell>
				</xf:datarow>
				<xf:foreach loop="$warnings" value="$warning">
					<xf:datarow rowclass="{{ $warning.is_expired ? 'dataList-row--disabled' : '' }}">
						<xf:cell href="{{ link('warnings', $warning) }}" overlay="true">{$warning.title}</xf:cell>
						<xf:cell href="{{ link('warnings', $warning) }}" overlay="true"><xf:date time="{$warning.warning_date} " /></xf:cell>
						<xf:cell href="{{ link('warnings', $warning) }}" overlay="true">{$warning.points|number}</xf:cell>
						<xf:cell href="{{ link('warnings', $warning) }}" overlay="true">
							<xf:if is="$warning.expiry_date">
								<xf:date time="{$warning.expiry_date} " />
							<xf:else />
								{{ phrase('n_a') }}
							</xf:if>
						</xf:cell>
					</xf:datarow>
				</xf:foreach>
			</xf:datalist>
		</div>
		<div class="block-footer">
			<ul class="listInline listInline--bullet">
				<li>{{ phrase('warning_points:') }} {$user.warning_points|number}</li>
				<li>{{ phrase('total_warnings:') }} {{ count($warnings)|number }}</li>
			</ul>
		</div>
	</div>
</div>]]></template>
  <template type="public" title="member_wrapper" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:sidenav>
	<div class="block">
		<div class="block-container">
			<h3 class="block-header">{{ phrase('members') }}</h3>
			<div class="block-body">
				<a class="blockLink {{ $pageSelected == 'overview' ? 'is-selected' : '' }}" href="{{ link('members') }}">{{ phrase('overview') }}</a>
				<xf:foreach loop="$memberStats" key="$key" value="$memberStat">
					<a class="blockLink {{ $pageSelected == $key ? 'is-selected' : '' }}" href="{{ link('members', null, {'key': $memberStat.member_stat_key}) }}">{$memberStat.title}</a>
				</xf:foreach>
				<xf:if is="$xf.options.enableMemberList">
					<a class="blockLink {{ $pageSelected == 'member_list' ? 'is-selected' : '' }}" href="{{ link('members/list') }}">{{ phrase('registered_members') }}</a>
				</xf:if>
			</div>
		</div>
	</div>
</xf:sidenav>
<xf:page option="sideNavTitle">{{ phrase('members') }}</xf:page>

<xf:widgetpos id="member_wrapper_sidenav" position="sidenav" />
{$innerContent|raw}]]></template>
  <template type="public" title="message.less" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[@_message-actionColumnWidth: 40px;
@_messageSimple-userColumnWidth: 70px;

.message
{
	+ .message,
	&.message--bordered
	{
		border-top: @xf-borderSize solid @xf-borderColor;
	}
}

.message,
.block--messages .message
{
	&.is-mod-selected
	{
		background: @xf-inlineModHighlightColor;

		.message-cell--user
		{
			background: @xf-inlineModHighlightColor;
		}

		.message-userArrow:after
		{
			border-right-color: @xf-inlineModHighlightColor;
		}
	}
}

.message-inner
{
	display: flex;
}

.message-cell
{
	display: block;
	vertical-align: top;
	padding: @xf-messagePadding;

	.message--quickReply &
	{
		//padding-bottom: 35px; // for the submit row

		> .formRow:last-child
		{
			> dd
			{
				padding-bottom: 0;
			}
		}
	}

	&.message-cell--closer
	{
		padding: @xf-messagePaddingSmall;

		&.message-cell--main
		{
			padding-left: ((@xf-messagePaddingSmall) * 1.5);
		}

		&.message-cell--user
		{
			.m-fixedWidthFlex((@xf-messageUserBlockWidth) + 2 * (@xf-messagePaddingSmall));

			.message--simple &
			{
				.m-fixedWidthFlex(@_messageSimple-userColumnWidth + 2 * (@xf-messagePaddingSmall));

			}
		}

		&.message-cell--action
		{
			.m-fixedWidthFlex((@_message-actionColumnWidth) + 2 * (@xf-messagePaddingSmall));
		}
	}

	&.message-cell--user,
	&.message-cell--action
	{
		position: relative;
		.xf-messageUserBlock(no-border);
		border-right: @xf-messageUserBlock--border-width solid @xf-messageUserBlock--border-color;
		min-width: 0;
	}

	&.message-cell--user
	{
		.m-fixedWidthFlex((@xf-messageUserBlockWidth) + 2 * (@xf-messagePadding));

		.message--simple &
		{
			.m-fixedWidthFlex(@_messageSimple-userColumnWidth + 2 * @xf-messagePaddingSmall);
		}
	}

	&.message-cell--action
	{
		.m-fixedWidthFlex((@_message-actionColumnWidth) + 2 * (@xf-messagePadding));
	}

	&.message-cell--main
	{
		padding-left: (@xf-messagePadding * 1.5);
		flex: 1 1 auto;
		width: 100%;
		min-width: 0;

		&.is-editing
		{
			padding: 0;
		}

		// should really only happen when editing
		.block
		{
			margin: 0;
		}

		.block-container
		{
			margin: 0;
			border: none;
		}
	}

	&.message-cell--alert
	{
		font-size: @xf-fontSizeSmall;
		flex: 1 1 auto;
		width: 100%;
		min-width: 0;
		.xf-contentAccentBase();

		a
		{
			.xf-contentAccentLink();
		}
	}

	&.message-cell--extra
	{
		.m-fixedWidthFlex(180 + 2 * (@xf-messagePadding));
		border-left: @xf-messageUserBlock--border-width solid @xf-messageUserBlock--border-color;
		background: @xf-contentAltBg;

		.formRow-explain
		{
			margin: @xf-paddingMedium 0 0;
			.xf-formExplain();
			.m-textColoredLinks();
			font-size: 80%;
		}
	}
}

.message-main
{
	height: 100%;
	display: flex;
	flex-direction: column;
}

.message-content
{
	flex: 1 1 auto;

	// IE11 flex bug
	min-height: 1px;
}

.message-footer
{
	margin-top: auto;
}

@media (max-width: @xf-messageSingleColumnWidth)
{
	.message:not(.message--forceColumns)
	{
		.message-inner
		{
			display: block;
		}

		.message-cell
		{
			display: block;
			.m-clearFix();

			&.message-cell--user
			{
				width: auto;
				border-right: none;
				border-bottom: @xf-messageUserBlock--border-width solid @xf-messageUserBlock--border-color;
			}

			&.message-cell--main
			{
				padding-left: @xf-messagePadding;
			}

			&.message-cell--extra
			{
				width: auto;
				border-left: none;
				border-top: @xf-messageUserBlock--border-width solid @xf-messageUserBlock--border-color;
			}
		}
	}

	.message--simple:not(.message--forceColumns),
	.message--quickReply:not(.message--forceColumns)
	{
		.message-cell.message-cell--user
		{
			display: none;
		}
	}
}

// ######################## USER COLUMN #########################

.message-userArrow
{
	position: absolute;
	top: (@xf-messagePadding) * 2;
	right: -1px;

	.m-triangleLeft(xf-default(@xf-messageUserBlock--border-color, transparent), @xf-messagePadding);

	&:after
	{
		position: absolute;
		top: -(@xf-messagePadding - 1px);
		right: -@xf-messagePadding;
		content: "";

		.m-triangleLeft(@xf-contentBg, @xf-messagePadding - 1px);
	}
}

.message-avatar
{
	text-align: center;

	.avatar
	{
		vertical-align: bottom;
	}
}

.message-avatar-wrapper
{
	position: relative;
	display: inline-block;
	vertical-align: bottom;
	margin-bottom: .5em;

	.message-avatar-online
	{
		position: absolute;

		// center bottom position
		left: 50%;
		margin-left: -.615em;
		bottom: -.5em;

		&:before
		{
			.m-faBase();
			.m-faContent(@fa-var-user-circle);
			line-height: 1;
			font-weight: bold;
			color: rgb(127, 185, 0);
			background: @xf-messageUserBlock--background-color;
			border: @xf-messageUserBlock--background-color solid 2px;
			border-radius: 50%;
			display: inline-block;
		}
	}
}

.message-name
{
	font-weight: @xf-fontWeightHeavy;
	font-size: inherit;
	text-align: center;
	margin: 0;
}

.message-userTitle
{
	font-size: @xf-fontSizeSmaller;
	font-weight: normal;
	text-align: center;
	margin: 0;
}

.message-userBanner.userBanner
{
	display: block;
	margin-top: 3px;
}

.message-userExtras
{
	margin-top: 3px;
	font-size: @xf-fontSizeSmaller;
}

.message--deleted
{
	.message-userDetails
	{
		display: none;
	}

	.message-avatar .avatar
	{
		.m-avatarSize(@avatar-s);
	}
}

@media (max-width: @xf-messageSingleColumnWidth)
{
	.message:not(.message--forceColumns)
	{
		.message-userArrow
		{
			top: auto;
			right: auto;
			bottom: -1px;
			left: ((@avatar-s) / 2);

			border: none;
			.m-triangleUp(xf-default(@xf-messageUserBlock--border-color, transparent), @xf-messagePadding);

			&:after
			{
				top: auto;
				right: auto;
				left: -(@xf-messagePadding - 1px);
				bottom: -@xf-messagePadding;

				border: none;
				.m-triangleUp(@xf-contentBg, @xf-messagePadding - 1px);
			}
		}

		&.is-mod-selected
		{
			.message-userArrow:after
			{
				border-color: transparent;
				border-bottom-color: @xf-inlineModHighlightColor;
			}
		}

		.message-user
		{
			display: flex;
		}

		.message-avatar
		{
			margin-bottom: 0;

			.avatar
			{
				.m-avatarSize(@avatar-s);

				& + .message-avatar-online
				{
					left: auto;
					right: 0;
				}
			}
		}

		.message-userDetails
		{
			flex: 1;
			min-width: 0;
			padding-left: @xf-messagePadding;
		}

		.message-name
		{
			text-align: left;
		}

		.message-userTitle,
		.message-userBanner.userBanner
		{
			display: inline-block;
			text-align: left;
			margin: 0;
		}

		.message-userExtras
		{
			display: none;
		}

		.message--deleted
		{
			.message-userDetails
			{
				display: block;
			}
		}
	}
}

// ####################### MAIN COLUMN ####################

.message-content
{
	position: relative;

	.js-selectToQuoteEnd
	{
		height: 0;
		font-size: 0;
		overflow: hidden;
	}

	.message--multiQuoteList &
	{
		min-height: 80px;
		max-height: 120px;
		overflow: hidden;

		.message-body
		{
			pointer-events: none;
		}
	}
}

.message-attribution
{
	color: @xf-textColorMuted;
	font-size: @xf-fontSizeSmaller;
	padding-bottom: 3px;
	border-bottom: @xf-borderSize solid @xf-borderColorFaint;
	.m-clearFix();

	&.message-attribution--plain
	{
		border-bottom: none;
		font-size: inherit;
		padding-bottom: 0;
	}

	&.message-attribution--split
	{
		display: flex;
		align-items: flex-end;

		.message-attribution-opposite
		{
			margin-left: auto;
		}
	}
}

.message-attribution-main
{
	float: left;
}

.message-attribution-opposite
{
	float: right;

	&.message-attribution-opposite--list
	{
		display: flex;
		.m-listPlain();

		> li
		{
			margin-left: 14px;

			&:first-child
			{
				margin-left: 0;
			}
		}

		a
		{
			display: inline-block;
			margin: -3px -7px;
			padding: 3px 7px;
		}
	}

	a
	{
		color: inherit;

		&:hover
		{
			text-decoration: none;
			color: @xf-linkHoverColor;
		}
	}
}

.message-attribution-source
{
	font-size: @xf-fontSizeSmaller;
	margin-bottom: @xf-paddingSmall;
}

.message-attribution-user
{
	font-weight: @xf-fontWeightHeavy;

	.avatar
	{
		display: none;
	}

	.attribution
	{
		display: inline;
		font-size: inherit;
		font-weight: inherit;
		margin: 0;
	}
}

.message-newIndicator
{
	.xf-messageNewIndicator();
}

.message-minorHighlight
{
	font-size: @xf-fontSizeSmall;
	color: @xf-textColorFeature;
}

.message-fields
{
	margin: @xf-messagePadding 0;
}

.message-body
{
	margin: @xf-messagePadding 0;
	font-family: @xf-fontFamilyBody;
	.m-clearFix();

	.message--simple &
	{
		margin-top: @xf-messagePaddingSmall;
		margin-bottom: @xf-messagePaddingSmall;
	}

	&:last-child
	{
		margin-bottom: 0;
	}

	.message-title
	{
		// basically replicates .structItem-title
		font-size: @xf-fontSizeLarge;
		font-weight: @xf-fontWeightNormal;
		margin: 0 0 @xf-messagePadding 0;
		padding: 0;
	}
}

.message-attachments
{
	margin: .5em 0;
}

	.message-attachments-list
	{
		.m-listPlain();
	}

.message-lastEdit
{
	margin-top: .5em;
	color: @xf-textColorMuted;
	font-size: @xf-fontSizeSmallest;
	text-align: right;
}

.message-signature
{
	margin-top: @xf-messagePadding;
	.xf-messageSignature();
}

.message-actionBar .actionBar-set
{
	margin-top: @xf-messagePadding;
	font-size: @xf-fontSizeSmall;

	.message--simple &
	{
		margin-top: @xf-messagePaddingSmall;
	}
}

.message .likesBar
{
	margin-top: @xf-messagePadding;
	padding: @xf-messagePaddingSmall;
}

.message .reactionsBar
{
	margin-top: @xf-messagePadding;
	padding: @xf-messagePaddingSmall;
}

.message-historyTarget
{
	margin-top: @xf-messagePadding;
}

.message-gradient
{
	position: absolute;
	bottom: 0;
	left: 0;
	right: 0;
	height: 60px;

	.m-gradient(fade(@xf-contentBg, 0%), @xf-contentBg, @xf-contentBg, 0%, 90%);
}

.message-responses
{
	margin-top: @xf-messagePaddingSmall;
	font-size: @xf-fontSizeSmall;

	.editorPlaceholder
	{
		.input
		{
			font-size: inherit;
		}
	}
}

.message-responseRow
{
	margin-top: -@xf-minorBlockContent--border-width;
	.xf-minorBlockContent();
	padding: @xf-messagePaddingSmall;

	// note that border radiuses are very difficult to do here due to a lot of dynamic showing/hiding

	&.message-responseRow--likes,
	&.message-responseRow--reactions
	{
		.m-transitionFadeDown();
	}
}

@media (max-width: @xf-messageSingleColumnWidth)
{
	.message:not(.message--forceColumns)
	{
		.message-attribution-user .avatar
		{
			display: inline-flex;
			.m-avatarSize((@xf-fontSizeNormal) * (@xf-lineHeightDefault));
		}

		.message-content
		{
			// this is 1px to workaround an IE11 issue - see #139187
			min-height: 1px;
		}
	}
}

@media (max-width: @xf-responsiveNarrow)
{
	.message-signature
	{
		display: none;
	}
}

// MESSAGE MENU

.message-menuGroup
{
	display: inline-block;
}

.message-menuTrigger
{
	display: inline-block;

	&:after
	{
		.m-menuGadget(); // 1em
		text-align: right;
	}

	&:hover:after
	{
		color: black;
	}
}

.message-menu-section
{
	&--editDelete
	{
		.menu-linkRow
		{
			font-weight: @xf-fontWeightHeavy;
			font-size: @xf-fontSizeNormal;
		}
	}
}

.message-menu-link
{
	&--delete i:after
	{
		.m-faContent(@fa-var-trash-alt);
	}
	&--edit i:after
	{
		.m-faContent(@fa-var-edit);
	}
	&--report i:after
	{
		.m-faContent(@fa-var-frown);
	}
	&--warn i:after
	{
		.m-faContent(@fa-var-exclamation-triangle);
	}
	&--spam i:after
	{
		.m-faContent(@fa-var-ban);
	}
	&--ip i:after
	{
		.m-faContent(@fa-var-sitemap);
	}
	&--history i:after
	{
		.m-faContent(@fa-var-history);
	}
	&--follow i:after
	{
		.m-faContent(@fa-var-user-plus);
	}
	&--ignore i:after
	{
		.m-faContent(@fa-var-user-times);
	}
	&--share i:after
	{
		.m-faContent(@fa-var-share-alt);
	}
}

// ############################# COMMENTS ###############

.comment
{
}

.comment-inner
{
	display: table;
	table-layout: fixed;
	width: 100%;
}

.comment-avatar
{
	display: table-cell;
	width: 24px;
	vertical-align: top;

	.avatar,
	img
	{
		vertical-align: bottom;
	}
}

.comment-main
{
	display: table-cell;
	padding-left: @xf-messagePadding;
	vertical-align: top;
}

.comment-contentWrapper
{
	margin-bottom: @xf-messagePaddingSmall;
}

.comment-user
{
	font-weight: @xf-fontWeightHeavy;
}

.comment-body
{
	display: inline;
}

.comment-input
{
	display: block;
	height: 2.34em;
	margin-bottom: @xf-messagePaddingSmall;
}

.comment-actionBar .actionBar-set
{
	margin-top: @xf-messagePaddingSmall;
	color: @xf-textColorMuted;
}

.comment-likes,
.comment-reactions
{
	.m-transitionFadeDown();

	margin-top: @xf-messagePaddingSmall;
	font-size: @xf-fontSizeSmaller;
}

// ################################## MESSAGE QUICK REPLY ADDITIONS #############

.formSubmitRow.formSubmitRow--messageQr
{
	.formSubmitRow-controls
	{
		text-align: center;
		padding-left: 0;
		padding-right: 0;
		margin-left: @xf-messagePadding;
		margin-right: @xf-messagePadding;

		@media (max-width: @xf-formResponsive)
		{
			text-align: right;
		}
	}
}

// ################################## MESSAGE NOTICES #############################

.messageNotice
{
	margin: @xf-messagePaddingSmall 0;
	padding: @xf-messagePaddingSmall @xf-messagePadding;
	.xf-contentAccentBase();
	font-size: @xf-fontSizeSmaller;
	border-left: @xf-borderSizeMinorFeature solid @xf-borderColorAttention;

	&:not(.messageNotice--highlighted)
	{
		a,
		a:hover
		{
			.xf-contentAccentLink();
		}
	}

	&:before
	{
		display: inline-block;
		.m-faBase();
		padding-right: .2em;
		font-size: 125%;
		color: @xf-textColorAttention;
	}

	&.messageNotice--highlighted
	{
		.xf-contentHighlightBase();
		border-left-color: @xf-borderColorFeature;

		&:before
		{
			color: @xf-textColorFeature;
		}
	}

	&.messageNotice--deleted:before { .m-faContent(@fa-var-trash-alt, .88em); }
	&.messageNotice--moderated:before { .m-faContent(@fa-var-shield, 1em); }
	&.messageNotice--warning:before { .m-faContent(@fa-var-exclamation-triangle, 1em); }
	&.messageNotice--ignored:before { .m-faContent(@fa-var-microphone-slash, 1.25em); }
}

// ##################### MESSAGE VARIANTS/RESPONSIVE ##################

@media (min-width: @xf-responsiveEdgeSpacerRemoval)
{
	.block:not(.block--messages)
	{
		@{block-noStripSel} > .block-body:first-child > .message:first-child,
		.block-topRadiusContent.message,
		.block-topRadiusContent > .message:first-child
		{
			.message-cell:first-child { border-top-left-radius: @block-borderRadius-inner; }
			.message-cell:last-child { border-top-right-radius: @block-borderRadius-inner; }
		}

		@{block-noStripSel} > .block-body:last-child > .message:last-child,
		.block-bottomRadiusContent.message,
		.block-bottomRadiusContent > .message:last-child
		{
			.message-cell:first-child { border-bottom-left-radius: @block-borderRadius-inner; }
			.message-cell:last-child { border-bottom-right-radius: @block-borderRadius-inner; }
		}
	}
}

.block--messages
{
	.block-container
	{
		background: none;
		border: none;
	}

	.message,
	.block-row
	{
		.xf-contentBase();
		.xf-blockBorder();
		border-radius: @xf-blockBorderRadius;

		+ .message,
		+ .block-row
		{
			margin-top: @xf-blockPaddingV;
		}
	}

	.message-spacer
	{
		+ .message,
		+ .block-row
		{
			margin-top: @xf-blockPaddingV;
		}
	}

	.message-cell
	{
		&:first-child
		{
			border-radius: 0;
			border-top-left-radius: @block-borderRadius-inner;
			border-bottom-left-radius: @block-borderRadius-inner;
		}

		&:last-child
		{
			border-radius: 0;
			border-top-right-radius: @block-borderRadius-inner;
			border-bottom-right-radius: @block-borderRadius-inner;
		}

		&:first-child:last-child
		{
			border-radius: @block-borderRadius-inner;
		}
	}

	@media (max-width: @xf-messageSingleColumnWidth)
	{
		.message:not(.message--forceColumns)
		{
			.message-cell
			{
				&:first-child
				{
					border-radius: 0;
					border-top-left-radius: @block-borderRadius-inner;
					border-top-right-radius: @block-borderRadius-inner;
				}

				&:last-child
				{
					border-radius: 0;
					border-bottom-left-radius: @block-borderRadius-inner;
					border-bottom-right-radius: @block-borderRadius-inner;
				}

				&:first-child:last-child
				{
					border-radius: @block-borderRadius-inner;
				}
			}
		}

		.message--simple:not(.message--forceColumns) .message-cell--user + .message-cell
		{
			border-radius: 0;
			border-top-left-radius: @block-borderRadius-inner;
			border-top-right-radius: @block-borderRadius-inner;
		}
	}

	@media (max-width: @xf-responsiveEdgeSpacerRemoval)
	{
		.message,
		.block-row
		{
			border-left: none;
			border-right: none;
			border-radius: 0;
		}

		.message-cell
		{
			border-radius: 0;

			&:first-child,
			&:last-child
			{
				border-radius: 0;
			}
		}

		.message--simple .message-cell--user + .message-cell
		{
			border-radius: 0;
		}

		.message-container
		{
			padding: @xf-paddingMedium 0 0 0;

			.message-container-header
			{
				text-align: center;
			}

			.message
			{
				border-bottom: 0;
			}
		}
	}
}]]></template>
  <template type="public" title="message_macros" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:macro name="user_info"
	arg-user="!"
	arg-fallbackName="">

	<section itemscope itemtype="https://schema.org/Person" class="message-user">
		<div class="message-avatar {{ ($xf.options.showMessageOnlineStatus && $user && $user.isOnline()) ? 'message-avatar--online' : '' }}">
			<div class="message-avatar-wrapper">
				<xf:avatar user="$user" size="m" defaultname="{$fallbackName}" itemprop="image" />
				<xf:if is="$xf.options.showMessageOnlineStatus && $user && $user.isOnline()">
					<span class="message-avatar-online" tabindex="0" data-xf-init="tooltip" data-trigger="auto" title="{{ phrase('online_now')|for_attr }}"></span>
				</xf:if>
			</div>
		</div>
		<div class="message-userDetails">
			<h4 class="message-name"><xf:username user="$user" rich="true" defaultname="{$fallbackName}" itemprop="name" /></h4>
			<xf:usertitle user="$user" tag="h5" class="message-userTitle" banner="true" itemprop="jobTitle" />
			<xf:userbanners user="$user" tag="div" class="message-userBanner" itemprop="jobTitle" />
		</div>
		<xf:if is="$user.user_id">
			<xf:set var="$extras" value="{{ property('messageUserElements') }}" />
			<xf:if contentcheck="true">
				<div class="message-userExtras">
				<xf:contentcheck>
					<xf:if is="$extras.register_date">
						<dl class="pairs pairs--justified">
							<dt>{{ phrase('joined') }}</dt>
							<dd>{{ date($user.register_date) }}</dd>
						</dl>
					</xf:if>
					<xf:if is="$extras.message_count">
						<dl class="pairs pairs--justified">
							<dt>{{ phrase('messages') }}</dt>
							<dd>{$user.message_count|number}</dd>
						</dl>
					</xf:if>
					<xf:if is="$extras.reaction_score">
						<dl class="pairs pairs--justified">
							<dt>{{ phrase('reaction_score') }}</dt>
							<dd>{$user.reaction_score|number}</dd>
						</dl>
					</xf:if>
					<xf:if is="$extras.trophy_points && $xf.options.enableTrophies">
						<dl class="pairs pairs--justified">
							<dt>{{ phrase('points') }}</dt>
							<dd>{$user.trophy_points|number}</dd>
						</dl>
					</xf:if>
					<xf:if is="$extras.age && $user.Profile.age">
						<dl class="pairs pairs--justified">
							<dt>{{ phrase('age') }}</dt>
							<dd>{$user.Profile.age}</dd>
						</dl>
					</xf:if>
					<xf:if is="$extras.location && $user.Profile.location">
						<dl class="pairs pairs--justified">
							<dt>{{ phrase('location') }}</dt>
							<dd>
								<xf:if is="$xf.options.geoLocationUrl">
									<a href="{{ link('misc/location-info', '', {'location': $user.Profile.location}) }}" rel="nofollow noreferrer" target="_blank" class="u-concealed">{$user.Profile.location}</a>
								<xf:else />
									{$user.Profile.location}
								</xf:if>
							</dd>
						</dl>
					</xf:if>
					<xf:if is="$extras.website && $user.Profile.website">
						<dl class="pairs pairs--justified">
							<dt>{{ phrase('website') }}</dt>
							<dd><a href="{$user.Profile.website}" rel="nofollow" target="_blank">{$user.Profile.website|url('host', phrase('visit_site'))}</a></dd>
						</dl>
					</xf:if>
					<xf:if is="$extras.custom_fields">
						<xf:macro template="custom_fields_macros" name="custom_fields_values"
							arg-type="users"
							arg-group="personal"
							arg-set="{$user.Profile.custom_fields}"
							arg-additionalFilters="{{ ['message'] }}"
							arg-valueClass="pairs pairs--justified" />
						<xf:if is="$user.canViewIdentities()">
							<xf:macro template="custom_fields_macros" name="custom_fields_view"
								arg-type="users"
								arg-group="contact"
								arg-set="{$user.Profile.custom_fields}"
								arg-additionalFilters="{{ ['message'] }}"
								arg-valueClass="pairs pairs--justified" />
						</xf:if>
					</xf:if>
				</xf:contentcheck>
				</div>
			</xf:if>
		</xf:if>
		<span class="message-userArrow"></span>
	</section>
</xf:macro>

<xf:macro name="user_info_simple" arg-user="!" arg-fallbackName="">
	<header itemscope itemtype="https://schema.org/Person" class="message-user">
		<meta itemprop="name" content="{{ $user.username ?: $fallbackName }}">
		<div class="message-avatar">
			<div class="message-avatar-wrapper">
				<xf:avatar user="$user" size="s" defaultname="{$fallbackName}" itemprop="image" />
			</div>
		</div>
		<span class="message-userArrow"></span>
	</header>
</xf:macro>

<xf:macro name="attachments" arg-attachments="!" arg-message="!" arg-canView="!">
	<xf:if contentcheck="true">
		<xf:css src="attachments.less" />
		<section class="message-attachments">
			<h4 class="block-textHeader">{{ phrase('attachments') }}</h4>
			<ul class="attachmentList">
				<xf:contentcheck>
					<xf:foreach loop="$attachments" value="$attachment" if="!$message.isAttachmentEmbedded($attachment)">
						<xf:macro template="attachment_macros" name="attachment_list_item"
							arg-attachment="{$attachment}"
							arg-canView="{$canView}" />
					</xf:foreach>
				</xf:contentcheck>
			</ul>
		</section>
	</xf:if>
</xf:macro>

<xf:macro name="signature" arg-user="!">
	<xf:if is="$xf.visitor.Option.content_show_signature AND $user.Profile.signature">
		<xf:if contentcheck="true">
			<aside class="message-signature">
			<xf:contentcheck>
				{{ bb_code($user.Profile.signature, 'user:signature', $user) }}
			</xf:contentcheck>
			</aside>
		</xf:if>
	</xf:if>
</xf:macro>]]></template>
  <template type="public" title="message_page" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<div class="blockMessage">{$message}</div>]]></template>
  <template type="public" title="metadata_macros" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro name="metadata"
	arg-siteName=""
	arg-title=""
	arg-description=""
	arg-type=""
	arg-shareUrl=""
	arg-canonicalUrl=""
	arg-imageUrl=""
	arg-twitterCard="summary">

	<xf:if is="$siteName is not empty">
		<xf:macro name="site_name" arg-siteName="{$siteName}" />
	</xf:if>
	<xf:if is="$title is not empty">
		<xf:macro name="title" arg-title="{$title}" />
	</xf:if>
	<xf:if is="$description is not empty">
		<xf:macro name="description" arg-description="{$description}" />
	</xf:if>
	<xf:if is="$type is not empty">
		<xf:macro name="type" arg-type="{$type}" />
	</xf:if>
	<xf:if is="$shareUrl is not empty">
		<xf:macro name="share_url" arg-shareUrl="{$shareUrl}" />
	</xf:if>
	<xf:if is="$canonicalUrl is not empty">
		<xf:macro name="canonical_url" arg-canonicalUrl="{$canonicalUrl}" />
	</xf:if>
	<xf:if is="$imageUrl is not empty">
		<xf:macro name="image_url" arg-imageUrl="{$imageUrl}" arg-twitterCard="{$twitterCard}" />
	</xf:if>
</xf:macro>

<xf:macro name="site_name" arg-siteName="!" arg-output="{{ false }}">
	<xf:set var="$meta"><meta property="og:site_name" content="{$siteName|for_attr}" /></xf:set>
	<xf:macro name="output" arg-option="meta_site_name" arg-meta="{$meta}" arg-output="{$output}" />
</xf:macro>

<xf:macro name="title" arg-title="!" arg-output="{{ false }}">
	<xf:set var="$meta">
		<meta property="og:title" content="{$title|for_attr}" />
		<meta property="twitter:title" content="{{ snippet($title, 70)|for_attr }}" />
	</xf:set>
	<xf:macro name="output" arg-option="meta_title" arg-meta="{$meta}" arg-output="{$output}" />
</xf:macro>

<xf:macro name="description" arg-description="!" arg-output="{{ false }}">
	<xf:set var="$meta">
		<meta name="description" content="{{ snippet($description|strip_tags, 160)|for_attr }}" />
		<meta property="og:description" content="{{ snippet($description|strip_tags, 300)|for_attr }}" />
		<meta property="twitter:description" content="{{ snippet($description|strip_tags, 200)|for_attr }}" />
	</xf:set>
	<xf:macro name="output" arg-option="meta_description" arg-meta="{$meta}" arg-output="{$output}" />
</xf:macro>

<xf:macro name="type" arg-type="!" arg-output="{{ false }}">
	<xf:set var="$meta"><meta property="og:type" content="{$type}" /></xf:set>
	<xf:macro name="output" arg-option="meta_type" arg-meta="{$meta}" arg-output="{$output}" />
</xf:macro>

<xf:macro name="share_url" arg-shareUrl="!" arg-output="{{ false }}">
	<xf:set var="$meta"><meta property="og:url" content="{$shareUrl}" /></xf:set>
	<xf:macro name="output" arg-option="meta_share_url" arg-meta="{$meta}" arg-output="{$output}" />
</xf:macro>

<xf:macro name="canonical_url" arg-canonicalUrl="!" arg-output="{{ false }}">
	<xf:set var="$meta"><link rel="canonical" href="{$canonicalUrl}" /></xf:set>
	<xf:macro name="output" arg-option="meta_canonical_url" arg-meta="{$meta}" arg-output="{$output}" />
</xf:macro>

<xf:macro name="image_url" arg-imageUrl="!" arg-twitterCard="summary" arg-output="{{ false }}">
	<xf:set var="$meta">
		<meta property="og:image" content="{$imageUrl}" />
		<meta property="twitter:image" content="{$imageUrl}" />
		<meta property="twitter:card" content="{$twitterCard}" />
	</xf:set>
	<xf:macro name="output" arg-option="meta_image_url" arg-meta="{$meta}" arg-output="{$output}" />
</xf:macro>

<xf:macro name="output" arg-option="!" arg-meta="!" arg-output="{{ false }}">
	<xf:if is="$output">{$meta|raw}<xf:else /><xf:head option="{$option}">{$meta|raw}</xf:head></xf:if>
</xf:macro>]]></template>
  <template type="public" title="moderator_log_moderator_actions" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ $title ? $title . ' - ' : '' }}{{ phrase('moderator_actions') }}</xf:title>

<xf:breadcrumb source="$breadcrumbs" />

<xf:if is="$logs">
	<div class="block">
		<div class="block-container js-logList-{$type}{$id}">
			<div class="block-body">
				<xf:datalist data-xf-init="responsive-data-list">
					<xf:datarow rowtype="header">
						<xf:cell>{{ phrase('moderator') }}</xf:cell>
						<xf:cell>{{ phrase('action') }}</xf:cell>
						<xf:cell>{{ phrase('date') }}</xf:cell>
						<xf:cell>&nbsp;</xf:cell>
					</xf:datarow>
					<xf:foreach loop="$logs" value="$entry">
						<xf:datarow>
							<xf:cell><xf:username user="$entry.User" /></xf:cell>
							<xf:cell>{$entry.action_text}</xf:cell>
							<xf:cell><xf:date time="{$entry.log_date}" /></xf:cell>
							<xf:action href="{{ base_url($entry.content_url) }}">{{ phrase('view') }}</xf:action>
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<xf:if is="$hasNext">
					<span class="block-footer-controls"><xf:button href="{{ link($linkRoute, $linkData, $linkParams + {'page': $page + 1}) }}"
						data-xf-click="inserter"
						data-replace=".js-logList-{$type}{$id}"
						data-scroll-target="< .overlay">
						{{ phrase('continue...') }}
					</xf:button></span>
				<xf:else />
					{{ phrase('previous_moderation_action_logs_may_have_been_removed') }}
				</xf:if>
			</div>
		</div>
	</div>
<xf:else />
	<div class="blockMessage">{{ phrase('no_moderator_actions_have_been_logged') }}</div>
</xf:if>]]></template>
  <template type="public" title="multi_quote_macros" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:macro name="block"
	arg-quotes="!"
	arg-messages="!"
	arg-containerRelation="!"
	arg-dateKey="!"
	arg-bbCodeContext="!"
	arg-titleKey="title"
	arg-userRelation="User"
	arg-usernameKey="username"
	arg-messageKey="message">

	<xf:macro template="nestable_macros" name="setup"
		arg-includeLess="{{ false }}" />

	<xf:css src="message.less" />
	<xf:css src="multi_quote_sort.less" />

	<xf:title>{{ phrase('review_selected_messages') }}</xf:title>

	<div class="block">
		<div class="block-container">
			<div class="block-row block-row--minor">
				{{ phrase('drag_icon_to_rearrange_messages') }}
			</div>
			<div class="block-body nestable-container" data-xf-init="nestable" data-max-depth="1" data-value-function="serialize">
				<ol class="nestable-list">
					<xf:foreach loop="array_keys($quotes)" value="$messageId">
						<xf:set var="$message" value="{$messages.{$messageId}}" />
						<xf:if is="$message">
							<xf:foreach loop="{$quotes.{$messageId}}" key="$key" value="$quote">
								<li class="nestable-item" data-id="{$messageId}-{$key}">
									<div class="message message--simple message--bordered message--multiQuoteList message--forceColumns">
										<div class="message-inner">
											<div class="message-cell message-cell--closer message-cell--action">
												<div class="nestable-handle" aria-label="{{ phrase('drag_handle')|for_attr }}">
													<span class="u-muted"><xf:fa icon="fa-bars fa-2x" /></span>
												</div>
											</div>
											<div class="message-cell message-cell--closer message-cell--main">
												<div class="message-content">
													<div class="message-attribution">
														<div class="contentRow contentRow--alignMiddle">
															<div class="contentRow-figure">
																<xf:avatar user="{$message.{$userRelation}}" size="xxs" defaultname="{$message.{$usernameKey}}" href="" />
															</div>
															<div class="contentRow-main contentRow-main--close">
																<ul class="listInline listInline--bullet">
																	<li><xf:username user="{$message.{$userRelation}}" defaultname="{$message.{$usernameKey}}" href="" /></li>
																	<li><xf:date time="{$message.{$dateKey}}" /></li>
																	<li>{$message.{$containerRelation}.{$titleKey}}</li>
																</ul>
															</div>
															<span class="contentRow-extra">
																<xf:button href="javascript:"
																	class="button--small button--link js-removeMessage">
																	{{ phrase('remove') }}
																</xf:button>
															</span>
														</div>
													</div>

													<article class="message-body">
														<xf:if is="$quote === true">
															{{ bb_code($message.{$messageKey}, $bbCodeContext, $message) }}
														<xf:else />
															{{ bb_code($quote, $bbCodeContext, $message) }}
														</xf:if>
													</article>

													<div class="message-gradient"></div>
												</div>
											</div>
										</div>
									</div>
								</li>
							</xf:foreach>
						</xf:if>
					</xf:foreach>
				</ol>
				<xf:hiddenval name="message_ids" value="" />
			</div>
			<div class="block-footer">
				<span class="block-footer-controls"><xf:button class="button--primary button--small u-pullRight js-quoteMessages" icon="quote">
					{{ phrase('quote_messages') }}
				</xf:button></span>
			</div>
		</div>
	</div>
</xf:macro>

<xf:macro name="button"
	arg-href="!"
	arg-messageSelector="!"
	arg-storageKey="!"
	arg-addMessage="{{ phrase('multiquote_add_message') }}"
	arg-removeMessage="{{ phrase('multiquote_remove_message') }}"
	arg-row="{{ false }}">

	<xf:js src="xf/message.js" min="1" />
	<xf:set var="$button">
		<xf:button class="button--link button--multiQuote"
			style="display: none;"
			data-xf-init="multi-quote"
			data-href="{$href}"
			data-message-selector="{$messageSelector}"
			data-storage-key="{$storageKey}"
			data-add-message="{{ phrase('multiquote_add_message') }}"
			data-remove-message="{{ phrase('multiquote_remove_message') }}"
			icon="quote">
			{{ phrase('insert_quotes...') }}
		</xf:button>
	</xf:set>
	<xf:if is="$row">
		<xf:formrow label="">
			{$button|raw}
		</xf:formrow>
	<xf:else />
		{$button|raw}
	</xf:if>
</xf:macro>]]></template>
  <template type="public" title="multi_quote_sort.less" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[.nestable-list
{
	.m-listPlain();
}

.nestable-placeholder,
.nestable-empty
{
	opacity: .6;
	background: @xf-contentAltBg;
	border: @xf-borderSize solid @xf-borderColor;
	border-bottom: none;
	margin-left: 0;
}

.nestable-item,
.nestable-empty,
.nestable-placeholder
{
	position: relative;
	vertical-align: middle;
}

.nestable-dragel
{
	position: absolute;
	pointer-events: none;
	z-index: 9999;
	background: @xf-contentBg;
	opacity: 0.9;
}

.nestable-handle
{
	position: absolute;
	width: 100%;
	height: 100%;
	top: 0;
	left: 0;
	z-index: 10000;
	cursor: move;

	display: flex;
	align-items: center;
	justify-content: center;
}]]></template>
  <template type="public" title="nestable.less" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[.nestable-container
{
	position: relative;

	&:first-child
	{
		padding: 0 @xf-paddingMedium;
	}

	.m-clearFix();
}

.nestable-list
{
	.m-listPlain();

	width: 100%;
	position: relative;

	.nestable-list
	{
		padding-left: 30px;
	}

	.nestable-collapsed
	{
		.nestable-list
		{
			display: none;
		}
	}
}

.nestable-item
{
	.nestable-handle,
	.nestable-content,
	.nestable-button
	{
		border: 1px solid @xf-borderColor;
		border-radius: @xf-borderRadiusSmall;
		padding: @xf-paddingMedium;

		background-color: @xf-contentAltBg;
	}

	.nestable-button
	{
		float: left;

		color: @xf-textColorMuted;
		margin-left: 30px;

		border-radius: 0;
		border-left: none;
		border-right: none;
		outline: none;
	}

	.nestable-handle
	{
		position: absolute;
		margin: 0;
		left: 0;
		top: 0;
		width: 30px;

		text-align: center;
		color: @xf-textColorMuted;
		cursor: move;

		border-right: @xf-borderSize solid @xf-borderColor;
		border-top-right-radius: 0;
		border-bottom-right-radius: 0;

		&.nestable-handle--full
		{
			bottom: 0;
		}
	}

	.nestable-content
	{
		text-overflow: ellipsis;
		overflow: hidden;
		white-space: nowrap;

		color: @xf-textColorMuted;

		margin: @xf-paddingMedium 0;
		margin-left: 30px;

		border-left: none;
		border-top-left-radius: 0;
		border-bottom-left-radius: 0;
	}
}

.nestable-item,
.nestable-empty,
.nestable-placeholder
{
	position: relative;
	vertical-align: middle;
}

.nestable-placeholder,
.nestable-empty
{
	opacity: .6;
	border: 1px solid @xf-borderColor;
	background: @xf-contentAltBg;
	border-radius: @xf-borderRadiusSmall;
	margin: @xf-paddingMedium 0;
}

.nestable-empty
{
	min-height: floor((@xf-fontSizeNormal) * 1.475 + 2 * (@xf-paddingMedium) + 2 * (@xf-borderSize));
}

.nestable-dragel
{
	position: absolute;
	pointer-events: none;
	z-index: 9999;
}]]></template>
  <template type="public" title="nestable_macros" version_id="2000053" version_string="2.0.0 Release Candidate 3"><![CDATA[<xf:macro name="setup" arg-includeLess="{{ true }}">
	<xf:if is="$includeLess">
		<xf:css src="public:nestable.less" />
	</xf:if>
	<xf:js prod="xf/nestable-compiled.js" dev="vendor/nestable/jquery.nestable.js, xf/nestable.js" />
</xf:macro>]]></template>
  <template type="public" title="news_feed" version_id="2000370" version_string="2.0.3"><![CDATA[<xf:title>{{ phrase('your_news_feed') }}</xf:title>

<xf:wrap template="whats_new_wrapper">
	<xf:set var="$pageSelected" value="news_feed" />
</xf:wrap>

<div class="block">
	<div class="block-container">
		<xf:if is="$newsFeedItems is not empty">
			<ul class="block-body js-newsFeedTarget">
				<xf:foreach loop="$newsFeedItems" value="$item">
					<xf:macro template="news_feed_macros" name="feed_row" arg-item="{$item}" />
				</xf:foreach>
			</ul>
			<div class="block-footer js-newsFeedLoadMore">
				<span class="block-footer-controls"><xf:button href="{{ link('whats-new/news-feed', null, {'before_id': $oldestItemId}) }}"
					rel="nofollow"
					data-xf-click="inserter"
					data-append=".js-newsFeedTarget"
					data-replace=".js-newsFeedLoadMore">
					{{ phrase('show_older_items') }}
				</xf:button></span>
			</div>
		<xf:elseif is="$beforeId" />
			<div class="block-body js-newsFeedTarget">
				<div class="block-row block-row--separated">{{ phrase('there_no_more_items_to_show') }}</div>
			</div>
		<xf:else />
			<div class="block-body js-newsFeedTarget">
				<div class="block-row">
					{{ phrase('your_news_feed_is_currently_empty') }}
					<a href="{{ link('account/following') }}">{{ phrase('follow_people_to_fill_it') }}</a>
				</div>
			</div>
		</xf:if>
	</div>
</div>]]></template>
  <template type="public" title="news_feed_attached_images" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro name="attached_images" arg-attachments="!" arg-link="!">
	<xf:if contentcheck="true">
		<ul class="listPlain listInline listInline--block">
			<xf:contentcheck>
				<xf:foreach loop="$attachments" value="$attachment" if="$attachment.has_thumbnail">
					<li>
						<a href="{$link}"><img src="{$attachment.thumbnail_url}" alt="{$attachment.filename}" /></a>
					</li>
				</xf:foreach>
			</xf:contentcheck>
		</ul>
	</xf:if>
</xf:macro>]]></template>
  <template type="public" title="news_feed_item_post_insert" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<div class="contentRow-title">
	{{ phrase('news_feed_post_insert', {
		'username': username_link($user, false, {'defaultname': $newsFeed.username}),
		'threadTitle': '<a href="' . link('posts', $content) . '">' . prefix('thread', $content.Thread) . $content.Thread.title . '</a>'
	}) }}
</div>

<div class="contentRow-snippet">{{ snippet($content.message, $xf.options.newsFeedMessageSnippetLength, {'stripQuote': true}) }}</div>
<xf:if is="{$content.attach_count}">
	<xf:macro template="news_feed_attached_images" name="attached_images"
		arg-attachments="{$content.Attachments}" arg-link="{{ link('posts', $content) }}" />
</xf:if>

<div class="contentRow-minor"><xf:date time="{$newsFeed.event_date}" /></div>]]></template>
  <template type="public" title="news_feed_item_post_reaction" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:macro template="reaction_item_post" name="reaction_snippet"
	arg-reactionUser="{$user}"
	arg-reactionId="{$extra.reaction_id}"
	arg-post="{$content}"
	arg-date="{$newsFeed.event_date}" />]]></template>
  <template type="public" title="news_feed_item_profile_post_comment_insert" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<div class="contentRow-title">
	{{ phrase('news_feed_profile_post_comment_insert', {
		'usernamePoster': username_link($user, false, {'defaultname': $newsFeed.username}),
		'usernameReceiver': '<a href="' . link('profile-posts/comments', $content) . '">' . $content.ProfilePost.username . '</a>'
	}) }}
</div>

<div class="contentRow-snippet">{{ snippet($content.message, $xf.options.newsFeedMessageSnippetLength, {'stripQuote': true}) }}</div>

<div class="contentRow-minor"><xf:date time="{$newsFeed.event_date}" /></div>]]></template>
  <template type="public" title="news_feed_item_profile_post_comment_reaction" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:macro template="reaction_item_profile_post_comment" name="reaction_snippet"
	arg-reactionUser="{$user}"
	arg-reactionId="{$extra.reaction_id}"
	arg-comment="{$content}"
	arg-date="{$newsFeed.event_date}" />]]></template>
  <template type="public" title="news_feed_item_profile_post_insert" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<div class="contentRow-title">
	<xf:if is="$user.user_id == $content.ProfileUser.user_id">
		{{ phrase('news_feed_profile_post_insert_status', {
			'username': username_link($user, false, {'defaultname': $newsFeed.username}),
			'href': link('profile-posts', $content)
		}) }}
	<xf:else />
		{{ phrase('news_feed_profile_post_insert', {
			'usernamePoster': username_link($user, false, {'defaultname': $newsFeed.username}),
			'usernameReceiver': '<a href="' . link('profile-posts', $content) . '">' . $content.ProfileUser.username . '</a>'
		}) }}
	</xf:if>
</div>

<div class="contentRow-snippet">{{ snippet($content.message, $xf.options.newsFeedMessageSnippetLength, {'stripQuote': true}) }}</div>

<div class="contentRow-minor"><xf:date time="{$newsFeed.event_date}" /></div>]]></template>
  <template type="public" title="news_feed_item_profile_post_reaction" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:macro template="reaction_item_profile_post" name="reaction_snippet"
	arg-reactionUser="{$user}"
	arg-reactionId="{$extra.reaction_id}"
	arg-profilePost="{$content}"
	arg-date="{$newsFeed.event_date}" />]]></template>
  <template type="public" title="news_feed_item_thread_insert" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<div class="contentRow-title">
	{{ phrase('news_feed_thread_insert', {
		'username': username_link($user, false, {'defaultname': $newsFeed.username}),
		'threadTitle': '<a href="' . link('threads', $content) . '">' . prefix('thread', $content) . $content.title . '</a>',
		'forumTitle': '<a href="' . link('forums', $content.Forum) . '">' . $content.Forum.title . '</a>'
	}) }}
</div>

<div class="contentRow-snippet">{{ snippet($content.FirstPost.message, $xf.options.newsFeedMessageSnippetLength, {'stripQuote': true}) }}</div>
<xf:if is="{$content.FirstPost.attach_count}">
	<xf:macro template="news_feed_attached_images" name="attached_images"
		arg-attachments="{$content.FirstPost.Attachments}" arg-link="{{ link('threads', $content) }}" />
</xf:if>

<div class="contentRow-minor"><xf:date time="{$newsFeed.event_date}" /></div>]]></template>
  <template type="public" title="news_feed_macros" version_id="2001170" version_string="2.0.11"><![CDATA[<xf:macro name="feed_row" arg-item="!">
	<li class="block-row block-row--separated {{ $xf.visitor.isIgnoring($item.user_id) ? ' is-ignored' : '' }}" data-author="{{ $item.User ? $item.User.username : $item.username }}">
		<xf:macro name="feed_item" arg-item="{$item}" />
	</li>
</xf:macro>

<xf:macro name="feed_item" arg-item="!">
	<div class="contentRow{{ $item.isVisible() ? '' : ' is-deleted' }}">
		<span class="contentRow-figure">
			<xf:avatar user="$item.User" size="s" defaultname="{$item.username}" />
		</span>
		<div class="contentRow-main">
			{$item.render()|raw}
		</div>
	</div>
</xf:macro>]]></template>
  <template type="public" title="node_list.less" version_id="2010037" version_string="2.1.0 Beta 7"><![CDATA[@_nodeList-statsCellBreakpoint: 1000px;

.node
{
	& + .node
	{
		border-top: @xf-borderSize solid @xf-borderColorFaint;
	}
}

.node-body
{
	display: table;
	table-layout: fixed;
	width: 100%;
}

.node-icon
{
	display: table-cell;
	vertical-align: middle;
	text-align: center;
	width: 46px;
	padding: @xf-paddingLarge 0 @xf-paddingLarge @xf-paddingLarge;

	i
	{
		display: block;
		line-height: 1.125;
		font-size: 32px;

		&:before
		{
			.m-faBase();

			color: @xf-nodeIconReadColor;

			.node--unread &
			{
				opacity: 1;
				color: @xf-nodeIconUnreadColor;
			}
		}

		.node--forum &:before,
		.node--category &:before
		{
			.m-faContent(@fa-var-comments);
		}

		.node--page &:before
		{
			.m-faContent(@fa-var-file-alt);
		}

		.node--link &:before
		{
			.m-faContent(@fa-var-link);
		}
	}
}

.node-main
{
	display: table-cell;
	vertical-align: middle;
	padding: @xf-paddingLarge;
}

.node-stats
{
	display: table-cell;
	width: 140px;
	vertical-align: middle;
	text-align: center;
	padding: @xf-paddingLarge 0;

	> dl.pairs.pairs--rows
	{
		width: 50%;
		float: left;
		margin: 0;
		padding: 0 @xf-paddingMedium/2;

		&:first-child
		{
			padding-left: 0;
		}

		&:last-child
		{
			padding-right: 0;
		}
	}

	&.node-stats--single
	{
		width: 100px;

		> dl.pairs.pairs--rows
		{
			width: 100%;
			float: none;
		}
	}

	&.node-stats--triple
	{
		width: 240px;

		> dl.pairs.pairs--rows
		{
			width: 33.333%;
		}
	}

	@media (max-width: @_nodeList-statsCellBreakpoint)
	{
		display: none;
	}
}

@_nodeExtra-avatarSize: 36px;

.node-extra
{
	display: table-cell;
	vertical-align: middle;
	width: 280px;
	padding: @xf-paddingLarge;

	font-size: @xf-fontSizeSmall;
}

.node-extra-row
{
	.m-overflowEllipsis();
	color: @xf-textColorMuted;
}

.node-extra-icon
{
	padding-right: @xf-paddingLarge;
	float: left;

	.avatar
	{
		.m-avatarSize(@_nodeExtra-avatarSize);
	}
}

.node-extra-placeholder
{
	font-style: italic;
}

.node-title
{
	margin: 0;
	padding: 0;
	font-size: @xf-fontSizeLarge;
	font-weight: @xf-fontWeightNormal;

	.node--unread &
	{
		font-weight: @xf-fontWeightHeavy;
	}
}

.node-description
{
	font-size: @xf-fontSizeSmall;
	color: @xf-textColorDimmed;

	&.node-description--tooltip
	{
		.has-js:not(.has-touchevents) &
		{
			display: none;
		}
	}
}

.node-meta
{
	font-size: @xf-fontSizeSmall;
}

.node-statsMeta
{
	display: none;

	@media (max-width: @_nodeList-statsCellBreakpoint)
	{
		display: inline;
	}
}

.node-bonus
{
	font-size: @xf-fontSizeSmall;
	color: @xf-textColorMuted;
	text-align: right;
}

.node-subNodesFlat
{
	font-size: @xf-fontSizeSmall;
	margin-top: .3em;

	.node-subNodesLabel
	{
		display: none;
	}
}

.node-subNodeMenu
{
	display: inline;

	.menuTrigger
	{
		color: @xf-textColorMuted;
	}
}

@media (max-width: @xf-responsiveMedium)
{
	.node-main
	{
		display: block;
		width: auto;
	}

	.node-extra
	{
		display: block;
		width: auto;
		// this gives an equivalent of medium padding between main and extra, with main still having large
		margin-top: (@xf-paddingMedium - @xf-paddingLarge);
		padding-top: 0;
	}

	.node-extra-row
	{
		display: inline-block;
		vertical-align: top;
		max-width: 100%;
	}

	.node-extra-icon
	{
		display: none;
	}

	.node-description,
	.node-stats,
	.node-subNodesFlat
	{
		display: none;
	}
}

@media (max-width: @xf-responsiveNarrow)
{
	.node-subNodeMenu
	{
		display: none;
	}
}

.subNodeLink
{
	&:before
	{
		display: inline-block;
		.m-faBase();
		width: 1em;
		padding-right: .3em;
		text-decoration: none;

		color: @xf-nodeIconReadColor;
	}

	&:hover:before
	{
		text-decoration: none;
	}

	&.subNodeLink--unread
	{
		font-weight: @xf-fontWeightHeavy;

		&:before
		{
			color: @xf-nodeIconUnreadColor;
		}
	}

	&.subNodeLink--forum:before,
	&.subNodeLink--category:before
	{
		.m-faContent(@fa-var-comments);
	}

	&.subNodeLink--page:before
	{
		.m-faContent(@fa-var-file-alt);
	}

	&.subNodeLink--link:before
	{
		.m-faContent(@fa-var-link);
	}
}

.node-subNodeFlatList
{
	.m-listPlain();
	.m-clearFix();

	> li
	{
		display: inline-block;
		margin-right: 1em;

		&:last-child
		{
			margin-right: 0;
		}
	}

	ol,
	ul,
	.node-subNodes
	{
		display: none;
	}
}

.subNodeMenu
{
	.m-listPlain();

	ol,
	ul
	{
		.m-listPlain();
	}

	.subNodeLink
	{
		display: block;
		padding: @xf-blockPaddingV @xf-blockPaddingH;
		text-decoration: none;
		cursor: pointer;

		&:hover
		{
			text-decoration: none;
			background: @xf-contentHighlightBg;
		}
	}

	li li .subNodeLink { padding-left: 1.5em; }
	li li li .subNodeLink { padding-left: 3em; }
	li li li li .subNodeLink { padding-left: 4.5em; }
	li li li li li .subNodeLink { padding-left: 6em; }
	li li li li li li .subNodeLink { padding-left: 7.5em; }
}]]></template>
  <template type="public" title="node_list_category" version_id="2010035" version_string="2.1.0 Beta 5"><![CDATA[<xf:macro name="depth1" arg-node="!" arg-extras="!" arg-children="!" arg-childExtras="!" arg-depth="1">
	<div class="block block--category block--category{$node.node_id}">
		<span class="u-anchorTarget" id="{$node.Data.getCategoryAnchor()}"></span>
		<div class="block-container">
			<h2 class="block-header">
				<a href="{{ link('categories', $node) }}">{$node.title}</a>
				<xf:if is="{$node.description}"><span class="block-desc">{$node.description|raw}</span></xf:if>
			</h2>
			<div class="block-body">
				<xf:macro template="forum_list" name="node_list"
					arg-children="{$children}"
					arg-extras="{$childExtras}"
					arg-depth="{{ $depth + 1 }}" />
			</div>
		</div>
	</div>
</xf:macro>

<xf:macro name="depth2" arg-node="!" arg-extras="!" arg-children="!" arg-childExtras="!" arg-depth="1">
	<div class="node node--id{$node.node_id} node--depth{$depth} node--category {{ $extras.hasNew ? 'node--unread' : 'node--read' }}">
		<div class="node-body">
			<span class="node-icon" aria-hidden="true"><i></i></span>
			<div class="node-main js-nodeMain">
				<xf:set var="$descriptionDisplay" value="{{ property('nodeListDescriptionDisplay') }}" />
				<h3 class="node-title">
					<a href="{{ link('categories', $node) }}" data-xf-init="{{ $descriptionDisplay == 'tooltip' ? 'element-tooltip' : '' }}" data-shortcut="node-description">{$node.title}</a>
				</h3>
				<xf:if is="$descriptionDisplay != 'none' && $node.description">
					<div class="node-description {{ $descriptionDisplay == 'tooltip' ? 'node-description--tooltip js-nodeDescTooltip' : '' }}">{$node.description|raw}</div>
				</xf:if>

				<div class="node-meta">
					<xf:if is="!{$extras.privateInfo}">
						<div class="node-statsMeta">
							<dl class="pairs pairs--inline">
								<dt>{{ phrase('threads') }}</dt>
								<dd>{$extras.discussion_count|number_short(1)}</dd>
							</dl>
							<dl class="pairs pairs--inline">
								<dt>{{ phrase('messages') }}</dt>
								<dd>{$extras.message_count|number_short(1)}</dd>
							</dl>
						</div>
					</xf:if>

					<xf:if is="$depth == 2 AND property('nodeListSubDisplay') == 'menu'">
						<xf:macro template="forum_list" name="sub_nodes_menu"
							arg-children="{$children}"
							arg-childExtras="{$childExtras}"
							arg-depth="{{ $depth + 1 }}" />
					</xf:if>
				</div>

				<xf:if is="$depth == 2 AND property('nodeListSubDisplay') == 'flat'">
					<xf:macro template="forum_list" name="sub_nodes_flat"
						arg-children="{$children}"
						arg-childExtras="{$childExtras}"
						arg-depth="{{ $depth + 1 }}" />
				</xf:if>
			</div>

			<xf:if is="!{$extras.privateInfo}">
				<div class="node-stats">
					<dl class="pairs pairs--rows">
						<dt>{{ phrase('threads') }}</dt>
						<dd>{$extras.discussion_count|number_short(1)}</dd>
					</dl>
					<dl class="pairs pairs--rows">
						<dt>{{ phrase('messages') }}</dt>
						<dd>{$extras.message_count|number_short(1)}</dd>
					</dl>
				</div>
			</xf:if>

			<div class="node-extra">
				<xf:if is="{$extras.privateInfo}">
					<span class="node-extra-placeholder">{{ phrase('private') }}</span>
				<xf:elseif is="{$extras.LastThread}" />
					<div class="node-extra-icon">
						<xf:avatar user="{$extras.LastPostUser}" size="xs" />
					</div>
					<div class="node-extra-row">
						<xf:if is="$extras.LastThread.isUnread()">
							<a href="{{ link('threads/unread', $extras.LastThread) }}" class="node-extra-title" title="{$extras.LastThread.title}">{{ prefix('thread', $extras.LastThread) }}{$extras.LastThread.title}</a>
						<xf:else />
							<a href="{{ link('threads/post', $extras.LastThread, {'post_id': $extras.last_post_id}) }}" class="node-extra-title" title="{$extras.LastThread.title}">{{ prefix('thread', $extras.LastThread) }}{$extras.LastThread.title}</a>
						</xf:if>
					</div>
					<div class="node-extra-row">
						<ul class="listInline listInline--bullet">
							<li class="node-extra-date"><xf:date time="{$extras.last_post_date}" /></li>
							<xf:if is="$xf.visitor.isIgnoring($extras.last_post_user_id)">
								<li class="node-extra-user">{{ phrase('ignored_member') }}</li>
							<xf:else />
								<li class="node-extra-user"><xf:username user="{$extras.LastPostUser}" /></li>
							</xf:if>
						</ul>
					</div>
				<xf:else />
					<span class="node-extra-placeholder">{{ phrase('none') }}</span>
				</xf:if>
			</div>
		</div>
	</div>
</xf:macro>

<xf:macro name="depthN" arg-node="!" arg-extras="!" arg-children="!" arg-childExtras="!" arg-depth="1">
	<li>
		<a href="{{ link('categories', $node) }}" class="subNodeLink subNodeLink--category {{ $extras.hasNew ? 'subNodeLink--unread' : '' }}">{$node.title}</a>
		<xf:macro template="forum_list" name="sub_node_list"
			arg-children="{$children}"
			arg-childExtras="{$childExtras}"
			arg-depth="{{ $depth + 1 }}" />
	</li>
</xf:macro>]]></template>
  <template type="public" title="node_list_forum" version_id="2010036" version_string="2.1.0 Beta 6"><![CDATA[<xf:macro name="depth1" arg-node="!" arg-extras="!" arg-children="!" arg-childExtras="!" arg-depth="1">
	<div class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:macro name="forum"
					arg-node="{$node}"
					arg-extras="{$extras}"
					arg-children="{$children}"
					arg-childExtras="{$childExtras}"
					arg-depth="{$depth}" />
			</div>
		</div>
	</div>
</xf:macro>

<xf:macro name="depth2" arg-node="!" arg-extras="!" arg-children="!" arg-childExtras="!" arg-depth="1">
	<xf:macro name="forum"
		arg-node="{$node}"
		arg-extras="{$extras}"
		arg-children="{$children}"
		arg-childExtras="{$childExtras}"
		arg-depth="{$depth}" />
</xf:macro>

<xf:macro name="depthN" arg-node="!" arg-extras="!" arg-children="!" arg-childExtras="!" arg-depth="1">
	<li>
		<a href="{{ link('forums', $node) }}" class="subNodeLink subNodeLink--forum {{ $extras.hasNew ? 'subNodeLink--unread' : '' }}">{$node.title}</a>
		<xf:macro template="forum_list" name="sub_node_list"
			arg-children="{$children}"
			arg-childExtras="{$childExtras}"
			arg-depth="{{ $depth + 1 }}" />
	</li>
</xf:macro>

<xf:macro name="forum"
	arg-node="!"
	arg-extras="!"
	arg-children="!"
	arg-childExtras="!"
	arg-depth="!"
	arg-chooseName=""
	arg-bonusInfo="">

	<div class="node node--id{$node.node_id} node--depth{$depth} node--forum {{ $extras.hasNew ? 'node--unread' : 'node--read' }}">
		<div class="node-body">
			<span class="node-icon" aria-hidden="true"><i></i></span>
			<div class="node-main js-nodeMain">
				<xf:if is="$chooseName">
					<xf:checkbox standalone="true">
						<xf:option labelclass="u-pullRight" class="js-chooseItem" name="{$chooseName}[]" value="{$node.node_id}" />
					</xf:checkbox>
				</xf:if>

				<xf:set var="$descriptionDisplay" value="{{ property('nodeListDescriptionDisplay') }}" />
				<h3 class="node-title">
					<a href="{{ link('forums', $node) }}" data-xf-init="{{ $descriptionDisplay == 'tooltip' ? 'element-tooltip' : '' }}" data-shortcut="node-description">{$node.title}</a>
				</h3>
				<xf:if is="$descriptionDisplay != 'none' && $node.description">
					<div class="node-description {{ $descriptionDisplay == 'tooltip' ? 'node-description--tooltip js-nodeDescTooltip' : '' }}">{$node.description|raw}</div>
				</xf:if>

				<div class="node-meta">
					<xf:if is="!{$extras.privateInfo}">
						<div class="node-statsMeta">
							<dl class="pairs pairs--inline">
								<dt>{{ phrase('threads') }}</dt>
								<dd>{$extras.discussion_count|number_short(1)}</dd>
							</dl>
							<dl class="pairs pairs--inline">
								<dt>{{ phrase('messages') }}</dt>
								<dd>{$extras.message_count|number_short(1)}</dd>
							</dl>
						</div>
					</xf:if>

					<xf:if is="$depth == 2 AND property('nodeListSubDisplay') == 'menu'">
						<xf:macro template="forum_list" name="sub_nodes_menu"
							arg-children="{$children}"
							arg-childExtras="{$childExtras}"
							arg-depth="{{ $depth + 1 }}" />
					</xf:if>
				</div>

				<xf:if is="$depth == 2 AND property('nodeListSubDisplay') == 'flat'">
					<xf:macro template="forum_list" name="sub_nodes_flat"
						arg-children="{$children}"
						arg-childExtras="{$childExtras}"
						arg-depth="{{ $depth + 1 }}" />
				</xf:if>

				<xf:if is="$bonusInfo is not empty">
					<div class="node-bonus">{$bonusInfo}</div>
				</xf:if>
			</div>

			<xf:if is="!{$extras.privateInfo}">
				<div class="node-stats">
					<dl class="pairs pairs--rows">
						<dt>{{ phrase('threads') }}</dt>
						<dd>{$extras.discussion_count|number_short(1)}</dd>
					</dl>
					<dl class="pairs pairs--rows">
						<dt>{{ phrase('messages') }}</dt>
						<dd>{$extras.message_count|number_short(1)}</dd>
					</dl>
				</div>
			</xf:if>

			<div class="node-extra">
				<xf:if is="{$extras.privateInfo}">
					<span class="node-extra-placeholder">{{ phrase('private') }}</span>
				<xf:elseif is="{$extras.LastThread}" />
					<div class="node-extra-icon">
						<xf:if is="$xf.visitor.isIgnoring($extras.last_post_user_id)">
							<xf:avatar user="{{ null }}" size="xs" />
						<xf:else />
							<xf:avatar user="{$extras.LastPostUser}" size="xs" />
						</xf:if>
					</div>
					<div class="node-extra-row">
						<xf:if is="$extras.LastThread.isUnread()">
							<a href="{{ link('threads/unread', $extras.LastThread) }}" class="node-extra-title" title="{$extras.LastThread.title}">{{ prefix('thread', $extras.LastThread) }}{$extras.LastThread.title}</a>
						<xf:else />
							<a href="{{ link('threads/post', $extras.LastThread, {'post_id': $extras.last_post_id}) }}" class="node-extra-title" title="{$extras.LastThread.title}">{{ prefix('thread', $extras.LastThread) }}{$extras.LastThread.title}</a>
						</xf:if>
					</div>
					<div class="node-extra-row">
						<ul class="listInline listInline--bullet">
							<li><xf:date time="{$extras.last_post_date}" class="node-extra-date" /></li>
							<xf:if is="$xf.visitor.isIgnoring($extras.last_post_user_id)">
								<li class="node-extra-user">{{ phrase('ignored_member') }}</li>
							<xf:else />
								<li class="node-extra-user"><xf:username user="{$extras.LastPostUser}" defaultname="{$extras.last_post_username}" /></li>
							</xf:if>
						</ul>
					</div>
				<xf:else />
					<span class="node-extra-placeholder">{{ phrase('none') }}</span>
				</xf:if>
			</div>
		</div>
	</div>

	<xf:if is="{$depth} == 1">
		<xf:macro template="forum_list" name="node_list"
			arg-children="{$children}"
			arg-extras="{$childExtras}"
			arg-depth="{{ $depth + 1 }}" />
	</xf:if>
</xf:macro>]]></template>
  <template type="public" title="node_list_link_forum" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro name="depth1" arg-node="!" arg-extras="!" arg-children="!" arg-childExtras="!" arg-depth="1">
	<div class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:macro name="link_forum"
					arg-node="{$node}"
					arg-extras="{$extras}"
					arg-children="{$children}"
					arg-childExtras="{$childExtras}"
					arg-depth="{$depth}" />
			</div>
		</div>
	</div>
</xf:macro>

<xf:macro name="depth2" arg-node="!" arg-extras="!" arg-children="!" arg-childExtras="!" arg-depth="1">
	<xf:macro name="link_forum"
		arg-node="{$node}"
		arg-extras="{$extras}"
		arg-children="{$children}"
		arg-childExtras="{$childExtras}"
		arg-depth="{$depth}" />
</xf:macro>

<xf:macro name="depthN" arg-node="!" arg-extras="!" arg-children="!" arg-childExtras="!" arg-depth="1">
	<li>
		<a href="{{ link('link-forums', $node) }}" class="subNodeLink subNodeLink--link">{$node.title}</a>
		<xf:macro template="forum_list" name="sub_node_list"
			arg-children="{$children}"
			arg-childExtras="{$childExtras}"
			arg-depth="{{ $depth + 1 }}" />
	</li>
</xf:macro>

<xf:macro name="link_forum" arg-node="!" arg-extras="!" arg-children="{$children}" arg-childExtras="{$childExtras}" arg-depth="!">
	<div class="node node--id{$node.node_id} node--depth{$depth} node--link">
		<div class="node-body">
			<span class="node-icon" aria-hidden="true"><i></i></span>
			<div class="node-main js-nodeMain">
				<xf:set var="$descriptionDisplay" value="{{ property('nodeListDescriptionDisplay') }}" />
				<h3 class="node-title">
					 <a href="{{ link('link-forums', $node) }}" data-xf-init="{{ $descriptionDisplay == 'tooltip' ? 'element-tooltip' : '' }}" data-shortcut="node-description">{$node.title}</a>
				</h3>
				<xf:if is="$descriptionDisplay != 'none' && $node.description">
					<div class="node-description {{ $descriptionDisplay == 'tooltip' ? 'node-description--tooltip js-nodeDescTooltip' : '' }}">{$node.description|raw}</div>
				</xf:if>

				<xf:if is="$depth == 2 AND property('nodeListSubDisplay') == 'menu'">
					<div class="node-meta">
						<xf:macro template="forum_list" name="sub_nodes_menu"
							arg-children="{$children}"
							arg-childExtras="{$childExtras}"
							arg-depth="{{ $depth + 1 }}" />
					</div>
				</xf:if>

				<xf:if is="$depth == 2 AND property('nodeListSubDisplay') == 'flat'">
					<xf:macro template="forum_list" name="sub_nodes_flat"
						arg-children="{$children}"
						arg-childExtras="{$childExtras}"
						arg-depth="{{ $depth + 1 }}" />
				</xf:if>
			</div>
		</div>
	</div>

	<xf:if is="{$depth} == 1">
		<xf:macro template="forum_list" name="node_list"
			arg-children="{$children}"
			arg-extras="{$childExtras}"
			arg-depth="{{ $depth + 1 }}" />
	</xf:if>
</xf:macro>]]></template>
  <template type="public" title="node_list_page" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro name="depth1" arg-node="!" arg-extras="!" arg-children="!" arg-childExtras="!" arg-depth="1">
	<div class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:macro name="page"
					arg-node="{$node}"
					arg-extras="{$extras}"
					arg-children="{$children}"
					arg-childExtras="{$childExtras}"
					arg-depth="{$depth}" />
			</div>
		</div>
	</div>
</xf:macro>

<xf:macro name="depth2" arg-node="!" arg-extras="!" arg-children="!" arg-childExtras="!" arg-depth="1">
	<xf:macro name="page"
		arg-node="{$node}"
		arg-extras="{$extras}"
		arg-children="{$children}"
		arg-childExtras="{$childExtras}"
		arg-depth="{$depth}" />
</xf:macro>

<xf:macro name="depthN" arg-node="!" arg-extras="!" arg-children="!" arg-childExtras="!" arg-depth="1">
	<li>
		<a href="{{ link('pages', $node) }}" class="subNodeLink subNodeLink--page">{$node.title}</a>
		<xf:macro template="forum_list" name="sub_node_list"
			arg-children="{$children}"
			arg-childExtras="{$childExtras}"
			arg-depth="{{ $depth + 1 }}" />
	</li>
</xf:macro>

<xf:macro name="page" arg-node="!" arg-extras="!" arg-children="{$children}" arg-childExtras="{$childExtras}" arg-depth="!">
	<div class="node node--id{$node.node_id} node--depth{$depth} node--page">
		<div class="node-body">
			<span class="node-icon" aria-hidden="true"><i></i></span>
			<div class="node-main js-nodeMain">
				<xf:set var="$descriptionDisplay" value="{{ property('nodeListDescriptionDisplay') }}" />
				<h3 class="node-title">
					<a href="{{ link('pages', $node) }}" data-xf-init="{{ $descriptionDisplay == 'tooltip' ? 'element-tooltip' : '' }}" data-shortcut="node-description">{$node.title}</a>
				</h3>
				<xf:if is="$descriptionDisplay != 'none' && $node.description">
					<div class="node-description {{ $descriptionDisplay == 'tooltip' ? 'node-description--tooltip js-nodeDescTooltip' : '' }}">{$node.description|raw}</div>
				</xf:if>

				<xf:if is="$depth == 2 AND property('nodeListSubDisplay') == 'menu'">
					<div class="node-meta">
						<xf:macro template="forum_list" name="sub_nodes_menu"
							arg-children="{$children}"
							arg-childExtras="{$childExtras}"
							arg-depth="{{ $depth + 1 }}" />
					</div>
				</xf:if>

				<xf:if is="$depth == 2 AND property('nodeListSubDisplay') == 'flat'">
					<xf:macro template="forum_list" name="sub_nodes_flat"
						arg-children="{$children}"
						arg-childExtras="{$childExtras}"
						arg-depth="{{ $depth + 1 }}" />
				</xf:if>
			</div>
		</div>
	</div>

	<xf:if is="{$depth} == 1">
		<xf:macro template="forum_list" name="node_list"
			arg-children="{$children}"
			arg-extras="{$childExtras}"
			arg-depth="{{ $depth + 1 }}" />
	</xf:if>
</xf:macro>]]></template>
  <template type="public" title="normalize.css" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */
button,hr,input{overflow:visible}audio,canvas,progress,video{display:inline-block}progress,sub,sup{vertical-align:baseline}[type=checkbox],[type=radio],legend{box-sizing:border-box;padding:0}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative}sub{bottom:-.25em}sup{top:-.5em}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:ButtonText dotted 1px}fieldset{padding:.35em .75em .625em}legend{color:inherit;display:table;max-width:100%;white-space:normal}textarea{overflow:auto}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}]]></template>
  <template type="public" title="notice_board_closed" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[{{ phrase('forum_is_currently_closed_only_admins_may_access') }}<br />
<a href="{{ link_type('admin', 'options/groups', {'group_id': 'boardActive'}) }}">{{ phrase('reopen_via_admin_control_panel') }}</a>]]></template>
  <template type="public" title="notice_confirm_email" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[{{ phrase('your_account_is_currently_awaiting_confirmation_confirmation_sent_to_x', {'email': $xf.visitor.email}) }}<br />
<a href="{{ link('account-confirmation/resend') }}" data-xf-click="overlay">{{ phrase('resend_confirmation_email') }}</a>]]></template>
  <template type="public" title="notice_cookies" version_id="2001070" version_string="2.0.10"><![CDATA[<div class="u-alignCenter">
	{{ phrase('this_site_uses_cookies_notice') }}
</div>

<div class="u-inputSpacer u-alignCenter">
	<xf:button icon="confirm" href="{{ link('account/dismiss-notice', null, {'notice_id': $notice.notice_id}) }}" class="js-noticeDismiss button--notice" data-xf-init="tooltip" title="{{ phrase('dismiss_notice') }}">{{ phrase('accept') }}</xf:button>
	<xf:button href="{{ link('help/cookies') }}" class="button--notice">{{ phrase('learn_more...') }}</xf:button>
</div>]]></template>
  <template type="public" title="notice_dismiss" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('dismiss_notice') }}</xf:title>

<xf:form action="{{ link('account/dismiss-notice', null, {'notice_id': $notice.notice_id}) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('confirm_dismiss_notice') }}
			</xf:inforow>
		</div>
		<xf:submitrow submit="{{ phrase('dismiss') }}" rowtype="simple" />
	</div>
	<xf:redirect />
</xf:form>]]></template>
  <template type="public" title="notice_email_bounce" version_id="2000170" version_string="2.0.1"><![CDATA[{{ phrase('attempts_to_email_x_have_failed_please_update', {'email': $xf.visitor.email}) }}<br />
<a href="{{ link('account/email') }}">{{ phrase('update_your_contact_details') }}</a>]]></template>
  <template type="public" title="notice_enable_push" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[<a href="javascript:" class="notice-dismiss js-enablePushDismiss"></a>

<div data-xf-init="push-cta">
	<div class="u-alignCenter">
		<div class="js-initialMessage">
			{{ phrase('x_would_like_your_permission_to_enable_push_notifications', {'boardTitle': $xf.options.boardTitle, 'link': link('account/preferences')}) }}
		</div>
		<div class="js-dismissMessage" style="display: none">
			{{ phrase('we_strongly_recommend_enabling_push_notifications') }}
			<ul class="listInline listInline--bullet" style="margin-top: 5px">
				<li><a href="{{ link('account/preferences') }}" class="js-enablePushLink">{{ phrase('enable_notifications') }}</a></li>
				<li><a href="javascript:" class="js-dismissTemp">{{ phrase('ask_me_another_time') }}</a></li>
				<li><a href="javascript:" class="js-dismissPerm">{{ phrase('never_ask_again') }}</a></li>
			</ul>
		</div>
	</div>
</div>

<xf:js>
	jQuery.extend(true, XF.config, {
		skipServiceWorkerRegistration: true
	});
</xf:js>]]></template>
  <template type="public" title="notice_macros" version_id="2000631" version_string="2.0.6 Beta 1"><![CDATA[<xf:macro name="notice_list" arg-type="!" arg-notices="!">
	<xf:if is="{$notices} is not empty">
		<xf:css src="notices.less" />
		<xf:js src="xf/notice.js" min="1" />
		<xf:if is="$type == 'scrolling'">
			<xf:css src="lightslider.less" />
			<xf:js prod="xf/carousel-compiled.js" dev="vendor/lightslider/lightslider.min.js, xf/carousel.js" />
		</xf:if>

		<ul class="notices notices--{$type} {{ count($notices) > 1 ? 'notices--isMulti' : '' }} js-notices"
			data-xf-init="notices"
			data-type="{$type}"
			data-scroll-interval="{{ property('noticeScrollInterval') }}">

			<xf:foreach loop="{$notices}" value="$notice">
				<xf:macro name="notice" arg-notice="{$notice}" arg-type="{$type}" arg-contentHtml="{$notice.message}" />
			</xf:foreach>
		</ul>
	</xf:if>
</xf:macro>

<xf:macro name="notice" arg-notice="!" arg-type="!" arg-contentHtml="!">
	<li class="notice js-notice {{ $notice.display_style == 'custom' ? $notice.css_class : 'notice--' . $notice.display_style }}{{ $notice.display_image ? ' notice--hasImage' : '' }}{{ $notice.visibility ? ' notice--hide' . $notice.visibility : '' }}"
		data-notice-id="{$notice.notice_id}"
		data-delay-duration="{$notice.delay_duration}"
		data-display-duration="{$notice.display_duration}"
		data-auto-dismiss="{$notice.auto_dismiss}"
		data-visibility="{$notice.visibility}">

		<xf:if is="$notice.display_image == 'avatar'">
			<div class="notice-image"><xf:avatar user="$xf.visitor" size="s" href="" /></div>
		<xf:elseif is="$notice.display_image == 'image'" />
			<div class="notice-image"><img src="{$notice.image_url}" alt="" /></div>
		</xf:if>
		<div class="notice-content">
			<xf:if is="$notice.dismissible AND !$notice.custom_dismissible">
				<a href="{{ link('account/dismiss-notice', null, {'notice_id': $notice.notice_id}) }}" class="notice-dismiss js-noticeDismiss" data-xf-init="tooltip" title="{{ phrase('dismiss_notice')|for_attr }}"></a>
			</xf:if>
			{$contentHtml|raw}
		</div>
	</li>
</xf:macro>]]></template>
  <template type="public" title="notice_moderated" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[{{ phrase('your_account_is_currently_awaiting_approval_by_administrator') }}]]></template>
  <template type="public" title="notice_upgrade_pending" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[{{ phrase('upgrade_is_pending_forum_only_accessible_in_debug') }}<br />
<a href="{{ base_url('install/') }}">{{ phrase('complete_upgrade') }}</a>]]></template>
  <template type="public" title="notices.less" version_id="2010052" version_string="2.1.0 Release Candidate 2"><![CDATA[@_notice-darkBg: rgb(20, 20, 20);
@_notice-lightBg: #fefefe;
@_notice-floatingFade: 80%;
@_notice-imageSize: 48px;
@_notice-padding: @xf-paddingLarge;

.notices
{
	.m-listPlain();

	&.notices--block
	{
		.notice
		{
			margin-bottom: ((@xf-elementSpacer) / 2);
		}
	}

	&.notices--floating
	{
		// assumed to be within u-bottomFixer
		margin: 0 20px 0 auto;
		width: 300px;
		max-width: 100%;
		z-index: @zIndex-8;

		@media (max-width: 340px)
		{
			margin-right: 10px;
		}

		.notice
		{
			margin-bottom: 20px;
		}
	}

	&.notices--scrolling
	{
		display: flex;
		align-items: stretch;
		overflow: hidden;
		.xf-blockBorder();
		margin-bottom: ((@xf-elementSpacer) / 2);

		&.notices--isMulti
		{
			margin-bottom: ((@xf-elementSpacer) / 2) + 20px;
		}

		.notice
		{
			width: 100%;
			flex-grow: 0;
			flex-shrink: 0;
			border: none;
		}
	}
}

.noticeScrollContainer
{
	margin-bottom: ((@xf-elementSpacer) / 2);

	.lSSlideWrapper
	{
		.xf-blockBorder();
	}

	.notices.notices--scrolling
	{
		border: none;
		margin-bottom: 0;
	}
}

.notice
{
	.m-clearFix();
	position: relative;

	.xf-blockBorder();

	&.notice--primary
	{
		.xf-contentHighlightBase();
	}

	&.notice--accent
	{
		.xf-contentAccentBase();

		a:not(.button--notice)
		{
			.xf-contentAccentLink();
		}
	}

	&.notice--dark
	{
		color: #fefefe;
		border: none;
		background: @_notice-darkBg;

		a:not(.button--notice)
		{
			color: rgb(180, 180, 180);
		}
	}

	&.notice--light
	{
		color: rgb(20, 20, 20);
		background: @_notice-lightBg;

		a:not(.button--notice)
		{
			color: rgb(130, 130, 130);
		}
	}

	&.notice--enablePush
	{
		display: none;

		@media (max-width: @xf-responsiveWide)
		{
			padding: @xf-paddingSmall @xf-paddingSmall @xf-paddingLarge;
			font-size: @xf-fontSizeSmall;
		}
	}

	&.notice--cookie
	{
		@media (max-width: @xf-responsiveWide)
		{
			.notice-content
			{
				padding: @xf-paddingSmall @xf-paddingSmall @xf-paddingLarge;
				font-size: @xf-fontSizeSmaller;

				.button--notice
				{
					font-size: @xf-fontSizeSmaller;
					padding: @xf-paddingSmall @xf-paddingMedium;

					.button-text
					{
						font-size: @xf-fontSizeSmaller;
					}
				}
			}
		}
	}

	.notices--block &
	{
		font-size: @xf-fontSizeNormal;
		border-radius: @xf-blockBorderRadius;
	}

	.notices--floating &
	{
		font-size: @xf-fontSizeSmallest;
		border-radius: @xf-borderRadiusMedium;
		box-shadow: 1px 1px 3px rgba(0,0,0, 0.25);

		&.notice--primary
		{
			background-color: fade(@xf-contentHighlightBase--background-color, @_notice-floatingFade);
		}

		&.notice--accent
		{
			background-color: fade(@xf-contentAccentBase--background-color, @_notice-floatingFade);
		}

		&.notice--dark
		{
			background-color: fade(@_notice-darkBg, @_notice-floatingFade);
		}

		&.notice--light
		{
			background-color: fade(@_notice-lightBg, @_notice-floatingFade);
		}

		.has-js &
		{
			display: none;
		}
	}

	&.notice--hasImage
	{
		.notice-content
		{
			margin-left: ((@_notice-imageSize) + (@_notice-padding) * 2);
			min-height: ((@_notice-imageSize) + (@_notice-padding) * 2);
		}
	}

	// note: visibility hidden is used by the JS to detect when responsiveness is hiding a notice

	@media (max-width: @xf-responsiveWide)
	{
		&.notice--hidewide:not(.is-vis-processed)
		{
			display: none;
			visibility: hidden;
		}
	}
	@media (max-width: @xf-responsiveMedium)
	{
		&.notice--hidemedium:not(.is-vis-processed)
		{
			display: none;
			visibility: hidden;
		}
	}
	@media (max-width: @xf-responsiveNarrow)
	{
		&.notice--hidenarrow:not(.is-vis-processed)
		{
			display: none;
			visibility: hidden;
		}
	}
}

.notice-image
{
	float: left;
	padding: @_notice-padding 0 @_notice-padding @_notice-padding;

	img
	{
		max-width: @_notice-imageSize;
		max-height: @_notice-imageSize;
	}
}

.notice-content
{
	padding: @_notice-padding;

	a.notice-dismiss
	{
		&:before
		{
			.m-faBase();

			.m-faContent(@fa-var-times, .69em);
		}

		float: right;

		color: inherit;
		font-size: 16px;
		line-height: 1;
		height: 1em;
		box-sizing: content-box;
		padding: 0 0 5px 5px;

		opacity: .5;
		.m-transition(opacity);

		cursor: pointer;

		&:hover
		{
			text-decoration: none;
			opacity: 1;
		}

		.notices--floating &
		{
			font-size: 14px;
		}
	}
}]]></template>
  <template type="public" title="notification_opt_out.less" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[.notificationChoices
{
	.m-listPlain();
	.m-clearFix();

	> li
	{
		float: left;
		margin-left: 1em;
		padding: 0 @xf-paddingMedium;

		&:first-child
		{
			margin-left: 0;
		}
	}

	label
	{
		display: block;
		text-align: center;
	}
}]]></template>
  <template type="public" title="online_guest_ip" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('ip_information_for_online_guest') }}</xf:title>

<xf:breadcrumb href="{{ link('online') }}">{{ phrase('current_visitors') }}</xf:breadcrumb>

<xf:macro template="helper_ip" name="ip_block" arg-ip="{$ip}" />]]></template>
  <template type="public" title="online_list" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title page="{$page}">{{ phrase('current_visitors') }}</xf:title>

<xf:head option="metaNoindex"><meta name="robots" content="noindex" /></xf:head>

<div class="block">
	<div class="block-container">
		<h2 class="block-tabHeader tabs hScroller" data-xf-init="h-scroller">
			<span class="hScroller-scroll">
				<!--[XF:tabs:start]-->
				<a href="{{ link('online') }}" class="tabs-tab {{ $typeLimit == '' ? 'is-active' : '' }}">{{ phrase('everyone') }}</a>
				<a href="{{ link('online', null, {'type': 'member'}) }}" class="tabs-tab {{ $typeLimit == 'member' ? 'is-active' : '' }}">{{ phrase('members') }}</a>
				<a href="{{ link('online', null, {'type': 'guest'}) }}" class="tabs-tab {{ $typeLimit == 'guest' ? 'is-active' : '' }}">{{ phrase('guests') }}</a>
				<a href="{{ link('online', null, {'type': 'robot'}) }}" class="tabs-tab {{ $typeLimit == 'robot' ? 'is-active' : '' }}">{{ phrase('robots') }}</a>
				<!--[XF:tabs:end]-->
			</span>
		</h2>
		<xf:if is="$activities is not empty">
			<ol class="block-body">
				<xf:foreach loop="$activities" value="$activity">
					<li class="block-row block-row--separated">
						<div class="contentRow">
							<div class="contentRow-figure">
								<xf:avatar user="$activity.User" size="s" />
							</div>
							<div class="contentRow-main">
								<xf:if is="$xf.visitor.canViewIps()">
									<div class="contentRow-extra">
										<a href="{{ $activity.user_id ? link('online/user-ip', null, {'user_id': $activity.user_id}) : link('online/guest-ip', null, {'ip': $activity.ip|hex}) }}" data-xf-click="overlay"><span>{$activity.ip|ip}</span></a>
									</div>
								</xf:if>
								<xf:if is="$activity.User">
									<h3 class="contentRow-header"><xf:username user="$activity.User" rich="true" /></h3>

									<xf:userblurb user="$activity.User" class="contentRow-lesser" />
								<xf:elseif is="$activity.robot_key" />
									<h3 class="contentRow-header">
										{{ phrase('robot:') }} <xf:if is="$activity.robot_link"><a href="{$activity.robot_link}" target="_blank">{$activity.robot_title}</a><xf:else />{$activity.robot_title}</xf:if>
									</h3>
								<xf:else />
									<h3 class="contentRow-header">{{ phrase('guest') }}</h3>
								</xf:if>

								<div class="contentRow-minor">
									<ul class="listInline listInline--bullet">
										<xf:if is="!$activity.User || $activity.User.canViewCurrentActivity()">
											<li>
											<xf:if is="$activity.description">
												{$activity.description}<xf:if is="$activity.item_title"> <em><a href="{$activity.item_url}">{$activity.item_title}</a></em></xf:if>
											<xf:elseif is="$xf.visitor.is_admin" />
												<span title="{$activity.controller_name}::{$activity.controller_action}">{{ phrase('viewing_unknown_page') }}</span>
											<xf:else />
												{{ phrase('viewing_unknown_page') }}
											</xf:if>
											</li>
										</xf:if>

										<li><xf:date time="{$activity.view_date}" /></li>

										<xf:if is="$activity.view_state == 'error' && $xf.visitor.canBypassUserPrivacy()">
											<li>
											<xf:fa icon="fa-exclamation-triangle" title="{{ phrase('viewing_an_error')|for_attr }}" />
											<span class="u-srOnly">{{ phrase('viewing_an_error') }}</span>
											</li>
										</xf:if>
									</ul>
								</div>
							</div>
						</div>
					</li>
				</xf:foreach>
			</ol>
		<xf:else />
			<div class="block-row">{{ phrase('no_results_found') }}</div>
		</xf:if>
	</div>

	<xf:pagenav page="{$page}" perpage="{$perPage}" total="{$total}" link="online" params="{$linkParams}"
		wrapperclass="block-outer block-outer--after" />
</div>

<xf:widgetpos id="online_list_sidebar" position="sidebar" />]]></template>
  <template type="public" title="online_user_ip" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('ip_information_for_online_user', {'user': $user.username}) }}</xf:title>

<xf:breadcrumb href="{{ link('online') }}">{{ phrase('current_visitors') }}</xf:breadcrumb>

<xf:macro template="helper_ip" name="ip_block" arg-ip="{$activity.ip}" arg-user="{$user}" />]]></template>
  <template type="public" title="page_nav" version_id="2001070" version_string="2.0.10"><![CDATA[<nav class="pageNavWrapper pageNavWrapper--{{ property('pageNavStyle') }} {$variantClass}">

<xf:set var="$hasSkipStart" value="{{ $startInner > 2 }}" />
<xf:set var="$hasSkipEnd" value="{{ $endInner + 1 < $totalPages }}" />
<div class="pageNav {{ $hasSkipStart ? 'pageNav--skipStart' : '' }} {{ $hasSkipEnd ? 'pageNav--skipEnd' : '' }}">
	<xf:if is="$prev">
		<a href="{$prev}" class="pageNav-jump pageNav-jump--prev">{{ phrase('prev') }}</a>
	</xf:if>

	<ul class="pageNav-main">
		<xf:macro name="page_link"
			arg-page="1"
			arg-current="{$current}"
			arg-link="{$link}"
			arg-data="{$data}"
			arg-params="{$params}"
			arg-pageParam="{$pageParam}" />

		<xf:if is="$hasSkipStart">
			<xf:if is="$startInner == 3">
				<xf:macro name="page_link"
					arg-page="2"
					arg-current="{$current}"
					arg-link="{$link}"
					arg-data="{$data}"
					arg-params="{$params}"
					arg-pageParam="{$pageParam}"
					arg-pageClass="pageNav-page--earlier" />
				<xf:else />
				<li class="pageNav-page pageNav-page--skip pageNav-page--skipStart">
					<a data-xf-init="tooltip" title="{{ phrase('go_to_page')|for_attr }}"
						data-xf-click="menu"
						role="button" tabindex="0" aria-expanded="false" aria-haspopup="true">{$xf.language.ellipsis}</a>
					<xf:macro name="page_jump_menu"
						arg-page="{{ $startInner - 1 }}"
						arg-totalPages="{$totalPages}"
						arg-link="{$link}"
						arg-data="{$data}"
						arg-params="{$params}"
						arg-pageParam="{$pageParam}" />
				</li>
			</xf:if>
		</xf:if>

		<xf:foreach loop="$innerPages" value="$page">
			<xf:macro name="page_link"
				arg-page="{$page}"
				arg-current="{$current}"
				arg-link="{$link}"
				arg-data="{$data}"
				arg-params="{$params}"
				arg-pageParam="{$pageParam}"
				arg-pageClass="{{ $page < $current ? 'pageNav-page--earlier' : ($page > $current ? 'pageNav-page--later' : '' ) }}" />
		</xf:foreach>

		<xf:if is="$hasSkipEnd">
			<xf:if is="$endInner + 2 == $totalPages">
				<xf:macro name="page_link"
					arg-page="{{ $totalPages - 1 }}"
					arg-current="{$current}"
					arg-link="{$link}"
					arg-data="{$data}"
					arg-params="{$params}"
					arg-pageParam="{$pageParam}"
					arg-pageClass="pageNav-page--later" />
			<xf:else />
				<li class="pageNav-page pageNav-page--skip pageNav-page--skipEnd">
					<a data-xf-init="tooltip" title="{{ phrase('go_to_page')|for_attr }}"
						data-xf-click="menu"
						role="button" tabindex="0" aria-expanded="false" aria-haspopup="true">{$xf.language.ellipsis}</a>
					<xf:macro name="page_jump_menu"
						arg-page="{{ $endInner + 1 }}"
						arg-totalPages="{$totalPages}"
						arg-link="{$link}"
						arg-data="{$data}"
						arg-params="{$params}"
						arg-pageParam="{$pageParam}" />
				</li>
			</xf:if>
		</xf:if>

		<xf:macro name="page_link"
			arg-page="{$totalPages}"
			arg-current="{$current}"
			arg-link="{$link}"
			arg-data="{$data}"
			arg-params="{$params}"
			arg-pageParam="{$pageParam}" />
	</ul>

	<xf:if is="$next">
		<a href="{$next}" class="pageNav-jump pageNav-jump--next">{{ phrase('next') }}</a>
	</xf:if>
</div>

<div class="pageNavSimple">
	<xf:if is="$current > 1">
		<a href="{{ link($link, $data, $params + {($pageParam): 1}) }}"
			class="pageNavSimple-el pageNavSimple-el--first"
			data-xf-init="tooltip" title="{{ phrase('first')|for_attr }}">
			<i aria-hidden="true"></i> <span class="u-srOnly">{{ phrase('first') }}</span>
		</a>
		<a href="{{ link($link, $data, $params + {($pageParam): $current - 1}) }}" class="pageNavSimple-el pageNavSimple-el--prev">
			<i aria-hidden="true"></i> {{ phrase('prev') }}
		</a>
	</xf:if>

	<a class="pageNavSimple-el pageNavSimple-el--current"
		data-xf-init="tooltip" title="{{ phrase('go_to_page')|for_attr }}"
		data-xf-click="menu" role="button" tabindex="0" aria-expanded="false" aria-haspopup="true">
		{{ phrase('x_of_y', {'current': $current, 'total': $totalPages}) }}
	</a>
	<xf:macro name="page_jump_menu"
		arg-page="{$current}"
		arg-totalPages="{$totalPages}"
		arg-link="{$link}"
		arg-data="{$data}"
		arg-params="{$params}"
		arg-pageParam="{$pageParam}" />

	<xf:if is="$current < $totalPages">
		<a href="{{ link($link, $data, $params + {($pageParam): $current + 1}) }}" class="pageNavSimple-el pageNavSimple-el--next">
			{{ phrase('next') }} <i aria-hidden="true"></i>
		</a>
		<a href="{{ link($link, $data, $params + {($pageParam): $totalPages}) }}"
			class="pageNavSimple-el pageNavSimple-el--last"
			data-xf-init="tooltip" title="{{ phrase('last')|for_attr }}">
			<i aria-hidden="true"></i> <span class="u-srOnly">{{ phrase('last') }}</span>
		</a>
	</xf:if>
</div>

</nav>

<xf:macro name="page_link"
	arg-page="!"
	arg-current="!"
	arg-link="!"
	arg-data="!"
	arg-params="!"
	arg-pageParam="!"
	arg-pageClass="">

	<xf:if is="$page == $current">
		<li class="pageNav-page pageNav-page--current {$pageClass}"><a href="{{ link($link, $data, $params + {($pageParam): ($page > 1 ? $page : null)}) }}">{$page}</a></li>
	<xf:else />
		<li class="pageNav-page {$pageClass}"><a href="{{ link($link, $data, $params + {($pageParam): ($page > 1 ? $page : null)}) }}">{$page}</a></li>
	</xf:if>
</xf:macro>

<xf:macro name="page_jump_menu"
	arg-page="!"
	arg-totalPages="!"
	arg-link="!"
	arg-data="!"
	arg-params="!"
	arg-pageParam="!">

	<div class="menu menu--pageJump" data-menu="menu" aria-hidden="true">
		<div class="menu-content">
			<h4 class="menu-header">{{ phrase('go_to_page') }}</h4>
			<div class="menu-row" data-xf-init="page-jump" data-page-url="{{ link($link, $data, $params + {($pageParam): '%page%'}) }}">
				<div class="inputGroup inputGroup--numbers">
					<xf:numberbox class="input input--numberNarrow js-pageJumpPage" value="{$page}" min="1" max="{$totalPages}" data-menu-autofocus="true" />
					<span class="inputGroup-text"><xf:button class="js-pageJumpGo">{{ phrase('go') }}</xf:button></span>
				</div>
			</div>
		</div>
	</div>
</xf:macro>]]></template>
  <template type="public" title="page_view" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{$page.title}</xf:title>
<xf:if is="$page.description">
	<xf:description>{$page.description|raw}</xf:description>
</xf:if>

<xf:macro template="metadata_macros" name="canonical_url" arg-canonicalUrl="{{ link('canonical:pages', $page) }}" />

<xf:breadcrumb source="$page.getBreadcrumbs(false)" />

<xf:pageaction><xf:if contentcheck="true">
	<xf:contentcheck>
		<xf:macro template="bookmark_macros" name="link"
			arg-content="{$page.Node}"
			arg-confirmUrl="{{ link('pages/bookmark', $page) }}"
			arg-class="button button--link" />
	</xf:contentcheck>
</xf:if></xf:pageaction>

<xf:set var="$logVisits">
	<div class="block-outer block-outer--after">
		<ul class="listInline listInline--bullet">
			<li><dl class="pairs pairs--inline">
				<dt>{{ phrase('published') }}</dt>
				<dd>{{ date($page.publish_date) }}</dd>
			</dl></li>
			<li><dl class="pairs pairs--inline">
				<dt>{{ phrase('page_views') }}</dt>
				<dd>{{ number($page.view_count) }}</dd>
			</dl></li>
		</ul>
	</div>
</xf:set>

<xf:if is="$page.advanced_mode">
	<xf:include template="{$page.getTemplateName()}" />

	<xf:if is="$page.log_visits">
		<div class="block">
			{$logVisits|raw}
		</div>
	</xf:if>
<xf:else />
	<div class="block">
		<div class="block-container">
			<div class="block-body block-row">
				<xf:include template="{$page.getTemplateName()}" />
			</div>
		</div>
		<xf:if is="$page.log_visits">
			{$logVisits|raw}
		</xf:if>
	</div>
</xf:if>

<div class="blockMessage blockMessage--none">
	<xf:macro template="share_page_macros" name="buttons" arg-iconic="{{ true }}" arg-label="{{ phrase('share:') }}" />
</div>

<xf:sidenav>
	<xf:if contentcheck="true">
	<div class="block">
		<div class="block-container">
			<div class="block-body">
			<xf:contentcheck>
				<xf:if is="$page.list_siblings AND $siblings is not empty">
					<xf:if is="$parent">
						<a href="{{ link($parent.getRoute(), $parent) }}" class="blockLink">{$parent.title}</a>
					</xf:if>

					<xf:foreach loop="$siblings" value="$node">
						<a href="{{ link($node.getRoute(), $node) }}" class="blockLink {{ $node.node_id == $page.node_id ? 'is-selected' : '' }}">
							<span class="u-depth{{ $parent ? 1 : 0 }}">{$node.title}</span>
						</a>
						<xf:if is="$node.node_id == $page.node_id AND $page.list_children AND $children is not empty">
							<xf:foreach loop="$children" value="$childNode">
								<a href="{{ link($childNode.getRoute(), $childNode) }}" class="blockLink">
									<span class="u-depth{{ $parent ? 2 : 1 }}">{$childNode.title}</span>
								</a>
							</xf:foreach>
						</xf:if>
					</xf:foreach>
				<xf:elseif is="$page.list_children AND $children is not empty" />
						<xf:foreach loop="$children" value="$childNode">
							<a href="{{ link($childNode.getRoute(), $childNode) }}" class="blockLink">
								{$childNode.title}
							</a>
						</xf:foreach>
				</xf:if>
			</xf:contentcheck>
			</div>
		</div>
	</div>
	</xf:if>
</xf:sidenav>]]></template>
  <template type="public" title="password_box" version_id="2010131" version_string="2.1.1 Beta 1"><![CDATA[<xf:if is="$checkStrength">
	<xf:js prod="xf/password_box-compiled.js" dev="vendor/dropbox/zxcvbn.min.js, xf/password_box.js" />
</xf:if>

<xf:set var="$input">
	<input type="password" name="{$name}" value="{$value}"
		class="input js-password {{ $hideShow ? 'input--passwordHideShow' : '' }}" {$attrsHtml|raw} />
</xf:set>

<div data-xf-init="{{ $checkStrength ? 'password-strength' : null }} {{ $hideShow ? 'password-hide-show' : '' }}"
	data-show-text="{{ phrase('button.show')|for_attr }}" data-hide-text="{{ phrase('button.hide')|for_attr }}">
	<xf:if is="$hideShow">
		<div class="inputGroup inputGroup--joined">
			{$input|raw}
			{$afterInputHtml|raw}
			<div class="inputGroup-text">
				<xf:checkbox standalone="true">
					<xf:option labelclass="iconic--hideShow js-hideShowContainer">{{ phrase('button.show') }}</xf:option>
				</xf:checkbox>
			</div>
		</div>
	<xf:else />
		{$input|raw}
	</xf:if>

	<xf:if is="$checkStrength">
		<meter min="0" max="100" class="meterBar js-strengthMeter" low="40" high="80" optimum="100"></meter>
		<span class="js-strengthText meterBarLabel">{{ phrase('entering_password_is_required') }}</span>
		<script class="js-zxcvbnLanguage" type="application/json">
			{
				"Straight rows of keys are easy to guess": "{{ phrase('straight_rows_of_keys_easy_to_guess')|escape('json') }}",
				"Short keyboard patterns are easy to guess": "{{ phrase('short_keyboard_patterns_easy_to_guess')|escape('json') }}",
				"Repeats like \"aaa\" are easy to guess": "{{ phrase('repeated_characters_such_as_aaa_easy_to_guess')|escape('json') }}",
				"Repeats like \"abcabcabc\" are only slightly harder to guess than \"abc\"": "{{ phrase('repeated_characters_such_as_abcabcabc_only_slightly_more_difficult')|escape('json') }}",
				"Avoid repeated words and characters": "{{ phrase('avoid_repeated_words_and_characters')|escape('json') }}",
				"Sequences like abc or 6543 are easy to guess": "{{ phrase('sequences_like_abc_or_6543_easy_to_guess')|escape('json') }}",
				"Recent years are easy to guess": "{{ phrase('recent_years_easy_to_guess')|escape('json') }}",
				"Dates are often easy to guess": "{{ phrase('dates_often_easy_to_guess')|escape('json') }}",
				"This is a top-10 common password": "{{ phrase('this_password_appears_in_top_10_most_common_passwords_list')|escape('json') }}",
				"This is a top-100 common password": "{{ phrase('this_password_appears_in_top_100_most_common_passwords_list')|escape('json') }}",
				"This is a very common password": "{{ phrase('this_password_is_very_common_password')|escape('json') }}",
				"This is similar to a commonly used password": "{{ phrase('this_password_is_similar_to_commonly_used_password')|escape('json') }}",
				"A word by itself is easy to guess": "{{ phrase('word_by_itself_is_easy_to_guess')|escape('json') }}",
				"Names and surnames by themselves are easy to guess": "{{ phrase('names_and_surnames_by_themselves_easy_to_guess')|escape('json') }}",
				"Common names and surnames are easy to guess": "{{ phrase('common_names_and_surnames_easy_to_guess')|escape('json') }}",

				"The chosen password could be stronger": "{{ phrase('the_chosen_password_could_be_stronger')|escape('json') }}",
				"Entering a password is required": "{{ phrase('entering_password_is_required')|escape('json') }}",
				"This is a very strong password": "{{ phrase('this_is_very_strong_password')|escape('json') }}",
				"This is a reasonably strong password": "{{ phrase('this_is_reasonably_strong_password')|escape('json') }}"
			}
		</script>
	</xf:if>
</div>]]></template>
  <template type="public" title="payment_cancel_recurring_braintree" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<div>
	<xf:button href="{{ link('purchase/cancel-recurring', null, {'request_key': $purchaseRequest.request_key}) }}"
		overlay="true" target="_blank">
		{{ phrase('button.cancel') }}
	</xf:button>
</div>]]></template>
  <template type="public" title="payment_cancel_recurring_confirm" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('confirm_cancellation_of_subscription:') }} {$purchasableItem.title}</xf:title>

<xf:form action="{{ link('purchase/cancel-recurring', null, {'request_key': $purchaseRequest.request_key}) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('please_confirm_that_you_want_to_cancel_following_subscription:') }}
				<strong>{$purchasableItem.title}</strong>
			</xf:inforow>
		</div>
		<xf:submitrow submit="{{ phrase('button.cancel') }}" rowtype="simple" />
	</div>
</xf:form>]]></template>
  <template type="public" title="payment_cancel_recurring_paypal" version_id="2000170" version_string="2.0.1"><![CDATA[<div>
	<xf:button href="{$endpoint}?cmd=_manage-paylist" target="_blank">
		{{ phrase('button.cancel') }}
	</xf:button>
</div>]]></template>
  <template type="public" title="payment_cancel_recurring_twocheckout" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<div>
	<xf:button href="{{ link('purchase/cancel-recurring', null, {'request_key': $purchaseRequest.request_key}) }}"
		overlay="true" target="_blank">
		{{ phrase('button.cancel') }}
	</xf:button>
</div>]]></template>
  <template type="public" title="payment_initiate.less" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[.block
{
	&.block--paymentInitiate
	{
		margin-bottom: 0;
	}
}

.input
{
	height: 35px;

	&.braintree-hosted-fields-focused
	{
		.xf-inputFocus();
	}

	&.braintree-hosted-fields-invalid
	{
		.m-invalidInput();
	}

	&.StripeElement
	{
		&.StripeElement--focus
		{
			.xf-inputFocus();
		}

		&.StripeElement--invalid
		{
			.m-invalidInput();
		}
	}
}

.button
{
	&.button--apple
	{
		border-color: black;
		background-color: black;
		background-image: -webkit-named-image(apple-pay-logo-white);
		background-position: 50% 50%;
		background-repeat: no-repeat;
		background-size: 100% ~"calc(60% + 2px)";
		transition: background-color .15s;
		min-width: 100px;

		&:hover,
		&:active,
		&:focus
		{
			background-color: rgba(0,0,0,0.8);
		}
	}
}

.m-invalidInput()
{
	border: @xf-borderSize solid #c84448;
	background: #fde9e9;
	color: #c84448 !important;
}]]></template>
  <template type="public" title="payment_initiate_braintree" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:css src="payment_initiate.less" />
<xf:js src="xf/payment.js" min="1" />

<xf:title>{{ phrase('enter_payment_details') }}</xf:title>

<div class="blocks">
	<xf:form action="{{ link('purchase/process', null, {'request_key': $purchaseRequest.request_key}) }}" class="block"
		data-xf-init="braintree-payment-form"
		data-client-token="{$clientToken}">

		<div class="block-container">
			<div class="block-body">
				<xf:formrow label="{{ phrase('pay_by_card') }}" controlid="card-number" rowtype="input">
					<div class="inputGroup">
						<div class="inputGroup-text"><span style="width: 30px;"><xf:fa icon="fa-lg fa-credit-card" id="brand-icon" /></span></div>
						<div id="card-number" class="input is-disabled"></div>
						<div class="inputGroup-splitter"></div>
						<div id="card-expiry" class="input is-disabled" style="width: 130px"></div>
						<div class="inputGroup-splitter"></div>
						<div id="card-cvv" class="input is-disabled" style="width: 75px"></div>
					</div>
					<div class="formRow-explain">{{ phrase('payments_processed_securely_by_x', {'link': 'https://braintreepayments.com/', 'provider': 'Braintree'}) }}</div>
				</xf:formrow>

				<hr class="formRowSep" />

				<xf:formrow label="" rowtype="button">
					<xf:button type="submit" icon="payment">
						{{ phrase('pay_x', {'cost': $purchase.cost|currency($purchase.currency)}) }}
					</xf:button>
				</xf:formrow>

				<script type="application/json" class="js-formStyles">
					{
						"input": {
							"color": "{{ property('textColor', '#141414') }}",
							"font-family": "{{ property('fontFamilyUi') }}",
							"font-size": "16px",
							"line-height": "{{ property('lineHeightDefault', '1.4') }}"
						},
						"input.invalid": {
							"color": "#c84448"
						}
					}
				</script>
			</div>
		</div>
	</xf:form>

	<xf:if is="$paymentProfile.options.apple_pay_enable OR $paymentProfile.options.paypal_enable">
		<div class="blocks-textJoiner"><span></span><em>{{ phrase('or_separator') }}</em><span></span></div>

		<xf:if is="$paymentProfile.options.apple_pay_enable">
			<xf:form action="{{ link('purchase/process', null, {'request_key': $purchaseRequest.request_key}) }}" class="block u-hidden"
				data-xf-init="braintree-apple-pay-form"
				data-client-token="{$clientToken}"
				data-currency-code="{$purchase.currency}"
				data-board-title="{$xf.options.boardTitle}"
				data-title="{$purchase.purchasableTitle}"
				data-amount="{$purchase.cost}">

				<div class="block-container">
					<div class="block-body">
						<xf:formrow rowtype="button"
							label="{{ phrase('pay_with_apple_pay') }}">
							<xf:button class="button--apple js-applePayButton">&nbsp;</xf:button>
						</xf:formrow>
					</div>
				</div>
			</xf:form>
		</xf:if>
		<xf:if is="$paymentProfile.options.paypal_enable">
			<xf:form action="{{ link('purchase/process', null, {'request_key': $purchaseRequest.request_key}) }}" class="block"
				data-xf-init="braintree-paypal-form"
				data-client-token="{$clientToken}"
				data-test-payments="{{ $xf.livePayments ? 'off' : 'on' }}">

				<div class="block-container">
					<div class="block-body">
						<xf:formrow rowtype="button"
							label="{{ phrase('pay_with_paypal') }}">
							<div id="paypal-button"></div>
						</xf:formrow>
					</div>
				</div>
			</xf:form>
		</xf:if>
	</xf:if>
</div>]]></template>
  <template type="public" title="payment_initiate_stripe" version_id="2010036" version_string="2.1.0 Beta 6"><![CDATA[<xf:css src="payment_initiate.less" />
<xf:js src="xf/payment.js" min="1" />

<xf:title>{{ phrase('enter_payment_details') }}</xf:title>

<div class="blocks">
	<xf:form action="{{ link('purchase/process', null, {'request_key': $purchaseRequest.request_key}) }}" class="block block--paymentInitiate" data-xf-init="stripe-payment-form" data-publishable-key="{$publishableKey}">
		<div class="block-container">
			<div class="block-body">
				<xf:inforow id="card-errors-container" rowclass="u-hidden">
					<div class="block-rowMessage block-rowMessage--error block-rowMessage--iconic u-hidden" id="card-errors"></div>
				</xf:inforow>

				<xf:formrow controlid="card-number-element" rowtype="input"
					label="{{ phrase('pay_by_card') }}">
					<div class="inputGroup">
						<div class="inputGroup-text"><span style="width: 30px;"><xf:fa icon="fa-lg fa-credit-card" id="brand-icon" /></span></div>
						<div id="card-number-element" class="input"></div>
						<div class="inputGroup-splitter"></div>
						<div id="card-expiry-element" class="input" style="width: 130px"></div>
						<div class="inputGroup-splitter"></div>
						<div id="card-cvc-element" class="input" style="width: 75px"></div>
					</div>
					<div class="formRow-explain">{{ phrase('payments_processed_securely_by_x', {'link': 'https://stripe.com/', 'provider': 'Stripe'}) }}</div>
				</xf:formrow>

				<hr class="formRowSep" />

				<xf:formrow label="" rowtype="button">
					<xf:button type="submit" icon="payment">
						{{ phrase('pay_x', {'cost': $purchase.cost|currency($purchase.currency)}) }}
					</xf:button>
				</xf:formrow>

				<script type="application/json" class="js-formStyles">
					{
						"base": {
							"color": "{{ parse_less_color(property('textColor', '#141414'))|escape('json') }}",
							"fontFamily": "{{ property('fontFamilyUi')|escape('json') }}",
							"fontSize": "16px"
						},
						"invalid": {
							"color": "#c84448"
						}
					}
				</script>
			</div>
		</div>
	</xf:form>

	<xf:if is="$paymentProfile.options.apple_pay_enable">
		<xf:form action="{{ link('purchase/process', null, {'request_key': $purchaseRequest.request_key}) }}" class="block u-hidden"
			data-xf-init="stripe-apple-pay-form"
			data-publishable-key="{$publishableKey}"
			data-currency-code="{$purchase.currency}"
			data-title="{$purchase.purchasableTitle}"
			data-amount="{$purchase.cost}">

			<div class="blocks-textJoiner"><span></span><em>{{ phrase('or_separator') }}</em><span></span></div>
			<div class="block-container">
				<div class="block-body">
					<xf:formrow rowtype="button"
						label="{{ phrase('pay_with_apple_pay') }}">
						<xf:button class="button--apple js-applePayButton">&nbsp;</xf:button>
					</xf:formrow>
				</div>
			</div>
		</xf:form>
	</xf:if>
</div>]]></template>
  <template type="public" title="payment_initiate_twocheckout" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<!-- 2Checkout insert begins here -->
<form action="{{ $xf.livePayments ? 'https://2checkout.com/checkout/purchase' : 'https://sandbox.2checkout.com/checkout/purchase' }}" method="post" style="display: none" id="js-2CheckoutForm">
	<xf:hiddenval name="sid">{$paymentProfile.options.account_number}</xf:hiddenval>
	<xf:hiddenval name="mode">2CO</xf:hiddenval>
	<xf:hiddenval name="li_0_type">product</xf:hiddenval>
	<xf:hiddenval name="li_0_name">{$purchase.title}</xf:hiddenval>
	<xf:hiddenval name="li_0_price">{$purchase.cost}</xf:hiddenval>
	<xf:hiddenval name="li_0_tangible">N</xf:hiddenval>

	<xf:if is="{$recurrence}">
		<xf:hiddenval name="li_0_recurrence">{$recurrence}</xf:hiddenval>
	</xf:if>

	<xf:hiddenval name="currency_code">{$purchase.currency}</xf:hiddenval>
	<xf:hiddenval name="email">{$xf.visitor.email}</xf:hiddenval>
	<xf:hiddenval name="merchant_order_id">{$purchaseRequest.request_key}</xf:hiddenval>
	<xf:hiddenval name="x_receipt_link_url">{{ link('canonical:purchase/process', null, {'request_key': $purchaseRequest.request_key}) }}</xf:hiddenval>

		<!-- TODO: If we provide a way to input address details, the inline checkout can be used. -->
		<input type="hidden" name="card_holder_name" value="" />
		<input type="hidden" name="street_address" value="" />
		<input type="hidden" name="street_address2" value="" />
		<input type="hidden" name="city" value="" />
		<input type="hidden" name="state" value="" />
		<input type="hidden" name="zip" value="" />
		<input type="hidden" name="country" value="" />

	<xf:js>
		$.getScript('https://www.2checkout.com/static/checkout/javascript/direct.min.js', function()
		{
			$('#js-2CheckoutForm').submit();
		});
	</xf:js>
</form>]]></template>
  <template type="public" title="poll.less" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[.pollResult
{
	display: table;
	table-layout: fixed;
	width: 100%;
	margin: 0;
	padding: @xf-blockPaddingV @xf-blockPaddingH;

	&.pollResult--showVoters
	{
		cursor: pointer;

		&:hover
		{
			background: @xf-contentHighlightBg;
		}
	}
}

.pollResult-response
{
	display: table-cell;
	margin: 0;
	padding: 0;
	vertical-align: middle;
	font-size: @xf-fontSizeNormal;
	font-weight: @xf-fontWeightNormal;

	.pollResult--voted &
	{
		font-weight: @xf-fontWeightHeavy;

		&:before
		{
			.m-faBase();
			.m-faContent("@{fa-var-check-circle}\20");
			color: @xf-textColorAttention;
			unicode-bidi: isolate;
		}
	}
}

.pollResult-votes
{
	display: table-cell;
	width: 6.5em;
	vertical-align: middle;
	text-align: right;
}

.pollResult-percentage
{
	display: table-cell;
	width: 4.35em;
	vertical-align: middle;
	text-align: right;
}

.pollResult-graph
{
	display: table-cell;
	width: 30%;
	padding-left: @xf-paddingMedium;
	vertical-align: middle;
}

.pollResult-bar
{
	display: block;
	position: relative;
	height: .8em;

	&:empty
	{
		display: none;
	}

	> i
	{
		position: absolute;
		left: 0;
		top: 0;
		bottom: 0;
		background: @xf-progressBarColor;
		border-radius: @xf-borderRadiusMedium;
	}
}

.pollResult-voters
{
	padding: @xf-blockPaddingV @xf-blockPaddingH;
	.xf-contentHighlightBase();
}

.pollResult--simple
{
	display: block;
	.m-narrowPollResults();
}

@media (max-width: @xf-responsiveMedium)
{
	.pollResult
	{
		display: block;
		.m-narrowPollResults();
	}
}

.m-narrowPollResults()
{
	.pollResult-response
	{
		display: block;
	}

	.pollResult-votes
	{
		display: inline;
	}

	.pollResult-percentage
	{
		display: inline;
		padding-left: 1em;
	}

	.pollResult-graph
	{
		display: block;
		width: 100%;
		padding-left: 0;
	}
}]]></template>
  <template type="public" title="poll_block" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('poll_results') }}</xf:title>

<xf:breadcrumb source="$breadcrumbs" />

<xf:macro template="poll_macros" name="poll_block" arg-poll="{$poll}" arg-simpleDisplay="{$simpleDisplay}" />]]></template>
  <template type="public" title="poll_create" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('create_poll') }}</xf:title>

<xf:breadcrumb source="$breadcrumbs" />

<xf:form action="{$createFormUrl}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:macro template="poll_macros" name="add_edit_inputs" />
		</div>
		<xf:submitrow sticky="true" icon="save" />
	</div>
</xf:form>]]></template>
  <template type="public" title="poll_delete" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('reset_poll') }}</xf:title>

<xf:breadcrumb source="$breadcrumbs" />

<xf:macro template="poll_macros" name="delete_block" arg-poll="{$poll}" />]]></template>
  <template type="public" title="poll_edit" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('edit_poll') }}</xf:title>

<xf:breadcrumb source="$breadcrumbs" />

<xf:form action="{{ $poll.getLink('edit') }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:macro template="poll_macros" name="add_edit_inputs" arg-poll="{$poll}"/>
		</div>
		<xf:submitrow icon="save" sticky="true" />
	</div>
</xf:form>

<xf:if is="$poll && $poll.canDelete()">
	<xf:macro template="poll_macros" name="delete_block" arg-poll="{$poll}" />
</xf:if>]]></template>
  <template type="public" title="poll_macros" version_id="2010131" version_string="2.1.1 Beta 1"><![CDATA[<xf:macro name="poll_block" arg-poll="!" arg-showVoteBlock="{{ false }}" arg-simpleDisplay="{{ false }}" arg-forceTitle="{{ false }}">
	<xf:form action="{{ $poll.getLink('vote') }}" ajax="true" class="block js-pollContainer-{$poll.poll_id}" data-xf-init="poll-block">
		<div class="block-container">
			<h2 class="{{ $simpleDisplay ? 'block-minorHeader' : 'block-header' }}">
				<xf:if is="$simpleDisplay">
					<a href="{{ $poll.getLink('content') }}">{{ $forceTitle ?: $poll.question }}</a>
				<xf:else />
					<xf:fa icon="fa-chart-bar" /> {{ $forceTitle ?: $poll.question }}
					<xf:if is="$poll.canEdit()">
						<xf:button href="{{ $poll.getLink('edit') }}" class="button--link button--small u-pullRight"
							overlay="true" icon="edit" />
					</xf:if>
				</xf:if>
			</h2>
			<xf:if is="$poll.canVote() AND ($showVoteBlock OR !$poll.hasVoted())">
				<xf:macro name="vote" arg-poll="{$poll}" />
			<xf:else />
				<xf:macro name="result" arg-poll="{$poll}" arg-simpleDisplay="{$simpleDisplay}" />
			</xf:if>
		</div>
		<xf:hiddenval name="simple_display">{$simpleDisplay}</xf:hiddenval>
	</xf:form>
</xf:macro>

<xf:macro name="vote" arg-poll="!">
	<div class="block-body">
		<div class="block-row">
			<xf:if is="$poll.max_votes == 1">
				<xf:radio name="responses[]">
					<xf:foreach loop="$poll.responses" key="$responseId" value="$response">
						<xf:option value="{$responseId}">{$response.response|censor}</xf:option>
					</xf:foreach>
				</xf:radio>
			<xf:else />
				<xf:checkbox name="responses[]">
					<xf:foreach loop="$poll.responses" key="$responseId" value="$response">
						<xf:option value="{$responseId}">{$response.response|censor}</xf:option>
					</xf:foreach>
				</xf:checkbox>
			</xf:if>
		</div>
		<xf:if contentcheck="true">
			<hr class="block-separator" />
			<div class="block-row block-row--minor">
				<ul class="listInline">
				<xf:contentcheck>
					<xf:if is="$poll.close_date">
						<xf:if is="!$poll.isClosed()">
							<li>{{ phrase('this_poll_will_close:') }} <xf:date time="{$poll.close_date}" />.</li>
						<xf:else />
							<li>{{ phrase('poll_closed') }} <xf:date time="{$poll.close_date}" />.</li>
						</xf:if>
					</xf:if>
					<xf:if is="$poll.max_votes != 1">
						<li>{{ phrase('multiple_votes_allowed') }}</li>
					</xf:if>
					<xf:if is="$poll.public_votes">
						<li>{{ phrase('your_vote_will_be_publicly_visible') }}</li>
					</xf:if>
				</xf:contentcheck>
				</ul>
			</div>
		</xf:if>
	</div>
	<div class="block-footer">
		<span class="block-footer-controls">
			<xf:button type="submit" class="button--primary" icon="vote">{{ phrase('cast_vote') }}</xf:button>
			<xf:if is="$poll.canViewResults()">
				<xf:button href="{{ $poll.getLink('results') }}" overlay="true" icon="result" rel="nofollow">{{ phrase('view_results') }}</xf:button>
			</xf:if>
		</span>
	</div>
</xf:macro>

<xf:macro name="result" arg-poll="!" arg-simpleDisplay="{{ false }}" arg-showFooter="{{ true }}">
	<xf:css src="poll.less" />
	<xf:set var="$canViewResults" value="{{ $poll.canViewResults() }}" />

	<div class="block-body">
		<ul class="listPlain">
		<xf:foreach loop="$poll.responses" key="$responseId" value="$response">
			<li>
				<xf:set var="$canShowVoters" value="{{ $canViewResults AND $poll.public_votes AND $response.response_vote_count AND !$simpleDisplay }}" />
				<div class="{{ $canShowVoters ? 'fauxBlockLink' : '' }}">
					<div class="pollResult {{ $simpleDisplay ? 'pollResult--simple' : '' }} {{ $poll.hasVoted($responseId) ? 'pollResult--voted' : '' }} {{ $canShowVoters ? 'pollResult--showVoters' : '' }}">
						<h3 class="pollResult-response">{$response.response|censor}</h3>
						<xf:if is="$canViewResults">
							<span class="pollResult-votes">
								<xf:if is="$canShowVoters">
									<a class="fauxBlockLink-blockLink"
										data-xf-click="toggle"
										data-target=".js-pollResultVoters-{$responseId}"
										role="button"
										tabindex="0">
										<span class="u-muted">{{ phrase('votes:') }}</span> {$response.response_vote_count|number}
									</a>
								<xf:else />
									<span class="u-muted">{{ phrase('votes:') }}</span> {$response.response_vote_count|number}
								</xf:if>
							</span>
							<span class="pollResult-percentage">
								{{ $poll.getVotePercentage($response.response_vote_count)|number(1) }}%
							</span>
							<span class="pollResult-graph" aria-hidden="true">
								<span class="pollResult-bar"><xf:if is="$response.response_vote_count">
									<i style="width: {{ $poll.getVotePercentage($response.response_vote_count) }}%"></i>
								</xf:if></span>
							</span>
						</xf:if>
					</div>
				</div>
				<xf:if is="$canShowVoters">
					<div class="pollResult-voters js-pollResultVoters-{$responseId} toggleTarget"
						data-href="{{ $poll.getLink('results', {'response': $responseId}) }}"
						data-load-selector=".js-pollVoters"></div>
				</xf:if>
			</li>
		</xf:foreach>
		</ul>
		<xf:if is="!$canViewResults">
			<hr class="block-separator" />
			<div class="block-row block-row--minor">
				<span class="u-muted">{{ phrase('results_only_viewable_after_voting') }}</span>
			</div>
		<xf:elseif is="!$simpleDisplay" />
			<hr class="block-separator" />
			<div class="block-row block-row--minor">
				<ul class="listInline listInline--bullet">
					<li>
						<dl class="pairs pairs--inline">
							<dt>{{ phrase('total_voters') }}</dt>
							<dd>{$poll.voter_count|number}</dd>
						</dl>
					</li>
					<xf:if is="$poll.close_date">
						<xf:if is="!$poll.isClosed()">
							<li>{{ phrase('this_poll_will_close:') }} <xf:date time="{$poll.close_date}" />.</li>
						<xf:else />
							<li>{{ phrase('poll_closed') }} <xf:date time="{$poll.close_date}" />.</li>
						</xf:if>
					</xf:if>
				</ul>
			</div>
		</xf:if>
	</div>
	<xf:if is="$showFooter">
		<xf:if contentcheck="true">
			<div class="block-footer">
			<xf:contentcheck>
				<xf:if is="$simpleDisplay">
					<a href="{{ $poll.getLink('content') }}">{{ phrase('see_comments...') }}</a>
				<xf:else />
					<xf:if is="$poll.canVote() AND $poll.hasVoted()">
						<span class="block-footer-controls"><xf:button href="{{ $poll.getLink('vote') }}"
							data-xf-click="inserter" data-replace=".js-pollContainer-{$poll.poll_id}">
							{{ phrase('change_vote') }}
						</xf:button></span>
					</xf:if>
				</xf:if>
			</xf:contentcheck>
			</div>
		</xf:if>
	</xf:if>
</xf:macro>

<xf:macro name="add_edit_inputs" arg-poll="{{ null }}" arg-draft="{{ [] }}">
	<xf:if is="!$poll OR $poll.canEditDetails()">
		<xf:textboxrow name="poll[question]" value="{{ $draft.question ?: $poll.question }}" maxlength="{{ max_length('XF:Poll', 'question') }}"
			label="{{ phrase('question') }}" />

	<xf:else />
		<xf:formrow label="{{ phrase('question') }}">{$poll.question}</xf:formrow>
	</xf:if>

	<xf:formrow rowtype="input"
		label="{{ phrase('possible_responses') }}">

		<ul class="inputList">
			<xf:if is="$poll">
				<xf:foreach loop="$poll.Responses" value="$response">
					<li>
						<xf:if is="$poll.canEditDetails()">
							<xf:textbox name="poll[existing_responses][{$response.poll_response_id}]"
								value="{$response.response}"
								maxlength="{{ max_length('XF:PollResponse', 'response') }}"
								placeholder="{{ phrase('poll_choice...') }}" />
						<xf:else />
							{$response.response}
						</xf:if>
					</li>
				</xf:foreach>
				<xf:set var="$remainingResponses" value="{{ $xf.options.pollMaximumResponses - count($poll.responses) }}" />
			<xf:elseif is="$draft" />
				<xf:foreach loop="$draft.new_responses" value="$response" i="$count" if="$response">
					<li>
						<xf:textbox name="poll[new_responses][]" value="{$response}"
							maxlength="{{ max_length('XF:PollResponse', 'response') }}"
							placeholder="{{ phrase('poll_choice...') }}" />
					</li>
				</xf:foreach>
				<xf:set var="$remainingResponses" value="{{ $xf.options.pollMaximumResponses - $count }}" />
			<xf:else />
				<xf:set var="$remainingResponses" value="{$xf.options.pollMaximumResponses}" />
			</xf:if>
			<xf:if is="$remainingResponses > 0">
				<li data-xf-init="field-adder" data-remaining="{{ $remainingResponses - 1 }}">
					<xf:textbox name="poll[new_responses][]" value=""
						maxlength="{{ max_length('XF:PollResponse', 'response') }}"
						placeholder="{{ phrase('poll_choice...') }}" />
				</li>
			</xf:if>
		</ul>
	</xf:formrow>

	<xf:radiorow name="poll[max_votes_type]"
		label="{{ phrase('maximum_selectable_responses') }}"
		explain="{{ phrase('this_is_maximum_number_of_responses_voter_may_select_when_voting') }}">

		<xf:if is="($draft AND $draft.max_votes_type == 'single') OR !$poll OR $poll.max_votes == 1">
			<xf:option value="single" selected="{{ ($draft AND $draft.max_votes_type == 'single') OR (!$draft AND !$poll.poll_id) OR $poll.max_votes == 1 }}"
				label="{{ phrase('single_choice') }}" />
		</xf:if>

		<xf:option value="unlimited" selected="{{ ($draft AND $draft.max_votes_type == 'unlimited') OR $poll AND $poll.max_votes == 0 }}"
			label="{{ phrase('unlimited') }}" />

		<xf:option value="number" selected="{{ ($draft AND $draft.max_votes_value > 1) OR $poll.max_votes > 1 }}">
			<xf:numberbox name="poll[max_votes_value]" min="1" max="255" value="{{ $draft.max_votes_value ?: ($poll.max_votes < 2 ? 2 : $poll.max_votes) }}" />
		</xf:option>
	</xf:radiorow>

	<xf:checkboxrow label="{{ phrase('options') }}">
		<xf:option name="poll[change_vote]" selected="{{ ($draft AND $draft.change_vote) OR !$poll OR $poll.change_vote }}">
			{{ phrase('allow_voters_to_change_their_votes') }}
		</xf:option>

		<xf:if is="!$poll OR $poll.canChangePollVisibility()">
			<xf:option name="poll[public_votes]" selected="{{ ($draft AND $draft.public_votes) OR $poll AND $poll.public_votes }}">
				{{ phrase('display_votes_publicly') }}
			</xf:option>
		</xf:if>

		<xf:option name="poll[view_results_unvoted]" selected="{{ ($draft AND $draft.view_results_unvoted) OR !$poll OR $poll.view_results_unvoted }}">
			{{ phrase('allow_results_to_be_viewed_without_voting') }}
		</xf:option>

		<xf:if is="$poll AND $poll.close_date">
			<xf:option name="poll[remove_close]" selected="{$poll.close_date}">
				{{ phrase('close_this_poll_on_x', {'close_date': date_time($poll.close_date)}) }}
			</xf:option>
		<xf:else />
			<xf:option name="poll[close]"
				selected="$draft AND $draft.close"
				label="{{ phrase('close_this_poll_after:') }}">

				<xf:dependent>
					<div class="inputGroup">
						<xf:numberbox name="poll[close_length]" value="{{ ($draft AND $draft.close_length) ? $draft.close_length : 7 }}" min="1" max="365" />
						<span class="inputGroup-splitter"></span>
						<xf:select name="poll[close_units]" class="input--autoSize">
							<xf:option value="hours" selected="$draft AND $draft.close_units == 'hours'">{{ phrase('hours') }}</xf:option>
							<xf:option value="days" selected="($draft AND $draft.close_units == 'days') OR !$draft">{{ phrase('days') }}</xf:option>
							<xf:option value="weeks" selected="$draft AND $draft.close_units == 'weeks'">{{ phrase('weeks') }}</xf:option>
							<xf:option value="months" selected="$draft AND $draft.close_units == 'months'">{{ phrase('months') }}</xf:option>
						</xf:select>
					</div>
				</xf:dependent>
			</xf:option>
		</xf:if>
	</xf:checkboxrow>

</xf:macro>

<xf:macro name="delete_block" arg-poll="!">
	<xf:form action="{{ $poll.getLink('delete') }}" class="block" ajax="true">
		<div class="block-container">
			<div class="block-body">
				<h2 class="block-header">{{ phrase('delete_poll') }}</h2>

				<xf:radiorow name="poll_action">
					<xf:option checked="1">{{ phrase('do_nothing') }}</xf:option>

					<xf:if is="$poll.voter_count">
						<xf:option value="reset">{{ phrase('reset_all_votes') }}</xf:option>
					</xf:if>

					<xf:option value="remove">{{ phrase('delete_entire_poll') }}</xf:option>
				</xf:radiorow>
			</div>
			<xf:submitrow icon="delete" />
		</div>
	</xf:form>
</xf:macro>]]></template>
  <template type="public" title="poll_results" version_id="2000070" version_string="2.0.0"><![CDATA[<xf:title>{{ phrase('view_results:') }} {$poll.question}</xf:title>

<xf:head option="metaNoindex"><meta name="robots" content="noindex" /></xf:head>

<xf:breadcrumb source="$breadcrumbs" />

<div class="block">
	<div class="block-container">
		<xf:macro template="poll_macros" name="result" arg-poll="{$poll}" arg-showFooter="{{ false }}" />
	</div>
</div>]]></template>
  <template type="public" title="poll_vote" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('cast_vote') }}</xf:title>

<xf:breadcrumb source="$breadcrumbs" />

<xf:macro template="poll_macros" name="poll_block"
	arg-poll="{$poll}"
	arg-showVoteBlock="{{ true }}"
	arg-simpleDisplay="{$simpleDisplay}" />
]]></template>
  <template type="public" title="poll_voters" version_id="2000070" version_string="2.0.0"><![CDATA[<xf:title>{{ phrase('poll_voters:') }} {$poll.question}</xf:title>

<xf:head option="metaNoindex"><meta name="robots" content="noindex" /></xf:head>

<xf:breadcrumb source="$breadcrumbs" />

<div class="block">
	<div class="block-container">
		<div class="block-header">{{ phrase('members_who_voted_for_x', {'response': $response.response}) }}</div>
		<div class="block-body block-row">
			<div class="js-pollVoters">
				<ul class="listInline listInline--comma"><xf:trim>
					<xf:foreach loop="$response.Votes" value="$vote">
						<li><xf:username user="$vote.User" /></li>
					</xf:foreach>
				</xf:trim></ul>
			</div>
		</div>
	</div>
</div>]]></template>
  <template type="public" title="post" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:if is="$canInlineMod">
	<xf:js src="xf/inline_mod.js" min="1" />
</xf:if>

<div class="block" data-xf-init="{{ $canInlineMod ? 'inline-mod' : '' }}" data-type="post" data-href="{{ link('inline-mod') }}">
	<div class="block-container">
		<div class="block-body">
			<xf:macro template="post_macros" name="post" arg-post="{$post}" arg-thread="{$thread}" />
		</div>
	</div>
</div>]]></template>
  <template type="public" title="post_delete" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('delete_post') }}</xf:title>

<xf:breadcrumb source="$thread.getBreadcrumbs()" />

<xf:form action="{{ link('posts/delete', $post) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:if is="$post.isFirstPost()">
				<xf:inforow>
					<div class="blockMessage blockMessage--important"><strong>{{ phrase('note:') }}</strong> {{ phrase('this_is_first_post_in_thread') }}</div>
				</xf:inforow>
			</xf:if>
			<xf:macro template="helper_action" name="delete_type" arg-canHardDelete="{$post.canDelete('hard')}" />

			<xf:if is="$post.canSendModeratorActionAlert()">
				<xf:macro template="helper_action" name="author_alert" />
			</xf:if>
		</div>
		<xf:submitrow icon="delete" sticky="true" />
	</div>
	<xf:redirect />
</xf:form>]]></template>
  <template type="public" title="post_edit" version_id="2000052" version_string="2.0.0 Release Candidate 2"><![CDATA[<xf:title>{{ phrase('edit_post') }}</xf:title>

<xf:breadcrumb source="$thread.getBreadcrumbs()" />

<xf:form action="{{ link('posts/edit', $post) }}" ajax="true" class="block"
	data-xf-init="attachment-manager{{ ($post.isFirstPost() AND $thread.canEdit()) ? ' post-edit' : '' }}"
	data-preview-url="{{ link('posts/preview', $post) }}">

	<div class="block-container">
		<div class="block-body">
			<span class="u-anchorTarget js-editContainer"></span>
			<xf:if is="$post.isFirstPost() AND $thread.canEdit()">
				<xf:prefixinputrow
					label="{{ phrase('title') }}"
					prefixes="{$prefixes}"
					type="thread"
					prefix-value="{$thread.prefix_id}"
					textbox-value="{$thread.title}"
					placeholder="{{ phrase('title...') }}"
					rowtype="{{ $quickEdit ? 'fullWidth' : '' }}"
					maxlength="{{ max_length($thread, 'title') }}"/>
			</xf:if>

			<xf:editorrow name="message" value="{$post.message}"
				attachments="{$attachmentData.attachments}"
				rowtype="{{ $quickEdit ? 'fullWidth noLabel' : '' }}"
				data-min-height="100"
				label="{{ phrase('message') }}" />

			<xf:formrow rowtype="{{ $quickEdit ? 'fullWidth noLabel' : '' }}">
				<xf:if is="$attachmentData">
					<xf:macro template="helper_attach_upload" name="upload_block" arg-attachmentData="{$attachmentData}" />
				</xf:if>
				<xf:button class="button--link u-jsOnly" data-xf-click="preview-click" icon="preview" />
			</xf:formrow>

			<xf:if is="$post.isFirstPost() AND $thread.canEdit()">
				<xf:macro template="custom_fields_macros" name="custom_fields_edit"
					arg-type="threads"
					arg-set="{$thread.custom_fields}"
					arg-editMode="{{ $thread.getFieldEditMode() }}"
					arg-onlyInclude="{$forum.field_cache}"
					arg-rowType="{{ $quickEdit ? 'fullWidth' : '' }}" />
			</xf:if>

			<xf:if is="$post.canEditSilently()">
				<xf:formrow rowtype="{{ $quickEdit ? 'fullWidth noLabel' : '' }}">
					<xf:macro template="helper_action" name="edit_type" arg-canEditSilently="{$post.canEditSilently()}" />
				</xf:formrow>
			</xf:if>

			<xf:if is="$post.canSendModeratorActionAlert()">
				<xf:formrow rowtype="{{ $quickEdit ? 'fullWidth noLabel' : '' }}">
					<xf:macro template="helper_action" name="author_alert" arg-row="{{ false }}" />
				</xf:formrow>
			</xf:if>
		</div>
		<xf:submitrow icon="save" sticky="true" rowtype="{{ $quickEdit ? 'simple' : '' }}">
			<xf:html>
				<xf:button class="u-jsOnly" data-xf-click="preview-click" icon="preview" />
				<xf:if is="$quickEdit">
					<xf:button class="js-cancelButton">{{ phrase('button.cancel') }}</xf:button>
				</xf:if>
			</xf:html>
		</xf:submitrow>
	</div>
</xf:form>]]></template>
  <template type="public" title="post_edit_new_post" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ prefix('thread', $thread, 'escaped') }}{$thread.title}</xf:title>
<xf:h1>{{ prefix('thread', $thread) }}{$thread.title}</xf:h1>

<div class="block-outer js-threadStatusField"><xf:trim>
	<xf:if contentcheck="true">
		<div class="blockStatus blockStatus--info">
			<xf:contentcheck>
				<xf:macro template="custom_fields_macros" name="custom_fields_view"
					arg-type="threads"
					arg-group="thread_status"
					arg-onlyInclude="{$thread.Forum.field_cache}"
					arg-set="{$thread.custom_fields}"
					arg-wrapperClass="blockStatus-message" />
			</xf:contentcheck>
		</div>
	</xf:if>
</xf:trim></div>

<xf:macro template="post_macros" name="post" arg-post="{$post}" arg-thread="{$thread}" />]]></template>
  <template type="public" title="post_macros" version_id="2010037" version_string="2.1.0 Beta 7"><![CDATA[<xf:macro name="post" arg-post="!" arg-thread="!">
	<xf:css src="message.less" />
	<xf:set var="$isIgnored" value="{{ $post.isIgnored() }}" />
	<article class="message message--post js-post js-inlineModContainer {{ $isIgnored ? 'is-ignored' : '' }} {{ $post.isUnread() ? ' is-unread' : '' }}"
		data-author="{{ $post.User.username ?: $post.username }}"
		data-content="post-{$post.post_id}"
		id="js-post-{$post.post_id}">

		<span class="u-anchorTarget" id="post-{$post.post_id}"></span>

		<div class="message-inner">
			<div class="message-cell message-cell--user">
				<xf:macro template="message_macros" name="user_info" arg-user="{$post.User}"
					arg-fallbackName="{$post.username}"/>
			</div>
			<div class="message-cell message-cell--main">
				<div class="message-main js-quickEditTarget">

					<header class="message-attribution message-attribution--split">
						<div class="message-attribution-main">
							<a href="{{ link('threads/post', $thread, {'post_id': $post.post_id}) }}" class="u-concealed"
								rel="nofollow">
								<xf:date time="{$post.post_date}"/>
							</a>
						</div>

						<ul class="message-attribution-opposite message-attribution-opposite--list">
							<xf:if is="$post.isUnread()">
								<li><span class="message-newIndicator">{{ phrase('new') }}</span></li>
							</xf:if>
							<li>
								<a href="{{ link('threads/post', $thread, {'post_id': $post.post_id}) }}"
									data-xf-init="share-tooltip" data-href="{{ link('posts/share', $post) }}"
									rel="nofollow">
									<xf:fa icon="fa-share-alt"/>
								</a>
							</li>
							<xf:if contentcheck="true">
								<li>
									<xf:contentcheck>
										<xf:macro template="bookmark_macros" name="link"
											arg-content="{$post}"
											arg-class="bookmarkLink--highlightable"
											arg-confirmUrl="{{ link('posts/bookmark', $post) }}"
											arg-showText="{{ false }}"/>
									</xf:contentcheck>
								</li>
							</xf:if>
							<xf:if is="!$hidePosition">
								<li>
									<a href="{{ link('threads/post', $thread, {'post_id': $post.post_id}) }}" rel="nofollow">
										#{{ number($post.position + 1) }}
									</a>
								</li>
							</xf:if>
						</ul>
					</header>

					<div class="message-content js-messageContent">

						<xf:if is="$post.message_state == 'deleted'">
							<div class="messageNotice messageNotice--deleted">
								<xf:macro template="deletion_macros" name="notice" arg-log="{$post.DeletionLog}" />
							</div>
						<xf:elseif is="$post.message_state == 'moderated'" />
							<div class="messageNotice messageNotice--moderated">
								{{ phrase('this_message_is_awaiting_moderator_approval_and_is_invisible_to_normal') }}
							</div>
						</xf:if>
						<xf:if is="$post.warning_message">
							<div class="messageNotice messageNotice--warning">
								{$post.warning_message}
							</div>
						</xf:if>
						<xf:if is="$isIgnored">
							<div class="messageNotice messageNotice--ignored">
								{{ phrase('you_are_ignoring_content_by_this_member') }}
								<xf:showignored />
							</div>
						</xf:if>

						<div class="message-userContent lbContainer js-lbContainer {{ $isIgnored ? 'is-ignored' : '' }}"
							data-lb-id="post-{$post.post_id}"
							data-lb-caption-desc="{{ $post.User ? $post.User.username : $post.username }} &middot; {{ date_time($post.post_date) }}">

							<xf:if is="$post.isFirstPost()">
								<xf:macro template="custom_fields_macros" name="custom_fields_view"
									arg-type="threads"
									arg-group="before"
									arg-onlyInclude="{$thread.Forum.field_cache}"
									arg-set="{$thread.custom_fields}"
									arg-wrapperClass="message-fields message-fields--before" />
							</xf:if>

							<article class="message-body js-selectToQuote">
								<xf:ad position="post_above_content" arg-post="{$post}" />
								{{ bb_code($post.message, 'post', $post) }}
								<div class="js-selectToQuoteEnd">&nbsp;</div>
								<xf:ad position="post_below_content" arg-post="{$post}" />
							</article>

							<xf:if is="$post.isFirstPost()">
								<xf:macro template="custom_fields_macros" name="custom_fields_view"
									arg-type="threads"
									arg-group="after"
									arg-onlyInclude="{$thread.Forum.field_cache}"
									arg-set="{$thread.custom_fields}"
									arg-wrapperClass="message-fields message-fields--after" />
							</xf:if>

							<xf:if is="$post.attach_count">
								<xf:macro template="message_macros" name="attachments"
									arg-attachments="{$post.Attachments}"
									arg-message="{$post}"
									arg-canView="{{ $thread.canViewAttachments() }}" />
							</xf:if>
						</div>

						<xf:if is="$post.last_edit_date">
							<div class="message-lastEdit">
								<xf:if is="$post.user_id == $post.last_edit_user_id">
									{{ phrase('last_edited:') }} <xf:date time="{$post.last_edit_date}" />
								<xf:else />
									{{ phrase('last_edited_by_moderator:') }} <xf:date time="{$post.last_edit_date}" />
								</xf:if>
							</div>
						</xf:if>

						<xf:macro template="message_macros" name="signature" arg-user="{$post.User}" />
					</div>

					<footer class="message-footer">
						<xf:if contentcheck="true">
							<div class="message-actionBar actionBar">
								<xf:contentcheck>
									<xf:if contentcheck="true">
										<div class="actionBar-set actionBar-set--external">
										<xf:contentcheck>
											<xf:react content="{$post}" link="posts/react" list="< .js-post | .js-reactionsList" />

											<xf:if is="$thread.canReply()">
												<xf:set var="$quoteLink">{{ link('threads/reply', $thread, {'quote': $post.post_id}) }}</xf:set>

												<xf:if is="$xf.options.multiQuote">
													<a href="{$quoteLink}"
														class="actionBar-action actionBar-action--mq u-jsOnly js-multiQuote"
														title="{{ phrase('toggle_multi_quote_tooltip')|for_attr }}"
														data-message-id="{$post.post_id}"
														data-mq-action="add">{{ phrase('quote') }}</a>
												</xf:if>

												<a href="{$quoteLink}"
													class="actionBar-action actionBar-action--reply"
													title="{{ phrase('reply_quoting_this_message')|for_attr }}"
													data-xf-click="quote"
													data-quote-href="{{ link('posts/quote', $post) }}">{{ phrase('reply') }}</a>
											</xf:if>
										</xf:contentcheck>
										</div>
									</xf:if>

									<xf:if contentcheck="true">
										<div class="actionBar-set actionBar-set--internal">
										<xf:contentcheck>
											<xf:if is="$post.canUseInlineModeration()">
												<span class="actionBar-action actionBar-action--inlineMod">
													<xf:checkbox standalone="true">
														<xf:option value="{$post.post_id}" class="js-inlineModToggle"
															data-xf-init="tooltip"
															title="{{ phrase('select_for_moderation') }}"
															label="{{ phrase('select_for_moderation') }}"
															hiddenlabel="true" />
													</xf:checkbox>
												</span>
											</xf:if>

											<xf:if is="$post.canReport()">
												<a href="{{ link('posts/report', $post) }}"
													class="actionBar-action actionBar-action--report"
													data-xf-click="overlay">{{ phrase('report_verb') }}</a>
											</xf:if>

											<xf:set var="$hasActionBarMenu" value="{{ false }}" />
											<xf:if is="$post.canEdit()">
												<xf:js src="xf/message.js" min="1" />
												<a href="{{ link('posts/edit', $post) }}"
													class="actionBar-action actionBar-action--edit actionBar-action--menuItem"
													data-xf-click="quick-edit"
													data-editor-target="#js-post-{$post.post_id} .js-quickEditTarget"
													data-menu-closer="true">{{ phrase('edit') }}</a>

												<xf:set var="$hasActionBarMenu" value="{{ true }}" />
											</xf:if>
											<xf:if is="$post.edit_count && $post.canViewHistory()">
												<a href="{{ link('posts/history', $post) }}"
													class="actionBar-action actionBar-action--history actionBar-action--menuItem"
													data-xf-click="toggle"
													data-target="#js-post-{$post.post_id} .js-historyTarget"
													data-menu-closer="true">{{ phrase('history') }}</a>

												<xf:set var="$hasActionBarMenu" value="{{ true }}" />
											</xf:if>
											<xf:if is="$post.canDelete('soft')">
												<a href="{{ link('posts/delete', $post) }}"
													class="actionBar-action actionBar-action--delete actionBar-action--menuItem"
													data-xf-click="overlay">{{ phrase('delete') }}</a>

												<xf:set var="$hasActionBarMenu" value="{{ true }}" />
											</xf:if>
											<xf:if is="$post.message_state == 'deleted' AND $post.canUndelete()">
												<a href="{{ link('posts/undelete', $post) }}"
													class="actionBar-action actionBar-action--undelete actionBar-action--menuItem"
													data-xf-click="overlay">{{ phrase('undelete') }}</a>

												<xf:set var="$hasActionBarMenu" value="{{ true }}" />
											</xf:if>
											<xf:if is="$post.canCleanSpam()">
												<a href="{{ link('spam-cleaner', $post) }}"
													class="actionBar-action actionBar-action--spam actionBar-action--menuItem"
													data-xf-click="overlay">{{ phrase('spam') }}</a>

												<xf:set var="$hasActionBarMenu" value="{{ true }}" />
											</xf:if>
											<xf:if is="$xf.visitor.canViewIps() && $post.ip_id">
												<a href="{{ link('posts/ip', $post) }}"
													class="actionBar-action actionBar-action--ip actionBar-action--menuItem"
													data-xf-click="overlay">{{ phrase('ip') }}</a>

												<xf:set var="$hasActionBarMenu" value="{{ true }}" />
											</xf:if>
											<xf:if is="$post.canWarn()">

												<a href="{{ link('posts/warn', $post) }}"
													class="actionBar-action actionBar-action--warn actionBar-action--menuItem">{{ phrase('warn') }}</a>

												<xf:set var="$hasActionBarMenu" value="{{ true }}" />
											<xf:elseif is="$post.warning_id && $xf.visitor.canViewWarnings()" />
												<a href="{{ link('warnings', {'warning_id': $post.warning_id}) }}"
													class="actionBar-action actionBar-action--warn actionBar-action--menuItem"
													data-xf-click="overlay">{{ phrase('view_warning') }}</a>
												<xf:set var="$hasActionBarMenu" value="{{ true }}" />
											</xf:if>

											<xf:if is="$hasActionBarMenu">
												<a class="actionBar-action actionBar-action--menuTrigger"
													data-xf-click="menu"
													title="{{ phrase('more_options')|for_attr }}"
													role="button"
													tabindex="0"
													aria-expanded="false"
													aria-haspopup="true">&#8226;&#8226;&#8226;</a>

												<div class="menu" data-menu="menu" aria-hidden="true" data-menu-builder="actionBar">
													<div class="menu-content">
														<h4 class="menu-header">{{ phrase('more_options') }}</h4>
														<div class="js-menuBuilderTarget"></div>
													</div>
												</div>
											</xf:if>
										</xf:contentcheck>
										</div>
									</xf:if>

								</xf:contentcheck>
							</div>
						</xf:if>

						<div class="reactionsBar js-reactionsList {{ $post.reactions ? 'is-active' : '' }}">
							<xf:reactions content="{$post}" link="posts/reactions" />
						</div>

						<div class="js-historyTarget message-historyTarget toggleTarget" data-href="trigger-href"></div>
					</footer>
				</div>
			</div>
			{$extraAfterMessage|raw}
		</div>
	</article>

	<xf:ad position="post_below_container" arg-post="{$post}" />
</xf:macro>

<xf:macro name="post_deleted" arg-post="!" arg-thread="!">
	<xf:css src="message.less" />
	<div class="message message--deleted message--post{{ $post.isIgnored() ? ' is-ignored' : '' }}{{ $post.isUnread() ? ' is-unread' : '' }} js-post js-inlineModContainer"
		data-author="{{ $post.User.username ?: $post.username }}"
		data-content="post-{$post.post_id}">

		<span class="u-anchorTarget" id="post-{$post.post_id}"></span>
		<div class="message-inner">
			<div class="message-cell message-cell--user">
				<xf:macro template="message_macros" name="user_info" arg-user="{$post.User}" arg-fallbackName="{$post.username}" />
			</div>
			<div class="message-cell message-cell--main">
				<div class="message-attribution">
					<ul class="listInline listInline--bullet message-attribution-main">
						<li><a href="{{ link('threads/post', $thread, {'post_id': $post.post_id}) }}" class="u-concealed" rel="nofollow"><xf:date time="{$post.post_date}" /></a></li>
						<li><xf:username user="{$post.User}" defaultname="{$post.username}" class="u-concealed" /></li>
					</ul>
				</div>

				<div class="messageNotice messageNotice--deleted">
					<xf:macro template="deletion_macros" name="notice" arg-log="{$post.DeletionLog}" />

					<a href="{{ link('posts/show', $post) }}" class="u-jsOnly" data-xf-click="inserter" data-replace="[data-content=post-{$post.post_id}]">{{ phrase('show...') }}</a>

					<xf:if is="$post.canUseInlineModeration()">
						<span style="display: none">
							<!-- this can be actioned on the full post -->
							<xf:checkbox standalone="true">
								<xf:option value="{$post.post_id}" class="js-inlineModToggle"
									hiddenlabel="true" />
							</xf:checkbox>
						</span>
					</xf:if>
				</div>
			</div>
		</div>
	</div>

	<xf:ad position="post_below_container" arg-post="{$post}" />
</xf:macro>]]></template>
  <template type="public" title="prefix_input" version_id="2010132" version_string="2.1.1 Beta 2"><![CDATA[<xf:js src="xf/prefix_menu.js" min="1" />
<xf:css src="prefix_menu.less" />

<xf:set var="$textbox">
	<xf:if is="$rows">
		<textarea rows="{$rows}" name="{$textboxName}"
			data-xf-init="textarea-handler {$xfInit}" data-single-line="true"
			class="input js-titleInput {$textboxClass}"
			autocomplete="off"
			{$attrsHtml|raw}>{$textboxValue}</textarea>
	<xf:else />
		<input type="text" name="{$textboxName}"
			data-xf-init="{$xfInit}"
			class="input js-titleInput {$textboxClass}"
			value="{$textboxValue}"
			autocomplete="off"
			{$attrsHtml|raw} />
	</xf:if>
</xf:set>
<xf:set var="$selectbox">
	<xf:macro template="prefix_macros" name="select"
		arg-name="{$prefixName}"
		arg-prefixes="{$prefixes}"
		arg-selected="{$prefixValue}"
		arg-type="{$prefixType}"
		arg-class="js-prefixSelect u-noJsOnly" />
</xf:set>

<xf:if is="$prefixes || $href">
	<div class="js-prefixContainer">
		<div class="inputGroup inputGroup--joined u-jsOnly">
			<div class="inputGroup-text">
				<div class="{$prefixClass}" data-xf-init="prefix-menu"{{ $href ? ' data-href="' . $href . '" data-listen-to="' . $listenTo . '"' : '' }} >
					<a class="menuTrigger menuTrigger--prefix" data-xf-click="menu" role="button" tabindex="0" aria-expanded="false" aria-haspopup="true">
						<span class="js-activePrefix">{{ phrase('(no_prefix)') }}</span>
					</a>
					<div class="menu" data-menu="menu" aria-hidden="true">
						<div class="menu-content">
							<div class="menu-scroller js-prefixMenuContent" role="listbox">
								<xf:macro name="template" />
							</div>
						</div>
					</div>
				</div>
				{$selectbox|raw}
			</div>
			{$textbox|raw}
		</div>
		<noscript>
			<div class="inputGroup">
				{$selectbox|raw}
				<span class="inputGroup-splitter"></span>
				{$textbox|raw}
			</div>
		</noscript>
	</div>
<xf:else />
	{$textbox|raw}
</xf:if>

<xf:macro name="template">
	<script type="text/template">
		<xf:mustache name="#groups">
			<xf:mustache name="#title">
				<h3 class="menu-header">{{ mustache('title') }}</h3>
			</xf:mustache>
			<xf:mustache name="#prefixes">
				<div class="menu-row">
					<a class="menuPrefix {{ mustache('css_class') }}"
						data-prefix-id="{{ mustache('prefix_id') }}"
						data-prefix-class="{{ mustache('css_class') }}"
						role="option">{{ mustache('title') }}</a>
				</div>
			</xf:mustache>
			<hr class="menu-separator" />
		</xf:mustache>
		<div class="menu-row">
			<a class="menuPrefix menuPrefix--none"
				data-prefix-id="0"
				data-prefix-class=""
				role="option">{{ phrase('(no_prefix)') }}</a>
		</div>
	</script>
</xf:macro>

<xf:macro name="menu_prefixes" arg-prefixes="!" arg-prefixType="!">
	<xf:foreach loop="array_keys($prefixes)" value="$groupId">
		<xf:if is="$groupId > 0">
			<h3 class="menu-header">{{ prefix_group($prefixType, $groupId) }}</h3>
			<div class="menu-row">
				<xf:foreach loop="{$prefixes.{$groupId}}" key="$prefixId" value="$prefix">
					<a class="menuPrefix {$prefix.css_class}"
						data-prefix-id="{$prefixId}"
						data-prefix-class="{$prefix.css_class}"
						role="option">{{ prefix_title($prefixType, $prefixId) }}</a>
				</xf:foreach>
			</div>
			<hr class="menu-separator" />
		<xf:else />
			<div class="menu-row">
				<xf:foreach loop="{$prefixes.{$groupId}}" key="$prefixId" value="$prefix">
					<a class="menuPrefix {$prefix.css_class}"
						data-prefix-id="{$prefixId}"
						data-prefix-class="{$prefix.css_class}"
						role="option">{{ prefix_title($prefixType, $prefixId) }}</a>
				</xf:foreach>
			</div>
			<hr class="menu-separator" />
		</xf:if>
	</xf:foreach>
	<div class="menu-row">
		<a class="menuPrefix menuPrefix--none"
			data-prefix-id="0"
			data-prefix-class=""
			role="option">{{ phrase('(no_prefix)') }}</a>
	</div>
</xf:macro>]]></template>
  <template type="public" title="prefix_macros" version_id="2001070" version_string="2.0.10"><![CDATA[<xf:macro name="select"
	arg-prefixes="!"
	arg-type="!"
	arg-selected=""
	arg-name="prefix_id"
	arg-noneLabel="{{ phrase('(no_prefix)') }}"
	arg-multiple="{{ false }}"
	arg-includeAny="{{ false }}"
	arg-class=""
	arg-href=""
	arg-listenTo="">

	<xf:select name="{$name}" value="{$selected}" multiple="{$multiple}" class="{$class}"
		data-xf-init="{{ ($href AND $listenTo) ? 'prefix-loader' : '' }}"
		data-href="{$href}"
		data-listen-to="{$listenTo}"
		title="{{ phrase('prefix') }}">

		<xf:if is="$includeAny">
			<xf:option value="-1" label="{{ phrase('(any)') }}" />
		</xf:if>
		<xf:option value="0" label="{$noneLabel}" />
		<xf:foreach loop="array_keys($prefixes)" value="$groupId">
			<xf:if is="$groupId > 0">
				<xf:optgroup label="{{ prefix_group($type, $groupId) }}">
					<xf:foreach loop="{$prefixes.{$groupId}}" key="$prefixId" value="$prefix">
						<xf:option value="{$prefixId}" label="{{ prefix_title($type, $prefixId) }}" data-prefix-class="{$prefix.css_class}" />
					</xf:foreach>
				</xf:optgroup>
			<xf:else />
				<xf:foreach loop="{$prefixes.{$groupId}}" key="$prefixId" value="$prefix">
					<xf:option value="{$prefixId}" label="{{ prefix_title($type, $prefixId) }}" data-prefix-class="{$prefix.css_class}" />
				</xf:foreach>
			</xf:if>
		</xf:foreach>
	</xf:select>
</xf:macro>

<xf:macro name="row"
	arg-prefixes="!"
	arg-type="!"
	arg-label="{{ phrase('prefix') }}"
	arg-explain=""
	arg-selected=""
	arg-name="prefix_id"
	arg-noneLabel="{{ phrase('(no_prefix)') }}"
	arg-multiple="{{ false }}"
	arg-includeAny="{{ false }}"
	arg-class="">

	<xf:formrow rowtype="input" label="{$label}">
		<xf:macro name="select"
			arg-prefixes="{$prefixes}"
			arg-type="{$type}"
			arg-selected="{$selected}"
			arg-name="{$name}"
			arg-noneLabel="{$noneLabel}"
			arg-multiple="{$multiple}"
			arg-includeAny="{$includeAny}"
			arg-class="{$class}" />
		<xf:if is="$explain">
			<div class="formRow-explain">{$explain|raw}</div>
		</xf:if>
	</xf:formrow>
</xf:macro>]]></template>
  <template type="public" title="prefix_menu.less" version_id="2000370" version_string="2.0.3"><![CDATA[.menuTrigger.menuTrigger--prefix
{
	text-decoration: none;
}

.menuPrefix,
.menuPrefix.label--hidden
{
	display: block;
	font-size: @xf-fontSizeSmall;
	cursor: default;
	padding: @xf-paddingMedium;
	//margin-bottom: -(@xf-paddingMedium);

	&.label--hidden
	{
		border: 1px solid @xf-borderColorFaint;
	}

	&.menuPrefix--none
	{
		color: @xf-textColorMuted;
		font-style: italic;
		text-decoration: none;
	}
}]]></template>
  <template type="public" title="prism_macros" version_id="2000170" version_string="2.0.1"><![CDATA[<xf:macro name="setup">
	<xf:css src="bb_code.less" />
	<xf:js prod="xf/code_block-compiled.js" dev="vendor/prism/prism.min.js, xf/code_block.js" />
</xf:macro>]]></template>
  <template type="public" title="profile_post" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('profile_post_for_x', {'username': $profilePost.ProfileUser.username}) }}</xf:title>

<xf:if is="$canInlineMod">
	<xf:js src="xf/inline_mod.js" min="1" />
</xf:if>

<div class="block" data-xf-init="{{ $canInlineMod ? 'inline-mod' : '' }}" data-type="profile_post" data-href="{{ link('inline-mod') }}">
	<div class="block-container">
		<div class="block-body">
			<xf:macro template="profile_post_macros" name="profile_post"
				arg-profilePost="{$profilePost}"
				arg-showTargetUser="{$showTargetUser}"
				arg-allowInlineMod="{$allowInlineMod}" />
		</div>
	</div>
</div>
]]></template>
  <template type="public" title="profile_post_comment" version_id="2000070" version_string="2.0.0"><![CDATA[<xf:head option="metaNoindex"><meta name="robots" content="noindex" /></xf:head>

<div class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:macro template="profile_post_macros" name="comment"
				arg-comment="{$comment}"
				arg-profilePost="{$profilePost}" />
		</div>
	</div>
</div>]]></template>
  <template type="public" title="profile_post_comment_delete" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('delete_profile_post_comment') }}</xf:title>

<xf:breadcrumb href="{{ link('members', $profilePost.ProfileUser) }}">{$profilePost.ProfileUser.username}</xf:breadcrumb>
<xf:breadcrumb href="{{ link('profile-posts', $profilePost) }}">{{ phrase('profile_post_by_x', {'name': $profilePost.username}) }}</xf:breadcrumb>

<xf:form action="{{ link('profile-posts/comments/delete', $comment) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:macro template="helper_action" name="delete_type" arg-canHardDelete="{$comment.canDelete('hard')}" />

			<xf:if is="$comment.canSendModeratorActionAlert()">
				<xf:macro template="helper_action" name="author_alert" />
			</xf:if>
		</div>
		<xf:submitrow icon="delete" />
	</div>
	<xf:redirect />
</xf:form>]]></template>
  <template type="public" title="profile_post_comment_edit" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('edit_profile_post_comment') }}</xf:title>

<xf:breadcrumb href="{{ link('members', $profilePost.ProfileUser) }}">{$profilePost.ProfileUser.username}</xf:breadcrumb>
<xf:breadcrumb href="{{ link('profile-posts', $profilePost) }}">{{ phrase('profile_post_by_x', {'name': $profilePost.username}) }}</xf:breadcrumb>

<xf:form action="{{ link('profile-posts/comments/edit', $comment) }}" class="{{ !$quickEdit ? 'block' : '' }}" ajax="true">
	<div class="{{ !$quickEdit ? 'block-container' : '' }}">
		<div class="{{ !$quickEdit ? 'block-body' : '' }}">
			<xf:editorrow name="message"
				value="{$comment.message}"
				rowtype="{{ $quickEdit ? 'fullWidth noLabel' : '' }}"
				label="{{ phrase('message') }}"
				data-min-height="{{ $quickEdit ? 40 : 100 }}"
				rendereropts="{{ {'treatAsStructuredText': true} }}" />

			<xf:if is="$comment.canSendModeratorActionAlert()">
				<xf:formrow rowtype="{{ $quickEdit ? 'fullWidth noLabel' : '' }}">
					<xf:macro template="helper_action" name="author_alert" arg-row="{{ false }}" />
				</xf:formrow>
			</xf:if>
		</div>
		<xf:if is="$quickEdit">
			<xf:formrow rowtype="fullWidth noLabel">
				<xf:button type="submit" class="button--primary" icon="save" />
				<xf:button class="js-cancelButton">{{ phrase('button.cancel') }}</xf:button>
			</xf:formrow>
		<xf:else />
			<xf:submitrow icon="save" />
		</xf:if>
	</div>
</xf:form>]]></template>
  <template type="public" title="profile_post_comment_edit_new_comment" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro template="profile_post_macros" name="comment" arg-profilePost="{$profilePost}" arg-comment="{$comment}" />]]></template>
  <template type="public" title="profile_post_comments" version_id="2000070" version_string="2.0.0"><![CDATA[<xf:head option="metaNoindex"><meta name="robots" content="noindex" /></xf:head>

<xf:if is="$loadMore">
	<div class="message-responseRow js-commentLoader">
		<a href="{{ link('profile-posts/load-previous', $profilePost, {'before': $firstCommentDate}) }}"
			data-xf-click="comment-loader"
			data-container=".js-commentLoader"
			rel="nofollow">{{ phrase('view_previous_comments...') }}</a>
	</div>
</xf:if>

<xf:foreach loop="$comments" value="$comment">
	<xf:macro template="profile_post_macros" name="comment"
		arg-comment="{$comment}"
		arg-profilePost="{$profilePost}" />
</xf:foreach>]]></template>
  <template type="public" title="profile_post_delete" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('delete_profile_post') }}</xf:title>

<xf:breadcrumb href="{{ link('members', $profileUser) }}">{$profileUser.username}</xf:breadcrumb>

<xf:form action="{{ link('profile-posts/delete', $profilePost) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:macro template="helper_action" name="delete_type" arg-canHardDelete="{$profilePost.canDelete('hard')}" />

			<xf:if is="$profilePost.canSendModeratorActionAlert()">
				<xf:macro template="helper_action" name="author_alert" />
			</xf:if>
		</div>
		<xf:submitrow icon="delete" />
	</div>
	<xf:redirect />
</xf:form>]]></template>
  <template type="public" title="profile_post_edit" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('edit_profile_post') }}</xf:title>

<xf:breadcrumb href="{{ link('members', $profileUser) }}">{$profileUser.username}</xf:breadcrumb>

<xf:form action="{{ link('profile-posts/edit', $profilePost) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<span class="u-anchorTarget js-editContainer"></span>

			<xf:editorrow name="message"
				value="{$profilePost.message}"
				rowtype="{{ $quickEdit ? 'fullWidth noLabel' : '' }}"
				label="{{ phrase('message') }}"
				data-min-height="{{ $quickEdit ? 40 : 100 }}"
				rendereropts="{{ {'treatAsStructuredText': true} }}" />

			<xf:if is="$profilePost.canSendModeratorActionAlert()">
				<xf:formrow rowtype="{{ $quickEdit ? 'fullWidth noLabel' : '' }}">
					<xf:macro template="helper_action" name="author_alert" arg-row="{{ false }}" />
				</xf:formrow>
			</xf:if>
		</div>
		<xf:submitrow icon="save" sticky="true" rowtype="{{ $quickEdit ? 'simple' : '' }}">
			<xf:html>
				<xf:if is="$quickEdit">
					<xf:button class="js-cancelButton">{{ phrase('button.cancel') }}</xf:button>
				</xf:if>
			</xf:html>
		</xf:submitrow>
	</div>

	<xf:if is="$noInlineMod">
		<xf:hiddenval name="_xfNoInlineMod">1</xf:hiddenval>
	</xf:if>
</xf:form>]]></template>
  <template type="public" title="profile_post_edit_new_post" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro template="profile_post_macros" name="profile_post"
	arg-profilePost="{$profilePost}"
	arg-allowInlineMod="{{ $noInlineMod ? false : true }}" />

]]></template>
  <template type="public" title="profile_post_macros" version_id="2010037" version_string="2.1.0 Beta 7"><![CDATA[<xf:macro name="attribution" arg-profilePost="!" arg-showTargetUser="{{ false }}">
	<xf:if is="$showTargetUser AND $profilePost.user_id != $profilePost.profile_user_id">
		<xf:username user="$profilePost.User" rich="true" defaultname="{$profilePost.username}" aria-hidden="true" />
		<xf:fa icon="{{ $xf.isRtl ? 'fa-caret-left' : 'fa-caret-right' }} u-muted" />
		<xf:username user="$profilePost.ProfileUser" rich="true" defaultname="{{ phrase('unknown') }}" aria-hidden="true" />
		<span class="u-srOnly">{{ phrase('x_wrote_on_ys_profile', {
			'name': ($profilePost.User.username ?: {$profilePost.username}),
			'profile': ($profilePost.ProfileUser.username ?: phrase('unknown'))
		}) }}</span>
	<xf:else />
		<xf:username user="$profilePost.User" rich="true" defaultname="{$profilePost.username}" />
	</xf:if>
</xf:macro>

<xf:macro name="profile_post"
	arg-profilePost="!"
	arg-showTargetUser="{{ false }}"
	arg-allowInlineMod="{{ true }}">

	<xf:css src="message.less" />
	<xf:js src="xf/comment.js" min="1" />

	<article class="message message--simple{{ $profilePost.isIgnored() ? ' is-ignored' : '' }} js-inlineModContainer"
		data-author="{{ $profilePost.User.username ?: $profilePost.username }}"
		data-content="profile-post-{$profilePost.profile_post_id}"
		id="js-profilePost-{$profilePost.profile_post_id}">

		<span class="u-anchorTarget" id="profile-post-{$profilePost.profile_post_id}"></span>
		<div class="message-inner">
			<div class="message-cell message-cell--user">
				<xf:macro template="message_macros" name="user_info_simple" arg-user="{$profilePost.User}" arg-fallbackName="{$profilePost.username}" />
			</div>
			<div class="message-cell message-cell--main">
				<div class="message-main js-quickEditTarget">
					<div class="message-content js-messageContent">
						<header class="message-attribution message-attribution--plain">
							<ul class="listInline listInline--bullet">
								<li class="message-attribution-user">
									<xf:avatar user="$profilePost.User" size="xxs" />
									<h4 class="attribution"><xf:macro name="attribution"
										arg-profilePost="{$profilePost}"
										arg-showTargetUser="{$showTargetUser}" /></h4>
								</li>
								<li><a href="{{ link('profile-posts', $profilePost) }}" class="u-concealed" rel="nofollow"><xf:date time="$profilePost.post_date" /></a></li>
							</ul>
						</header>

						<xf:if is="$profilePost.message_state == 'deleted'">
							<div class="messageNotice messageNotice--deleted">
								<xf:macro template="deletion_macros" name="notice" arg-log="{$profilePost.DeletionLog}" />
							</div>
						<xf:elseif is="$profilePost.message_state == 'moderated'" />
							<div class="messageNotice messageNotice--moderated">
								{{ phrase('this_message_is_awaiting_moderator_approval_and_is_invisible_to_normal') }}
							</div>
						</xf:if>
						<xf:if is="$profilePost.warning_message">
							<div class="messageNotice messageNotice--warning">
								{$profilePost.warning_message}
							</div>
						</xf:if>
						<xf:if is="$profilePost.isIgnored()">
							<div class="messageNotice messageNotice--ignored">
								{{ phrase('you_are_ignoring_content_by_this_member') }}
							</div>
						</xf:if>

						<article class="message-body">
							{{ bb_code($profilePost.message, 'profile_post', $profilePost) }}
						</article>
					</div>


					<footer class="message-footer">
						<div class="message-actionBar actionBar">
							<xf:if contentcheck="true">
								<div class="actionBar-set actionBar-set--external">
								<xf:contentcheck>
									<xf:react content="{$profilePost}" link="profile-posts/react" list="< .message | .js-reactionsList" />

									<xf:if is="$profilePost.canComment() AND property('profilePostCommentToggle')">
										<a class="actionBar-action actionBar-action--reply"
											data-xf-click="toggle"
											data-target=".js-commentsTarget-{$profilePost.profile_post_id}"
											data-scroll-to="true"
											role="button"
											tabindex="0">{{ phrase('comment') }}</a>
									</xf:if>
								</xf:contentcheck>
								</div>
							</xf:if>

							<xf:if contentcheck="true">
								<div class="actionBar-set actionBar-set--internal">
								<xf:contentcheck>
									<xf:if is="{$allowInlineMod} AND $profilePost.canUseInlineModeration()">
										<span class="actionBar-action actionBar-action--inlineMod">
											<xf:checkbox standalone="true">
												<xf:option value="{$profilePost.profile_post_id}"
													class="js-inlineModToggle"
													data-xf-init="tooltip"
													title="{{ phrase('select_for_moderation') }}"
													label="{{ phrase('select_for_moderation') }}"
													hiddenlabel="true" />
											</xf:checkbox>
										</span>
									</xf:if>
									<xf:if is="$profilePost.canReport()">
										<a href="{{ link('profile-posts/report', $profilePost) }}" class="actionBar-action actionBar-action--report" data-xf-click="overlay">{{ phrase('report_verb') }}</a>
									</xf:if>

									<xf:set var="$hasActionBarMenu" value="{{ false }}" />
									<xf:if is="$profilePost.canEdit()">
										<xf:js src="xf/message.js" min="1" />
										<a href="{{ link('profile-posts/edit', $profilePost) }}"
											class="actionBar-action actionBar-action--edit actionBar-action--menuItem"
											data-xf-click="quick-edit"
											data-editor-target="#js-profilePost-{$profilePost.profile_post_id} .js-quickEditTarget"
											data-no-inline-mod="{{ !$allowInlineMod ? 1 : 0 }}"
											data-menu-closer="true">{{ phrase('edit') }}</a>
										<xf:set var="$hasActionBarMenu" value="{{ true }}" />
									</xf:if>
									<xf:if is="$profilePost.canDelete('soft')">
										<a href="{{ link('profile-posts/delete', $profilePost) }}"
											class="actionBar-action actionBar-action--delete actionBar-action--menuItem"
											data-xf-click="overlay">{{ phrase('delete') }}</a>
										<xf:set var="$hasActionBarMenu" value="{{ true }}" />
									</xf:if>
									<xf:if is="$profilePost.message_state == 'deleted' AND $profilePost.canUndelete()">
										<a href="{{ link('profile-posts/undelete', $profilePost) }}" data-xf-click="overlay"
											class="actionBar-action actionBar-action--undelete actionBar-action--menuItem">{{ phrase('undelete') }}</a>
										<xf:set var="$hasActionBarMenu" value="{{ true }}" />
									</xf:if>
									<xf:if is="$profilePost.canCleanSpam()">
										<a href="{{ link('spam-cleaner', $profilePost) }}"
											class="actionBar-action actionBar-action--spam actionBar-action--menuItem"
											data-xf-click="overlay">{{ phrase('spam') }}</a>
										<xf:set var="$hasActionBarMenu" value="{{ true }}" />
									</xf:if>
									<xf:if is="$xf.visitor.canViewIps() && $profilePost.ip_id">
										<a href="{{ link('profile-posts/ip', $profilePost) }}"
											class="actionBar-action actionBar-action--ip actionBar-action--menuItem"
											data-xf-click="overlay">{{ phrase('ip') }}</a>
										<xf:set var="$hasActionBarMenu" value="{{ true }}" />
									</xf:if>
									<xf:if is="$profilePost.canWarn()">
										<a href="{{ link('profile-posts/warn', $profilePost) }}"
											class="actionBar-action actionBar-action--warn actionBar-action--menuItem">{{ phrase('warn') }}</a>
										<xf:set var="$hasActionBarMenu" value="{{ true }}" />
									<xf:elseif is="$profilePost.warning_id && $xf.visitor.canViewWarnings()" />
										<a href="{{ link('warnings', {'warning_id': $profilePost.warning_id}) }}"
											class="actionBar-action actionBar-action--warn actionBar-action--menuItem"
											data-xf-click="overlay">{{ phrase('view_warning') }}</a>
										<xf:set var="$hasActionBarMenu" value="{{ true }}" />
									</xf:if>

									<xf:if is="$hasActionBarMenu">
										<a class="actionBar-action actionBar-action--menuTrigger"
											data-xf-click="menu"
											title="{{ phrase('more_options')|for_attr }}"
											role="button"
											tabindex="0"
											aria-expanded="false"
											aria-haspopup="true">&#8226;&#8226;&#8226;</a>
										<div class="menu" data-menu="menu" aria-hidden="true" data-menu-builder="actionBar">
											<div class="menu-content">
												<h4 class="menu-header">{{ phrase('more_options') }}</h4>
												<div class="js-menuBuilderTarget"></div>
											</div>
										</div>
									</xf:if>
								</xf:contentcheck>
								</div>
							</xf:if>

						</div>

						<section class="message-responses js-messageResponses">
							<div class="message-responseRow message-responseRow--reactions js-reactionsList {{ $profilePost.reactions ? 'is-active' : '' }}"><xf:if is="$profilePost.reactions">
								<xf:reactions content="{$profilePost}" link="profile-posts/reactions" />
							</xf:if></div>

							<xf:if is="$profilePost.LatestComments is not empty">
								<xf:if is="$profilePost.hasMoreComments()">
									<div class="message-responseRow u-jsOnly js-commentLoader">
										<a href="{{ link('profile-posts/load-previous', $profilePost, {'before': $profilePost.LatestComments.first().comment_date}) }}"
											data-xf-click="comment-loader"
											data-container=".js-commentLoader"
											rel="nofollow">{{ phrase('view_previous_comments...') }}</a>
									</div>
								</xf:if>
								<div class="js-replyNewMessageContainer">
									<xf:foreach loop="$profilePost.LatestComments" value="$comment">
										<xf:macro
											name="{{ $comment.message_state == 'deleted' ? 'comment_deleted' : 'comment' }}"
											arg-comment="{$comment}"
											arg-profilePost="{$profilePost}" />
									</xf:foreach>
								</div>
								<xf:else />
								<div class="js-replyNewMessageContainer"></div>
							</xf:if>

							<xf:if is="$profilePost.canComment()">
								<xf:js src="xf/message.js" min="1" />
								<div class="message-responseRow js-commentsTarget-{$profilePost.profile_post_id} {{ property('profilePostCommentToggle') ? 'toggleTarget' : '' }}">
									<xf:form action="{{ link('profile-posts/add-comment', $profilePost) }}" ajax="true" class="comment"
										data-xf-init="quick-reply"
										data-message-container="< .js-messageResponses | .js-replyNewMessageContainer">
										<div class="comment-inner">
											<span class="comment-avatar">
												<xf:avatar user="{$xf.visitor}" size="xxs" />
											</span>
											<div class="comment-main">
												<div class="editorPlaceholder" data-xf-click="editor-placeholder">
													<div class="editorPlaceholder-editor is-hidden">
														<xf:macro template="quick_reply_macros" name="editor"
															arg-minHeight="40"
															arg-placeholder="{{ phrase('write_comment...') }}"
															arg-submitText="{{ phrase('post_comment') }}"
															arg-deferred="{{ true }}"
															arg-simpleSubmit="{{ true }}"
														/>
													</div>
													<div class="editorPlaceholder-placeholder">
														<div class="input"><span class="u-muted"> {{ phrase('write_comment...') }}</span></div>
													</div>
												</div>
											</div>
										</div>
										<xf:set var="$lastProfilePostComment" value="{$profilePost.LatestComments|last}" />
										<xf:hiddenval name="last_date">{$lastProfilePostComment.comment_date}</xf:hiddenval>
									</xf:form>
								</div>
							</xf:if>
						</section>
					</footer>
				</div>
			</div>
		</div>
	</article>
</xf:macro>

<xf:macro name="profile_post_deleted"
	arg-profilePost="!"
	arg-showTargetUser="{{ false }}">

	<xf:css src="message.less" />
	<div class="message message--simple{{ $profilePost.isIgnored() ? ' is-ignored' : '' }} js-inlineModContainer"
		data-author="{{ $profilePost.User.username ?: $profilePost.username }}"
		data-content="profile-post-{$profilePost.profile_post_id}">

		<span class="u-anchorTarget" id="profile-post-{$profilePost.profile_post_id}"></span>
		<div class="message-inner">
			<div class="message-cell message-cell--user">
				<xf:macro template="message_macros" name="user_info_simple" arg-user="{$profilePost.User}" arg-fallbackName="{$profilePost.username}" />
			</div>
			<div class="message-cell message-cell--main">
				<div class="message-attribution message-attribution--plain">
					<ul class="listInline listInline--bullet">
						<li class="message-attribution-user">
							<xf:avatar user="$profilePost.User" size="xxs" />
							<h4 class="attribution"><xf:macro name="attribution"
								arg-profilePost="{$profilePost}"
								arg-showTargetUser="{$showTargetUser}" /></h4>
						</li>
						<li><xf:date time="$profilePost.post_date" /></li>
					</ul>
				</div>

				<div class="messageNotice messageNotice--deleted">
					<xf:macro template="deletion_macros" name="notice" arg-log="{$profilePost.DeletionLog}" />

					<a href="{{ link('profile-posts/show', $profilePost) }}" class="u-jsOnly" data-xf-click="inserter" data-replace="[data-content=profile-post-{$profilePost.profile_post_id}]">{{ phrase('show...') }}</a>

					<xf:if is="$profilePost.canUseInlineModeration()">
						<span style="display: none">
							<!-- this can be actioned on the full post -->
							<xf:checkbox standalone="true">
								<xf:option value="{$profilePost.profile_post_id}" class="js-inlineModToggle"
									hiddenlabel="true" />
							</xf:checkbox>
						</span>
					</xf:if>
				</div>
			</div>
		</div>
	</div>
</xf:macro>

<xf:macro name="profile_post_simple"
	arg-profilePost="!"
	arg-limitHeight="{{ false }}">

	<div class="contentRow">
		<div class="contentRow-figure">
			<xf:avatar user="$profilePost.User" size="xxs" defaultname="{$profilePost.username}" />
		</div>
		<div class="contentRow-main contentRow-main--close">
			<div class="contentRow-lesser">
				<xf:macro name="attribution"
					arg-profilePost="{$profilePost}"
					arg-showTargetUser="{{ true }}" />
			</div>

			<xf:if is="$limitHeight">
				<div class="contentRow-faderContainer">
					<div class="contentRow-faderContent">
						{{ bb_code($profilePost.message, 'profile_post', $profilePost, {'simpleUnfurl': true}) }}
					</div>
					<div class="contentRow-fader"></div>
				</div>
			<xf:else />
				{{ bb_code($profilePost.message, 'profile_post', $profilePost, {'simpleUnfurl': true}) }}
			</xf:if>

			<div class="contentRow-minor">
				<a href="{{ link('profile-posts', $profilePost) }}" rel="nofollow" class="u-concealed"><xf:date time="{$profilePost.post_date}" /></a>
				<a href="{{ link('profile-posts', $profilePost) }}" rel="nofollow" class="contentRow-extra" data-xf-click="overlay" data-xf-init="tooltip" title="{{ phrase('interact')|for_attr }}">&#8226;&#8226;&#8226;</a>
			</div>
		</div>
	</div>
</xf:macro>

<xf:macro name="comment"
	arg-comment="!"
	arg-profilePost="!">

	<div class="message-responseRow {{ $comment.isIgnored() ? 'is-ignored' : '' }}">
		<div class="comment"
			data-author="{$comment.User.username}"
			data-content="profile-post-comment-{$comment.profile_post_comment_id}"
			id="js-profilePostComment-{$comment.profile_post_comment_id}">

			<div class="comment-inner">
				<span class="comment-avatar">
					<xf:avatar user="$comment.User" size="xxs" defaultname="{$comment.username}" />
				</span>
				<div class="comment-main">
					<span class="u-anchorTarget" id="profile-post-comment-{$comment.profile_post_comment_id}"></span>
					<div class="js-quickEditTargetComment">
						<div class="comment-content">
							<xf:if is="$comment.message_state == 'deleted'">
								<div class="messageNotice messageNotice--deleted">
									<xf:macro template="deletion_macros" name="notice" arg-log="{$comment.DeletionLog}" />
								</div>
							<xf:elseif is="$comment.message_state == 'moderated'" />
								<div class="messageNotice messageNotice--moderated">
									{{ phrase('this_message_is_awaiting_moderator_approval_and_is_invisible_to_normal') }}
								</div>
							</xf:if>
							<xf:if is="$comment.warning_message">
								<div class="messageNotice messageNotice--warning">
									{$comment.warning_message}
								</div>
							</xf:if>
							<xf:if is="$comment.isIgnored()">
								<div class="messageNotice messageNotice--ignored">
									{{ phrase('you_are_ignoring_content_by_this_member') }}
								</div>
							</xf:if>

							<div class="comment-contentWrapper">
								<xf:username user="$comment.User" rich="true" defaultname="{$comment.username}" class="comment-user" />
								<article class="comment-body">{{ bb_code($comment.message, 'profile_post_comment', $comment) }}</article>
							</div>
						</div>

						<footer class="comment-footer">
							<div class="comment-actionBar actionBar">
								<div class="actionBar-set actionBar-set--internal">
									<span class="actionBar-action"><xf:date time="{$comment.comment_date}" /></span>
									<xf:if is="$comment.canReport()">
										<a href="{{ link('profile-posts/comments/report', $comment) }}"
											class="actionBar-action actionBar-action--report"
											data-xf-click="overlay">{{ phrase('report_verb') }}</a>
									</xf:if>

									<xf:set var="$hasActionBarMenu" value="{{ false }}" />
									<xf:if is="$comment.canEdit()">
										<xf:js src="xf/message.js" min="1" />
										<a href="{{ link('profile-posts/comments/edit', $comment) }}"
											class="actionBar-action actionBar-action--edit actionBar-action--menuItem"
											data-xf-click="quick-edit"
											data-editor-target="#js-profilePostComment-{$comment.profile_post_comment_id} .js-quickEditTargetComment"
											data-menu-closer="true">{{ phrase('edit') }}</a>
										<xf:set var="$hasActionBarMenu" value="{{ true }}" />
									</xf:if>
									<xf:if is="$comment.canDelete('soft')">
										<a href="{{ link('profile-posts/comments/delete', $comment) }}"
											class="actionBar-action actionBar-action--delete actionBar-action--menuItem"
											data-xf-click="overlay">{{ phrase('delete') }}</a>
										<xf:set var="$hasActionBarMenu" value="{{ true }}" />
									</xf:if>
									<xf:if is="$comment.message_state == 'deleted' AND $comment.canUndelete()">
										<a href="{{ link('profile-posts/comments/undelete', $comment) }}" data-xf-click="overlay"
											class="actionBar-action actionBar-action--undelete actionBar-action--menuItem">{{ phrase('undelete') }}</a>
										<xf:set var="$hasActionBarMenu" value="{{ true }}" />
									</xf:if>
									<xf:if is="$comment.canCleanSpam()">
										<a href="{{ link('spam-cleaner', $comment) }}"
											class="actionBar-action actionBar-action--spam actionBar-action--menuItem"
											data-xf-click="overlay">{{ phrase('spam') }}</a>
										<xf:set var="$hasActionBarMenu" value="{{ true }}" />
									</xf:if>
									<xf:if is="$xf.visitor.canViewIps() && $comment.ip_id">
										<a href="{{ link('profile-posts/comments/ip', $comment) }}"
											class="actionBar-action actionBar-action--ip actionBar-action--menuItem"
											data-xf-click="overlay">{{ phrase('ip') }}</a>
										<xf:set var="$hasActionBarMenu" value="{{ true }}" />
									</xf:if>
									<xf:if is="$comment.canWarn()">
										<a href="{{ link('profile-posts/comments/warn', $comment) }}"
											class="actionBar-action actionBar-action--warn actionBar-action--menuItem">{{ phrase('warn') }}</a>
										<xf:set var="$hasActionBarMenu" value="{{ true }}" />
									<xf:elseif is="$comment.warning_id && $xf.visitor.canViewWarnings()" />
										<a href="{{ link('warnings', {'warning_id': $comment.warning_id}) }}"
											class="actionBar-action actionBar-action--warn actionBar-action--menuItem"
											data-xf-click="overlay">{{ phrase('view_warning') }}</a>
										<xf:set var="$hasActionBarMenu" value="{{ true }}" />
									</xf:if>
									<xf:if is="$comment.canApproveUnapprove()">
										<xf:if is="$comment.message_state == 'moderated'">
											<a href="{{ link('profile-posts/comments/approve', $comment, {'t': csrf_token()}) }}"
												class="actionBar-action actionBar-action--approve actionBar-action--menuItem">{{ phrase('approve') }}</a>
											<xf:set var="$hasActionBarMenu" value="{{ true }}" />
										<xf:elseif is="$comment.message_state == 'visible'" />
											<a href="{{ link('profile-posts/comments/unapprove', $comment, {'t': csrf_token()}) }}"
												class="actionBar-action actionBar-action--unapprove actionBar-action--menuItem">{{ phrase('unapprove') }}</a>
											<xf:set var="$hasActionBarMenu" value="{{ true }}" />
										</xf:if>
									</xf:if>

									<xf:if is="$hasActionBarMenu">
										<a class="actionBar-action actionBar-action--menuTrigger"
											data-xf-click="menu"
											title="{{ phrase('more_options')|for_attr }}"
											role="button"
											tabindex="0"
											aria-expanded="false"
											aria-haspopup="true">&#8226;&#8226;&#8226;</a>
										<div class="menu" data-menu="menu" aria-hidden="true" data-menu-builder="actionBar">
											<div class="menu-content">
												<h4 class="menu-header">{{ phrase('more_options') }}</h4>
												<div class="js-menuBuilderTarget"></div>
											</div>
										</div>
									</xf:if>
								</div>
								<xf:if contentcheck="true">
									<div class="actionBar-set actionBar-set--external">
									<xf:contentcheck>
										<xf:react content="{$comment}" link="profile-posts/comments/react" list="< .comment | .js-commentReactionsList" />
									</xf:contentcheck>
									</div>
								</xf:if>
							</div>

							<div class="comment-reactions js-commentReactionsList {{ $comment.reactions ? 'is-active' : '' }}"><xf:if is="$comment.reactions">
								<xf:reactions content="{$comment}" link="profile-posts/comments/reactions" />
							</xf:if></div>
						</footer>

					</div>
				</div>
			</div>
		</div>
	</div>
</xf:macro>

<xf:macro name="comment_deleted"
	arg-comment="!"
	arg-profilePost="!">

	<div class="message-responseRow">
		<div class="comment{{ $comment.isIgnored() ? ' is-ignored' : '' }}"
			data-author="{$comment.User.username}"
			data-content="profile-post-comment-{$comment.profile_post_comment_id}">

			<div class="comment-inner">
				<span class="comment-avatar">
					<xf:avatar user="$comment.User" size="xxs" defaultname="{$comment.username}" />
				</span>
				<div class="comment-main">
					<span class="u-anchorTarget" id="profile-post-comment-{$comment.profile_post_comment_id}"></span>
					<div class="comment-content">
						<div class="messageNotice messageNotice--deleted">
							<xf:macro template="deletion_macros" name="notice" arg-log="{$comment.DeletionLog}" />

							<a href="{{ link('profile-posts/comments/show', $comment) }}" class="u-jsOnly"
								data-xf-click="inserter"
								data-replace="[data-content=profile-post-comment-{$comment.profile_post_comment_id}]">{{ phrase('show...') }}</a>
						</div>
					</div>

					<div class="comment-actionBar actionBar">
						<div class="actionBar-set actionBar-set--internal">
							<span class="actionBar-action">
								<xf:date time="{$comment.comment_date}" />
								<span role="presentation" aria-hidden="true">&middot;</span>
								<xf:username user="{$comment.User}" defaultname="{$comment.username}" class="u-concealed" />
							</span>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</xf:macro>

<xf:macro name="quick_post" arg-user="!" arg-containerSelector="!" arg-lastDate="!">
	<xf:js src="xf/message.js" min="1" />

	<xf:form action="{{ link('members/post', $user) }}"
		ajax="true"
		class="message-spacer js-quickReply"
		data-xf-init="quick-reply"
		data-message-container="{$containerSelector}"
		data-ascending="0">

		<xf:macro template="quick_reply_macros" name="body"
			arg-simple="{{ true }}"
			arg-placeholder="{{ $xf.visitor.user_id == $user.user_id ? (phrase('update_your_status...')) : phrase('write_something...') }}"
			arg-submitText="{{ phrase('post_verb') }}"
			arg-showPreviewButton="{{ false }}"
			arg-lastDate="{$lastDate}"
			arg-lastKnownDate="{$lastDate}"
			arg-minHeight="40"
			arg-deferred="{{ true }}"
			arg-simpleSubmit="{{ true }} " />
	</xf:form>
</xf:macro>

<xf:macro name="submit" arg-user="!" arg-lastDate="!" arg-containerSelector="!" arg-style="full" arg-context="user">
	<xf:js src="xf/message.js" min="1" />
	<xf:if is="$style == 'full'">
		<xf:css src="message.less" />
	</xf:if>

	<xf:set var="$placeholder" value="{{ $xf.visitor.user_id == $user.user_id ? (phrase('update_your_status...')) : phrase('write_something...') }}" />

	<xf:form action="{{ link('members/post', $user) }}" ajax="true"
		class="{{ $style == 'full' ? 'message message--simple' : 'block-row' }}"
		data-xf-init="quick-reply"
		data-message-container="{$containerSelector}"
		data-ascending="0">

		<xf:if is="$style == 'full'">
			<div class="message-inner">
				<div class="message-cell message-cell--user">
					<xf:macro template="message_macros" name="user_info_simple" arg-user="{$xf.visitor}" />
				</div>
				<div class="message-cell message-cell--main">
					<div class="message-editorWrapper">
						<div class="editorPlaceholder" data-xf-click="editor-placeholder">
							<div class="editorPlaceholder-editor is-hidden">
								<xf:editor name="message"
									data-min-height="40"
									placeholder="{$placeholder}"
									previewable="0"
									data-deferred="on" />

								<div class="u-inputSpacer">
									<xf:button type="submit" class="button--primary" icon="reply">{{ phrase('post_verb') }}</xf:button>
								</div>
							</div>
							<div class="editorPlaceholder-placeholder">
								<div class="input"><span class="u-muted"> {$placeholder}</span></div>
							</div>
						</div>
					</div>
				</div>
			</div>
		<xf:else />
			<div>
				<xf:textarea name="message" autosize="true" rows="1" maxlength="{$xf.options.profilePostMaxLength}"
					class="{{ $style == 'full' ? 'input--avatarSizeS' : '' }} js-editor"
					data-xf-init="focus-trigger user-mentioner emoji-completer"
					data-display="< :next" aria-labelledby="ctrl_message"
					placeholder="{$placeholder}" />

				<div class="u-hidden u-hidden--transition u-inputSpacer">
					<xf:button type="submit" class="button--primary" icon="reply">{{ phrase('post_verb') }}</xf:button>
				</div>
			</div>
		</xf:if>

		<xf:comment><!-- Posts are in descending order so last post is first! --></xf:comment>
		<xf:hiddenval name="last_date">{$lastDate}</xf:hiddenval>
		<xf:hiddenval name="style">{$style}</xf:hiddenval>
		<xf:hiddenval name="context">{$context}</xf:hiddenval>
	</xf:form>
</xf:macro>]]></template>
  <template type="public" title="profile_post_new_profile_post_comments" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:foreach loop="$profilePostComments" value="$profilePostComment">
	<xf:macro template="profile_post_macros" name="comment" arg-profilePost="{$profilePost}" arg-comment="{$profilePostComment}" />
</xf:foreach>]]></template>
  <template type="public" title="push_conversation_message_reaction" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[{{ phrase('x_reacted_to_your_message_in_the_conversation_y', {
	'name': $user.username ?: $alert.username,
	'reaction': reaction_title($extra.reaction_id),
	'title': $content.Conversation.title
}) }}
<push:url>{{ link('canonical:conversations/messages', $content) }}</push:url>
<push:tag>conversation_message_reaction_{$content.message_id}_{$extra.reaction_id}</push:tag>]]></template>
  <template type="public" title="push_post_insert" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:if is="$content.isFirstPost()">
	{{ phrase('x_started_thread_y_may_be_more', {
		'name': $user.username ?: $alert.username,
		'title': prefix('thread', $content.Thread, 'plain') . $content.Thread.title
	}) }}
	<push:url>{{ link('canonical:threads', $content.Thread) }}</push:url>
	<push:tag>post_insert_forum_{$content.Thread.node_id}</push:tag>
<xf:else />
	{{ phrase('x_replied_to_thread_y_may_be_more', {
		'name': $user.username ?: $alert.username,
		'title': prefix('thread', $content.Thread, 'plain') . $content.Thread.title
	}) }}
	<push:url>{{ link('canonical:posts', $content) }}</push:url>
	<push:tag>post_insert_thread_{$content.thread_id}</push:tag>
</xf:if>]]></template>
  <template type="public" title="push_post_mention" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[{{ phrase('x_mentioned_you_in_post_in_thread_y', {
	'name': $user.username ?: $alert.username,
	'title': prefix('thread', $content.Thread, 'plain') . $content.Thread.title
}) }}
<push:url>{{ link('canonical:posts', $content) }}</push:url>]]></template>
  <template type="public" title="push_post_quote" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[{{ phrase('x_quoted_your_post_in_thread_y', {
	'name': $user.username ?: $alert.username,
	'title': prefix('thread', $content.Thread, 'plain') . $content.Thread.title
}) }}
<push:url>{{ link('canonical:posts', $content) }}</push:url>]]></template>
  <template type="public" title="push_post_reaction" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[{{ phrase('x_reacted_to_your_post_in_the_thread_y', {
	'name': $user.username ?: $alert.username,
	'reaction': reaction_title($extra.reaction_id),
	'title': prefix('thread', $content.Thread, 'plain') . $content.Thread.title
}) }}
<push:url>{{ link('canonical:posts', $content) }}</push:url>
<push:tag>post_reaction_{$content.post_id}_{$extra.reaction_id}</push:tag>]]></template>
  <template type="public" title="push_profile_post_comment_mention" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[{{ phrase('push_x_mentioned_you_comment_on_ys_profile', {
	'name': $user.username ?: $alert.username,
	'profile': $content.ProfilePost.ProfileUser.username
}) }}
<push:url>{{ link('canonical:profile-posts/comments', $content) }}</push:url>]]></template>
  <template type="public" title="push_profile_post_comment_other_commenter" version_id="2010053" version_string="2.1.0 Release Candidate 3"><![CDATA[<xf:if is="$content.ProfilePost.ProfileUser.user_id == $content.ProfilePost.user_id">
	{{ phrase('push_x_also_commented_on_ys_status', {
		'name': $user.username ?: $alert.username,
		'poster': $content.ProfilePost.username
	}) }}
<xf:else />
	{{ phrase('push_x_also_commented_on_ys_profile_post', {
		'name': $user.username ?: $alert.username,
		'poster': $content.ProfilePost.username
	}) }}
</xf:if>
<push:url>{{ link('canonical:profile-posts/comments', $content) }}</push:url>]]></template>
  <template type="public" title="push_profile_post_comment_reaction" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:if is="$xf.visitor.user_id == $content.ProfilePost.user_id">
	{{ phrase('push_x_reacted_to_your_comment_on_your_profile_post', {
		'name': $user.username ?: $alert.username,
		'reaction': reaction_title($extra.reaction_id)
	}) }}
<xf:else />
	{{ phrase('push_x_reacted_to_your_comment_on_ys_profile_post', {
		'name': $user.username ?: $alert.username,
		'poster': $content.ProfilePost.username,
		'reaction': reaction_title($extra.reaction_id)
	}) }}
</xf:if>
<push:url>{{ link('canonical:profile-posts', $content) }}</push:url>
<push:tag>profile_post_comment_reaction_{$content.profile_post_comment_id}_{$extra.reaction_id}</push:tag>]]></template>
  <template type="public" title="push_profile_post_comment_your_post" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[{{ phrase('push_x_commented_on_your_post_on_ys_profile', {
	'name': $user.username ?: $alert.username,
	'profile': $content.ProfilePost.ProfileUser.username
}) }}
<push:url>{{ link('canonical:profile-posts/comments', $content) }}</push:url>]]></template>
  <template type="public" title="push_profile_post_comment_your_profile" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:if is="$xf.visitor.user_id == $content.ProfilePost.user_id">
	{{ phrase('push_x_commented_on_your_status', {
		'name': $user.username ?: $alert.username
	}) }}
<xf:else />
	{{ phrase('push_x_commented_on_ys_post_on_your_profile', {
		'name': $user.username ?: $alert.username,
		'poster': $content.ProfilePost.username
	}) }}
</xf:if>
<push:url>{{ link('canonical:profile-posts/comments', $content) }}</push:url>]]></template>
  <template type="public" title="push_profile_post_insert" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[{{ phrase('push_alert_profile_post_insert', {
	'username': $user.username ?: $alert.username
}) }}
<push:url>{{ link('canonical:profile-posts', $content) }}</push:url>]]></template>
  <template type="public" title="push_profile_post_mention" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[{{ phrase('push_x_mentioned_you_message_on_ys_profile', {
	'name': $user.username ?: $alert.username,
	'profile': $content.ProfileUser.username
}) }}
<push:url>{{ link('canonical:profile-posts', $content) }}</push:url>]]></template>
  <template type="public" title="push_profile_post_reaction" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:if is="$xf.visitor.user_id == $content.ProfileUser.user_id">
	{{ phrase('push_x_reacted_to_your_status', {
		'name': $user.username ?: $alert.username,
		'reaction': reaction_title($extra.reaction_id)
	}) }}
<xf:else />
	{{ phrase('push_x_reacted_to_your_post_on_ys_profile', {
		'name': $user.username ?: $alert.username,
		'profile': $content.ProfileUser.username,
		'reaction': reaction_title($extra.reaction_id)
	}) }}
</xf:if>
<push:url>{{ link('canonical:profile-posts', $content) }}</push:url>
<push:tag>profile_post_reaction_{$content.profile_post_id}_{$extra.reaction_id}</push:tag>]]></template>
  <template type="public" title="push_report_mention" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[{{ phrase('x_mentioned_you_in_comment_in_report_y', {
	'name': $user.username ?: $alert.username,
	'title': $content.title
}) }}
<push:url>{{ link('reports', $content) }}#report-comment-{$alert.extra_data.comment.report_comment_id}</push:url>]]></template>
  <template type="public" title="push_thread_reply_ban" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:if is="$extra.expiry">
	{{ phrase('you_unable_reply_to_thread_x_until_expiry_y', {'title': prefix('thread', $thread, 'plain') . $content.title, 'expiry': date($extra.expiry)}) }}
<xf:else />
	{{ phrase('you_are_no_longer_able_to_reply_thread_x', {'title': prefix('thread', $thread, 'plain') . $content.title}) }}
</xf:if>
<xf:if is="$extra.reason">{{ phrase('reason:') }} {$extra.reason}</xf:if>
<push:url>{{ link('canonical:threads', $content) }}</push:url>]]></template>
  <template type="public" title="push_trophy_award" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[{{ phrase('you_have_been_awarded_a_trophy_x', {'trophy': $content.title}) }}
<push:url>{{ link('canonical:members/trophies', $user) }}</push:url>]]></template>
  <template type="public" title="push_user_following" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[{{ phrase('alert_user_following', {'username': $user.username ?: $alert.username}) }}
<push:url>{{ link('canonical:members', $user) }}</push:url>]]></template>
  <template type="public" title="push_user_from_admin" version_id="2010035" version_string="2.1.0 Beta 5"><![CDATA[{$extra.alert_text|strip_tags}
<xf:if is="$extra.link_url">
	<push:url>{$extra.link_url}</push:url>
</xf:if>]]></template>
  <template type="public" title="push_user_post_copy" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[{{ phrase('your_post_in_thread_x_was_copied_to_y', {
	'title': $extra.title,
	'target': prefix('thread', $extra.prefix_id, 'plain') . $extra.targetTitle
}) }}
<xf:if is="$extra.reason">{{ phrase('reason:') }} {$extra.reason}</xf:if>
<push:url>{{ base_url($extra.targetLink, 'canonical') }}</push:url>]]></template>
  <template type="public" title="push_user_post_delete" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[{{ phrase('your_post_in_thread_x_was_deleted', {
	'title': prefix('thread', $extra.prefix_id, 'plain') . $extra.title
}) }}
<xf:if is="$extra.reason">{{ phrase('reason:') }} {$extra.reason}</xf:if>
<push:url>{{ base_url($extra.threadLink, 'canonical') }}</push:url>]]></template>
  <template type="public" title="push_user_post_edit" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[{{ phrase('your_post_in_thread_x_was_edited', {
	'title': prefix('thread', $extra.prefix_id, 'plain') . $extra.title
}) }}
<xf:if is="$extra.reason">{{ phrase('reason:') }} {$extra.reason}</xf:if>
<push:url>{{ base_url($extra.link, 'canonical') }}</push:url>]]></template>
  <template type="public" title="push_user_post_merge" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[{{ phrase('your_posts_in_thread_x_were_merged_together', {
	'source': prefix('thread', $extra.prefix_id) . $extra.title
}) }}
<xf:if is="$extra.reason">{{ phrase('reason:') }} {$extra.reason}</xf:if>
<push:url>{{ base_url($extra.threadLink, 'canonical') }}</push:url>]]></template>
  <template type="public" title="push_user_post_move" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[{{ phrase('your_post_in_thread_x_was_moved_to_y', {
	'title': $extra.title,
	'target': prefix('thread', $extra.prefix_id, 'plain') . $extra.targetTitle
}) }}
<xf:if is="$extra.reason">{{ phrase('reason:') }} {$extra.reason}</xf:if>
<push:url>{{ base_url($extra.targetLink, 'canonical') }}</push:url>]]></template>
  <template type="public" title="push_user_profile_post_comment_delete" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[{{ phrase('your_comment_on_xs_profile_post_was_deleted', {
	'user': $extra.postUser
}) }}
<xf:if is="$extra.reason">{{ phrase('reason:') }} {$extra.reason}</xf:if>
<push:url>{{ base_url($extra.profilePostLink, 'canonical') }}</push:url>]]></template>
  <template type="public" title="push_user_profile_post_comment_edit" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[{{ phrase('your_comment_on_xs_profile_post_was_edited', {
	'user': $extra.postUser
}) }}
<xf:if is="$extra.reason">{{ phrase('reason:') }} {$extra.reason}</xf:if>
<push:url>{{ base_url($extra.link, 'canonical') }}</push:url>]]></template>
  <template type="public" title="push_user_profile_post_delete" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:if is="$extra.profileUserId == $xf.visitor.user_id">
	{{ phrase('your_status_update_was_deleted') }}
<xf:else />
	{{ phrase('your_profile_post_for_x_was_deleted', {
		'user': $extra.profileUser
	}) }}
	<push:url>{{ base_url($extra.profileLink, 'canonical') }}</push:url>
</xf:if>
<xf:if is="$extra.reason">{{ phrase('reason:') }} {$extra.reason}</xf:if>]]></template>
  <template type="public" title="push_user_profile_post_edit" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:if is="$extra.profileUserId == $xf.visitor.user_id">
	{{ phrase('push_your_status_update_was_edited') }}
<xf:else />
	{{ phrase('your_profile_post_on_xs_profile_was_edited', {
		'user': $extra.profileUser
	}) }}
</xf:if>
<xf:if is="$extra.reason">{{ phrase('reason:') }} {$extra.reason}</xf:if>
<push:url>{{ base_url($extra.link, 'canonical') }}</push:url>]]></template>
  <template type="public" title="push_user_report_rejected" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:if is="$extra.comment">
	{{ phrase('unfortunately_report_made_recently_rejected_comment_x', {'comment': $extra.comment, 'title': $extra.title|strip_tags}) }}
<xf:else />
	{{ phrase('unfortunately_report_made_recently_rejected', {'title': $extra.title|strip_tags}) }}
</xf:if>]]></template>
  <template type="public" title="push_user_report_resolved" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:if is="$extra.comment">
	{{ phrase('report_that_you_made_recently_has_been_resolved_comment_x', {'comment': $extra.comment, 'title': $extra.title|strip_tags}) }}
<xf:else />
	{{ phrase('report_that_you_made_recently_has_been_resolved', {'title': $extra.title|strip_tags}) }}
</xf:if>]]></template>
  <template type="public" title="push_user_thread_delete" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[{{ phrase('your_thread_x_was_deleted', {
	'title': prefix('thread', $extra.prefix_id, 'plain') . $extra.title
}) }}
<xf:if is="$extra.reason">{{ phrase('reason:') }} {$extra.reason}</xf:if>]]></template>
  <template type="public" title="push_user_thread_merge" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[{{ phrase('your_thread_x_was_merged_into_y', {
	'title': $extra.title,
	'target': prefix('thread', $extra.prefix_id, 'plain') . $extra.targetTitle
}) }}
<xf:if is="$extra.reason">{{ phrase('reason:') }} {$extra.reason}</xf:if>
<push:url>{{ base_url($extra.targetLink, 'canonical') }}</push:url>]]></template>
  <template type="public" title="push_user_thread_move" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[{{ phrase('your_thread_x_was_moved_to_different_forum', {
	'title': prefix('thread', $extra.prefix_id, 'plain') . $extra.title
}) }}
<xf:if is="$extra.reason">{{ phrase('reason:') }} {$extra.reason}</xf:if>
<push:url>{{ base_url($extra.link, 'canonical') }}</push:url>]]></template>
  <template type="public" title="push_user_upgrade_end" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[{{ phrase('push_one_account_upgrades_expired_renew_now') }}
<push:url>{{ link('canonical:account/upgrades') }}</push:url>]]></template>
  <template type="public" title="quick_reply_macros" version_id="2010036" version_string="2.1.0 Beta 6"><![CDATA[<xf:macro name="body"
	arg-message=""
	arg-attachmentData="{{ null }}"
	arg-forceHash=""
	arg-messageSelector=""
	arg-multiQuoteHref=""
	arg-multiQuoteStorageKey=""
	arg-simple="{{ false }}"
	arg-showPreviewButton="{{ true }}"
	arg-submitText=""
	arg-lastDate="0"
	arg-lastKnownDate="0"
	arg-simpleSubmit="{{ false }}"
	arg-minHeight="100"
	arg-placeholder="{{ phrase('reply_placeholder') }}"
	arg-deferred="{{ false }}">

	<xf:css src="message.less" />
	<xf:set var="$sticky" value="{{ property('messageSticky') }}" />

	<div class="message message--quickReply block-topRadiusContent block-bottomRadiusContent{{ $simple ? ' message--simple' : '' }}">
		<div class="message-inner">
			<div class="message-cell message-cell--user">
				<div class="message-user {{ $sticky.user_info ? 'is-sticky' : '' }}">
					<div class="message-avatar">
						<div class="message-avatar-wrapper">
							<xf:set var="$user" value="{{ $xf.visitor.user_id ? $xf.visitor : null }}" />
							<xf:avatar user="$user" size="{{ $simple ? 's' : 'm' }}" defaultname="" />
						</div>
					</div>
					<span class="message-userArrow"></span>
				</div>
			</div>
			<div class="message-cell message-cell--main">
				<div class="message-editorWrapper">
					<xf:set var="$editorHtml">
						<xf:macro name="editor"
							arg-message="{$message}"
							arg-attachmentData="{$attachmentData}"
							arg-forceHash="{$forceHash}"
							arg-messageSelector="{$messageSelector}"
							arg-multiQuoteHref="{$multiQuoteHref}"
							arg-multiQuoteStorageKey="{$multiQuoteStorageKey}"
							arg-minHeight="{$minHeight}"
							arg-placeholder="{$placeholder}"
							arg-showPreviewButton="{$showPreviewButton}"
							arg-submitText="{$submitText}"
							arg-deferred="{$deferred}"
							arg-lastDate="{$lastDate}"
							arg-lastKnownDate="{$lastKnownDate}"
							arg-simpleSubmit="{$simpleSubmit}"
						/>
					</xf:set>

					<xf:if is="$deferred">
						<div class="editorPlaceholder" data-xf-click="editor-placeholder">
							<div class="editorPlaceholder-editor is-hidden">{$editorHtml|raw}</div>
							<div class="editorPlaceholder-placeholder">
								<div class="input"><span class="u-muted"> {$placeholder}</span></div>
							</div>
						</div>
					<xf:else />
						{$editorHtml|raw}
					</xf:if>
				</div>
			</div>
		</div>
	</div>
</xf:macro>

<xf:macro name="editor"
	arg-message=""
	arg-attachmentData="{{ null }}"
	arg-forceHash=""
	arg-messageSelector=""
	arg-multiQuoteHref=""
	arg-multiQuoteStorageKey=""
	arg-minHeight="100"
	arg-placeholder=""
	arg-showPreviewButton="{{ false }}"
	arg-submitText=""
	arg-deferred="{{ false }}"
	arg-lastDate="0"
	arg-lastKnownDate="0"
	arg-simpleSubmit="{{ false }}"
>
	<xf:editor name="message"
		value="{$message}"
		attachments="{{ $attachmentData ? $attachmentData.attachments : [] }}"
		data-min-height="{$minHeight}"
		placeholder="{$placeholder}"
		previewable="0"
		data-deferred="{{ $deferred ? 'on' : 'off' }}"
		data-xf-key="{{ phrase('shortcut.quick_reply') }}" />

	<xf:if is="!$xf.visitor.user_id">
		<xf:textboxrow name="_xfUsername" rowtype="fullWidth noGutter" data-xf-init="guest-username"
			maxlength="{{ max_length($xf.visitor, 'username') }}"
			label="{{ phrase('name') }}" />

		<xf:if is="$xf.visitor.isShownCaptcha()">
			<div class="js-captchaContainer" data-row-type="fullWidth noGutter"></div>
			<noscript><xf:hiddenval name="no_captcha" value="1" /></noscript>
		</xf:if>
	</xf:if>

	<xf:if is="$attachmentData">
		<xf:macro template="helper_attach_upload" name="uploaded_files_list"
			arg-attachments="{$attachmentData.attachments}"
			arg-listClass="attachUploadList--spaced" />
	</xf:if>

	<xf:if is="$showPreviewButton">
		<div class="js-previewContainer"></div>
	</xf:if>

	<div class="formButtonGroup {{ $simpleSubmit ? 'formButtonGroup--simple' : '' }}">
		<div class="formButtonGroup-primary">
			<xf:button type="submit" class="button--primary" icon="reply">
				{{ $submitText ?: phrase('post_reply') }}
			</xf:button>
			<xf:if is="$showPreviewButton">
				<xf:button class="u-jsOnly" data-xf-click="preview-click" icon="preview" />
			</xf:if>
		</div>
		<xf:if contentcheck="true">
			<div class="formButtonGroup-extra">
				<xf:contentcheck>
					<xf:if is="$attachmentData">
						<xf:macro template="helper_attach_upload" name="upload_link_from_data"
							arg-attachmentData="{$attachmentData}"
							arg-forceHash="{$forceHash}" />
					</xf:if>
					<xf:if is="$xf.options.multiQuote && $multiQuoteHref">
						<xf:macro template="multi_quote_macros" name="button"
							arg-href="{$multiQuoteHref}"
							arg-messageSelector="{$messageSelector}"
							arg-storageKey="{$multiQuoteStorageKey}" />
					</xf:if>
				</xf:contentcheck>
			</div>
		</xf:if>
		<xf:hiddenval name="last_date" autocomplete="off">{$lastDate}</xf:hiddenval>
		<xf:hiddenval name="last_known_date" autocomplete="off">{$lastKnownDate}</xf:hiddenval>
	</div>
</xf:macro>
]]></template>
  <template type="public" title="rating_macros" version_id="2000052" version_string="2.0.0 Release Candidate 2"><![CDATA[<xf:macro name="stars" arg-rating="!" arg-class="">
	<xf:css src="rating_stars.less" />

	<span class="ratingStars {$class}" title="{{ phrase('x_stars', {'rating': $rating|number(2)})|for_attr }}">
		<span class="ratingStars-star{{ $rating >= 1 ? ' ratingStars-star--full' : '' }}{{ ($rating >= 0.5 AND $rating < 1) ? ' ratingStars-star--half' : '' }}"></span>
		<span class="ratingStars-star{{ $rating >= 2 ? ' ratingStars-star--full' : '' }}{{ ($rating >= 1.5 AND $rating < 2) ? ' ratingStars-star--half' : '' }}"></span>
		<span class="ratingStars-star{{ $rating >= 3 ? ' ratingStars-star--full' : '' }}{{ ($rating >= 2.5 AND $rating < 3) ? ' ratingStars-star--half' : '' }}"></span>
		<span class="ratingStars-star{{ $rating >= 4 ? ' ratingStars-star--full' : '' }}{{ ($rating >= 3.5 AND $rating < 4) ? ' ratingStars-star--half' : '' }}"></span>
		<span class="ratingStars-star{{ $rating >= 5 ? ' ratingStars-star--full' : '' }}{{ ($rating >= 4.5 AND $rating < 5) ? ' ratingStars-star--half' : '' }}"></span>
		<span class="u-srOnly">{{ phrase('x_stars', {'rating': $rating|number(2)}) }}</span>
	</span>
</xf:macro>

<xf:macro name="stars_text" arg-rating="!" arg-count="{{ null }}" arg-text="{{ null }}" arg-rowClass="" arg-starsClass="">
	<span class="ratingStarsRow {$rowClass}">
		<xf:macro template="rating_macros" name="stars"
			arg-rating="{$rating}"
			arg-class="{$starsClass}" />
		<span class="ratingStarsRow-text">
			<xf:if is="$text is not empty">{$text}<xf:else />{{ phrase('x_ratings', {'count': $count|number}) }}</xf:if>
		</span>
	</span>
</xf:macro>

<xf:macro name="setup">
	<xf:css src="rating_stars.less" />
	<xf:js prod="xf/rating-compiled.js" dev="vendor/barrating/jquery.barrating.js, xf/rating.js" />
</xf:macro>

<xf:macro name="rating"
	arg-row="{{ true }}"
	arg-rowType="{$rowType}"
	arg-rowLabel="{{ phrase('rating') }}"
	arg-rowHint=""
	arg-rowExplain=""
	arg-name="rating"
	arg-currentRating="0"
	arg-ratingHref=""
	arg-readOnly="false"
	arg-deselectable="false"
	arg-showSelected="true"
	arg-range="{{ {
		1: phrase('terrible'),
		2: phrase('poor'),
		3: phrase('average'),
		4: phrase('good'),
		5: phrase('excellent')
	} }}">

	<xf:macro name="setup" />

	<xf:set var="$inner">
		<xf:select name="{$name}"
			class="br-select"
			data-xf-init="rating"
			data-initial-rating="{$currentRating}"
			data-rating-href="{$ratingHref}"
			data-readonly="{$readOnly}"
			data-deselectable="{$deselectable}"
			data-show-selected="{$showSelected}">

			<xf:if is="$deselectable">
				<xf:option value="" />
			</xf:if>
			<xf:foreach loop="$range" key="$value" value="$label">
				<xf:option value="{$value}">{$label}</xf:option>
			</xf:foreach>
		</xf:select>
	</xf:set>

	<xf:if is="$row">
		<xf:formrow class="u-jsOnly" rowtype="{$rowType}"
			label="{$rowLabel}"
			hint="{$rowHint|raw}"
			explain="{$rowExplain|raw}">

			{$inner|raw}
		</xf:formrow>
	<xf:else />
		{$inner|raw}
	</xf:if>
</xf:macro>]]></template>
  <template type="public" title="rating_stars.less" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[.ratingStars
{
	display: inline-block;
	line-height: 1;
	font-size: 120%;
	vertical-align: sub;
	position: relative;

	&.ratingStars--larger
	{
		font-size: 140%;
		vertical-align: bottom;
	}

	&.ratingStars--smaller
	{
		font-size: 100%;
		vertical-align: top;
		top: .2em;
	}
}

.ratingStars-star
{
	float: left;
	position: relative;
	margin-left: 2px;

	&:first-child
	{
		margin-left: 0;
	}

	&:before
	{
		.m-faBase(@faType; @faWeight-solid);
		.m-faContent(@fa-var-star);
		color: @xf-starEmptyColor;
	}

	&.ratingStars-star--full
	{
		&:before
		{
			color: @xf-starFullColor;
		}
	}

	&.ratingStars-star--half
	{
		&:after
		{
			position: absolute;
			top: 1px;
			left: 0;
			.m-faBase(@faType; @faWeight-solid);
			.m-faContent(@fa-var-star-half);
			color: @xf-starFullColor;

			& when(@rtl)
			{
				.m-transform(scaleX(-1));
			}
		}
	}
}

.ratingStarsRow
{
	&.ratingStarsRow--justified
	{
		display: flex;

		.ratingStarsRow-text
		{
			margin-left: auto;
		}
	}

	&.ratingStarsRow--textBlock
	{
		display: block;

		.ratingStarsRow-text
		{
			display: block;
		}
	}
}

/** XF: override */
.br-select
{
	display: none;
}

.br-theme-fontawesome-stars
{
	.br-widget
	{
		&.br-widget--withSelected
		{
			height: 40px;

			.br-current-rating
			{
				display: block;
				font-size: 80%;
			}
		}
	}
}

/** Vendor: variables.less */
@star-default: @xf-starEmptyColor;
@star-active: @xf-starFullColor;
@star-selected: @xf-starFullColor;

/** Vendor: fontawesome-stars.less */
.br-theme-fontawesome-stars {

	.br-widget {
		height: 28px;
		white-space: nowrap;

		a {
			.m-faBase(@faType; @faWeight-solid);
			font-size: 120%;
			text-decoration: none;
			margin-right: 2px;
		}

		a:after {
			.m-faContent(@fa-var-star);
			color: @star-default;
		}

		a.br-active:after {
			color: @star-active;
		}

		a.br-selected:after {
			color: @star-selected;
		}

		.br-current-rating {
			display: none;
		}
	}

	.br-readonly {
		a {
			cursor: default;
		}
	}

}

@media print {
	.br-theme-fontawesome-stars {

		.br-widget {
			a:after {
				.m-faContent(@fa-var-star);
				color: black;
			}

			a.br-active:after,
			a.br-selected:after {
				.m-faContent(@fa-var-star);
				color: black;
			}
		}

	}
}]]></template>
  <template type="public" title="react" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:reaction id="{$reaction}"
	content="{$content}" link="{$link}" params="{$params}" list="{$list}" class="{$class}"
	init="true" hasreaction="{$hasReaction}" small="true" showtitle="true" />]]></template>
  <template type="public" title="reaction_confirm" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{$confirmUrl}" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				<xf:if is="$isUnreact">
					{{ phrase('you_sure_you_want_to_remove_your_reaction') }}
				<xf:else />
					{{ phrase('you_sure_you_want_to_apply_this_reaction') }}
					<strong><xf:reaction id="{$reaction.reaction_id}" showtitle="true" class="reaction--inline" /></strong>
				</xf:if>
			</xf:inforow>
		</div>
		<xf:submitrow icon="confirm" rowtype="simple" />
	</div>
	<xf:hiddenval name="reaction_id">{$reaction.reaction_id}</xf:hiddenval>
</xf:form>]]></template>
  <template type="public" title="reaction_item_conversation_message" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:macro name="reaction_snippet" arg-reactionUser="!" arg-reactionId="!" arg-message="!" arg-date="!" arg-fallbackName="{{ phrase('unknown_member') }}">
	<div class="contentRow-title">
		<xf:if is="$message.user_id == $xf.visitor.user_id">
			{{ phrase('x_reacted_to_your_message_in_the_conversation_y', {
				'name': username_link($reactionUser, false, {'defaultname': $fallbackName}),
				'reaction': alert_reaction($reactionId, 'medium')|preescaped,
				'title': '<a href="' . link('conversations/messages', $message) . '">' . $message.Conversation.title . '</a>'
			}) }}
		<xf:else />
			{{ phrase('x_reacted_to_ys_message_in_the_conversation_z', {
				'name': username_link($reactionUser, false, {'defaultname': $fallbackName}),
				'posterParams': 'href="' . link('conversations/messages', $message) . '"',
				'poster': $message.User.username,
				'reaction': alert_reaction($reactionId, 'medium')|preescaped,
				'title': '<a href="' . link('conversations/messages', $message) . '">' . $message.Conversation.title . '</a>'
			}) }}
		</xf:if>
	</div>

	<div class="contentRow-snippet">{{
		snippet($message.message, $xf.options.newsFeedMessageSnippetLength, {'stripQuote': true})
	}}</div>

	<div class="contentRow-minor"><xf:date time="{$date}" /></div>
</xf:macro>

<xf:macro name="reaction_snippet" arg-reactionUser="{$reaction.ReactionUser}" arg-reactionId="{$reaction.reaction_id}" arg-message="{$content}" arg-date="{$reaction.reaction_date}" />]]></template>
  <template type="public" title="reaction_item_post" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:macro name="reaction_snippet" arg-reactionUser="!" arg-reactionId="!" arg-post="!" arg-date="!" arg-fallbackName="{{ phrase('unknown_member') }}">
	<div class="contentRow-title">
		<xf:if is="$post.user_id == $xf.visitor.user_id">
			{{ phrase('x_reacted_to_your_post_in_the_thread_y', {
				'name': username_link($reactionUser, false, {'defaultname': $fallbackName}),
				'reaction': alert_reaction($reactionId, 'medium')|preescaped,
				'title': '<a href="' . link('posts', $post) . '">' . prefix('thread', $post.Thread) . $post.Thread.title . '</a>'
			}) }}
		<xf:else />
			{{ phrase('x_reacted_to_ys_post_in_the_thread_z', {
				'name': username_link($reactionUser, false, {'defaultname': $fallbackName}),
				'posterParams': 'href="' . link('posts', $post) . '"',
				'poster': $post.username,
				'reaction': alert_reaction($reactionId, 'medium')|preescaped,
				'title': '<a href="' . link('posts', $post) . '">' . prefix('thread', $post.Thread) . $post.Thread.title . '</a>'
			}) }}
		</xf:if>
	</div>

	<div class="contentRow-snippet">{{
		snippet($post.message, $xf.options.newsFeedMessageSnippetLength, {'stripQuote': true})
	}}</div>

	<div class="contentRow-minor"><xf:date time="{$date}" /></div>
</xf:macro>

<xf:macro name="reaction_snippet" arg-reactionUser="{$reaction.ReactionUser}" arg-reactionId="{$reaction.reaction_id}" arg-post="{$content}" arg-date="{$reaction.reaction_date}" />]]></template>
  <template type="public" title="reaction_item_profile_post" version_id="2010037" version_string="2.1.0 Beta 7"><![CDATA[<xf:macro name="reaction_snippet" arg-reactionUser="!" arg-reactionId="!" arg-profilePost="!" arg-date="!" arg-fallbackName="{{ phrase('unknown_member') }}">
	<div class="contentRow-title">
		<xf:if is="$profilePost.user_id == $profilePost.profile_user_id">
			<xf:if is="$profilePost.user_id == $xf.visitor.user_id">
				{{ phrase('x_reacted_to_your_status', {
					'name': username_link($reactionUser, false, {'defaultname': $fallbackName}),
					'status_attributes': 'href="' . link('profile-posts', $profilePost) . '"',
					'reaction': alert_reaction($reactionId, 'medium')|preescaped
				}) }}
			<xf:else />
				{{ phrase('x_reacted_to_ys_status', {
					'name': username_link($reactionUser, false, {'defaultname': $fallbackName}),
					'status_params': 'href="' . link('profile-posts', $profilePost) . '"',
					'poster': $profilePost.username,
					'reaction': alert_reaction($reactionId, 'medium')|preescaped
				}) }}
			</xf:if>
		<xf:else />
			<xf:if is="$profilePost.user_id == $xf.visitor.user_id">
	
				{{ phrase('x_reacted_to_your_post_on_ys_profile', {
					'name': username_link($reactionUser, false, {'defaultname': $fallbackName}),
					'post_attributes': 'href="' . link('profile-posts', $profilePost) . '"',
					'profile': $profilePost.ProfileUser.username,
					'reaction': alert_reaction($reactionId, 'medium')|preescaped
				}) }}
			<xf:elseif is="$profilePost.ProfileUser.user_id == $xf.visitor.user_id" />
	
				{{ phrase('x_reacted_to_ys_post_on_your_profile', {
					'name': username_link($reactionUser, false, {'defaultname': $fallbackName}),
					'post_params': 'href="' . link('profile-posts', $profilePost) . '"',
					'poster': $profilePost.username,
					'reaction': alert_reaction($reactionId, 'medium')|preescaped
				}) }}
			<xf:else />
	
				{{ phrase('x_reacted_to_ys_post_on_zs_profile', {
					'name': username_link($reactionUser, false, {'defaultname': $fallbackName}),
					'post_params': 'href="' . link('profile-posts', $profilePost) . '"',
					'poster': $profilePost.username,
					'profile': $profilePost.ProfileUser.username,
					'reaction': alert_reaction($reactionId, 'medium')|preescaped
				}) }}
			</xf:if>
		</xf:if>
	</div>
	
	<div class="contentRow-snippet">{{
		snippet($profilePost.message, $xf.options.newsFeedMessageSnippetLength, {'stripPlainTag': true, 'stripQuote': true})
	}}</div>

	<div class="contentRow-minor"><xf:date time="{$date}" /></div>
</xf:macro>

<xf:macro name="reaction_snippet" arg-reactionUser="{$reaction.ReactionUser}" arg-reactionId="{$reaction.reaction_id}" arg-profilePost="{$content}" arg-date="{$reaction.reaction_date}" />]]></template>
  <template type="public" title="reaction_item_profile_post_comment" version_id="2010037" version_string="2.1.0 Beta 7"><![CDATA[<xf:macro name="reaction_snippet" arg-reactionUser="!" arg-reactionId="!" arg-comment="!" arg-date="!" arg-fallbackName="{{ phrase('unknown_member') }}">
	<div class="contentRow-title">
		<xf:if is="$comment.user_id == $xf.visitor.user_id">
			{{ phrase('x_reacted_to_your_comment_on_ys_profile_post', {
				'name': username_link($reactionUser, false, {'defaultname': $fallbackName}),
				'post_attributes': 'href="' . link('profile-posts/comments', $comment) . '"',
				'poster': $comment.ProfilePost.username,
				'reaction': alert_reaction($reactionId, 'medium')|preescaped
			}) }}
		<xf:elseif is="$comment.ProfilePost.user_id == $xf.visitor.user_id" />
			{{ phrase('x_reacted_to_ys_comment_on_your_profile_post', {
				'name': username_link($reactionUser, false, {'defaultname': $fallbackName}),
				'post_params': 'href="' . link('profile-posts/comments', $comment) . '"',
				'poster': $comment.username,
				'reaction': alert_reaction($reactionId, 'medium')|preescaped
			}) }}
		<xf:else />
	
			{{ phrase('x_reacted_to_ys_comment_on_zs_profile_post', {
				'name': username_link($reactionUser, false, {'defaultname': $fallbackName}),
				'post_params': 'href="' . link('profile-posts/comments', $comment) . '"',
				'poster': $comment.username,
				'profile': $comment.ProfilePost.username,
				'reaction': alert_reaction($reactionId, 'medium')|preescaped
			}) }}
		</xf:if>
	</div>
	
	<div class="contentRow-snippet">{{
		snippet($comment.message, $xf.options.newsFeedMessageSnippetLength, {'stripPlainTag': true, 'stripQuote': true})
	}}</div>

	<div class="contentRow-minor"><xf:date time="{$date}" /></div>
</xf:macro>

<xf:macro name="reaction_snippet" arg-reactionUser="{$reaction.ReactionUser}" arg-reactionId="{$reaction.reaction_id}" arg-comment="{$content}" arg-date="{$reaction.reaction_date}" />]]></template>
  <template type="public" title="reaction_list" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[<xf:if is="$title">
	<xf:title>{$title}</xf:title>
<xf:else />
	<xf:title>{{ phrase('members_who_reacted_to_this') }}</xf:title>
</xf:if>

<xf:head option="metaNoindex"><meta name="robots" content="noindex" /></xf:head>

<xf:if is="$breadcrumbs">
	<xf:breadcrumb source="$breadcrumbs" />
</xf:if>

<xf:if is="!$listOnly">
	<div class="block">
		<div class="block-container">
			<h3 class="tabs hScroller block-minorTabHeader" data-xf-init="tabs h-scroller"
				data-panes="< .block-container | .js-reactionTabPanes" role="tablist">
				<span class="hScroller-scroll">
					<xf:foreach loop="$tabSummary" key="$reactionId" value="$total">
						<a class="tabs-tab tabs-tab--reaction{$reactionId}{{ $reactionId == $activeReactionId ? ' is-active' : '' }}" role="tab" id="{{ $reactionId ? 'reaction-' . $reactionId : '' }}">
							<xf:if is="$reactionId">
								<xf:reaction id="{$reactionId}" small="true" showtitle="true" appendtitle="{$total|number|parens}" />
							<xf:else />
								<bdi>{{ phrase('all') }}</bdi> {$total|number|parens}
							</xf:if>
						</a>
					</xf:foreach>
				</span>
			</h3>
			<ul class="tabPanes js-reactionTabPanes">
				<xf:foreach loop="$tabSummary" key="$reactionId" value="$total">
					<xf:if is="$reactionId == $activeReactionId">
						<li class="{{ $reactionId == $activeReactionId ? 'is-active' : '' }}" role="tabpanel" id="reaction-{$reactionId}">
							<xf:macro name="reactions_list"
								arg-reactions="{$reactions}"
								arg-hasNext="{$hasNext}"
								arg-content="{$content}"
								arg-link="{$link}"
								arg-linkParams="{$linkParams}"
								arg-page="{$page}"
								arg-reactionId="{$reactionId|default(0)}" />
						</li>
					<xf:else />
						<li data-href="{{ link($link, $content, $linkParams + {'reaction_id': $reactionId, 'list_only': 1}) }}" class="{{ $reactionId == $activeReactionId ? 'is-active' : '' }}" role="tabpanel" id="reaction-{$reactionId}">
							<div class="blockMessage">{{ phrase('loading...') }}</div>
						</li>
					</xf:if>
				</xf:foreach>
			</ul>
		</div>
	</div>
<xf:else />
	<xf:macro name="reactions_list"
		arg-reactions="{$reactions}"
		arg-hasNext="{$hasNext}"
		arg-content="{$content}"
		arg-link="{$link}"
		arg-linkParams="{$linkParams}"
		arg-page="{$page}"
		arg-reactionId="{$activeReactionId}" />
</xf:if>

<xf:macro name="reactions_list"
	arg-reactions="!"
	arg-hasNext="!"
	arg-content="!"
	arg-link="!"
	arg-linkParams="!"
	arg-page="!"
	arg-reactionId="0">
	<ol class="block-body js-reactionList-{$reactionId}">
		<xf:foreach loop="$reactions" value="$reaction">
			<li class="block-row block-row--separated">
				<xf:set var="$extraData">
					<xf:reaction id="{$reaction}" class="reaction--right" />
					<xf:date time="{$reaction.reaction_date}" />
				</xf:set>
				<xf:macro template="member_list_macros" name="item"
					arg-user="{$reaction.ReactionUser}"
					arg-extraData="{$extraData|preescaped}" />
			</li>
		</xf:foreach>
		<xf:if is="$hasNext">
			<li class="block-footer">
				<span class="block-footer-controls"><xf:button href="{{ link($link, $content, $linkParams + {'reaction_id': $reactionId, 'list_only': 1, 'page': $page + 1}) }}"
					data-xf-click="inserter"
					data-replace=".js-reactionList-{$reactionId}"
					data-scroll-target="< .overlay">
						{{ phrase('continue...') }}
				</xf:button></span>
			</li>
		</xf:if>
	</ol>
</xf:macro>]]></template>
  <template type="public" title="reaction_list_row" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:if is="$reactionIds">
	<xf:macro template="reactions_summary" name="summary" arg-reactionIds="{$reactionIds}" />
</xf:if>
<span class="u-srOnly">{{ phrase('reactions:') }}</span>
<a class="reactionsBar-link" href="{{ link($link, $content, $linkParams) }}" data-xf-click="overlay" data-cache="false">{$reactions}</a>]]></template>
  <template type="public" title="reaction_react" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:reaction id="{$reaction}" showtitle="true" small="true" />]]></template>
  <template type="public" title="reactions_summary" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:macro name="summary" arg-reactionIds="!">
	<xf:if contentcheck="true">
		<ul class="reactionSummary">
		<xf:contentcheck>
			<xf:foreach loop="$reactionIds" value="$reactionId"><xf:trim>
				<li><xf:reaction id="{$reactionId}" small="true" /></li>
			</xf:trim></xf:foreach>
		</xf:contentcheck>
		</ul>
	</xf:if>
</xf:macro>

<xf:macro name="summary" arg-reactionIds="{$reactionIds}" />]]></template>
  <template type="public" title="register_complete" version_id="2010052" version_string="2.1.0 Release Candidate 2"><![CDATA[<xf:title>{{ phrase('register') }}</xf:title>

<xf:head option="robots"><meta name="robots" content="noindex" /></xf:head>

<div class="blockMessage">
	<xf:if is="$xf.visitor.user_state == 'email_confirm'">
		{{ phrase('thanks_for_registering_to_complete_registration_follow_link') }}
	<xf:elseif is="$xf.visitor.user_state == 'moderated'" />
		{{ phrase('thanks_for_registering_registration_must_be_approved') }}
	<xf:elseif is="{$facebook}" />
		{{ phrase('thanks_creating_account_using_facebook_account_active') }}
	<xf:else />
		{{ phrase('thanks_for_registering_complete') }}
	</xf:if>

	<ul>
		<xf:if is="{$redirect}"><li><a href="{{ link($redirect) }}">{{ phrase('return_to_page_you_were_viewing') }}</a></li></xf:if>
		<li><a href="{{ link('index') }}">{{ phrase('return_to_forum_home_page') }}</a></li>
		<xf:if is="$xf.visitor.canEditProfile()">
			<li><a href="{{ link('account') }}">{{ phrase('edit_your_account_details') }}</a></li>
		</xf:if>
	</ul>
</div>]]></template>
  <template type="public" title="register_confirm" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<div class="blockMessage">
	<xf:if is="$xf.visitor.user_state == 'moderated'">
		{{ phrase('your_email_has_been_confirmed_registration_must_be_approved') }}
	<xf:elseif is="{{ $xf.visitor.getPreviousValue('user_state') == 'email_confirm_edit' }}" />
		{{ phrase('your_email_has_been_confirmed_and_your_account_is_now_fully_active_again') }}
	<xf:else />
		{{ phrase('your_email_has_been_confirmed_and_your_registration_is_now_complete') }}
	</xf:if>

	<ul>
		<xf:if is="$redirect"><li><a href="{$redirect}">{{ phrase('return_to_page_you_were_viewing') }}</a></li></xf:if>
		<li><a href="{{ link('index') }}">{{ phrase('return_to_forum_home_page') }}</a></li>
		<xf:if is="$xf.visitor.canEditProfile()">
			<li><a href="{{ link('account') }}">{{ phrase('edit_your_account_details') }}</a></li>
		</xf:if>
	</ul>
</div>]]></template>
  <template type="public" title="register_connected_account" version_id="2010052" version_string="2.1.0 Release Candidate 2"><![CDATA[<xf:title>{{ phrase('register_using_x', {'provider': $provider.title}) }}</xf:title>

<xf:set var="$user" value="{{ $user ?: $xf.visitor }}" />
<xf:js src="xf/login_signup.js" min="1" />

<xf:head option="robots"><meta name="robots" content="noindex" /></xf:head>

<xf:form action="{{ link('register/connected-accounts/register', $provider) }}" ajax="true" class="block">
	<div class="block-container">
		<h2 class="block-tabHeader tabs" data-xf-init="tabs" role="tablist">
			<a class="tabs-tab is-active" role="tab" tabindex="0" aria-controls="{{ unique_id('regCreate') }}">
				{{ phrase('create_new_account') }}
			</a>
			<a class="tabs-tab" role="tab" tabindex="0" aria-controls="{{ unique_id('regAssoc') }}">
				{{ phrase('associate_existing_account') }}
			</a>
		</h2>

		<ul class="tabPanes">
			<li class="is-active"
				data-xf-init="reg-form"
				data-timer="{$xf.options.registrationTimer}"
				role="tabpanel"
				id="{{ unique_id('regCreate') }}">

				<div class="block-body">
					<xf:macro template="register_macros" name="username_row" />

					<xf:if is="$providerData.email">
						<xf:formrow label="{{ phrase('email') }}">{$providerData.email}</xf:formrow>
					<xf:else />
						<xf:macro template="register_macros" name="email_row" />
					</xf:if>

					<xf:if is="!$providerData.dob">
						<xf:macro template="register_macros" name="dob_row" />
					</xf:if>

					<xf:if is="!$providerData.location">
						<xf:macro template="register_macros" name="location_row" />
					</xf:if>

					<xf:macro template="register_macros" name="custom_fields" />

					<xf:macro template="register_macros" name="email_choice_row" />

					<xf:macro template="register_macros" name="tos_row" />
				</div>
				<xf:macro template="register_macros" name="submit_row" />

			</li>
			<li role="tabpanel" id="{{ unique_id('regAssoc') }}">
				<div class="block-body block-row">
					{{ phrase('to_associate_existing_account_first_log_in_start_via_connected_accounts', {
						'link': link('account/connected-accounts')
					}) }}
				</div>
			</li>
		</ul>
	</div>

	<xf:redirect />
	<xf:hiddenval name="timezone" value="" data-xf-init="auto-timezone" />
</xf:form>]]></template>
  <template type="public" title="register_form" version_id="2010132" version_string="2.1.1 Beta 2"><![CDATA[<xf:js src="xf/login_signup.js" min="1" />

<xf:title>{{ phrase('register') }}</xf:title>

<xf:head option="robots"><meta name="robots" content="noindex" /></xf:head>

<xf:if is="$providers is not empty">
	<div class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:formrow rowtype="button"
					label="{{ phrase('register_faster_using') }}">

					<ul class="listHeap">
						<xf:foreach loop="$providers" value="$provider">
							<li>
								<xf:macro template="connected_account_macros" name="button"
									arg-provider="{$provider}" />
							</li>
						</xf:foreach>
					</ul>
				</xf:formrow>
			</div>
		</div>
	</div>
</xf:if>

<xf:form action="{{ link('register/register') }}" ajax="true" class="block"
	data-xf-init="reg-form" data-timer="{$xf.options.registrationTimer}">

	<div class="block-container">
		<div class="block-body">
			<xf:comment>Spam catcher field</xf:comment>
			<xf:textboxrow name="username" value="" autocomplete="off" rowclass="formRow--limited"
				maxlength="{{ max_length($xf.visitor, 'username') }}"
				label="{{ phrase('user_name') }}"
				explain="{{ phrase('please_leave_this_field_blank') }}" />

			<xf:macro template="register_macros" name="username_row"
				arg-fieldName="{{ $regForm.getFieldName('username') }}"
				arg-value="{$fields.username}" />

			<xf:comment>Spam catcher field</xf:comment>
			<xf:if is="{{ rand(0, 2) == 1 }}">
				<xf:textboxrow name="{{ $regForm.getFieldName('email_hp') }}" value="" type="email" autocomplete="off"
					rowclass="formRow--limited"
					maxlength="{{ max_length($xf.visitor, 'email') }}"
					label="{{ phrase('email') }}"
					explain="{{ phrase('please_leave_this_field_blank') }}" />
			</xf:if>

			<xf:macro template="register_macros" name="email_row"
				arg-fieldName="{{ $regForm.getFieldName('email') }}"
				arg-value="{$fields.email}" />

			<xf:comment>Spam catcher field</xf:comment>
			<xf:if is="{{ rand(0, 2) == 1 }}">
				<xf:textboxrow name="email" value="" type="email" autocomplete="off" rowclass="formRow--limited"
					maxlength="{{ max_length($xf.visitor, 'email') }}"
					label="{{ phrase('email') }}"
					explain="{{ phrase('please_leave_this_field_blank') }}" />
			</xf:if>

			<xf:comment>Spam catcher field</xf:comment>
			<xf:if is="{{ rand(0, 2) == 1 }}">
				<xf:textboxrow name="password" type="password" autocomplete="off" rowclass="formRow--limited"
					label="{{ phrase('password') }}"
					explain="{{ phrase('please_leave_this_field_blank') }}" />
			</xf:if>

			<xf:passwordboxrow name="{{ $regForm.getFieldName('password') }}" autocomplete="off"
				label="{{ phrase('password') }}"
				hint="{{ phrase('required') }}"
				required="required" checkstrength="true" />

			<xf:macro template="register_macros" name="dob_row" />

			<xf:macro template="register_macros" name="location_row"
				arg-value="{$fields.location}" />

			<xf:macro template="register_macros" name="custom_fields" />

			<xf:captcharow label="{{ phrase('verification') }}" hint="{{ phrase('required') }}" />

			<xf:macro template="register_macros" name="email_choice_row" />

			<xf:macro template="register_macros" name="tos_row" />
		</div>
		<xf:macro template="register_macros" name="submit_row" />
	</div>

	<xf:hiddenval name="reg_key">{{ $regForm.getUniqueKey() }}</xf:hiddenval>
	<xf:hiddenval name="{{ $regForm.getFieldName('timezone') }}" value="" data-xf-init="auto-timezone" />
</xf:form>]]></template>
  <template type="public" title="register_macros" version_id="2010132" version_string="2.1.1 Beta 2"><![CDATA[<xf:macro name="username_row"
	arg-fieldName="username"
	arg-value=""
	arg-autoFocus="{{ true }}">

	<xf:textboxrow name="{$fieldName}" value="{$value}" autocomplete="off" required="required"
		autofocus="{{ $autoFocus ? 'autofocus' : false }}"
		maxlength="{{ $xf.options.usernameLength.max ?: max_length($xf.visitor, 'username') }}"
		label="{{ phrase('user_name') }}"
		hint="{{ phrase('required') }}"
		explain="{{ phrase('this_is_name_that_will_be_shown_with_your_messages') }}" />
</xf:macro>

<xf:macro name="email_row"
	arg-fieldName="email"
	arg-value="">

	<xf:textboxrow name="{$fieldName}" value="{$value}" type="email" autocomplete="off" required="required"
		maxlength="{{ max_length($xf.visitor, 'email') }}"
		label="{{ phrase('email') }}"
		hint="{{ phrase('required') }}" />
</xf:macro>

<xf:macro name="dob_row" arg-dobData="{{ [] }}">
	<xf:if is="$xf.options.registrationSetup.requireDob">
		<xf:macro template="helper_user_dob_edit" name="dob_edit"
			arg-dobData="{$dobData}"
			arg-required="{{ true }}" />
	</xf:if>
</xf:macro>

<xf:macro name="location_row"
	arg-fieldName="location"
	arg-value="">

	<xf:if is="$xf.options.registrationSetup.requireLocation">
		<xf:textboxrow name="{$fieldName}" value="{$value}" required="true"
			label="{{ phrase('location') }}"
			hint="{{ phrase('required') }}" />
	</xf:if>
</xf:macro>

<xf:macro name="email_choice_row"
	arg-fieldName="email_choice">

	<xf:if is="$xf.options.registrationSetup.requireEmailChoice">
		<xf:checkboxrow>
			<xf:option name="{$fieldName}" selected="{$xf.options.registrationDefaults.receive_admin_email}"
				label="{{ phrase('receive_site_mailings') }}"
				hint="{{ phrase('receive_site_mailings_hint') }}" />
		</xf:checkboxrow>
	</xf:if>
</xf:macro>

<xf:macro name="custom_fields">
	<xf:macro template="custom_fields_macros" name="custom_fields_edit"
		arg-type="users" arg-group="{{ null }}"
		arg-set="{$xf.visitor.Profile.custom_fields}"
		arg-additionalFilters="{{ ['registration'] }}" />
</xf:macro>

<xf:macro name="tos_row">
	<xf:if is="$xf.tosUrl OR $xf.privacyPolicyUrl">
		<xf:checkboxrow standalone="true">
			<xf:if is="$xf.tosUrl AND $xf.privacyPolicyUrl">
				<xf:option name="accept" required="required">{{ phrase('by_registering_you_agree_to_our_terms_and_privacy_policy', {'tos': $xf.tosUrl, 'privacy': $xf.privacyPolicyUrl}) }}</xf:option>
			<xf:elseif is="$xf.tosUrl" />
				<xf:option name="accept" required="required">{{ phrase('by_registering_you_agree_to_our_terms_and_rules', {'tos': $xf.tosUrl}) }}</xf:option>
			<xf:else />
				<xf:option name="accept" required="required">{{ phrase('by_registering_you_agree_to_our_privacy_policy', {'privacy': $xf.privacyPolicyUrl}) }}</xf:option>
			</xf:if>
		</xf:checkboxrow>
	</xf:if>
</xf:macro>

<xf:macro name="submit_row">
	<xf:submitrow><xf:html>
		<xf:button type="submit" class="button--primary" id="js-signUpButton">
			<xf:if is="$xf.options.registrationTimer">
				<span id="js-regTimer" data-timer-complete="{{ phrase('register')|for_attr }}">
					{{ phrase('(please_wait_x_seconds)', {'seconds': "<span>{$xf.options.registrationTimer}</span>"}) }}
				</span>
			<xf:else />
				{{ phrase('register') }}
			</xf:if>
		</xf:button>
	</xf:html></xf:submitrow>
</xf:macro>]]></template>
  <template type="public" title="report.less" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[.js-handleToggle
{
	display: none;

	&.is-active
	{
		display: block;
	}
}]]></template>
  <template type="public" title="report_content_conversation_message" version_id="2000038" version_string="2.0.0 Beta 8"><![CDATA[<div class="block-row block-row--separated">
	{{ bb_code($report.content_info.message, 'conversation_message', $content ?: $report.User) }}
</div>]]></template>
  <template type="public" title="report_content_post" version_id="2000038" version_string="2.0.0 Beta 8"><![CDATA[<div class="block-row block-row--separated">
	{{ bb_code($report.content_info.message, 'post', $content ?: $report.User) }}
</div>
<div class="block-row block-row--separated block-row--minor">
	<dl class="pairs pairs--inline">
		<dt>{{ phrase('forum') }}</dt>
		<dd><a href="{{ link('forums', $report.content_info) }}">{$report.content_info.node_title}</a></dd>
	</dl>
</div>]]></template>
  <template type="public" title="report_content_profile_post" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<div class="block-row block-row--separated">
	{{ bb_code($report.content_info.message, 'profile_post', $content ?: $report.User) }}
</div>

<xf:if is="$report.content_info.user">
	<xf:if is="$report.content_info.user.user_id != $report.content_info.profileUser.user_id">
		<div class="block-row block-row--separated block-row--minor">
			<dl class="pairs pairs--inline">
				<dt>{{ phrase('receiving_member') }}</dt>
				<dd><a href="{{ link('members', $report.content_info.profileUser) }}">{$report.content_info.profileUser.username}</a></dd>
			</dl>
		</div>
	</xf:if>
<xf:else />
	<div class="block-row block-row--separated block-row--minor">
		<dl class="pairs pairs--inline">
			<dt>{{ phrase('receiving_member') }}</dt>
			<dd>{$report.content_info.profile_username}</dd>
		</dl>
	</div>
</xf:if>]]></template>
  <template type="public" title="report_content_profile_post_comment" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<div class="block-row block-row--separated">
	{{ bb_code($report.content_info.message, 'profile_post_comment', $content ?: $report.User) }}
</div>

<xf:if is="$report.content_info.user">
	<xf:if is="$report.content_info.user.user_id != $report.content_info.profileUser.user_id">
		<div class="block-row block-row--separated block-row--minor">
			<dl class="pairs pairs--inline">
				<dt>{{ phrase('profile_post') }}</dt>
				<dd><a href="{{ link('profile-posts', $report.content_info) }}">{{ phrase('profile_post_for_x', {'username': {$report.content_info.profileUser.username}}) }}</a></dd>
			</dl>
		</div>
	</xf:if>
<xf:else />
	<div class="block-row block-row--separated block-row--minor">
		<dl class="pairs pairs--inline">
			<dt>{{ phrase('profile_post') }}</dt>
			<dd><a href="{{ link('profile-posts', $report.content_info) }}">{{ phrase('profile_post_for_x', {'username': {$report.content_info.profile_username}}) }}</a></dd>
		</dl>
	</div>
</xf:if>]]></template>
  <template type="public" title="report_create" version_id="2010036" version_string="2.1.0 Beta 6"><![CDATA[<xf:title>{{ phrase('report_content') }}</xf:title>

<xf:form action="{$confirmUrl}" class="block" ajax="true"
	data-skip-overlay-redirect="true">

	<div class="block-container">
		<div class="block-body">
			<xf:textarearow name="message" autosize="true" autofocus="autofocus"
				label="{{ phrase('report_reason') }}" />
		</div>
		<xf:submitrow submit="{{ phrase('report_verb') }}" />
	</div>
</xf:form>]]></template>
  <template type="public" title="report_list" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('reported_items') }}</xf:title>

<div class="block">
	<div class="block-outer">
		<div class="block-outer-opposite">
			<xf:button class="button--link menuTrigger" data-xf-click="menu" aria-expanded="false" aria-haspopup="true">{{ phrase('find_reports') }}</xf:button>
			<xf:macro template="report_list_macros" name="search_menu" />
		</div>
	</div>
	<div class="block-container">
		<h2 class="block-tabHeader tabs">
			<a href="{{ link('reports') }}" class="tabs-tab is-active">{{ phrase('active_reports') }}</a>
			<a href="{{ link('reports/closed') }}" class="tabs-tab">{{ phrase('closed_reports') }}</a>
		</h2>
		<div class="block-body">
			<xf:if is="$openReports is not empty">
				<div class="structItemContainer">
					<xf:foreach loop="$openReports" value="$report">
						<xf:macro template="report_list_macros" name="item" arg-report="{$report}" />
					</xf:foreach>
				</div>
			<xf:else />
				<div class="block-row">{{ phrase('there_no_active_reports_requiring_your_attention') }}</div>
			</xf:if>
		</div>
	</div>
</div>

<div class="block">
	<xf:if is="$closedReports is not empty">
		<div class="block-container">
			<h3 class="block-header">
				{{ phrase('recently_closed_reports') }}
			</h3>
			<div class="block-body">
				<div class="structItemContainer">
					<xf:foreach loop="$closedReports" value="$report">
						<xf:macro template="report_list_macros" name="item" arg-report="{$report}" />
					</xf:foreach>
				</div>
			</div>
		</div>
	</xf:if>
</div>]]></template>
  <template type="public" title="report_list_closed" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('closed_reports_x_y', {'from': date($timeFrame.0), 'to': date($timeFrame.1)}) }}</xf:title>

<xf:breadcrumb href="{{ link('reports') }}">{{ phrase('reports') }}</xf:breadcrumb>

<div class="block">
	<div class="block-outer">
		<div class="block-outer-opposite">
			<xf:button class="button--link menuTrigger" data-xf-click="menu" aria-expanded="false" aria-haspopup="true">{{ phrase('find_reports') }}</xf:button>
			<xf:macro template="report_list_macros" name="search_menu" />
		</div>
	</div>
	<div class="block-container">
		<h2 class="block-tabHeader tabs">
			<a href="{{ link('reports') }}" class="tabs-tab">{{ phrase('active_reports') }}</a>
			<a href="{{ link('reports/closed') }}" class="tabs-tab is-active">{{ phrase('closed_reports') }}</a>
		</h2>
		<div class="block-body">
			<xf:if is="$reports is not empty">
				<div class="structItemContainer">
					<xf:foreach loop="$reports" value="$report">
						<xf:macro template="report_list_macros" name="item" arg-report="{$report}" />
					</xf:foreach>
				</div>
			<xf:else />
				<div class="block-row">{{ phrase('no_reports_have_been_closed_during_this_period') }}</div>
			</xf:if>
		</div>
		<div class="block-footer">
			<span class="block-footer-controls">
				<xf:button href="{{ link('reports/closed', null, {'page': $page + 1}) }}">&larr; {{ phrase('older') }}</xf:button>
				<xf:if is="$page > 1">
					<xf:button href="{{ link('reports/closed', null, {'page': $page - 1}) }}">{{ phrase('newer') }} &rarr;</xf:button>
				</xf:if>
			</span>
		</div>
	</div>
</div>]]></template>
  <template type="public" title="report_list_macros" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro name="item"
	arg-report="!">

	<xf:css src="structured_list.less" />

	<div class="structItem structItem--report {{ ($report.canView($report) && $report.isAssignedTo()) ? 'is-highlighted' : '' }}">
		<div class="structItem-cell structItem-cell--icon">
			<div class="structItem-iconContainer">
				<xf:avatar user="$report.User" size="s" />
			</div>
		</div>
		<div class="structItem-cell structItem-cell--main" data-xf-init="touch-proxy">
			<a href="{{ link('reports', $report) }}" class="structItem-title" data-tp-primary="on">
				<xf:if is="$report.canView($report)">
					{$report.title}
				<xf:else />
					{{ phrase('unknown_content') }}
				</xf:if>
			</a>

			<div class="structItem-minor">
				<ul class="structItem-extraInfo">
					<li>
						{{ $report.getReportState() }}
						<xf:if is="$report.assigned_user_id && $report.canView($report)">
							{$report.AssignedUser.username|parens}
						</xf:if>
					</li>
				</ul>

				<ul class="structItem-parts">
					<li><xf:username user="$report.User" defaultname="{{ phrase('unknown_member') }}" /></li>
					<li class="structItem-startDate"><a href="{{ link('reports', $report) }}" rel="nofollow"><xf:date time="{$report.first_report_date}" /></a></li>
				</ul>
			</div>
		</div>
		<div class="structItem-cell structItem-cell--meta">
			<dl class="pairs pairs--justified">
				<dt>{{ phrase('reports') }}</dt>
				<dd>{$report.report_count|number}</dd>
			</dl>
			<dl class="pairs pairs--justified structItem-minor">
				<dt>{{ phrase('comments') }}</dt>
				<dd>{$report.comment_count|number}</dd>
			</dl>
		</div>
		<div class="structItem-cell structItem-cell--latest">
			<a href="{{ link('reports', $report) }}" rel="nofollow"><xf:date time="{$report.last_modified_date}" class="structItem-latestDate" /></a>
			<div class="structItem-minor">
				<xf:if is="$report.canView($report)">
					<xf:username user="{$report.last_modified_cache}" />
				<xf:else />
					{{ phrase('n_a') }}
				</xf:if>
			</div>
		</div>
	</div>
</xf:macro>

<xf:macro name="search_menu">
	<div class="menu" data-menu="menu" aria-hidden="true">
		<xf:form action="{{ link('reports/search') }}" class="menu-content">
			<div class="menu-row">
				{{ phrase('find_reports_for_member:') }}
				<xf:textbox name="username" ac="single" maxlength="{{ max_length($xf.visitor, 'username') }}" />
			</div>
			<div class="menu-footer">
				<span class="menu-footer-controls"><xf:button type="submit" class="button--primary" icon="search" /></span>
			</div>
		</xf:form>
	</div>
</xf:macro>]]></template>
  <template type="public" title="report_search" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('xs_reported_content', {'name': $user.username}) }}</xf:title>

<xf:breadcrumb href="{{ link('reports') }}">{{ phrase('reports') }}</xf:breadcrumb>

<div class="block">
	<div class="block-container">
		<div class="block-body">
			<div class="structItemContainer">
				<xf:foreach loop="$reports" value="$report">
					<xf:macro template="report_list_macros" name="item"
						arg-report="{$report}" />
				</xf:foreach>
			</div>
		</div>
	</div>
</div>]]></template>
  <template type="public" title="report_view" version_id="2010036" version_string="2.1.0 Beta 6"><![CDATA[<xf:title>{{ phrase('reported_content:') }} {$report.title}</xf:title>
<xf:h1>{$report.title}</xf:h1>

<xf:breadcrumb href="{{ link('reports') }}">{{ phrase('reports') }}</xf:breadcrumb>
<xf:css src="message.less" />
<xf:css src="report.less" />

<div class="block">
	<div class="block-container">
		<div class="block-body">
			<div class="block-row block-row--separated block-row--alt">
				<xf:macro template="member_list_macros" name="item" arg-user="{$report.User}" />
			</div>
			{$handler.render($report)|raw}
		</div>
		<xf:if is="$report.link">
			<div class="block-footer">
				<span class="block-footer-controls"><xf:button href="{$report.link}">{{ phrase('go_to_content') }}</xf:button></span>
			</div>
		</xf:if>
	</div>
</div>

<div class="blockMessage">
	<div class="pairJustifier">
		<dl class="pairs pairs--rows">
			<dt>{{ phrase('created') }}</dt>
			<dd><xf:date time="$report.first_report_date" /></dd>
		</dl>
		<dl class="pairs pairs--rows">
			<dt>{{ phrase('reports') }}</dt>
			<dd>{$report.report_count|number}</dd>
		</dl>
		<dl class="pairs pairs--rows">
			<dt>{{ phrase('comments') }}</dt>
			<dd>{$report.comment_count|number}</dd>
		</dl>
		<dl class="pairs pairs--rows">
			<dt>{{ phrase('status') }}</dt>
			<dd>
				{$report.getReportState()}
				<xf:if is="$report.report_state == 'assigned'">
					{$xf.language.parenthesis_open}<xf:username user="$report.AssignedUser" />{$xf.language.parenthesis_close}
				</xf:if>
			</dd>
		</dl>
		<dl class="pairs pairs--rows">
			<dt>{{ phrase('updated') }}</dt>
			<dd><xf:date time="$report.last_modified_date" /></dd>
		</dl>
	</div>
</div>

<div class="block">
	<div class="block-container">
		<h3 class="block-header">{{ phrase('comments') }}</h3>

		<div class="block-body">
			<xf:foreach loop="$comments" value="$comment">
				<article class="message message--simple">
					<div class="message-inner">
						<div class="message-cell message-cell--user">
							<xf:macro template="message_macros" name="user_info_simple" arg-user="{$comment.User}"  arg-fallbackName="{$comment.username}" />
						</div>
						<div class="message-cell message-cell--main">
							<span class="u-anchorTarget" id="report-comment-{$comment.report_comment_id}"></span>
							<div class="message-content">
								<header class="message-attribution message-attribution--plain">
									<ul class="listInline listInline--bullet">
										<li class="message-attribution-user">
											<xf:avatar user="$comment.User" size="xxs" />
											<h4 class="attribution"><xf:username user="$comment.User" rich="true" /></h4>
										</li>
										<li><a href="#report-comment-{$comment.report_comment_id}" class="u-concealed"><xf:date time="$comment.comment_date" /></a></li>
										<xf:if is="$comment.is_report">
											<li><span class="label label--accent">{{ phrase('report_noun') }}</span></li>
										</xf:if>
									</ul>
								</header>

								<xf:if is="$comment.state_change">
									<div class="message-minorHighlight">{{ phrase('status_changed:') }} {$report.getReportState($comment.state_change)}</div>
								</xf:if>

								<xf:if is="$comment.message">
									<article class="message-body">
										{{ bb_code($comment.message, 'report_comment', $comment) }}
									</article>
								</xf:if>
							</div>
						</div>
					</div>
				</article>
			</xf:foreach>
		</div>
	</div>
</div>

<div class="block">
	<div class="block-container">

		<h2 class="block-tabHeader tabs" data-xf-init="tabs" role="tablist">
			<a class="tabs-tab is-active" role="tab" tabindex="0" aria-controls="{{ unique_id('reportUpdate') }}">{{ phrase('update') }}</a>
			<a class="tabs-tab" role="tab" tabindex="0" aria-controls="{{ unique_id('reportReassign') }}">{{ phrase('reassign') }}</a>
		</h2>

		<ul class="tabPanes">
			
			<li class="is-active" role="tabpanel" id="{{ unique_id('reportUpdate') }}">
				<xf:form action="{{ link('reports/update', $report) }}" ajax="true" draft="{{ link('reports/draft', $report) }}">
					<div class="block-body">
						<xf:set var="$assignedToOther" value="{{ $report.report_state == 'assigned' && $report.AssignedUser && $report.AssignedUser.user_id != $xf.visitor.user_id }}" />

						<xf:if is="$assignedToOther">
							<xf:formrow rowclass="js-handleToggleTrigger">
								{{ phrase('this_report_is_currently_assigned_to_x', {'assigned_username': $report.AssignedUser.username}) }}
								<div>
									<xf:button data-xf-click="toggle" data-target=".js-handleToggle" data-hide=".js-handleToggleTrigger">
										{{ phrase('handle_report') }}
									</xf:button>
								</div>
							</xf:formrow>
						</xf:if>

						<div class="js-handleToggle{{ !$assignedToOther ? ' is-active' : '' }}">

							<xf:editorrow name="message" value="{$report.draft_comment.message}" data-min-height="100"
								rowtype="fullWidth noLabel"
								label="{{ phrase('message') }}">

								<xf:explain>
									{{ phrase('your_comment_will_only_be_visible_to_moderators') }}
									<xf:if is="$report.isClosed()">{{ phrase('your_comment_will_re_open_this_report') }}</xf:if>
								</xf:explain>
							</xf:editorrow>

							<xf:if is="!$report.isClosed()">
								<xf:radiorow name="report_state"
									label="{{ phrase('status') }}">

									<xf:option value="" label="{{ phrase('do_not_change') }}" selected="true" />
									<xf:option value="assigned" label="{{ $report.report_state == 'assigned' ? phrase('unassign') : phrase('report_state.assigned') }}" />
									<xf:option value="resolved" label="{{ phrase('report_state.resolved') }}" />
									<xf:option value="rejected" label="{{ phrase('report_state.rejected') }}" />
								</xf:radiorow>

								<xf:checkboxrow
									explain="{{ phrase('any_resolution_rejection_alert_text_will_be_appended_to_comment') }}">

									<xf:option name="send_alert" label="{{ phrase('send_resolution_rejection_alert:') }}">
										<xf:dependent>
											<xf:textbox name="alert_comment" maxlength="300" />
										</xf:dependent>
									</xf:option>
								</xf:checkboxrow>
							</xf:if>
						</div>
					</div>
					<div class="js-handleToggle{{ !$assignedToOther ? ' is-active' : '' }}">
						<xf:submitrow icon="save" />
					</div>
				</xf:form>
			</li>

			<li role="tabpanel" id="{{ unique_id('reportReassign') }}">
				<xf:form action="{{ link('reports/reassign', $report) }}" ajax="true">
					<div class="block-body">
						<xf:selectrow name="user_id" value="{$report.assigned_user_id}"
							label="{{ phrase('member') }}">

							<xf:option value="0" label="{{ phrase('(none)') }}" />
							<xf:foreach loop="$moderators" value="$moderator">
								<xf:option value="{$moderator.User.user_id}" label="{$moderator.User.username}" />
							</xf:foreach>
						</xf:selectrow>
					</div>
					<xf:submitrow submit="{{ phrase('reassign') }}" />
				</xf:form>
			</li>

		</ul>
	</div>
</div>]]></template>
  <template type="public" title="search_form" version_id="2010052" version_string="2.1.0 Release Candidate 2"><![CDATA[<xf:title>{{ phrase('search') }}</xf:title>

<xf:head option="robots"><meta name="robots" content="noindex" /></xf:head>

<xf:if is="$type">
	<xf:breadcrumb href="{{ link('full:search') }}">{{ phrase('search') }}</xf:breadcrumb>
</xf:if>

<xf:form action="{{ link('search/search') }}" class="block" ajax="true">
	<div class="block-container">
		<h2 class="block-tabHeader tabs hScroller" data-xf-init="h-scroller">
			<span class="hScroller-scroll">
				<a href="{{ link('search') }}" class="tabs-tab{{ !$type ? ' is-active' : '' }}">{{ phrase('search_everything') }}</a>
				<xf:foreach loop="$tabs" key="$tabType" value="$tab">
					<a href="{{ link('search', null, {'type': $tabType}) }}" class="tabs-tab{{ $type == $tabType ? ' is-active' : '' }}">{$tab.title}</a>
				</xf:foreach>
				<xf:if is="$xf.options.enableTagging">
					<a href="{{ link('tags') }}" class="tabs-tab">{{ phrase('search_tags') }}</a>
				</xf:if>
			</span>
		</h2>

		<div class="block-body">
			<xf:include template="{$formTemplateName}" />
		</div>

		<xf:submitrow icon="search" sticky="true" />
	</div>

	<xf:hiddenval name="search_type">{$type}</xf:hiddenval>
</xf:form>]]></template>
  <template type="public" title="search_form_all" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro template="search_form_macros" name="keywords" arg-input="{$input}" />

<xf:macro template="search_form_macros" name="user" arg-input="{$input}" />

<xf:macro template="search_form_macros" name="date" arg-input="{$input}" />

<xf:macro template="search_form_macros" name="order"
	arg-isRelevanceSupported="{$isRelevanceSupported}"
	arg-input="{$input}" />
]]></template>
  <template type="public" title="search_form_macros" version_id="2000570" version_string="2.0.5"><![CDATA[<xf:macro name="keywords" arg-input="{{ [] }}" arg-canTitleLimit="{{ true }}">
	<xf:set var="$controlId">{{ unique_id() }}</xf:set>
	<xf:formrow rowtype="input" controlid="{$controlId}"
		label="{{ phrase('keywords') }}">

		<ul class="inputList">
			<li><xf:textbox type="search" name="keywords" value="{$input.keywords}" autofocus="autofocus" id="{$controlId}" /></li>
			<xf:if is="$canTitleLimit">
				<li><xf:checkbox standalone="true"><xf:option name="c[title_only]" selected="{$input.c.title_only}" label="{{ phrase('search_titles_only') }}" /></xf:checkbox></li>
			</xf:if>
		</ul>
	</xf:formrow>
</xf:macro>

<xf:macro name="user" arg-input="{{ [] }}">
	<xf:textboxrow name="c[users]" value="{$input.c.users}" ac="true"
		label="{{ phrase('posted_by') }}"
		explain="{{ phrase('separate_names_with_comma') }}" />
</xf:macro>

<xf:macro name="date" arg-input="{{ [] }}">
	<xf:dateinputrow name="c[newer_than]" value="{$input.c.newer_than}"
		label="{{ phrase('newer_than') }}" />
</xf:macro>

<xf:macro name="order" arg-input="{{ [] }}" arg-isRelevanceSupported="!" arg-options="{{ [] }}">
	<xf:if is="$isRelevanceSupported || count($options)">
		<xf:radiorow name="order" value="{$input.order|default($isRelevanceSupported ? 'relevance' : 'date')}"
			label="{{ phrase('order_by') }}">

			<xf:if is="$isRelevanceSupported">
				<xf:option value="relevance">{{ phrase('relevance') }}</xf:option>
			</xf:if>
			<xf:option value="date">{{ phrase('date') }}</xf:option>
			<xf:options source="$options" />
		</xf:radiorow>
	<xf:else />
		<xf:hiddenval name="order">{$input.order|default($isRelevanceSupported ? 'relevance' : 'date')}</xf:hiddenval>
	</xf:if>
</xf:macro>

<xf:macro name="grouped" arg-label="!" arg-input="{{ [] }}">
	<xf:checkboxrow>
		<xf:option name="grouped" value="1" selected="{$input.grouped}">{$label}</xf:option>
	</xf:checkboxrow>
</xf:macro>]]></template>
  <template type="public" title="search_form_post" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('search_threads') }}</xf:title>

<xf:macro template="search_form_macros" name="keywords" arg-input="{$input}" />
<xf:macro template="search_form_macros" name="user" arg-input="{$input}" />
<xf:macro template="search_form_macros" name="date" arg-input="{$input}" />

<xf:numberboxrow name="c[min_reply_count]" value="{$input.c.min_reply_count|default(0)}" min="0"
	label="{{ phrase('minimum_number_of_replies') }}" />

<xf:if is="$prefixesGrouped is not empty">
	<xf:selectrow name="c[prefixes][]" size="7" multiple="true" value="{$input.c.prefixes|default([0])}"
		label="{{ phrase('prefixes') }}">

		<xf:option value="">{{ phrase('(any)') }}</xf:option>
		<xf:foreach loop="$prefixGroups" key="$groupId" value="$prefixGroup" if="{{ count($prefixesGrouped.{$groupId}) > 0 }}">
			<xf:optgroup label="{{ prefix_group('thread', $groupId) }}">
				<xf:foreach loop="{$prefixesGrouped.{$groupId}}" key="$prefixId" value="$prefix">
					<xf:option value="{$prefixId}">{{ prefix_title('thread', $prefixId) }}</xf:option>
				</xf:foreach>
			</xf:optgroup>
		</xf:foreach>
	</xf:selectrow>
</xf:if>

<xf:formrow rowtype="input"
	label="{{ phrase('search_in_forums') }}">

	<ul class="inputList">
		<li><xf:select name="c[nodes][]" size="7" multiple="multiple" value="{$input.c.nodes|default([0])}">
			<xf:option value="">{{ phrase('all_forums') }}</xf:option>
			<xf:foreach loop="$nodeTree.getFlattened(0)" value="$treeEntry">
				<xf:option value="{$treeEntry.record.node_id}">{{ repeat('&nbsp;&nbsp;', $treeEntry.depth)|raw }} {$treeEntry.record.title}</xf:option>
			</xf:foreach>
		</xf:select></li>
		<li><xf:checkbox standalone="true">
			<xf:option name="c[child_nodes]" selected="{{ (!$input.c || $input.c.child_nodes) }}" label="{{ phrase('search_child_forums_as_well') }}" />
		</xf:checkbox></li>
	</ul>
</xf:formrow>

<xf:macro template="search_form_macros" name="order"
	arg-isRelevanceSupported="{$isRelevanceSupported}"
	arg-options="{{ {
		'replies': phrase('most_replies')
	} }}"
	arg-input="{$input}" />

<xf:macro template="search_form_macros" name="grouped"
	arg-label="{{ phrase('display_results_as_threads') }}"
	arg-input="{$input}" />]]></template>
  <template type="public" title="search_form_profile_post" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('search_profile_posts') }}</xf:title>

<xf:macro template="search_form_macros" name="keywords" arg-input="{$input}" arg-canTitleLimit="{{ false }}" />

<xf:macro template="search_form_macros" name="user" arg-input="{$input}" />

<xf:textboxrow name="c[profile_users]" value="{$input.c.profile_users}" ac="true"
	label="{{ phrase('posted_on_the_profile_of_member') }}"
	explain="{{ phrase('separate_names_with_comma') }}" />

<xf:macro template="search_form_macros" name="date" arg-input="{$input}" />]]></template>
  <template type="public" title="search_result_page" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<li class="block-row block-row--separated">
	<div class="contentRow">
		<span class="contentRow-figure">
			<xf:avatar user="{{ null }}" size="s" />
		</span>
		<div class="contentRow-main">
			<h3 class="contentRow-title">
				<a href="{{ link('pages', $page) }}">{{ highlight($page.title, $options.term) }}</a>
			</h3>

			<div class="contentRow-snippet">{{ snippet($page.MasterTemplate.template, 300, {'term': $options.term, 'stripHtml': true}) }}</div>

			<div class="contentRow-minor contentRow-minor--hideLinks">
				<ul class="listInline listInline--bullet">
					<li>{{ phrase('page') }}</li>
					<li><xf:date time="{$page.modified_date}" /></li>
				</ul>
			</div>
		</div>
	</div>
</li>]]></template>
  <template type="public" title="search_result_post" version_id="2001070" version_string="2.0.10"><![CDATA[<li class="block-row block-row--separated {{ $post.isIgnored() ? 'is-ignored' : '' }} js-inlineModContainer" data-author="{{ $post.User.username ?: $post.username }}">
	<div class="contentRow {{ !$post.isVisible() ? 'is-deleted' : '' }}">
		<span class="contentRow-figure">
			<xf:avatar user="{$post.User}" size="s" defaultname="{$post.username}" />
		</span>
		<div class="contentRow-main">
			<h3 class="contentRow-title">
				<a href="{{ link('threads/post', $post.Thread, {'post_id': $post.post_id}) }}">{{ prefix('thread', $post.Thread) . highlight($post.Thread.title, $options.term) }}</a>
			</h3>

			<div class="contentRow-snippet">{{ snippet($post.message, 300, {'term': $options.term, 'stripQuote': true}) }}</div>

			<div class="contentRow-minor contentRow-minor--hideLinks">
				<ul class="listInline listInline--bullet">
					<xf:if is="$options.mod == 'post' && $post.canUseInlineModeration()">
						<li><xf:checkbox standalone="true">
							<xf:option value="{$post.post_id}" class="js-inlineModToggle"
								data-xf-init="tooltip"
								title="{{ phrase('select_for_moderation') }}" />
						</xf:checkbox></li>
					</xf:if>
					<li><xf:username user="{$post.User}" defaultname="{$post.username}" /></li>
					<li>{{ phrase('post_x', {'position': number($post.position + 1)}) }}</li>
					<li><xf:date time="{$post.post_date}" /></li>
					<li>{{ phrase('forum:') }} <a href="{{ link('forums', $post.Thread.Forum) }}">{$post.Thread.Forum.title}</a></li>
				</ul>
			</div>
		</div>
	</div>
</li>]]></template>
  <template type="public" title="search_result_profile_post" version_id="2010036" version_string="2.1.0 Beta 6"><![CDATA[<li class="block-row block-row--separated {{ $profilePost.isIgnored() ? 'is-ignored' : '' }} js-inlineModContainer" data-author="{{ $profilePost.User.username ?: $profilePost.username }}">
	<div class="contentRow {{ !$profilePost.isVisible() ? 'is-deleted' : '' }}">
		<span class="contentRow-figure">
			<xf:avatar user="{$profilePost.User}" size="s" defaultname="{$profilePost.username}" />
		</span>
		<div class="contentRow-main">
			<h3 class="contentRow-title">
				<a href="{{ link('profile-posts', $profilePost) }}">{{ snippet($profilePost.message, 100, {'term': $options.term, 'stripQuote': true, 'fromStart': true}) }}</a>
			</h3>

			<div class="contentRow-snippet">{{ snippet($profilePost.message, 300, {'term': $options.term, 'stripQuote': true}) }}</div>

			<div class="contentRow-minor contentRow-minor--hideLinks">
				<ul class="listInline listInline--bullet">
					<xf:if is="$options.mod == 'profile_post' && $profilePost.canUseInlineModeration()">
						<li><xf:checkbox standalone="true">
							<xf:option value="{$profilePost.profile_post_id}" class="js-inlineModToggle"
								data-xf-init="tooltip"
								title="{{ phrase('select_for_moderation') }}"/>
						</xf:checkbox></li>
					</xf:if>
					<li><xf:username user="{$profilePost.User}" defaultname="{$profilePost.username}" /></li>
					<li>{{ phrase('profile_post') }}</li>
					<li><xf:date time="{$profilePost.post_date}" /></li>
				</ul>
			</div>
		</div>
	</div>
</li>]]></template>
  <template type="public" title="search_result_profile_post_comment" version_id="2010036" version_string="2.1.0 Beta 6"><![CDATA[<li class="block-row block-row--separated {{ $comment.isIgnored() ? 'is-ignored' : '' }}" data-author="{{ $comment.User.username ?: $comment.username }}">
	<div class="contentRow {{ !$comment.isVisible() ? 'is-deleted' : '' }}">
		<span class="contentRow-figure">
			<xf:avatar user="{$comment.User}" size="s" defaultname="{$comment.username}" />
		</span>
		<div class="contentRow-main">
			<h3 class="contentRow-title">
				<a href="{{ link('profile-posts/comments', $comment) }}">{{ snippet($comment.message, 100, {'term': $options.term, 'stripQuote': true, 'fromStart': true}) }}</a>
			</h3>

			<div class="contentRow-snippet">{{ snippet($comment.message, 300, {'term': $options.term, 'stripQuote': true}) }}</div>

			<div class="contentRow-minor contentRow-minor--hideLinks">
				<ul class="listInline listInline--bullet">
					<li><xf:username user="{$comment.User}" defaultname="{$comment.username}" /></li>
					<li>{{ phrase('profile_post_comment') }}</li>
					<li><xf:date time="{$comment.comment_date}" /></li>
				</ul>
			</div>
		</div>
	</div>
</li>]]></template>
  <template type="public" title="search_result_thread" version_id="2001070" version_string="2.0.10"><![CDATA[<li class="block-row block-row--separated {{ $thread.isIgnored() ? 'is-ignored' : '' }} js-inlineModContainer" data-author="{{ $thread.User.username ?: $thread.username }}">
	<div class="contentRow {{ !$thread.isVisible() ? 'is-deleted' : '' }}">
		<span class="contentRow-figure">
			<xf:avatar user="{$thread.User}" size="s" defaultname="{$thread.username}" />
		</span>
		<div class="contentRow-main">
			<h3 class="contentRow-title">
				<a href="{{ link('threads', $thread) }}">{{ prefix('thread', $thread) . highlight($thread.title, $options.term) }}</a>
			</h3>

			<div class="contentRow-snippet">{{ snippet($thread.FirstPost.message, 300, {'term': $options.term, 'stripQuote': true}) }}</div>

			<div class="contentRow-minor contentRow-minor--hideLinks">
				<ul class="listInline listInline--bullet">
					<xf:if is="$options.mod == 'thread' && $thread.canUseInlineModeration()">
						<li><xf:checkbox standalone="true">
							<xf:option value="{$thread.thread_id}" class="js-inlineModToggle"
								data-xf-init="tooltip"
								title="{{ phrase('select_for_moderation') }}" />
						</xf:checkbox></li>
					</xf:if>
					<li><xf:username user="{$thread.User}" defaultname="{$thread.username}" /></li>
					<li>{{ phrase('thread') }}</li>
					<li><xf:date time="{$thread.post_date}" /></li>
					<li>{{ phrase('replies:') }} {$thread.reply_count|number}</li>
					<li>{{ phrase('forum:') }} <a href="{{ link('forums', $thread.Forum) }}">{$thread.Forum.title}</a></li>
				</ul>
			</div>
		</div>
	</div>
</li>]]></template>
  <template type="public" title="search_results" version_id="2000034" version_string="2.0.0 Beta 4"><![CDATA[<xf:if is="$search.search_query">
	<xf:title page="{$page}">{{ phrase('search_results_for_query:') }} {$search.search_query}</xf:title>
	<xf:h1>{{ phrase('search_results_for_query:') }} <a href="{{ link('search', $search, {'searchform': '1'}) }}"><em>{$search.search_query}</em></a></xf:h1>
<xf:else />
	<xf:title page="{$page}">{{ phrase('search_results') }}</xf:title>
</xf:if>

<xf:css src="search_results.less" />

<xf:breadcrumb href="{{ link('full:search') }}">{{ phrase('search') }}</xf:breadcrumb>

<xf:head option="robots"><meta name="robots" content="noindex" /></xf:head>

<xf:if is="$activeModType">
	<xf:js src="xf/inline_mod.js" min="1" />
</xf:if>

<div class="block" data-xf-init="{{ $activeModType ? 'inline-mod' : '' }}" data-type="{$activeModType}" data-href="{{ link('inline-mod') }}">
	<xf:if is="$search.warnings">
		<div class="block-outer">
			<ol class="listPlain blockMessage blockMessage--warning blockMessage--close">
				<xf:foreach loop="$search.warnings" value="$warning">
					<li>{$warning}</li>
				</xf:foreach>
			</ol>
		</div>
	</xf:if>
	<xf:if is="$modTypes">
		<div class="block-outer">
			<div class="block-outer-opposite">
				<div class="buttonGroup">
					<xf:if is="$activeModType">
						<xf:macro template="inline_mod_macros" name="button" />
					</xf:if>
					<div class="buttonGroup-buttonWrapper">
						<xf:button class="button--link menuTrigger" data-xf-click="menu" aria-expanded="false" aria-haspopup="true">{{ phrase('enable_moderation') }}</xf:button>
						<div class="menu" data-menu="menu" aria-hidden="true">
							<div class="menu-content">
								<h3 class="menu-header">{{ phrase('enable_moderation') }}</h3>
								<xf:foreach loop="$modTypes" key="$type" value="$text">
									<a href="{{ link('search', $search, {'mod': $type,  'page': ($page > 1 ? $page : '')}) }}" class="menu-linkRow {{ $activeModType == $type ? 'is-selected' : '' }}">{$text}</a>
								</xf:foreach>
								<xf:if is="$activeModType">
									<hr class="menu-separator" />
									<a href="{{ link('search', $search, {'page': ($page > 1 ? $page : '')}) }}" class="menu-linkRow">{{ phrase('disable') }}</a>
								</xf:if>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</xf:if>

	<div class="block-container">
		<ol class="block-body">
			<xf:foreach loop="$results" value="$result">
				{{ $result.render({'mod': $activeModType})|raw }}
			</xf:foreach>
		</ol>
		<xf:if is="{$getOlderResultsDate}">
			<div class="block-footer">
				<span class="block-footer-controls"><xf:button href="{{ link('search/older', $search, {'before': $getOlderResultsDate}) }}" class="button--link">
					{{ phrase('view_older_results') }}
				</xf:button></span>
			</div>
		</xf:if>
	</div>

	<div class="block-outer block-outer--after">
		<xf:pagenav
			page="{$page}" perpage="{$perPage}" total="{$search.result_count}"
			link="search" data="{$search}" params="{{ {'mod': $activeModType} }}"
			wrapperclass="block-outer-main" />
		<xf:showignored wrapperclass="block-outer-opposite" />
	</div>
</div>

<xf:if is="$activeModType">
	<xf:js src="xf/inline_mod.js" min="1" />
</xf:if>]]></template>
  <template type="public" title="search_results.less" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[.searchResult
{
	display: table;
	table-layout: fixed;
	width: 100%;
}

.searchResult-icon
{
	display: table-cell;
	vertical-align: top;
	width: 54px;
	white-space: nowrap;
	word-wrap: normal;

	img,
	.avatar
	{
		max-width: 100%;
	}
}

.searchResult-main
{
	display: table-cell;
	vertical-align: middle;
	padding-left: @xf-paddingLarge;

	&:before
	{
		content: '';
		display: block;
		margin-top: -.25em;
	}
}

.searchResult-title
{
	font-size: @xf-fontSizeLarge;
}]]></template>
  <template type="public" title="select2.less" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[.select2-hidden-accessible
{
	border: 0 !important;
	clip: rect(0 0 0 0) !important;
	height: 1px !important;
	margin: -1px !important;
	overflow: hidden !important;
	padding: 0 !important;
	position: absolute !important;
	width: 1px !important;
}

.select2
{
	line-height: normal;

	*:focus
	{
		outline: none;
	}

	.select2-selection
	{
		padding: 0;
		margin: 0;
		display: block;

		&.input
		{
			cursor: text;
		}

		ul
		{
			list-style: none;
			margin: 0;
			padding: 0 5px;
			width: 100%;
			overflow: hidden;
			text-overflow: ellipsis;
			white-space: nowrap;

			display: inline-flex;
			flex-wrap: wrap;
			margin-bottom: 5px;

			> li
			{
				&.select2-selection__choice
				{
					float: left;

					font-size: 15px;
					border-radius: @xf-borderRadiusMedium;

					.xf-chip();

					margin-right: 5px;
					margin-top: 5px;
					padding: 0 5px;

					cursor: default;

					.select2-selection__choice__remove
					{
						font-size: 0;
						cursor: pointer;

						&:before
						{
							.m-faBase();
							font-size: 15px;
							.m-faContent("@{fa-var-times}\20");
							opacity: .5;
							.m-transition(opacity);
						}

						&:hover:before
						{
							opacity: 1;
						}
					}
				}
			}

			.select2-search
			{
				flex-grow: 1;
				min-width: 0;

				&.select2-search--inline
				{
					float: left;
				}

				.select2-search__field
				{
					border: none;
					padding: 1px 0;
					margin-top: 5px;
					background: transparent;
					min-width: 100%;
					max-width: 100%;

					&:focus
					{
						outline: none;
					}
				}
			}
		}
	}
}

.select2-container
{
	display: inline-block;

	&.select2-container--disabled
	{
		.input
		{
			.xf-inputDisabled();
		}
	}

	&.select2-container--open
	{
		.select2-dropdown
		{
			-ltr-rtl-left: 0;

			&.select2-dropdown--above
			{
				border-bottom: none;
				border-bottom-left-radius: 0;
				border-bottom-right-radius: 0;
			}

			&.select2-dropdown--below
			{
				border-top: none;
				border-top-left-radius: 0;
				border-top-right-radius: 0;
			}
		}
	}
}

.select2-dropdown
{
	border-radius: @xf-borderRadiusSmall;
	box-sizing: border-box;
	display: block;
	position: absolute;
	-ltr-rtl-left: -100000px;
	width: 100%;
	z-index: 1051;
	padding-top: 2px;

	&.select2-dropdown--above
	{
		padding-bottom: 5px;

		.select2-results__option.loading-results:not(:last-child)
		{
			display: none;
		}
	}
}

.select2-results
{
}

.select2-results__options
{
	.m-autoCompleteList();

	display: block;

	overflow: auto;
	max-height: 150px;
	-webkit-overflow-scrolling: touch;
}

.select2-results__option
{
	user-select: none;
	-webkit-user-select: none;

	&.select2-results__option--highlighted
	{
		background: @xf-contentHighlightBg;
	}
}]]></template>
  <template type="public" title="setup.less" version_id="2010033" version_string="2.1.0 Beta 3"><![CDATA[// Note that this file should never output any CSS directly. It should contain variables and mixins only.
// Output should go into core.less.

// ################################ VARIABLES ###############################

// BLOCKS
@block-borderRadius-inner: max(@xf-blockBorderRadius - 1px, 0px);
@block-noStripSel: ~'.block-container:not(.block-container--noStripRadius)';

// HELPERS
@zIndex-1: 1 * (@xf-zIndexMultiplier);
@zIndex-2: 2 * (@xf-zIndexMultiplier);
@zIndex-3: 3 * (@xf-zIndexMultiplier);
@zIndex-4: 4 * (@xf-zIndexMultiplier);
@zIndex-5: 5 * (@xf-zIndexMultiplier);
@zIndex-6: 6 * (@xf-zIndexMultiplier);
@zIndex-7: 7 * (@xf-zIndexMultiplier);
@zIndex-8: 8 * (@xf-zIndexMultiplier);
@zIndex-9: 9 * (@xf-zIndexMultiplier);

// AVATARS
@_avatarBaseSize: 96px;
@avatar-xxs: (@_avatarBaseSize) / 4;
@avatar-xs:  (@_avatarBaseSize) / 3;
@avatar-s:   (@_avatarBaseSize) / 2;
@avatar-m:   (@_avatarBaseSize);
@avatar-l:   (@_avatarBaseSize) * 2;
@avatar-o:   (@_avatarBaseSize) * 4;

@rtl: xf-isRtl;
@ltr: xf-isLtr;

// DEFAULT FONTAWESOME TYPE
@faType: 'Pro';

// FONTAWESOME WEIGHT VALUES
@faWeight-light: 300;
@faWeight-regular: 400;
@faWeight-solid: 900;

{{ include('setup_fa.less') }}

// TABLES
@tablePadding: @xf-paddingSmall;

// ####################################### MIXINS ##################################

.m-clearFix()
{
	&:before,
	&:after
	{
		content: " ";
		display: table;
	}
	&:after
	{
		clear: both;
	}
}

.m-hideText()
{
	text-indent: 100%;
	overflow: hidden;
	white-space: nowrap;
	word-wrap: normal;
}

.m-overflowEllipsis()
{
	overflow: hidden;
	white-space: nowrap;
	word-wrap: normal;
	text-overflow: ellipsis;
}

.m-appendColon()
{
	&:after
	{
		content: "{$xf.language.label_separator}";
	}

	&.is-sentence:after
	{
		content: "";
	}
}

.m-tooltipArrow(@color, @size, @variation: ~'', @fillColor: false)
{
	@{variation}.tooltip--top &
	{
		bottom: 0;
		left: 50%;
		margin-left: -@size;
		.m-triangleDown(@color, @size);
	}
	@{variation}.tooltip--bottom &
	{
		top: 0;
		left: 50%;
		margin-left: -@size;
		.m-triangleUp(@color, @size);
	}
	@{variation}.tooltip--right &
	{
		top: 50%;
		left: 0;
		margin-top: -@size;
		.m-triangleLeft(@color, @size);
	}
	@{variation}.tooltip--left &
	{
		top: 50%;
		right: 0;
		margin-top: -@size;
		.m-triangleRight(@color, @size);
	}

	& when (iscolor(@fillColor))
	{
		@{variation} &:after
		{
			position: absolute;
			content: '';
		}

		@{variation}.tooltip--top &:after
		{
			bottom: 1px;
			left: -@size + 1px;
			.m-triangleDown(@fillColor, @size - 1px);
		}

		@{variation}.tooltip--bottom &:after
		{
			top: 1px;
			left: -@size + 1px;
			.m-triangleUp(@fillColor, @size - 1px);
		}

		@{variation}.tooltip--right &:after
		{
			left: 1px;
			bottom: -@size + 1px;
			.m-triangleLeft(@fillColor, @size - 1px);
		}

		@{variation}.tooltip--left &:after
		{
			right: 1px;
			bottom: -@size + 1px;
			.m-triangleRight(@fillColor, @size - 1px);
		}
	}
}

.m-triangleUp(@color; @size)
{
	border: @size solid transparent;
	border-top-width: 0;
	border-bottom-color: @color;
}

.m-triangleDown(@color; @size)
{
	border: @size solid transparent;
	border-bottom-width: 0;
	border-top-color: @color;
}

.m-triangleLeft(@color; @size)
{
	border: @size solid transparent;
	border-left-width: 0;
	border-right-color: @color;
}

.m-triangleRight(@color; @size)
{
	border: @size solid transparent;
	border-right-width: 0;
	border-left-color: @color;
}

.m-dropShadow(@x: 1px; @y: 2px; @blur: 2px; @spread: 0; @alpha: 0.25)
{
	box-shadow: @x @y @blur @spread rgba(0, 0, 0, @alpha);
}

.m-textOutline(@fillColor: white; @strokeColor: black; @width: 1px;)
{
	-webkit-text-fill-color: @fillColor;
	-webkit-text-stroke-color: @strokeColor;
	-webkit-text-stroke-width: @width;
}

.m-gradient(@startColor; @stopColor; @fallback; @startPos: 0%; @endPos: 100%)
{
	background: @fallback;
	background: linear-gradient(to bottom, @startColor @startPos, @stopColor @endPos);
}

.m-gradientHorizontal(@startColor; @stopColor; @fallback; @startPos: 0%; @endPos: 100%)
{
	background: @fallback;

	& when(@ltr)
	{
		background: linear-gradient(to right, @startColor @startPos, @stopColor @endPos);
	}
	& when(@rtl)
	{
		background: linear-gradient(to left, @startColor @startPos, @stopColor @endPos);
	}
}

.m-tabSize(@size: 4)
{
	-moz-tab-size: @size;
	tab-size: @size;
}

.m-transition(@props: all; @duration: @xf-animationSpeed; @timing: ease; @delay: 0; @raw-input: false)
{
	// adapted from https://stackoverflow.com/a/20810461 @ScottS

	.output() when (@raw-input = false)
	{
		@propsLength: length(@props);
		@durationLength: length(@duration);
		@timingLength: length(@timing);
		@delayLength: length(@delay);

		.buildString(@i, @s: ~'') when (@i <= @propsLength)
		{
			@prop: extract(@props, @i);

			.setDuration() when (@i <= @durationLength) { @dur: extract(@duration, @i); }
			.setDuration() when (@i >  @durationLength) { @dur: extract(@duration, @durationLength); }
			.setDuration();

			.setEasing() when (@i <= @timingLength) { @time: extract(@timing, @i); }
			.setEasing() when (@i >  @timingLength) { @time: extract(@timing, @timingLength); }
			.setEasing();

			.setDelay() when (@i <= @delayLength) { @del: extract(@delay, @i); }
			.setDelay() when (@i >  @delayLength) { @del: extract(@delay, @delayLength); }
			.setDelay();

			.setDivider() when (@i > 1) { @divider: ~'@{s},'; }
			.setDivider() when (@i = 1) { @divider: ~''; }
			.setDivider();

			.buildString((@i + 1), @divider @prop @dur @time);
		}

		.buildString(1);

		.buildString(@i, @s: ~'') when (@i > @propsLength)
		{
			.compact(@s);
		}
	}

	.output() when not (@raw-input = false)
	{
		.compact(@raw-input);
	}

	.compact(@string)
	{
		-webkit-transition: @string;
		//-moz-transition: @string;
		//-ms-transition: @string;
		//-o-transition: @string;
		transition: @string;
	}

	.output();
}

.m-transitionProperty(@props)
{
	-webkit-transition-property: @props;
	transition-property: @props;
}

.m-animation(@props)
{
	-webkit-animation: @props;
	animation: @props;
}

.m-transform(@props)
{
	-webkit-transform: @props;
	-ms-transform: @props;
	transform: @props;
}

.m-keyframes(@name, @rules)
{
	@-webkit-keyframes @name { @rules(); }
	@keyframes @name { @rules(); }
}

.m-columns(@count; @breakWidth: 0; @gap: 1em)
{
	-moz-column-count: @count;
	-webkit-column-count: @count;
	column-count: @count;

	-moz-column-gap: @gap;
	-webkit-column-gap: @gap;
	column-gap: @gap;

	& when(@breakWidth > 0)
	{
		@media (max-width: @breakWidth)
		{
			-moz-column-count: 1;
			-webkit-column-count: 1;
			column-count: 1;
		}
	}
}

.m-columnBreakAvoid()
{
	-webkit-column-break-inside: avoid;
	break-inside: avoid-column;
	page-break-inside: avoid;
}

.m-borderLeftRadius(@radius)
{
	border-top-left-radius: @radius;
	border-bottom-left-radius: @radius;
}

.m-borderRightRadius(@radius)
{
	border-top-right-radius: @radius;
	border-bottom-right-radius: @radius;
}

.m-borderTopRadius(@radius)
{
	border-top-left-radius: @radius;
	border-top-right-radius: @radius;
}

.m-borderBottomRadius(@radius)
{
	border-bottom-left-radius: @radius;
	border-bottom-right-radius: @radius;
}

.m-hiddenLinks()
{
	a
	{
		color: inherit;
		text-decoration: none;

		&:hover
		{
			text-decoration: underline;
		}
	}
}

.m-textColoredLinks()
{
	a
	{
		color: inherit;
		text-decoration: underline;
	}
}

.m-placeholder(@rules)
{
	&::-webkit-input-placeholder { @rules(); }
	&::-moz-placeholder { @rules(); }
	&:-moz-placeholder { @rules(); }
	&:-ms-input-placeholder { @rules(); }
}

.m-autoCompleteList(@wide: false)
{
	.m-listPlain();
	cursor: default;

	.xf-menu();
	min-width: 180px;
	& when(@wide = true)
	{
		min-width: 250px;
	}
	max-width: 95%;

	border: @xf-borderSize solid @xf-borderColor;
	.m-dropShadow(0, 3px, 5px, 0, .3);

	li
	{
		padding: @xf-paddingMedium;
		line-height: 24px;

		.m-clearFix();

		&.is-selected
		{
			background: @xf-contentHighlightBg;
		}

		.autoCompleteList-icon
		{
			float: left;
			margin-right: @xf-paddingMedium;
			width: 24px;
			height: 24px;
		}
	}
}

.m-listPlain()
{
	list-style: none;
	margin: 0;
	padding: 0;
}

// makes direct children display: inline-block, removing white-space between elements (mostly used on ul > li)
.m-inlineBlocks(@fontSize: @xf-fontSizeNormal)
{
	font-size: 0;

	> *
	{
		display: inline-block;
		font-size: @fontSize;
	}
}

.m-tabsTogether(@fontSize: @xf-fontSizeNormal)
{
	font-size: 0;

	.tabs-tab,
	.tabs-extra,
	.hScroller-action
	{
		font-size: @fontSize;
	}
}

.m-hiddenEl(@transition: true)
{
	display: none;

	&.is-active
	{
		display: block;
	}

	& when(@transition = true)
	{
		.m-transitionFadeDown();
	}
}

.m-transitionFade(@speed: @xf-animationSpeed)
{
	display: none;
	opacity: 0;

	.m-transition(all, -xf-opacity; @speed);

	&.is-active
	{
		display: block;
		opacity: 1;
	}

	&.is-transitioning
	{
		display: block;
	}
}

.m-transitionFadeDown(@speed: @xf-animationSpeed)
{
	.m-transitionFade(@speed);

	overflow-y: hidden;
	height: 0;

	.m-transitionProperty(all, -xf-height;);

	&.is-active
	{
		height: auto;
		overflow-y: visible;
	}

	&.is-transitioning
	{
		overflow-y: hidden;
	}
}

.m-visuallyHidden()
{
	position: absolute;
	height: 1px;
	width: 1px;
	margin: -1px;
	padding: 0;
	border: 0;
	clip: rect(0 0 0 0);
	overflow: hidden;
}

.m-faBase(@type: @faType; @weight: @xf-fontAwesomeWeight)
{
	.m-defaultFaWeight() when (@type = 'Brands')
	{
		@weight: @faWeight-regular;
	}
	// else use given @weight

	.m-defaultFaWeight();

	font-family: 'Font Awesome 5 @{type}';
	font-size: inherit;
	font-style: normal;
	font-weight: @weight;
	text-rendering: auto;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

.m-faContent(@content, @width: false, @direction: false)
{
	& when (@direction = false)
	{
		content: @content;
	}
	& when (@direction = ltr)
	{
		-ltr-content: @content;
	}
	& when (@direction = rtl)
	{
		-rtl-content: @content;
	}
	& when (isnumber(@width))
	{
		display: inline-block;
		width: @width;
	}
}

.m-faBefore(@icon, @width: false)
{
	&:before
	{
		.m-faContent(@icon, @width);
	}
}

.m-faAfter(@icon, @width: false)
{
	&:after
	{
		.m-faContent(@icon, @width);
	}
}

.m-menuGadget(@separate: false, @faWidth: false, @faWeight: @faWeight-solid)
{
	.m-faBase();
	.m-faContent("@{fa-var-caret-down}", @faWidth);
	font-weight: @faWeight;

	& when (@separate = true)
	{
		margin-left: .2em;
	}
	& when (isnumber(@separate))
	{
		margin-left: @separate;
	}

	unicode-bidi: isolate; // this is needed to ensure correct positioning in RTL with LTR text
}

.m-content(@content, @direction: false, @separateDirection: false, @separateWidth: false)
{
	& when (@direction = false)
	{
		content: @content;
	}
	& when (@direction = ltr)
	{
		-ltr-content: @content;
	}
	& when (@direction = rtl)
	{
		-rtl-content: @content;
	}
	& when (@separateDirection = left)
	{
		& when (isnumber(@separateWidth))
		{
			margin-right: @separateWidth;
		}
		& when not(isnumber(@separateWidth))
		{
			margin-right: .2em;
		}
	}
	& when (@separateDirection = right)
	{
		& when (isnumber(@separateWidth))
		{
			margin-left: @separateWidth;
		}
		& when not(isnumber(@separateWidth))
		{
			margin-left: .2em;
		}
	}
}

.m-buttonIcon(@icon, @width: false)
{
	& > .button-text
	{
		.m-faBefore(@icon, @width);
	}
}

.m-avatarSize(@avatarSize)
{
	width: @avatarSize;
	height: @avatarSize;
	font-size: round((@avatarSize) * (@xf-avatarDynamicTextPercent / 100));
}

.m-buttonBase()
{
	display: inline-block; // maintain this just in case for old browsers

	display: inline-flex;
	align-items: center;
	justify-content: center;
	text-decoration: none;
	cursor: pointer;
	border: @xf-borderSize solid transparent;
	white-space: nowrap;
	.m-transition(background-color);
	.xf-buttonBase();
}

.m-buttonColorVariation(@bgColor; @textColor)
{
	color: @textColor;
	background-color: @bgColor;
	.m-buttonBorderColorVariation(@bgColor);

	&:hover,
	&:active,
	&:focus
	{
		background-color: saturate(xf-intensify(@bgColor, 4%), 12%);
	}
}

.m-buttonBlockColorVariationSimple(@color)
{
	.m-buttonBorderColorVariation(@color);

	&:not(.button--splitTrigger),
	&.button--splitTrigger > .button-text,
	&.button--splitTrigger > .button-menu
	{
		&:hover,
		&:focus,
		&:active
		{
			background-color: saturate(xf-intensify(@color, 4%), 12%);
		}
	}
}

.m-buttonBorderColorVariation(@borderColor)
{
	border-color: xf-diminish(@borderColor, 5%) xf-intensify(@borderColor, 5%) xf-intensify(@borderColor, 5%) xf-diminish(@borderColor, 5%);

	&.button--splitTrigger
	{
		> .button-text { border-right-color: xf-intensify(@borderColor, 5%); }
		> .button-menu { border-left-color: xf-diminish(@borderColor, 5%); }
	}
}

// this will be replaced by the CSS renderer with the correct background-image rule
.m-selectGadgetColor(@color: black)
{
	-xf-select-gadget: @color;
}

.m-hScrollerActionColorVariation(@background, @text, @textHover)
{
	color: @text;

	&:hover
	{
		color: @textHover;
	}

	&.hScroller-action--start
	{
		.m-gradientHorizontal(@background, fade(@background, 0%), @background, 66%, 100%);
	}

	&.hScroller-action--end
	{
		.m-gradientHorizontal(fade(@background, 0%), @background, @background, 0%, 33%);
	}
}

// Fix for iOS zoom on input focus.
.m-inputZoomFix()
{
	@media (max-width: 568px)
	{
		font-size: 16px;
	}
}

.m-checkboxAligner()
{
	vertical-align: -2px;
}

.m-highResolution(@rules)
{
	@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 144dpi)
	{
		@rules();
	}
}

.m-fixedWidthFlex(@width)
{
	flex: 0 0 @width;
}

.m-labelVariation(@color; @bg; @border: false)
{
	color: @color;
	background: @bg;
	border-color: xf-intensify(@bg, 10%);

	& when (iscolor(@border))
	{
		border-color: @border;
	}

	a&:hover,
	a:hover &
	{
		background: xf-intensify(@bg, 4%);
		border-color: xf-intensify(@bg, 14%);

		& when (iscolor(@border))
		{
			border-color: xf-intensify(@border, 4%);
		}
	}
}

.m-tableBase()
{
	> table
	{
		border: none;
		border-collapse: collapse;
		empty-cells: show;
		max-width: 100%;

		> thead, > tbody
		{
			> tr
			{
				> th
				{
					background: @xf-paletteColor1;
					border: @xf-borderSize solid @xf-borderColor;
					border-bottom-color: @xf-borderColorFeature;
					border-bottom-width: @xf-borderSizeMinorFeature;
					padding: @tablePadding;
				}

				> td
				{
					background: @xf-contentBg;
					border: @xf-borderSize solid @xf-borderColor;
					padding: @tablePadding;
				}
			}
		}
	}
}

// STICKY HEADER STUFF
// Note that to access the height and offset, you need to call the mixin and use the variables locally.

@header-navHeight: 2 * (@xf-publicNavPaddingV)
	+ (xf-default(@xf-publicNav--font-size, @xf-fontSizeNormal) * (@xf-lineHeightDefault));
@header-subNavHeight: 2 * (@xf-publicSubNavPaddingV)
	+ (xf-default(@xf-publicSubNav--font-size, @xf-fontSizeNormal) * (@xf-lineHeightDefault))
	+ xf-default(@xf-publicSubNav--border-top-width, 0)
	+ xf-default(@xf-publicSubNav--border-bottom-width, 0);

.m-stickyHeaderConfig(@type)
{
	@_stickyHeader-offset: 10px;
	@_stickyHeader-height: 0;
}
.m-stickyHeaderConfig(@type) when(@type = primary)
{
	@_stickyHeader-height: @header-navHeight;
}
.m-stickyHeaderConfig(@type) when(@type = all)
{
	@_stickyHeader-height: @header-navHeight + @header-subNavHeight;
}

{{ include('setup_custom.less') }}]]></template>
  <template type="public" title="setup_custom.less" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[// This should be used for additional LESS setup code (that does not output anything).
// setup.less customizations should be avoided when possible.]]></template>
  <template type="public" title="setup_fa.less" version_id="2010131" version_string="2.1.1 Beta 1"><![CDATA[{{ include('setup_fa4_variables.less') }}

// Variables
// --------------------------

@fa-font-path:        "styles/fonts/fa";
@fa-font-size-base:   16px;
@fa-font-display:     auto;
@fa-line-height-base: 1;
@fa-css-prefix:       fa;
@fa-version:          "5.7.0";
@fa-border-color:     #eee;
@fa-inverse:          #fff;
@fa-li-width:         2em;

@fa-var-500px: "\f26e";
@fa-var-abacus: "\f640";
@fa-var-accessible-icon: "\f368";
@fa-var-accusoft: "\f369";
@fa-var-acorn: "\f6ae";
@fa-var-acquisitions-incorporated: "\f6af";
@fa-var-ad: "\f641";
@fa-var-address-book: "\f2b9";
@fa-var-address-card: "\f2bb";
@fa-var-adjust: "\f042";
@fa-var-adn: "\f170";
@fa-var-adobe: "\f778";
@fa-var-adversal: "\f36a";
@fa-var-affiliatetheme: "\f36b";
@fa-var-air-freshener: "\f5d0";
@fa-var-alarm-clock: "\f34e";
@fa-var-algolia: "\f36c";
@fa-var-alicorn: "\f6b0";
@fa-var-align-center: "\f037";
@fa-var-align-justify: "\f039";
@fa-var-align-left: "\f036";
@fa-var-align-right: "\f038";
@fa-var-alipay: "\f642";
@fa-var-allergies: "\f461";
@fa-var-amazon: "\f270";
@fa-var-amazon-pay: "\f42c";
@fa-var-ambulance: "\f0f9";
@fa-var-american-sign-language-interpreting: "\f2a3";
@fa-var-amilia: "\f36d";
@fa-var-analytics: "\f643";
@fa-var-anchor: "\f13d";
@fa-var-android: "\f17b";
@fa-var-angel: "\f779";
@fa-var-angellist: "\f209";
@fa-var-angle-double-down: "\f103";
@fa-var-angle-double-left: "\f100";
@fa-var-angle-double-right: "\f101";
@fa-var-angle-double-up: "\f102";
@fa-var-angle-down: "\f107";
@fa-var-angle-left: "\f104";
@fa-var-angle-right: "\f105";
@fa-var-angle-up: "\f106";
@fa-var-angry: "\f556";
@fa-var-angrycreative: "\f36e";
@fa-var-angular: "\f420";
@fa-var-ankh: "\f644";
@fa-var-app-store: "\f36f";
@fa-var-app-store-ios: "\f370";
@fa-var-apper: "\f371";
@fa-var-apple: "\f179";
@fa-var-apple-alt: "\f5d1";
@fa-var-apple-crate: "\f6b1";
@fa-var-apple-pay: "\f415";
@fa-var-archive: "\f187";
@fa-var-archway: "\f557";
@fa-var-arrow-alt-circle-down: "\f358";
@fa-var-arrow-alt-circle-left: "\f359";
@fa-var-arrow-alt-circle-right: "\f35a";
@fa-var-arrow-alt-circle-up: "\f35b";
@fa-var-arrow-alt-down: "\f354";
@fa-var-arrow-alt-from-bottom: "\f346";
@fa-var-arrow-alt-from-left: "\f347";
@fa-var-arrow-alt-from-right: "\f348";
@fa-var-arrow-alt-from-top: "\f349";
@fa-var-arrow-alt-left: "\f355";
@fa-var-arrow-alt-right: "\f356";
@fa-var-arrow-alt-square-down: "\f350";
@fa-var-arrow-alt-square-left: "\f351";
@fa-var-arrow-alt-square-right: "\f352";
@fa-var-arrow-alt-square-up: "\f353";
@fa-var-arrow-alt-to-bottom: "\f34a";
@fa-var-arrow-alt-to-left: "\f34b";
@fa-var-arrow-alt-to-right: "\f34c";
@fa-var-arrow-alt-to-top: "\f34d";
@fa-var-arrow-alt-up: "\f357";
@fa-var-arrow-circle-down: "\f0ab";
@fa-var-arrow-circle-left: "\f0a8";
@fa-var-arrow-circle-right: "\f0a9";
@fa-var-arrow-circle-up: "\f0aa";
@fa-var-arrow-down: "\f063";
@fa-var-arrow-from-bottom: "\f342";
@fa-var-arrow-from-left: "\f343";
@fa-var-arrow-from-right: "\f344";
@fa-var-arrow-from-top: "\f345";
@fa-var-arrow-left: "\f060";
@fa-var-arrow-right: "\f061";
@fa-var-arrow-square-down: "\f339";
@fa-var-arrow-square-left: "\f33a";
@fa-var-arrow-square-right: "\f33b";
@fa-var-arrow-square-up: "\f33c";
@fa-var-arrow-to-bottom: "\f33d";
@fa-var-arrow-to-left: "\f33e";
@fa-var-arrow-to-right: "\f340";
@fa-var-arrow-to-top: "\f341";
@fa-var-arrow-up: "\f062";
@fa-var-arrows: "\f047";
@fa-var-arrows-alt: "\f0b2";
@fa-var-arrows-alt-h: "\f337";
@fa-var-arrows-alt-v: "\f338";
@fa-var-arrows-h: "\f07e";
@fa-var-arrows-v: "\f07d";
@fa-var-artstation: "\f77a";
@fa-var-assistive-listening-systems: "\f2a2";
@fa-var-asterisk: "\f069";
@fa-var-asymmetrik: "\f372";
@fa-var-at: "\f1fa";
@fa-var-atlas: "\f558";
@fa-var-atlassian: "\f77b";
@fa-var-atom: "\f5d2";
@fa-var-atom-alt: "\f5d3";
@fa-var-audible: "\f373";
@fa-var-audio-description: "\f29e";
@fa-var-autoprefixer: "\f41c";
@fa-var-avianex: "\f374";
@fa-var-aviato: "\f421";
@fa-var-award: "\f559";
@fa-var-aws: "\f375";
@fa-var-axe: "\f6b2";
@fa-var-axe-battle: "\f6b3";
@fa-var-baby: "\f77c";
@fa-var-baby-carriage: "\f77d";
@fa-var-backpack: "\f5d4";
@fa-var-backspace: "\f55a";
@fa-var-backward: "\f04a";
@fa-var-bacon: "\f7e5";
@fa-var-badge: "\f335";
@fa-var-badge-check: "\f336";
@fa-var-badge-dollar: "\f645";
@fa-var-badge-percent: "\f646";
@fa-var-badger-honey: "\f6b4";
@fa-var-balance-scale: "\f24e";
@fa-var-balance-scale-left: "\f515";
@fa-var-balance-scale-right: "\f516";
@fa-var-ball-pile: "\f77e";
@fa-var-ballot: "\f732";
@fa-var-ballot-check: "\f733";
@fa-var-ban: "\f05e";
@fa-var-band-aid: "\f462";
@fa-var-bandcamp: "\f2d5";
@fa-var-barcode: "\f02a";
@fa-var-barcode-alt: "\f463";
@fa-var-barcode-read: "\f464";
@fa-var-barcode-scan: "\f465";
@fa-var-bars: "\f0c9";
@fa-var-baseball: "\f432";
@fa-var-baseball-ball: "\f433";
@fa-var-basketball-ball: "\f434";
@fa-var-basketball-hoop: "\f435";
@fa-var-bat: "\f6b5";
@fa-var-bath: "\f2cd";
@fa-var-battery-bolt: "\f376";
@fa-var-battery-empty: "\f244";
@fa-var-battery-full: "\f240";
@fa-var-battery-half: "\f242";
@fa-var-battery-quarter: "\f243";
@fa-var-battery-slash: "\f377";
@fa-var-battery-three-quarters: "\f241";
@fa-var-bed: "\f236";
@fa-var-beer: "\f0fc";
@fa-var-behance: "\f1b4";
@fa-var-behance-square: "\f1b5";
@fa-var-bell: "\f0f3";
@fa-var-bell-school: "\f5d5";
@fa-var-bell-school-slash: "\f5d6";
@fa-var-bell-slash: "\f1f6";
@fa-var-bells: "\f77f";
@fa-var-bezier-curve: "\f55b";
@fa-var-bible: "\f647";
@fa-var-bicycle: "\f206";
@fa-var-bimobject: "\f378";
@fa-var-binoculars: "\f1e5";
@fa-var-biohazard: "\f780";
@fa-var-birthday-cake: "\f1fd";
@fa-var-bitbucket: "\f171";
@fa-var-bitcoin: "\f379";
@fa-var-bity: "\f37a";
@fa-var-black-tie: "\f27e";
@fa-var-blackberry: "\f37b";
@fa-var-blanket: "\f498";
@fa-var-blender: "\f517";
@fa-var-blender-phone: "\f6b6";
@fa-var-blind: "\f29d";
@fa-var-blog: "\f781";
@fa-var-blogger: "\f37c";
@fa-var-blogger-b: "\f37d";
@fa-var-bluetooth: "\f293";
@fa-var-bluetooth-b: "\f294";
@fa-var-bold: "\f032";
@fa-var-bolt: "\f0e7";
@fa-var-bomb: "\f1e2";
@fa-var-bone: "\f5d7";
@fa-var-bone-break: "\f5d8";
@fa-var-bong: "\f55c";
@fa-var-book: "\f02d";
@fa-var-book-alt: "\f5d9";
@fa-var-book-dead: "\f6b7";
@fa-var-book-heart: "\f499";
@fa-var-book-medical: "\f7e6";
@fa-var-book-open: "\f518";
@fa-var-book-reader: "\f5da";
@fa-var-book-spells: "\f6b8";
@fa-var-book-user: "\f7e7";
@fa-var-bookmark: "\f02e";
@fa-var-books: "\f5db";
@fa-var-books-medical: "\f7e8";
@fa-var-boot: "\f782";
@fa-var-booth-curtain: "\f734";
@fa-var-bow-arrow: "\f6b9";
@fa-var-bowling-ball: "\f436";
@fa-var-bowling-pins: "\f437";
@fa-var-box: "\f466";
@fa-var-box-alt: "\f49a";
@fa-var-box-ballot: "\f735";
@fa-var-box-check: "\f467";
@fa-var-box-fragile: "\f49b";
@fa-var-box-full: "\f49c";
@fa-var-box-heart: "\f49d";
@fa-var-box-open: "\f49e";
@fa-var-box-up: "\f49f";
@fa-var-box-usd: "\f4a0";
@fa-var-boxes: "\f468";
@fa-var-boxes-alt: "\f4a1";
@fa-var-boxing-glove: "\f438";
@fa-var-brackets: "\f7e9";
@fa-var-brackets-curly: "\f7ea";
@fa-var-braille: "\f2a1";
@fa-var-brain: "\f5dc";
@fa-var-bread-loaf: "\f7eb";
@fa-var-bread-slice: "\f7ec";
@fa-var-briefcase: "\f0b1";
@fa-var-briefcase-medical: "\f469";
@fa-var-broadcast-tower: "\f519";
@fa-var-broom: "\f51a";
@fa-var-browser: "\f37e";
@fa-var-brush: "\f55d";
@fa-var-btc: "\f15a";
@fa-var-bug: "\f188";
@fa-var-building: "\f1ad";
@fa-var-bullhorn: "\f0a1";
@fa-var-bullseye: "\f140";
@fa-var-bullseye-arrow: "\f648";
@fa-var-bullseye-pointer: "\f649";
@fa-var-burn: "\f46a";
@fa-var-buromobelexperte: "\f37f";
@fa-var-burrito: "\f7ed";
@fa-var-bus: "\f207";
@fa-var-bus-alt: "\f55e";
@fa-var-bus-school: "\f5dd";
@fa-var-business-time: "\f64a";
@fa-var-buysellads: "\f20d";
@fa-var-cabinet-filing: "\f64b";
@fa-var-calculator: "\f1ec";
@fa-var-calculator-alt: "\f64c";
@fa-var-calendar: "\f133";
@fa-var-calendar-alt: "\f073";
@fa-var-calendar-check: "\f274";
@fa-var-calendar-day: "\f783";
@fa-var-calendar-edit: "\f333";
@fa-var-calendar-exclamation: "\f334";
@fa-var-calendar-minus: "\f272";
@fa-var-calendar-plus: "\f271";
@fa-var-calendar-star: "\f736";
@fa-var-calendar-times: "\f273";
@fa-var-calendar-week: "\f784";
@fa-var-camera: "\f030";
@fa-var-camera-alt: "\f332";
@fa-var-camera-retro: "\f083";
@fa-var-campfire: "\f6ba";
@fa-var-campground: "\f6bb";
@fa-var-canadian-maple-leaf: "\f785";
@fa-var-candle-holder: "\f6bc";
@fa-var-candy-cane: "\f786";
@fa-var-candy-corn: "\f6bd";
@fa-var-cannabis: "\f55f";
@fa-var-capsules: "\f46b";
@fa-var-car: "\f1b9";
@fa-var-car-alt: "\f5de";
@fa-var-car-battery: "\f5df";
@fa-var-car-bump: "\f5e0";
@fa-var-car-crash: "\f5e1";
@fa-var-car-garage: "\f5e2";
@fa-var-car-mechanic: "\f5e3";
@fa-var-car-side: "\f5e4";
@fa-var-car-tilt: "\f5e5";
@fa-var-car-wash: "\f5e6";
@fa-var-caret-circle-down: "\f32d";
@fa-var-caret-circle-left: "\f32e";
@fa-var-caret-circle-right: "\f330";
@fa-var-caret-circle-up: "\f331";
@fa-var-caret-down: "\f0d7";
@fa-var-caret-left: "\f0d9";
@fa-var-caret-right: "\f0da";
@fa-var-caret-square-down: "\f150";
@fa-var-caret-square-left: "\f191";
@fa-var-caret-square-right: "\f152";
@fa-var-caret-square-up: "\f151";
@fa-var-caret-up: "\f0d8";
@fa-var-carrot: "\f787";
@fa-var-cart-arrow-down: "\f218";
@fa-var-cart-plus: "\f217";
@fa-var-cash-register: "\f788";
@fa-var-cat: "\f6be";
@fa-var-cauldron: "\f6bf";
@fa-var-cc-amazon-pay: "\f42d";
@fa-var-cc-amex: "\f1f3";
@fa-var-cc-apple-pay: "\f416";
@fa-var-cc-diners-club: "\f24c";
@fa-var-cc-discover: "\f1f2";
@fa-var-cc-jcb: "\f24b";
@fa-var-cc-mastercard: "\f1f1";
@fa-var-cc-paypal: "\f1f4";
@fa-var-cc-stripe: "\f1f5";
@fa-var-cc-visa: "\f1f0";
@fa-var-centercode: "\f380";
@fa-var-centos: "\f789";
@fa-var-certificate: "\f0a3";
@fa-var-chair: "\f6c0";
@fa-var-chair-office: "\f6c1";
@fa-var-chalkboard: "\f51b";
@fa-var-chalkboard-teacher: "\f51c";
@fa-var-charging-station: "\f5e7";
@fa-var-chart-area: "\f1fe";
@fa-var-chart-bar: "\f080";
@fa-var-chart-line: "\f201";
@fa-var-chart-line-down: "\f64d";
@fa-var-chart-network: "\f78a";
@fa-var-chart-pie: "\f200";
@fa-var-chart-pie-alt: "\f64e";
@fa-var-chart-scatter: "\f7ee";
@fa-var-check: "\f00c";
@fa-var-check-circle: "\f058";
@fa-var-check-double: "\f560";
@fa-var-check-square: "\f14a";
@fa-var-cheese: "\f7ef";
@fa-var-cheese-swiss: "\f7f0";
@fa-var-cheeseburger: "\f7f1";
@fa-var-chess: "\f439";
@fa-var-chess-bishop: "\f43a";
@fa-var-chess-bishop-alt: "\f43b";
@fa-var-chess-board: "\f43c";
@fa-var-chess-clock: "\f43d";
@fa-var-chess-clock-alt: "\f43e";
@fa-var-chess-king: "\f43f";
@fa-var-chess-king-alt: "\f440";
@fa-var-chess-knight: "\f441";
@fa-var-chess-knight-alt: "\f442";
@fa-var-chess-pawn: "\f443";
@fa-var-chess-pawn-alt: "\f444";
@fa-var-chess-queen: "\f445";
@fa-var-chess-queen-alt: "\f446";
@fa-var-chess-rook: "\f447";
@fa-var-chess-rook-alt: "\f448";
@fa-var-chevron-circle-down: "\f13a";
@fa-var-chevron-circle-left: "\f137";
@fa-var-chevron-circle-right: "\f138";
@fa-var-chevron-circle-up: "\f139";
@fa-var-chevron-double-down: "\f322";
@fa-var-chevron-double-left: "\f323";
@fa-var-chevron-double-right: "\f324";
@fa-var-chevron-double-up: "\f325";
@fa-var-chevron-down: "\f078";
@fa-var-chevron-left: "\f053";
@fa-var-chevron-right: "\f054";
@fa-var-chevron-square-down: "\f329";
@fa-var-chevron-square-left: "\f32a";
@fa-var-chevron-square-right: "\f32b";
@fa-var-chevron-square-up: "\f32c";
@fa-var-chevron-up: "\f077";
@fa-var-child: "\f1ae";
@fa-var-chimney: "\f78b";
@fa-var-chrome: "\f268";
@fa-var-church: "\f51d";
@fa-var-circle: "\f111";
@fa-var-circle-notch: "\f1ce";
@fa-var-city: "\f64f";
@fa-var-claw-marks: "\f6c2";
@fa-var-clinic-medical: "\f7f2";
@fa-var-clipboard: "\f328";
@fa-var-clipboard-check: "\f46c";
@fa-var-clipboard-list: "\f46d";
@fa-var-clipboard-list-check: "\f737";
@fa-var-clipboard-prescription: "\f5e8";
@fa-var-clipboard-user: "\f7f3";
@fa-var-clock: "\f017";
@fa-var-clone: "\f24d";
@fa-var-closed-captioning: "\f20a";
@fa-var-cloud: "\f0c2";
@fa-var-cloud-download: "\f0ed";
@fa-var-cloud-download-alt: "\f381";
@fa-var-cloud-drizzle: "\f738";
@fa-var-cloud-hail: "\f739";
@fa-var-cloud-hail-mixed: "\f73a";
@fa-var-cloud-meatball: "\f73b";
@fa-var-cloud-moon: "\f6c3";
@fa-var-cloud-moon-rain: "\f73c";
@fa-var-cloud-rain: "\f73d";
@fa-var-cloud-rainbow: "\f73e";
@fa-var-cloud-showers: "\f73f";
@fa-var-cloud-showers-heavy: "\f740";
@fa-var-cloud-sleet: "\f741";
@fa-var-cloud-snow: "\f742";
@fa-var-cloud-sun: "\f6c4";
@fa-var-cloud-sun-rain: "\f743";
@fa-var-cloud-upload: "\f0ee";
@fa-var-cloud-upload-alt: "\f382";
@fa-var-clouds: "\f744";
@fa-var-clouds-moon: "\f745";
@fa-var-clouds-sun: "\f746";
@fa-var-cloudscale: "\f383";
@fa-var-cloudsmith: "\f384";
@fa-var-cloudversify: "\f385";
@fa-var-club: "\f327";
@fa-var-cocktail: "\f561";
@fa-var-code: "\f121";
@fa-var-code-branch: "\f126";
@fa-var-code-commit: "\f386";
@fa-var-code-merge: "\f387";
@fa-var-codepen: "\f1cb";
@fa-var-codiepie: "\f284";
@fa-var-coffee: "\f0f4";
@fa-var-coffee-togo: "\f6c5";
@fa-var-coffin: "\f6c6";
@fa-var-cog: "\f013";
@fa-var-cogs: "\f085";
@fa-var-coins: "\f51e";
@fa-var-columns: "\f0db";
@fa-var-comment: "\f075";
@fa-var-comment-alt: "\f27a";
@fa-var-comment-alt-check: "\f4a2";
@fa-var-comment-alt-dollar: "\f650";
@fa-var-comment-alt-dots: "\f4a3";
@fa-var-comment-alt-edit: "\f4a4";
@fa-var-comment-alt-exclamation: "\f4a5";
@fa-var-comment-alt-lines: "\f4a6";
@fa-var-comment-alt-medical: "\f7f4";
@fa-var-comment-alt-minus: "\f4a7";
@fa-var-comment-alt-plus: "\f4a8";
@fa-var-comment-alt-slash: "\f4a9";
@fa-var-comment-alt-smile: "\f4aa";
@fa-var-comment-alt-times: "\f4ab";
@fa-var-comment-check: "\f4ac";
@fa-var-comment-dollar: "\f651";
@fa-var-comment-dots: "\f4ad";
@fa-var-comment-edit: "\f4ae";
@fa-var-comment-exclamation: "\f4af";
@fa-var-comment-lines: "\f4b0";
@fa-var-comment-medical: "\f7f5";
@fa-var-comment-minus: "\f4b1";
@fa-var-comment-plus: "\f4b2";
@fa-var-comment-slash: "\f4b3";
@fa-var-comment-smile: "\f4b4";
@fa-var-comment-times: "\f4b5";
@fa-var-comments: "\f086";
@fa-var-comments-alt: "\f4b6";
@fa-var-comments-alt-dollar: "\f652";
@fa-var-comments-dollar: "\f653";
@fa-var-compact-disc: "\f51f";
@fa-var-compass: "\f14e";
@fa-var-compass-slash: "\f5e9";
@fa-var-compress: "\f066";
@fa-var-compress-alt: "\f422";
@fa-var-compress-arrows-alt: "\f78c";
@fa-var-compress-wide: "\f326";
@fa-var-concierge-bell: "\f562";
@fa-var-confluence: "\f78d";
@fa-var-connectdevelop: "\f20e";
@fa-var-container-storage: "\f4b7";
@fa-var-contao: "\f26d";
@fa-var-conveyor-belt: "\f46e";
@fa-var-conveyor-belt-alt: "\f46f";
@fa-var-cookie: "\f563";
@fa-var-cookie-bite: "\f564";
@fa-var-copy: "\f0c5";
@fa-var-copyright: "\f1f9";
@fa-var-corn: "\f6c7";
@fa-var-couch: "\f4b8";
@fa-var-cow: "\f6c8";
@fa-var-cpanel: "\f388";
@fa-var-creative-commons: "\f25e";
@fa-var-creative-commons-by: "\f4e7";
@fa-var-creative-commons-nc: "\f4e8";
@fa-var-creative-commons-nc-eu: "\f4e9";
@fa-var-creative-commons-nc-jp: "\f4ea";
@fa-var-creative-commons-nd: "\f4eb";
@fa-var-creative-commons-pd: "\f4ec";
@fa-var-creative-commons-pd-alt: "\f4ed";
@fa-var-creative-commons-remix: "\f4ee";
@fa-var-creative-commons-sa: "\f4ef";
@fa-var-creative-commons-sampling: "\f4f0";
@fa-var-creative-commons-sampling-plus: "\f4f1";
@fa-var-creative-commons-share: "\f4f2";
@fa-var-creative-commons-zero: "\f4f3";
@fa-var-credit-card: "\f09d";
@fa-var-credit-card-blank: "\f389";
@fa-var-credit-card-front: "\f38a";
@fa-var-cricket: "\f449";
@fa-var-critical-role: "\f6c9";
@fa-var-croissant: "\f7f6";
@fa-var-crop: "\f125";
@fa-var-crop-alt: "\f565";
@fa-var-cross: "\f654";
@fa-var-crosshairs: "\f05b";
@fa-var-crow: "\f520";
@fa-var-crown: "\f521";
@fa-var-crutch: "\f7f7";
@fa-var-crutches: "\f7f8";
@fa-var-css3: "\f13c";
@fa-var-css3-alt: "\f38b";
@fa-var-cube: "\f1b2";
@fa-var-cubes: "\f1b3";
@fa-var-curling: "\f44a";
@fa-var-cut: "\f0c4";
@fa-var-cuttlefish: "\f38c";
@fa-var-d-and-d: "\f38d";
@fa-var-d-and-d-beyond: "\f6ca";
@fa-var-dagger: "\f6cb";
@fa-var-dashcube: "\f210";
@fa-var-database: "\f1c0";
@fa-var-deaf: "\f2a4";
@fa-var-debug: "\f7f9";
@fa-var-deer: "\f78e";
@fa-var-deer-rudolph: "\f78f";
@fa-var-delicious: "\f1a5";
@fa-var-democrat: "\f747";
@fa-var-deploydog: "\f38e";
@fa-var-deskpro: "\f38f";
@fa-var-desktop: "\f108";
@fa-var-desktop-alt: "\f390";
@fa-var-dev: "\f6cc";
@fa-var-deviantart: "\f1bd";
@fa-var-dewpoint: "\f748";
@fa-var-dharmachakra: "\f655";
@fa-var-dhl: "\f790";
@fa-var-diagnoses: "\f470";
@fa-var-diamond: "\f219";
@fa-var-diaspora: "\f791";
@fa-var-dice: "\f522";
@fa-var-dice-d10: "\f6cd";
@fa-var-dice-d12: "\f6ce";
@fa-var-dice-d20: "\f6cf";
@fa-var-dice-d4: "\f6d0";
@fa-var-dice-d6: "\f6d1";
@fa-var-dice-d8: "\f6d2";
@fa-var-dice-five: "\f523";
@fa-var-dice-four: "\f524";
@fa-var-dice-one: "\f525";
@fa-var-dice-six: "\f526";
@fa-var-dice-three: "\f527";
@fa-var-dice-two: "\f528";
@fa-var-digg: "\f1a6";
@fa-var-digital-ocean: "\f391";
@fa-var-digital-tachograph: "\f566";
@fa-var-diploma: "\f5ea";
@fa-var-directions: "\f5eb";
@fa-var-discord: "\f392";
@fa-var-discourse: "\f393";
@fa-var-disease: "\f7fa";
@fa-var-divide: "\f529";
@fa-var-dizzy: "\f567";
@fa-var-dna: "\f471";
@fa-var-do-not-enter: "\f5ec";
@fa-var-dochub: "\f394";
@fa-var-docker: "\f395";
@fa-var-dog: "\f6d3";
@fa-var-dog-leashed: "\f6d4";
@fa-var-dollar-sign: "\f155";
@fa-var-dolly: "\f472";
@fa-var-dolly-empty: "\f473";
@fa-var-dolly-flatbed: "\f474";
@fa-var-dolly-flatbed-alt: "\f475";
@fa-var-dolly-flatbed-empty: "\f476";
@fa-var-donate: "\f4b9";
@fa-var-door-closed: "\f52a";
@fa-var-door-open: "\f52b";
@fa-var-dot-circle: "\f192";
@fa-var-dove: "\f4ba";
@fa-var-download: "\f019";
@fa-var-draft2digital: "\f396";
@fa-var-drafting-compass: "\f568";
@fa-var-dragon: "\f6d5";
@fa-var-draw-circle: "\f5ed";
@fa-var-draw-polygon: "\f5ee";
@fa-var-draw-square: "\f5ef";
@fa-var-dreidel: "\f792";
@fa-var-dribbble: "\f17d";
@fa-var-dribbble-square: "\f397";
@fa-var-dropbox: "\f16b";
@fa-var-drum: "\f569";
@fa-var-drum-steelpan: "\f56a";
@fa-var-drumstick: "\f6d6";
@fa-var-drumstick-bite: "\f6d7";
@fa-var-drupal: "\f1a9";
@fa-var-duck: "\f6d8";
@fa-var-dumbbell: "\f44b";
@fa-var-dumpster: "\f793";
@fa-var-dumpster-fire: "\f794";
@fa-var-dungeon: "\f6d9";
@fa-var-dyalog: "\f399";
@fa-var-ear: "\f5f0";
@fa-var-ear-muffs: "\f795";
@fa-var-earlybirds: "\f39a";
@fa-var-ebay: "\f4f4";
@fa-var-eclipse: "\f749";
@fa-var-eclipse-alt: "\f74a";
@fa-var-edge: "\f282";
@fa-var-edit: "\f044";
@fa-var-egg: "\f7fb";
@fa-var-egg-fried: "\f7fc";
@fa-var-eject: "\f052";
@fa-var-elementor: "\f430";
@fa-var-elephant: "\f6da";
@fa-var-ellipsis-h: "\f141";
@fa-var-ellipsis-h-alt: "\f39b";
@fa-var-ellipsis-v: "\f142";
@fa-var-ellipsis-v-alt: "\f39c";
@fa-var-ello: "\f5f1";
@fa-var-ember: "\f423";
@fa-var-empire: "\f1d1";
@fa-var-empty-set: "\f656";
@fa-var-engine-warning: "\f5f2";
@fa-var-envelope: "\f0e0";
@fa-var-envelope-open: "\f2b6";
@fa-var-envelope-open-dollar: "\f657";
@fa-var-envelope-open-text: "\f658";
@fa-var-envelope-square: "\f199";
@fa-var-envira: "\f299";
@fa-var-equals: "\f52c";
@fa-var-eraser: "\f12d";
@fa-var-erlang: "\f39d";
@fa-var-ethereum: "\f42e";
@fa-var-ethernet: "\f796";
@fa-var-etsy: "\f2d7";
@fa-var-euro-sign: "\f153";
@fa-var-exchange: "\f0ec";
@fa-var-exchange-alt: "\f362";
@fa-var-exclamation: "\f12a";
@fa-var-exclamation-circle: "\f06a";
@fa-var-exclamation-square: "\f321";
@fa-var-exclamation-triangle: "\f071";
@fa-var-expand: "\f065";
@fa-var-expand-alt: "\f424";
@fa-var-expand-arrows: "\f31d";
@fa-var-expand-arrows-alt: "\f31e";
@fa-var-expand-wide: "\f320";
@fa-var-expeditedssl: "\f23e";
@fa-var-external-link: "\f08e";
@fa-var-external-link-alt: "\f35d";
@fa-var-external-link-square: "\f14c";
@fa-var-external-link-square-alt: "\f360";
@fa-var-eye: "\f06e";
@fa-var-eye-dropper: "\f1fb";
@fa-var-eye-evil: "\f6db";
@fa-var-eye-slash: "\f070";
@fa-var-facebook: "\f09a";
@fa-var-facebook-f: "\f39e";
@fa-var-facebook-messenger: "\f39f";
@fa-var-facebook-square: "\f082";
@fa-var-fantasy-flight-games: "\f6dc";
@fa-var-fast-backward: "\f049";
@fa-var-fast-forward: "\f050";
@fa-var-fax: "\f1ac";
@fa-var-feather: "\f52d";
@fa-var-feather-alt: "\f56b";
@fa-var-fedex: "\f797";
@fa-var-fedora: "\f798";
@fa-var-female: "\f182";
@fa-var-field-hockey: "\f44c";
@fa-var-fighter-jet: "\f0fb";
@fa-var-figma: "\f799";
@fa-var-file: "\f15b";
@fa-var-file-alt: "\f15c";
@fa-var-file-archive: "\f1c6";
@fa-var-file-audio: "\f1c7";
@fa-var-file-certificate: "\f5f3";
@fa-var-file-chart-line: "\f659";
@fa-var-file-chart-pie: "\f65a";
@fa-var-file-check: "\f316";
@fa-var-file-code: "\f1c9";
@fa-var-file-contract: "\f56c";
@fa-var-file-csv: "\f6dd";
@fa-var-file-download: "\f56d";
@fa-var-file-edit: "\f31c";
@fa-var-file-excel: "\f1c3";
@fa-var-file-exclamation: "\f31a";
@fa-var-file-export: "\f56e";
@fa-var-file-image: "\f1c5";
@fa-var-file-import: "\f56f";
@fa-var-file-invoice: "\f570";
@fa-var-file-invoice-dollar: "\f571";
@fa-var-file-medical: "\f477";
@fa-var-file-medical-alt: "\f478";
@fa-var-file-minus: "\f318";
@fa-var-file-pdf: "\f1c1";
@fa-var-file-plus: "\f319";
@fa-var-file-powerpoint: "\f1c4";
@fa-var-file-prescription: "\f572";
@fa-var-file-signature: "\f573";
@fa-var-file-spreadsheet: "\f65b";
@fa-var-file-times: "\f317";
@fa-var-file-upload: "\f574";
@fa-var-file-user: "\f65c";
@fa-var-file-video: "\f1c8";
@fa-var-file-word: "\f1c2";
@fa-var-files-medical: "\f7fd";
@fa-var-fill: "\f575";
@fa-var-fill-drip: "\f576";
@fa-var-film: "\f008";
@fa-var-film-alt: "\f3a0";
@fa-var-filter: "\f0b0";
@fa-var-fingerprint: "\f577";
@fa-var-fire: "\f06d";
@fa-var-fire-alt: "\f7e4";
@fa-var-fire-extinguisher: "\f134";
@fa-var-fire-smoke: "\f74b";
@fa-var-firefox: "\f269";
@fa-var-fireplace: "\f79a";
@fa-var-first-aid: "\f479";
@fa-var-first-order: "\f2b0";
@fa-var-first-order-alt: "\f50a";
@fa-var-firstdraft: "\f3a1";
@fa-var-fish: "\f578";
@fa-var-fish-cooked: "\f7fe";
@fa-var-fist-raised: "\f6de";
@fa-var-flag: "\f024";
@fa-var-flag-alt: "\f74c";
@fa-var-flag-checkered: "\f11e";
@fa-var-flag-usa: "\f74d";
@fa-var-flame: "\f6df";
@fa-var-flask: "\f0c3";
@fa-var-flask-poison: "\f6e0";
@fa-var-flask-potion: "\f6e1";
@fa-var-flickr: "\f16e";
@fa-var-flipboard: "\f44d";
@fa-var-flower: "\f7ff";
@fa-var-flower-daffodil: "\f800";
@fa-var-flower-tulip: "\f801";
@fa-var-flushed: "\f579";
@fa-var-fly: "\f417";
@fa-var-fog: "\f74e";
@fa-var-folder: "\f07b";
@fa-var-folder-minus: "\f65d";
@fa-var-folder-open: "\f07c";
@fa-var-folder-plus: "\f65e";
@fa-var-folder-times: "\f65f";
@fa-var-folder-tree: "\f802";
@fa-var-folders: "\f660";
@fa-var-font: "\f031";
@fa-var-font-awesome: "\f2b4";
@fa-var-font-awesome-alt: "\f35c";
@fa-var-font-awesome-flag: "\f425";
@fa-var-font-awesome-logo-full: "\f4e6";
@fa-var-fonticons: "\f280";
@fa-var-fonticons-fi: "\f3a2";
@fa-var-football-ball: "\f44e";
@fa-var-football-helmet: "\f44f";
@fa-var-forklift: "\f47a";
@fa-var-fort-awesome: "\f286";
@fa-var-fort-awesome-alt: "\f3a3";
@fa-var-forumbee: "\f211";
@fa-var-forward: "\f04e";
@fa-var-foursquare: "\f180";
@fa-var-fragile: "\f4bb";
@fa-var-free-code-camp: "\f2c5";
@fa-var-freebsd: "\f3a4";
@fa-var-french-fries: "\f803";
@fa-var-frog: "\f52e";
@fa-var-frosty-head: "\f79b";
@fa-var-frown: "\f119";
@fa-var-frown-open: "\f57a";
@fa-var-fulcrum: "\f50b";
@fa-var-function: "\f661";
@fa-var-funnel-dollar: "\f662";
@fa-var-futbol: "\f1e3";
@fa-var-galactic-republic: "\f50c";
@fa-var-galactic-senate: "\f50d";
@fa-var-gamepad: "\f11b";
@fa-var-gas-pump: "\f52f";
@fa-var-gas-pump-slash: "\f5f4";
@fa-var-gavel: "\f0e3";
@fa-var-gem: "\f3a5";
@fa-var-genderless: "\f22d";
@fa-var-get-pocket: "\f265";
@fa-var-gg: "\f260";
@fa-var-gg-circle: "\f261";
@fa-var-ghost: "\f6e2";
@fa-var-gift: "\f06b";
@fa-var-gift-card: "\f663";
@fa-var-gifts: "\f79c";
@fa-var-gingerbread-man: "\f79d";
@fa-var-git: "\f1d3";
@fa-var-git-square: "\f1d2";
@fa-var-github: "\f09b";
@fa-var-github-alt: "\f113";
@fa-var-github-square: "\f092";
@fa-var-gitkraken: "\f3a6";
@fa-var-gitlab: "\f296";
@fa-var-gitter: "\f426";
@fa-var-glass: "\f804";
@fa-var-glass-champagne: "\f79e";
@fa-var-glass-cheers: "\f79f";
@fa-var-glass-martini: "\f000";
@fa-var-glass-martini-alt: "\f57b";
@fa-var-glass-whiskey: "\f7a0";
@fa-var-glass-whiskey-rocks: "\f7a1";
@fa-var-glasses: "\f530";
@fa-var-glasses-alt: "\f5f5";
@fa-var-glide: "\f2a5";
@fa-var-glide-g: "\f2a6";
@fa-var-globe: "\f0ac";
@fa-var-globe-africa: "\f57c";
@fa-var-globe-americas: "\f57d";
@fa-var-globe-asia: "\f57e";
@fa-var-globe-europe: "\f7a2";
@fa-var-globe-snow: "\f7a3";
@fa-var-globe-stand: "\f5f6";
@fa-var-gofore: "\f3a7";
@fa-var-golf-ball: "\f450";
@fa-var-golf-club: "\f451";
@fa-var-goodreads: "\f3a8";
@fa-var-goodreads-g: "\f3a9";
@fa-var-google: "\f1a0";
@fa-var-google-drive: "\f3aa";
@fa-var-google-play: "\f3ab";
@fa-var-google-plus: "\f2b3";
@fa-var-google-plus-g: "\f0d5";
@fa-var-google-plus-square: "\f0d4";
@fa-var-google-wallet: "\f1ee";
@fa-var-gopuram: "\f664";
@fa-var-graduation-cap: "\f19d";
@fa-var-gratipay: "\f184";
@fa-var-grav: "\f2d6";
@fa-var-greater-than: "\f531";
@fa-var-greater-than-equal: "\f532";
@fa-var-grimace: "\f57f";
@fa-var-grin: "\f580";
@fa-var-grin-alt: "\f581";
@fa-var-grin-beam: "\f582";
@fa-var-grin-beam-sweat: "\f583";
@fa-var-grin-hearts: "\f584";
@fa-var-grin-squint: "\f585";
@fa-var-grin-squint-tears: "\f586";
@fa-var-grin-stars: "\f587";
@fa-var-grin-tears: "\f588";
@fa-var-grin-tongue: "\f589";
@fa-var-grin-tongue-squint: "\f58a";
@fa-var-grin-tongue-wink: "\f58b";
@fa-var-grin-wink: "\f58c";
@fa-var-grip-horizontal: "\f58d";
@fa-var-grip-lines: "\f7a4";
@fa-var-grip-lines-vertical: "\f7a5";
@fa-var-grip-vertical: "\f58e";
@fa-var-gripfire: "\f3ac";
@fa-var-grunt: "\f3ad";
@fa-var-guitar: "\f7a6";
@fa-var-gulp: "\f3ae";
@fa-var-h-square: "\f0fd";
@fa-var-h1: "\f313";
@fa-var-h2: "\f314";
@fa-var-h3: "\f315";
@fa-var-hacker-news: "\f1d4";
@fa-var-hacker-news-square: "\f3af";
@fa-var-hackerrank: "\f5f7";
@fa-var-hamburger: "\f805";
@fa-var-hammer: "\f6e3";
@fa-var-hammer-war: "\f6e4";
@fa-var-hamsa: "\f665";
@fa-var-hand-heart: "\f4bc";
@fa-var-hand-holding: "\f4bd";
@fa-var-hand-holding-box: "\f47b";
@fa-var-hand-holding-heart: "\f4be";
@fa-var-hand-holding-magic: "\f6e5";
@fa-var-hand-holding-seedling: "\f4bf";
@fa-var-hand-holding-usd: "\f4c0";
@fa-var-hand-holding-water: "\f4c1";
@fa-var-hand-lizard: "\f258";
@fa-var-hand-middle-finger: "\f806";
@fa-var-hand-paper: "\f256";
@fa-var-hand-peace: "\f25b";
@fa-var-hand-point-down: "\f0a7";
@fa-var-hand-point-left: "\f0a5";
@fa-var-hand-point-right: "\f0a4";
@fa-var-hand-point-up: "\f0a6";
@fa-var-hand-pointer: "\f25a";
@fa-var-hand-receiving: "\f47c";
@fa-var-hand-rock: "\f255";
@fa-var-hand-scissors: "\f257";
@fa-var-hand-spock: "\f259";
@fa-var-hands: "\f4c2";
@fa-var-hands-heart: "\f4c3";
@fa-var-hands-helping: "\f4c4";
@fa-var-hands-usd: "\f4c5";
@fa-var-handshake: "\f2b5";
@fa-var-handshake-alt: "\f4c6";
@fa-var-hanukiah: "\f6e6";
@fa-var-hard-hat: "\f807";
@fa-var-hashtag: "\f292";
@fa-var-hat-santa: "\f7a7";
@fa-var-hat-winter: "\f7a8";
@fa-var-hat-witch: "\f6e7";
@fa-var-hat-wizard: "\f6e8";
@fa-var-haykal: "\f666";
@fa-var-hdd: "\f0a0";
@fa-var-head-side: "\f6e9";
@fa-var-head-side-brain: "\f808";
@fa-var-head-side-medical: "\f809";
@fa-var-head-vr: "\f6ea";
@fa-var-heading: "\f1dc";
@fa-var-headphones: "\f025";
@fa-var-headphones-alt: "\f58f";
@fa-var-headset: "\f590";
@fa-var-heart: "\f004";
@fa-var-heart-broken: "\f7a9";
@fa-var-heart-circle: "\f4c7";
@fa-var-heart-rate: "\f5f8";
@fa-var-heart-square: "\f4c8";
@fa-var-heartbeat: "\f21e";
@fa-var-helicopter: "\f533";
@fa-var-helmet-battle: "\f6eb";
@fa-var-hexagon: "\f312";
@fa-var-highlighter: "\f591";
@fa-var-hiking: "\f6ec";
@fa-var-hippo: "\f6ed";
@fa-var-hips: "\f452";
@fa-var-hire-a-helper: "\f3b0";
@fa-var-history: "\f1da";
@fa-var-hockey-mask: "\f6ee";
@fa-var-hockey-puck: "\f453";
@fa-var-hockey-sticks: "\f454";
@fa-var-holly-berry: "\f7aa";
@fa-var-home: "\f015";
@fa-var-home-alt: "\f80a";
@fa-var-home-heart: "\f4c9";
@fa-var-home-lg: "\f80b";
@fa-var-home-lg-alt: "\f80c";
@fa-var-hood-cloak: "\f6ef";
@fa-var-hooli: "\f427";
@fa-var-hornbill: "\f592";
@fa-var-horse: "\f6f0";
@fa-var-horse-head: "\f7ab";
@fa-var-hospital: "\f0f8";
@fa-var-hospital-alt: "\f47d";
@fa-var-hospital-symbol: "\f47e";
@fa-var-hospital-user: "\f80d";
@fa-var-hospitals: "\f80e";
@fa-var-hot-tub: "\f593";
@fa-var-hotdog: "\f80f";
@fa-var-hotel: "\f594";
@fa-var-hotjar: "\f3b1";
@fa-var-hourglass: "\f254";
@fa-var-hourglass-end: "\f253";
@fa-var-hourglass-half: "\f252";
@fa-var-hourglass-start: "\f251";
@fa-var-house-damage: "\f6f1";
@fa-var-house-flood: "\f74f";
@fa-var-houzz: "\f27c";
@fa-var-hryvnia: "\f6f2";
@fa-var-html5: "\f13b";
@fa-var-hubspot: "\f3b2";
@fa-var-humidity: "\f750";
@fa-var-hurricane: "\f751";
@fa-var-i-cursor: "\f246";
@fa-var-ice-cream: "\f810";
@fa-var-ice-skate: "\f7ac";
@fa-var-icicles: "\f7ad";
@fa-var-id-badge: "\f2c1";
@fa-var-id-card: "\f2c2";
@fa-var-id-card-alt: "\f47f";
@fa-var-igloo: "\f7ae";
@fa-var-image: "\f03e";
@fa-var-images: "\f302";
@fa-var-imdb: "\f2d8";
@fa-var-inbox: "\f01c";
@fa-var-inbox-in: "\f310";
@fa-var-inbox-out: "\f311";
@fa-var-indent: "\f03c";
@fa-var-industry: "\f275";
@fa-var-industry-alt: "\f3b3";
@fa-var-infinity: "\f534";
@fa-var-info: "\f129";
@fa-var-info-circle: "\f05a";
@fa-var-info-square: "\f30f";
@fa-var-inhaler: "\f5f9";
@fa-var-instagram: "\f16d";
@fa-var-integral: "\f667";
@fa-var-intercom: "\f7af";
@fa-var-internet-explorer: "\f26b";
@fa-var-intersection: "\f668";
@fa-var-inventory: "\f480";
@fa-var-invision: "\f7b0";
@fa-var-ioxhost: "\f208";
@fa-var-island-tropical: "\f811";
@fa-var-italic: "\f033";
@fa-var-itunes: "\f3b4";
@fa-var-itunes-note: "\f3b5";
@fa-var-jack-o-lantern: "\f30e";
@fa-var-java: "\f4e4";
@fa-var-jedi: "\f669";
@fa-var-jedi-order: "\f50e";
@fa-var-jenkins: "\f3b6";
@fa-var-jira: "\f7b1";
@fa-var-joget: "\f3b7";
@fa-var-joint: "\f595";
@fa-var-joomla: "\f1aa";
@fa-var-journal-whills: "\f66a";
@fa-var-js: "\f3b8";
@fa-var-js-square: "\f3b9";
@fa-var-jsfiddle: "\f1cc";
@fa-var-kaaba: "\f66b";
@fa-var-kaggle: "\f5fa";
@fa-var-key: "\f084";
@fa-var-key-skeleton: "\f6f3";
@fa-var-keybase: "\f4f5";
@fa-var-keyboard: "\f11c";
@fa-var-keycdn: "\f3ba";
@fa-var-keynote: "\f66c";
@fa-var-khanda: "\f66d";
@fa-var-kickstarter: "\f3bb";
@fa-var-kickstarter-k: "\f3bc";
@fa-var-kidneys: "\f5fb";
@fa-var-kiss: "\f596";
@fa-var-kiss-beam: "\f597";
@fa-var-kiss-wink-heart: "\f598";
@fa-var-kite: "\f6f4";
@fa-var-kiwi-bird: "\f535";
@fa-var-knife-kitchen: "\f6f5";
@fa-var-korvue: "\f42f";
@fa-var-lambda: "\f66e";
@fa-var-lamp: "\f4ca";
@fa-var-landmark: "\f66f";
@fa-var-landmark-alt: "\f752";
@fa-var-language: "\f1ab";
@fa-var-laptop: "\f109";
@fa-var-laptop-code: "\f5fc";
@fa-var-laptop-medical: "\f812";
@fa-var-laravel: "\f3bd";
@fa-var-lastfm: "\f202";
@fa-var-lastfm-square: "\f203";
@fa-var-laugh: "\f599";
@fa-var-laugh-beam: "\f59a";
@fa-var-laugh-squint: "\f59b";
@fa-var-laugh-wink: "\f59c";
@fa-var-layer-group: "\f5fd";
@fa-var-layer-minus: "\f5fe";
@fa-var-layer-plus: "\f5ff";
@fa-var-leaf: "\f06c";
@fa-var-leaf-heart: "\f4cb";
@fa-var-leaf-maple: "\f6f6";
@fa-var-leaf-oak: "\f6f7";
@fa-var-leanpub: "\f212";
@fa-var-lemon: "\f094";
@fa-var-less: "\f41d";
@fa-var-less-than: "\f536";
@fa-var-less-than-equal: "\f537";
@fa-var-level-down: "\f149";
@fa-var-level-down-alt: "\f3be";
@fa-var-level-up: "\f148";
@fa-var-level-up-alt: "\f3bf";
@fa-var-life-ring: "\f1cd";
@fa-var-lightbulb: "\f0eb";
@fa-var-lightbulb-dollar: "\f670";
@fa-var-lightbulb-exclamation: "\f671";
@fa-var-lightbulb-on: "\f672";
@fa-var-lightbulb-slash: "\f673";
@fa-var-lights-holiday: "\f7b2";
@fa-var-line: "\f3c0";
@fa-var-link: "\f0c1";
@fa-var-linkedin: "\f08c";
@fa-var-linkedin-in: "\f0e1";
@fa-var-linode: "\f2b8";
@fa-var-linux: "\f17c";
@fa-var-lips: "\f600";
@fa-var-lira-sign: "\f195";
@fa-var-list: "\f03a";
@fa-var-list-alt: "\f022";
@fa-var-list-ol: "\f0cb";
@fa-var-list-ul: "\f0ca";
@fa-var-location: "\f601";
@fa-var-location-arrow: "\f124";
@fa-var-location-circle: "\f602";
@fa-var-location-slash: "\f603";
@fa-var-lock: "\f023";
@fa-var-lock-alt: "\f30d";
@fa-var-lock-open: "\f3c1";
@fa-var-lock-open-alt: "\f3c2";
@fa-var-long-arrow-alt-down: "\f309";
@fa-var-long-arrow-alt-left: "\f30a";
@fa-var-long-arrow-alt-right: "\f30b";
@fa-var-long-arrow-alt-up: "\f30c";
@fa-var-long-arrow-down: "\f175";
@fa-var-long-arrow-left: "\f177";
@fa-var-long-arrow-right: "\f178";
@fa-var-long-arrow-up: "\f176";
@fa-var-loveseat: "\f4cc";
@fa-var-low-vision: "\f2a8";
@fa-var-luchador: "\f455";
@fa-var-luggage-cart: "\f59d";
@fa-var-lungs: "\f604";
@fa-var-lyft: "\f3c3";
@fa-var-mace: "\f6f8";
@fa-var-magento: "\f3c4";
@fa-var-magic: "\f0d0";
@fa-var-magnet: "\f076";
@fa-var-mail-bulk: "\f674";
@fa-var-mailbox: "\f813";
@fa-var-mailchimp: "\f59e";
@fa-var-male: "\f183";
@fa-var-mandalorian: "\f50f";
@fa-var-mandolin: "\f6f9";
@fa-var-map: "\f279";
@fa-var-map-marked: "\f59f";
@fa-var-map-marked-alt: "\f5a0";
@fa-var-map-marker: "\f041";
@fa-var-map-marker-alt: "\f3c5";
@fa-var-map-marker-alt-slash: "\f605";
@fa-var-map-marker-check: "\f606";
@fa-var-map-marker-edit: "\f607";
@fa-var-map-marker-exclamation: "\f608";
@fa-var-map-marker-minus: "\f609";
@fa-var-map-marker-plus: "\f60a";
@fa-var-map-marker-question: "\f60b";
@fa-var-map-marker-slash: "\f60c";
@fa-var-map-marker-smile: "\f60d";
@fa-var-map-marker-times: "\f60e";
@fa-var-map-pin: "\f276";
@fa-var-map-signs: "\f277";
@fa-var-markdown: "\f60f";
@fa-var-marker: "\f5a1";
@fa-var-mars: "\f222";
@fa-var-mars-double: "\f227";
@fa-var-mars-stroke: "\f229";
@fa-var-mars-stroke-h: "\f22b";
@fa-var-mars-stroke-v: "\f22a";
@fa-var-mask: "\f6fa";
@fa-var-mastodon: "\f4f6";
@fa-var-maxcdn: "\f136";
@fa-var-meat: "\f814";
@fa-var-medal: "\f5a2";
@fa-var-medapps: "\f3c6";
@fa-var-medium: "\f23a";
@fa-var-medium-m: "\f3c7";
@fa-var-medkit: "\f0fa";
@fa-var-medrt: "\f3c8";
@fa-var-meetup: "\f2e0";
@fa-var-megaphone: "\f675";
@fa-var-megaport: "\f5a3";
@fa-var-meh: "\f11a";
@fa-var-meh-blank: "\f5a4";
@fa-var-meh-rolling-eyes: "\f5a5";
@fa-var-memory: "\f538";
@fa-var-mendeley: "\f7b3";
@fa-var-menorah: "\f676";
@fa-var-mercury: "\f223";
@fa-var-meteor: "\f753";
@fa-var-microchip: "\f2db";
@fa-var-microphone: "\f130";
@fa-var-microphone-alt: "\f3c9";
@fa-var-microphone-alt-slash: "\f539";
@fa-var-microphone-slash: "\f131";
@fa-var-microscope: "\f610";
@fa-var-microsoft: "\f3ca";
@fa-var-mind-share: "\f677";
@fa-var-minus: "\f068";
@fa-var-minus-circle: "\f056";
@fa-var-minus-hexagon: "\f307";
@fa-var-minus-octagon: "\f308";
@fa-var-minus-square: "\f146";
@fa-var-mistletoe: "\f7b4";
@fa-var-mitten: "\f7b5";
@fa-var-mix: "\f3cb";
@fa-var-mixcloud: "\f289";
@fa-var-mizuni: "\f3cc";
@fa-var-mobile: "\f10b";
@fa-var-mobile-alt: "\f3cd";
@fa-var-mobile-android: "\f3ce";
@fa-var-mobile-android-alt: "\f3cf";
@fa-var-modx: "\f285";
@fa-var-monero: "\f3d0";
@fa-var-money-bill: "\f0d6";
@fa-var-money-bill-alt: "\f3d1";
@fa-var-money-bill-wave: "\f53a";
@fa-var-money-bill-wave-alt: "\f53b";
@fa-var-money-check: "\f53c";
@fa-var-money-check-alt: "\f53d";
@fa-var-monitor-heart-rate: "\f611";
@fa-var-monkey: "\f6fb";
@fa-var-monument: "\f5a6";
@fa-var-moon: "\f186";
@fa-var-moon-cloud: "\f754";
@fa-var-moon-stars: "\f755";
@fa-var-mortar-pestle: "\f5a7";
@fa-var-mosque: "\f678";
@fa-var-motorcycle: "\f21c";
@fa-var-mountain: "\f6fc";
@fa-var-mountains: "\f6fd";
@fa-var-mouse-pointer: "\f245";
@fa-var-mug-hot: "\f7b6";
@fa-var-mug-marshmallows: "\f7b7";
@fa-var-music: "\f001";
@fa-var-napster: "\f3d2";
@fa-var-narwhal: "\f6fe";
@fa-var-neos: "\f612";
@fa-var-network-wired: "\f6ff";
@fa-var-neuter: "\f22c";
@fa-var-newspaper: "\f1ea";
@fa-var-nimblr: "\f5a8";
@fa-var-nintendo-switch: "\f418";
@fa-var-node: "\f419";
@fa-var-node-js: "\f3d3";
@fa-var-not-equal: "\f53e";
@fa-var-notes-medical: "\f481";
@fa-var-npm: "\f3d4";
@fa-var-ns8: "\f3d5";
@fa-var-nutritionix: "\f3d6";
@fa-var-object-group: "\f247";
@fa-var-object-ungroup: "\f248";
@fa-var-octagon: "\f306";
@fa-var-odnoklassniki: "\f263";
@fa-var-odnoklassniki-square: "\f264";
@fa-var-oil-can: "\f613";
@fa-var-oil-temp: "\f614";
@fa-var-old-republic: "\f510";
@fa-var-om: "\f679";
@fa-var-omega: "\f67a";
@fa-var-opencart: "\f23d";
@fa-var-openid: "\f19b";
@fa-var-opera: "\f26a";
@fa-var-optin-monster: "\f23c";
@fa-var-ornament: "\f7b8";
@fa-var-osi: "\f41a";
@fa-var-otter: "\f700";
@fa-var-outdent: "\f03b";
@fa-var-page4: "\f3d7";
@fa-var-pagelines: "\f18c";
@fa-var-pager: "\f815";
@fa-var-paint-brush: "\f1fc";
@fa-var-paint-brush-alt: "\f5a9";
@fa-var-paint-roller: "\f5aa";
@fa-var-palette: "\f53f";
@fa-var-palfed: "\f3d8";
@fa-var-pallet: "\f482";
@fa-var-pallet-alt: "\f483";
@fa-var-paper-plane: "\f1d8";
@fa-var-paperclip: "\f0c6";
@fa-var-parachute-box: "\f4cd";
@fa-var-paragraph: "\f1dd";
@fa-var-parking: "\f540";
@fa-var-parking-circle: "\f615";
@fa-var-parking-circle-slash: "\f616";
@fa-var-parking-slash: "\f617";
@fa-var-passport: "\f5ab";
@fa-var-pastafarianism: "\f67b";
@fa-var-paste: "\f0ea";
@fa-var-patreon: "\f3d9";
@fa-var-pause: "\f04c";
@fa-var-pause-circle: "\f28b";
@fa-var-paw: "\f1b0";
@fa-var-paw-alt: "\f701";
@fa-var-paw-claws: "\f702";
@fa-var-paypal: "\f1ed";
@fa-var-peace: "\f67c";
@fa-var-pegasus: "\f703";
@fa-var-pen: "\f304";
@fa-var-pen-alt: "\f305";
@fa-var-pen-fancy: "\f5ac";
@fa-var-pen-nib: "\f5ad";
@fa-var-pen-square: "\f14b";
@fa-var-pencil: "\f040";
@fa-var-pencil-alt: "\f303";
@fa-var-pencil-paintbrush: "\f618";
@fa-var-pencil-ruler: "\f5ae";
@fa-var-pennant: "\f456";
@fa-var-penny-arcade: "\f704";
@fa-var-people-carry: "\f4ce";
@fa-var-pepper-hot: "\f816";
@fa-var-percent: "\f295";
@fa-var-percentage: "\f541";
@fa-var-periscope: "\f3da";
@fa-var-person-booth: "\f756";
@fa-var-person-carry: "\f4cf";
@fa-var-person-dolly: "\f4d0";
@fa-var-person-dolly-empty: "\f4d1";
@fa-var-person-sign: "\f757";
@fa-var-phabricator: "\f3db";
@fa-var-phoenix-framework: "\f3dc";
@fa-var-phoenix-squadron: "\f511";
@fa-var-phone: "\f095";
@fa-var-phone-office: "\f67d";
@fa-var-phone-plus: "\f4d2";
@fa-var-phone-slash: "\f3dd";
@fa-var-phone-square: "\f098";
@fa-var-phone-volume: "\f2a0";
@fa-var-php: "\f457";
@fa-var-pi: "\f67e";
@fa-var-pie: "\f705";
@fa-var-pied-piper: "\f2ae";
@fa-var-pied-piper-alt: "\f1a8";
@fa-var-pied-piper-hat: "\f4e5";
@fa-var-pied-piper-pp: "\f1a7";
@fa-var-pig: "\f706";
@fa-var-piggy-bank: "\f4d3";
@fa-var-pills: "\f484";
@fa-var-pinterest: "\f0d2";
@fa-var-pinterest-p: "\f231";
@fa-var-pinterest-square: "\f0d3";
@fa-var-pizza: "\f817";
@fa-var-pizza-slice: "\f818";
@fa-var-place-of-worship: "\f67f";
@fa-var-plane: "\f072";
@fa-var-plane-alt: "\f3de";
@fa-var-plane-arrival: "\f5af";
@fa-var-plane-departure: "\f5b0";
@fa-var-play: "\f04b";
@fa-var-play-circle: "\f144";
@fa-var-playstation: "\f3df";
@fa-var-plug: "\f1e6";
@fa-var-plus: "\f067";
@fa-var-plus-circle: "\f055";
@fa-var-plus-hexagon: "\f300";
@fa-var-plus-octagon: "\f301";
@fa-var-plus-square: "\f0fe";
@fa-var-podcast: "\f2ce";
@fa-var-podium: "\f680";
@fa-var-podium-star: "\f758";
@fa-var-poll: "\f681";
@fa-var-poll-h: "\f682";
@fa-var-poll-people: "\f759";
@fa-var-poo: "\f2fe";
@fa-var-poo-storm: "\f75a";
@fa-var-poop: "\f619";
@fa-var-popcorn: "\f819";
@fa-var-portrait: "\f3e0";
@fa-var-pound-sign: "\f154";
@fa-var-power-off: "\f011";
@fa-var-pray: "\f683";
@fa-var-praying-hands: "\f684";
@fa-var-prescription: "\f5b1";
@fa-var-prescription-bottle: "\f485";
@fa-var-prescription-bottle-alt: "\f486";
@fa-var-presentation: "\f685";
@fa-var-print: "\f02f";
@fa-var-print-search: "\f81a";
@fa-var-print-slash: "\f686";
@fa-var-procedures: "\f487";
@fa-var-product-hunt: "\f288";
@fa-var-project-diagram: "\f542";
@fa-var-pumpkin: "\f707";
@fa-var-pushed: "\f3e1";
@fa-var-puzzle-piece: "\f12e";
@fa-var-python: "\f3e2";
@fa-var-qq: "\f1d6";
@fa-var-qrcode: "\f029";
@fa-var-question: "\f128";
@fa-var-question-circle: "\f059";
@fa-var-question-square: "\f2fd";
@fa-var-quidditch: "\f458";
@fa-var-quinscape: "\f459";
@fa-var-quora: "\f2c4";
@fa-var-quote-left: "\f10d";
@fa-var-quote-right: "\f10e";
@fa-var-quran: "\f687";
@fa-var-r-project: "\f4f7";
@fa-var-rabbit: "\f708";
@fa-var-rabbit-fast: "\f709";
@fa-var-racquet: "\f45a";
@fa-var-radiation: "\f7b9";
@fa-var-radiation-alt: "\f7ba";
@fa-var-rainbow: "\f75b";
@fa-var-raindrops: "\f75c";
@fa-var-ram: "\f70a";
@fa-var-ramp-loading: "\f4d4";
@fa-var-random: "\f074";
@fa-var-raspberry-pi: "\f7bb";
@fa-var-ravelry: "\f2d9";
@fa-var-react: "\f41b";
@fa-var-reacteurope: "\f75d";
@fa-var-readme: "\f4d5";
@fa-var-rebel: "\f1d0";
@fa-var-receipt: "\f543";
@fa-var-rectangle-landscape: "\f2fa";
@fa-var-rectangle-portrait: "\f2fb";
@fa-var-rectangle-wide: "\f2fc";
@fa-var-recycle: "\f1b8";
@fa-var-red-river: "\f3e3";
@fa-var-reddit: "\f1a1";
@fa-var-reddit-alien: "\f281";
@fa-var-reddit-square: "\f1a2";
@fa-var-redhat: "\f7bc";
@fa-var-redo: "\f01e";
@fa-var-redo-alt: "\f2f9";
@fa-var-registered: "\f25d";
@fa-var-renren: "\f18b";
@fa-var-repeat: "\f363";
@fa-var-repeat-1: "\f365";
@fa-var-repeat-1-alt: "\f366";
@fa-var-repeat-alt: "\f364";
@fa-var-reply: "\f3e5";
@fa-var-reply-all: "\f122";
@fa-var-replyd: "\f3e6";
@fa-var-republican: "\f75e";
@fa-var-researchgate: "\f4f8";
@fa-var-resolving: "\f3e7";
@fa-var-restroom: "\f7bd";
@fa-var-retweet: "\f079";
@fa-var-retweet-alt: "\f361";
@fa-var-rev: "\f5b2";
@fa-var-ribbon: "\f4d6";
@fa-var-ring: "\f70b";
@fa-var-rings-wedding: "\f81b";
@fa-var-road: "\f018";
@fa-var-robot: "\f544";
@fa-var-rocket: "\f135";
@fa-var-rocketchat: "\f3e8";
@fa-var-rockrms: "\f3e9";
@fa-var-route: "\f4d7";
@fa-var-route-highway: "\f61a";
@fa-var-route-interstate: "\f61b";
@fa-var-rss: "\f09e";
@fa-var-rss-square: "\f143";
@fa-var-ruble-sign: "\f158";
@fa-var-ruler: "\f545";
@fa-var-ruler-combined: "\f546";
@fa-var-ruler-horizontal: "\f547";
@fa-var-ruler-triangle: "\f61c";
@fa-var-ruler-vertical: "\f548";
@fa-var-running: "\f70c";
@fa-var-rupee-sign: "\f156";
@fa-var-rv: "\f7be";
@fa-var-sack: "\f81c";
@fa-var-sack-dollar: "\f81d";
@fa-var-sad-cry: "\f5b3";
@fa-var-sad-tear: "\f5b4";
@fa-var-safari: "\f267";
@fa-var-salad: "\f81e";
@fa-var-sandwich: "\f81f";
@fa-var-sass: "\f41e";
@fa-var-satellite: "\f7bf";
@fa-var-satellite-dish: "\f7c0";
@fa-var-sausage: "\f820";
@fa-var-save: "\f0c7";
@fa-var-scalpel: "\f61d";
@fa-var-scalpel-path: "\f61e";
@fa-var-scanner: "\f488";
@fa-var-scanner-keyboard: "\f489";
@fa-var-scanner-touchscreen: "\f48a";
@fa-var-scarecrow: "\f70d";
@fa-var-scarf: "\f7c1";
@fa-var-schlix: "\f3ea";
@fa-var-school: "\f549";
@fa-var-screwdriver: "\f54a";
@fa-var-scribd: "\f28a";
@fa-var-scroll: "\f70e";
@fa-var-scroll-old: "\f70f";
@fa-var-scrubber: "\f2f8";
@fa-var-scythe: "\f710";
@fa-var-sd-card: "\f7c2";
@fa-var-search: "\f002";
@fa-var-search-dollar: "\f688";
@fa-var-search-location: "\f689";
@fa-var-search-minus: "\f010";
@fa-var-search-plus: "\f00e";
@fa-var-searchengin: "\f3eb";
@fa-var-seedling: "\f4d8";
@fa-var-sellcast: "\f2da";
@fa-var-sellsy: "\f213";
@fa-var-server: "\f233";
@fa-var-servicestack: "\f3ec";
@fa-var-shapes: "\f61f";
@fa-var-share: "\f064";
@fa-var-share-all: "\f367";
@fa-var-share-alt: "\f1e0";
@fa-var-share-alt-square: "\f1e1";
@fa-var-share-square: "\f14d";
@fa-var-sheep: "\f711";
@fa-var-shekel-sign: "\f20b";
@fa-var-shield: "\f132";
@fa-var-shield-alt: "\f3ed";
@fa-var-shield-check: "\f2f7";
@fa-var-shield-cross: "\f712";
@fa-var-ship: "\f21a";
@fa-var-shipping-fast: "\f48b";
@fa-var-shipping-timed: "\f48c";
@fa-var-shirtsinbulk: "\f214";
@fa-var-shish-kebab: "\f821";
@fa-var-shoe-prints: "\f54b";
@fa-var-shopping-bag: "\f290";
@fa-var-shopping-basket: "\f291";
@fa-var-shopping-cart: "\f07a";
@fa-var-shopware: "\f5b5";
@fa-var-shovel: "\f713";
@fa-var-shovel-snow: "\f7c3";
@fa-var-shower: "\f2cc";
@fa-var-shredder: "\f68a";
@fa-var-shuttle-van: "\f5b6";
@fa-var-shuttlecock: "\f45b";
@fa-var-sickle: "\f822";
@fa-var-sigma: "\f68b";
@fa-var-sign: "\f4d9";
@fa-var-sign-in: "\f090";
@fa-var-sign-in-alt: "\f2f6";
@fa-var-sign-language: "\f2a7";
@fa-var-sign-out: "\f08b";
@fa-var-sign-out-alt: "\f2f5";
@fa-var-signal: "\f012";
@fa-var-signal-1: "\f68c";
@fa-var-signal-2: "\f68d";
@fa-var-signal-3: "\f68e";
@fa-var-signal-4: "\f68f";
@fa-var-signal-alt: "\f690";
@fa-var-signal-alt-1: "\f691";
@fa-var-signal-alt-2: "\f692";
@fa-var-signal-alt-3: "\f693";
@fa-var-signal-alt-slash: "\f694";
@fa-var-signal-slash: "\f695";
@fa-var-signature: "\f5b7";
@fa-var-sim-card: "\f7c4";
@fa-var-simplybuilt: "\f215";
@fa-var-sistrix: "\f3ee";
@fa-var-sitemap: "\f0e8";
@fa-var-sith: "\f512";
@fa-var-skating: "\f7c5";
@fa-var-skeleton: "\f620";
@fa-var-sketch: "\f7c6";
@fa-var-ski-jump: "\f7c7";
@fa-var-ski-lift: "\f7c8";
@fa-var-skiing: "\f7c9";
@fa-var-skiing-nordic: "\f7ca";
@fa-var-skull: "\f54c";
@fa-var-skull-crossbones: "\f714";
@fa-var-skyatlas: "\f216";
@fa-var-skype: "\f17e";
@fa-var-slack: "\f198";
@fa-var-slack-hash: "\f3ef";
@fa-var-slash: "\f715";
@fa-var-sledding: "\f7cb";
@fa-var-sleigh: "\f7cc";
@fa-var-sliders-h: "\f1de";
@fa-var-sliders-h-square: "\f3f0";
@fa-var-sliders-v: "\f3f1";
@fa-var-sliders-v-square: "\f3f2";
@fa-var-slideshare: "\f1e7";
@fa-var-smile: "\f118";
@fa-var-smile-beam: "\f5b8";
@fa-var-smile-plus: "\f5b9";
@fa-var-smile-wink: "\f4da";
@fa-var-smog: "\f75f";
@fa-var-smoke: "\f760";
@fa-var-smoking: "\f48d";
@fa-var-smoking-ban: "\f54d";
@fa-var-sms: "\f7cd";
@fa-var-snake: "\f716";
@fa-var-snapchat: "\f2ab";
@fa-var-snapchat-ghost: "\f2ac";
@fa-var-snapchat-square: "\f2ad";
@fa-var-snow-blowing: "\f761";
@fa-var-snowboarding: "\f7ce";
@fa-var-snowflake: "\f2dc";
@fa-var-snowflakes: "\f7cf";
@fa-var-snowman: "\f7d0";
@fa-var-snowmobile: "\f7d1";
@fa-var-snowplow: "\f7d2";
@fa-var-socks: "\f696";
@fa-var-solar-panel: "\f5ba";
@fa-var-sort: "\f0dc";
@fa-var-sort-alpha-down: "\f15d";
@fa-var-sort-alpha-up: "\f15e";
@fa-var-sort-amount-down: "\f160";
@fa-var-sort-amount-up: "\f161";
@fa-var-sort-down: "\f0dd";
@fa-var-sort-numeric-down: "\f162";
@fa-var-sort-numeric-up: "\f163";
@fa-var-sort-up: "\f0de";
@fa-var-soundcloud: "\f1be";
@fa-var-soup: "\f823";
@fa-var-sourcetree: "\f7d3";
@fa-var-spa: "\f5bb";
@fa-var-space-shuttle: "\f197";
@fa-var-spade: "\f2f4";
@fa-var-speakap: "\f3f3";
@fa-var-spider: "\f717";
@fa-var-spider-black-widow: "\f718";
@fa-var-spider-web: "\f719";
@fa-var-spinner: "\f110";
@fa-var-spinner-third: "\f3f4";
@fa-var-splotch: "\f5bc";
@fa-var-spotify: "\f1bc";
@fa-var-spray-can: "\f5bd";
@fa-var-square: "\f0c8";
@fa-var-square-full: "\f45c";
@fa-var-square-root: "\f697";
@fa-var-square-root-alt: "\f698";
@fa-var-squarespace: "\f5be";
@fa-var-squirrel: "\f71a";
@fa-var-stack-exchange: "\f18d";
@fa-var-stack-overflow: "\f16c";
@fa-var-staff: "\f71b";
@fa-var-stamp: "\f5bf";
@fa-var-star: "\f005";
@fa-var-star-and-crescent: "\f699";
@fa-var-star-christmas: "\f7d4";
@fa-var-star-exclamation: "\f2f3";
@fa-var-star-half: "\f089";
@fa-var-star-half-alt: "\f5c0";
@fa-var-star-of-david: "\f69a";
@fa-var-star-of-life: "\f621";
@fa-var-stars: "\f762";
@fa-var-staylinked: "\f3f5";
@fa-var-steak: "\f824";
@fa-var-steam: "\f1b6";
@fa-var-steam-square: "\f1b7";
@fa-var-steam-symbol: "\f3f6";
@fa-var-steering-wheel: "\f622";
@fa-var-step-backward: "\f048";
@fa-var-step-forward: "\f051";
@fa-var-stethoscope: "\f0f1";
@fa-var-sticker-mule: "\f3f7";
@fa-var-sticky-note: "\f249";
@fa-var-stocking: "\f7d5";
@fa-var-stomach: "\f623";
@fa-var-stop: "\f04d";
@fa-var-stop-circle: "\f28d";
@fa-var-stopwatch: "\f2f2";
@fa-var-store: "\f54e";
@fa-var-store-alt: "\f54f";
@fa-var-strava: "\f428";
@fa-var-stream: "\f550";
@fa-var-street-view: "\f21d";
@fa-var-stretcher: "\f825";
@fa-var-strikethrough: "\f0cc";
@fa-var-stripe: "\f429";
@fa-var-stripe-s: "\f42a";
@fa-var-stroopwafel: "\f551";
@fa-var-studiovinari: "\f3f8";
@fa-var-stumbleupon: "\f1a4";
@fa-var-stumbleupon-circle: "\f1a3";
@fa-var-subscript: "\f12c";
@fa-var-subway: "\f239";
@fa-var-suitcase: "\f0f2";
@fa-var-suitcase-rolling: "\f5c1";
@fa-var-sun: "\f185";
@fa-var-sun-cloud: "\f763";
@fa-var-sun-dust: "\f764";
@fa-var-sun-haze: "\f765";
@fa-var-sunrise: "\f766";
@fa-var-sunset: "\f767";
@fa-var-superpowers: "\f2dd";
@fa-var-superscript: "\f12b";
@fa-var-supple: "\f3f9";
@fa-var-surprise: "\f5c2";
@fa-var-suse: "\f7d6";
@fa-var-swatchbook: "\f5c3";
@fa-var-swimmer: "\f5c4";
@fa-var-swimming-pool: "\f5c5";
@fa-var-sword: "\f71c";
@fa-var-swords: "\f71d";
@fa-var-synagogue: "\f69b";
@fa-var-sync: "\f021";
@fa-var-sync-alt: "\f2f1";
@fa-var-syringe: "\f48e";
@fa-var-table: "\f0ce";
@fa-var-table-tennis: "\f45d";
@fa-var-tablet: "\f10a";
@fa-var-tablet-alt: "\f3fa";
@fa-var-tablet-android: "\f3fb";
@fa-var-tablet-android-alt: "\f3fc";
@fa-var-tablet-rugged: "\f48f";
@fa-var-tablets: "\f490";
@fa-var-tachometer: "\f0e4";
@fa-var-tachometer-alt: "\f3fd";
@fa-var-tachometer-alt-average: "\f624";
@fa-var-tachometer-alt-fast: "\f625";
@fa-var-tachometer-alt-fastest: "\f626";
@fa-var-tachometer-alt-slow: "\f627";
@fa-var-tachometer-alt-slowest: "\f628";
@fa-var-tachometer-average: "\f629";
@fa-var-tachometer-fast: "\f62a";
@fa-var-tachometer-fastest: "\f62b";
@fa-var-tachometer-slow: "\f62c";
@fa-var-tachometer-slowest: "\f62d";
@fa-var-taco: "\f826";
@fa-var-tag: "\f02b";
@fa-var-tags: "\f02c";
@fa-var-tally: "\f69c";
@fa-var-tanakh: "\f827";
@fa-var-tape: "\f4db";
@fa-var-tasks: "\f0ae";
@fa-var-tasks-alt: "\f828";
@fa-var-taxi: "\f1ba";
@fa-var-teamspeak: "\f4f9";
@fa-var-teeth: "\f62e";
@fa-var-teeth-open: "\f62f";
@fa-var-telegram: "\f2c6";
@fa-var-telegram-plane: "\f3fe";
@fa-var-temperature-frigid: "\f768";
@fa-var-temperature-high: "\f769";
@fa-var-temperature-hot: "\f76a";
@fa-var-temperature-low: "\f76b";
@fa-var-tencent-weibo: "\f1d5";
@fa-var-tenge: "\f7d7";
@fa-var-tennis-ball: "\f45e";
@fa-var-terminal: "\f120";
@fa-var-text-height: "\f034";
@fa-var-text-width: "\f035";
@fa-var-th: "\f00a";
@fa-var-th-large: "\f009";
@fa-var-th-list: "\f00b";
@fa-var-the-red-yeti: "\f69d";
@fa-var-theater-masks: "\f630";
@fa-var-themeco: "\f5c6";
@fa-var-themeisle: "\f2b2";
@fa-var-thermometer: "\f491";
@fa-var-thermometer-empty: "\f2cb";
@fa-var-thermometer-full: "\f2c7";
@fa-var-thermometer-half: "\f2c9";
@fa-var-thermometer-quarter: "\f2ca";
@fa-var-thermometer-three-quarters: "\f2c8";
@fa-var-theta: "\f69e";
@fa-var-think-peaks: "\f731";
@fa-var-thumbs-down: "\f165";
@fa-var-thumbs-up: "\f164";
@fa-var-thumbtack: "\f08d";
@fa-var-thunderstorm: "\f76c";
@fa-var-thunderstorm-moon: "\f76d";
@fa-var-thunderstorm-sun: "\f76e";
@fa-var-ticket: "\f145";
@fa-var-ticket-alt: "\f3ff";
@fa-var-tilde: "\f69f";
@fa-var-times: "\f00d";
@fa-var-times-circle: "\f057";
@fa-var-times-hexagon: "\f2ee";
@fa-var-times-octagon: "\f2f0";
@fa-var-times-square: "\f2d3";
@fa-var-tint: "\f043";
@fa-var-tint-slash: "\f5c7";
@fa-var-tire: "\f631";
@fa-var-tire-flat: "\f632";
@fa-var-tire-pressure-warning: "\f633";
@fa-var-tire-rugged: "\f634";
@fa-var-tired: "\f5c8";
@fa-var-toggle-off: "\f204";
@fa-var-toggle-on: "\f205";
@fa-var-toilet: "\f7d8";
@fa-var-toilet-paper: "\f71e";
@fa-var-toilet-paper-alt: "\f71f";
@fa-var-tombstone: "\f720";
@fa-var-tombstone-alt: "\f721";
@fa-var-toolbox: "\f552";
@fa-var-tools: "\f7d9";
@fa-var-tooth: "\f5c9";
@fa-var-toothbrush: "\f635";
@fa-var-torah: "\f6a0";
@fa-var-torii-gate: "\f6a1";
@fa-var-tornado: "\f76f";
@fa-var-tractor: "\f722";
@fa-var-trade-federation: "\f513";
@fa-var-trademark: "\f25c";
@fa-var-traffic-cone: "\f636";
@fa-var-traffic-light: "\f637";
@fa-var-traffic-light-go: "\f638";
@fa-var-traffic-light-slow: "\f639";
@fa-var-traffic-light-stop: "\f63a";
@fa-var-train: "\f238";
@fa-var-tram: "\f7da";
@fa-var-transgender: "\f224";
@fa-var-transgender-alt: "\f225";
@fa-var-trash: "\f1f8";
@fa-var-trash-alt: "\f2ed";
@fa-var-trash-restore: "\f829";
@fa-var-trash-restore-alt: "\f82a";
@fa-var-treasure-chest: "\f723";
@fa-var-tree: "\f1bb";
@fa-var-tree-alt: "\f400";
@fa-var-tree-christmas: "\f7db";
@fa-var-tree-decorated: "\f7dc";
@fa-var-tree-large: "\f7dd";
@fa-var-tree-palm: "\f82b";
@fa-var-trees: "\f724";
@fa-var-trello: "\f181";
@fa-var-triangle: "\f2ec";
@fa-var-tripadvisor: "\f262";
@fa-var-trophy: "\f091";
@fa-var-trophy-alt: "\f2eb";
@fa-var-truck: "\f0d1";
@fa-var-truck-container: "\f4dc";
@fa-var-truck-couch: "\f4dd";
@fa-var-truck-loading: "\f4de";
@fa-var-truck-monster: "\f63b";
@fa-var-truck-moving: "\f4df";
@fa-var-truck-pickup: "\f63c";
@fa-var-truck-plow: "\f7de";
@fa-var-truck-ramp: "\f4e0";
@fa-var-tshirt: "\f553";
@fa-var-tty: "\f1e4";
@fa-var-tumblr: "\f173";
@fa-var-tumblr-square: "\f174";
@fa-var-turkey: "\f725";
@fa-var-turtle: "\f726";
@fa-var-tv: "\f26c";
@fa-var-tv-retro: "\f401";
@fa-var-twitch: "\f1e8";
@fa-var-twitter: "\f099";
@fa-var-twitter-square: "\f081";
@fa-var-typo3: "\f42b";
@fa-var-uber: "\f402";
@fa-var-ubuntu: "\f7df";
@fa-var-uikit: "\f403";
@fa-var-umbrella: "\f0e9";
@fa-var-umbrella-beach: "\f5ca";
@fa-var-underline: "\f0cd";
@fa-var-undo: "\f0e2";
@fa-var-undo-alt: "\f2ea";
@fa-var-unicorn: "\f727";
@fa-var-union: "\f6a2";
@fa-var-uniregistry: "\f404";
@fa-var-universal-access: "\f29a";
@fa-var-university: "\f19c";
@fa-var-unlink: "\f127";
@fa-var-unlock: "\f09c";
@fa-var-unlock-alt: "\f13e";
@fa-var-untappd: "\f405";
@fa-var-upload: "\f093";
@fa-var-ups: "\f7e0";
@fa-var-usb: "\f287";
@fa-var-usd-circle: "\f2e8";
@fa-var-usd-square: "\f2e9";
@fa-var-user: "\f007";
@fa-var-user-alt: "\f406";
@fa-var-user-alt-slash: "\f4fa";
@fa-var-user-astronaut: "\f4fb";
@fa-var-user-chart: "\f6a3";
@fa-var-user-check: "\f4fc";
@fa-var-user-circle: "\f2bd";
@fa-var-user-clock: "\f4fd";
@fa-var-user-cog: "\f4fe";
@fa-var-user-crown: "\f6a4";
@fa-var-user-edit: "\f4ff";
@fa-var-user-friends: "\f500";
@fa-var-user-graduate: "\f501";
@fa-var-user-hard-hat: "\f82c";
@fa-var-user-headset: "\f82d";
@fa-var-user-injured: "\f728";
@fa-var-user-lock: "\f502";
@fa-var-user-md: "\f0f0";
@fa-var-user-md-chat: "\f82e";
@fa-var-user-minus: "\f503";
@fa-var-user-ninja: "\f504";
@fa-var-user-nurse: "\f82f";
@fa-var-user-plus: "\f234";
@fa-var-user-secret: "\f21b";
@fa-var-user-shield: "\f505";
@fa-var-user-slash: "\f506";
@fa-var-user-tag: "\f507";
@fa-var-user-tie: "\f508";
@fa-var-user-times: "\f235";
@fa-var-users: "\f0c0";
@fa-var-users-class: "\f63d";
@fa-var-users-cog: "\f509";
@fa-var-users-crown: "\f6a5";
@fa-var-users-medical: "\f830";
@fa-var-usps: "\f7e1";
@fa-var-ussunnah: "\f407";
@fa-var-utensil-fork: "\f2e3";
@fa-var-utensil-knife: "\f2e4";
@fa-var-utensil-spoon: "\f2e5";
@fa-var-utensils: "\f2e7";
@fa-var-utensils-alt: "\f2e6";
@fa-var-vaadin: "\f408";
@fa-var-value-absolute: "\f6a6";
@fa-var-vector-square: "\f5cb";
@fa-var-venus: "\f221";
@fa-var-venus-double: "\f226";
@fa-var-venus-mars: "\f228";
@fa-var-viacoin: "\f237";
@fa-var-viadeo: "\f2a9";
@fa-var-viadeo-square: "\f2aa";
@fa-var-vial: "\f492";
@fa-var-vials: "\f493";
@fa-var-viber: "\f409";
@fa-var-video: "\f03d";
@fa-var-video-plus: "\f4e1";
@fa-var-video-slash: "\f4e2";
@fa-var-vihara: "\f6a7";
@fa-var-vimeo: "\f40a";
@fa-var-vimeo-square: "\f194";
@fa-var-vimeo-v: "\f27d";
@fa-var-vine: "\f1ca";
@fa-var-vk: "\f189";
@fa-var-vnv: "\f40b";
@fa-var-volcano: "\f770";
@fa-var-volleyball-ball: "\f45f";
@fa-var-volume: "\f6a8";
@fa-var-volume-down: "\f027";
@fa-var-volume-mute: "\f6a9";
@fa-var-volume-off: "\f026";
@fa-var-volume-slash: "\f2e2";
@fa-var-volume-up: "\f028";
@fa-var-vote-nay: "\f771";
@fa-var-vote-yea: "\f772";
@fa-var-vr-cardboard: "\f729";
@fa-var-vuejs: "\f41f";
@fa-var-walker: "\f831";
@fa-var-walking: "\f554";
@fa-var-wallet: "\f555";
@fa-var-wand: "\f72a";
@fa-var-wand-magic: "\f72b";
@fa-var-warehouse: "\f494";
@fa-var-warehouse-alt: "\f495";
@fa-var-watch: "\f2e1";
@fa-var-watch-fitness: "\f63e";
@fa-var-water: "\f773";
@fa-var-water-lower: "\f774";
@fa-var-water-rise: "\f775";
@fa-var-webcam: "\f832";
@fa-var-webcam-slash: "\f833";
@fa-var-weebly: "\f5cc";
@fa-var-weibo: "\f18a";
@fa-var-weight: "\f496";
@fa-var-weight-hanging: "\f5cd";
@fa-var-weixin: "\f1d7";
@fa-var-whale: "\f72c";
@fa-var-whatsapp: "\f232";
@fa-var-whatsapp-square: "\f40c";
@fa-var-wheat: "\f72d";
@fa-var-wheelchair: "\f193";
@fa-var-whistle: "\f460";
@fa-var-whmcs: "\f40d";
@fa-var-wifi: "\f1eb";
@fa-var-wifi-1: "\f6aa";
@fa-var-wifi-2: "\f6ab";
@fa-var-wifi-slash: "\f6ac";
@fa-var-wikipedia-w: "\f266";
@fa-var-wind: "\f72e";
@fa-var-wind-warning: "\f776";
@fa-var-window: "\f40e";
@fa-var-window-alt: "\f40f";
@fa-var-window-close: "\f410";
@fa-var-window-maximize: "\f2d0";
@fa-var-window-minimize: "\f2d1";
@fa-var-window-restore: "\f2d2";
@fa-var-windows: "\f17a";
@fa-var-windsock: "\f777";
@fa-var-wine-bottle: "\f72f";
@fa-var-wine-glass: "\f4e3";
@fa-var-wine-glass-alt: "\f5ce";
@fa-var-wix: "\f5cf";
@fa-var-wizards-of-the-coast: "\f730";
@fa-var-wolf-pack-battalion: "\f514";
@fa-var-won-sign: "\f159";
@fa-var-wordpress: "\f19a";
@fa-var-wordpress-simple: "\f411";
@fa-var-wpbeginner: "\f297";
@fa-var-wpexplorer: "\f2de";
@fa-var-wpforms: "\f298";
@fa-var-wpressr: "\f3e4";
@fa-var-wreath: "\f7e2";
@fa-var-wrench: "\f0ad";
@fa-var-x-ray: "\f497";
@fa-var-xbox: "\f412";
@fa-var-xing: "\f168";
@fa-var-xing-square: "\f169";
@fa-var-y-combinator: "\f23b";
@fa-var-yahoo: "\f19e";
@fa-var-yandex: "\f413";
@fa-var-yandex-international: "\f414";
@fa-var-yarn: "\f7e3";
@fa-var-yelp: "\f1e9";
@fa-var-yen-sign: "\f157";
@fa-var-yin-yang: "\f6ad";
@fa-var-yoast: "\f2b1";
@fa-var-youtube: "\f167";
@fa-var-youtube-square: "\f431";
@fa-var-zhihu: "\f63f";


// Mixins
// --------------------------

.fa-icon() {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
  font-style: normal;
  font-variant: normal;
  font-weight: normal;
  line-height: 1;
  vertical-align: -.125em;
}

.fa-icon-rotate(@degrees, @rotation) {
  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=@{rotation})";
  transform: rotate(@degrees);
}

.fa-icon-flip(@horiz, @vert, @rotation) {
  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=@{rotation}, mirror=1)";
  transform: scale(@horiz, @vert);
}


// Only display content to screen readers. A la Bootstrap 4.
//
// See: http://a11yproject.com/posts/how-to-hide-content/

.sr-only() {
  border: 0;
  clip: rect(0,0,0,0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

// Use in conjunction with .sr-only to only display content when it's focused.
//
// Useful for "Skip to main content" links; see http://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1
//
// Credit: HTML5 Boilerplate

.sr-only-focusable() {
  &:active,
  &:focus {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
  }
}
]]></template>
  <template type="public" title="setup_fa4_variables.less" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[@fa-var-glass: @fa-var-glass-martini;
@fa-var-star-o: @fa-var-star;
@fa-var-remove: @fa-var-times;
@fa-var-close: @fa-var-times;
@fa-var-gear: @fa-var-cog;
@fa-var-trash-o: @fa-var-trash-alt;
@fa-var-file-o: @fa-var-file;
@fa-var-clock-o: @fa-var-clock;
@fa-var-arrow-circle-o-down: @fa-var-arrow-alt-circle-down;
@fa-var-arrow-circle-o-up: @fa-var-arrow-alt-circle-up;
@fa-var-play-circle-o: @fa-var-play-circle;
@fa-var-repeat: @fa-var-redo;
@fa-var-rotate-right: @fa-var-redo;
@fa-var-refresh: @fa-var-sync;
@fa-var-dedent: @fa-var-outdent;
@fa-var-video-camera: @fa-var-video;
@fa-var-picture-o: @fa-var-image;
@fa-var-photo: @fa-var-image;
@fa-var-image: @fa-var-image;
@fa-var-pencil: @fa-var-pencil-alt;
@fa-var-map-marker: @fa-var-map-marker-alt;
@fa-var-pencil-square-o: @fa-var-edit;
@fa-var-share-square-o: @fa-var-share-square;
@fa-var-check-square-o: @fa-var-check-square;
@fa-var-arrows: @fa-var-arrows-alt;
@fa-var-times-circle-o: @fa-var-times-circle;
@fa-var-check-circle-o: @fa-var-check-circle;
@fa-var-mail-forward: @fa-var-share;
@fa-var-warning: @fa-var-exclamation-triangle;
@fa-var-calendar: @fa-var-calendar-alt;
@fa-var-arrows-v: @fa-var-arrows-alt-v;
@fa-var-arrows-h: @fa-var-arrows-alt-h;
@fa-var-bar-chart: @fa-var-chart-bar;
@fa-var-bar-chart-o: @fa-var-chart-bar;
@fa-var-gears: @fa-var-cogs;
@fa-var-thumbs-o-up: @fa-var-thumbs-up;
@fa-var-thumbs-o-down: @fa-var-thumbs-down;
@fa-var-heart-o: @fa-var-heart;
@fa-var-sign-out: @fa-var-sign-out-alt;
@fa-var-linkedin-square: @fa-var-linkedin;
@fa-var-thumb-tack: @fa-var-thumbtack;
@fa-var-external-link: @fa-var-external-link-alt;
@fa-var-sign-in: @fa-var-sign-in-alt;
@fa-var-lemon-o: @fa-var-lemon;
@fa-var-square-o: @fa-var-square;
@fa-var-bookmark-o: @fa-var-bookmark;
@fa-var-facebook: @fa-var-facebook-f;
@fa-var-facebook-f: @fa-var-facebook-f;
@fa-var-feed: @fa-var-rss;
@fa-var-hdd-o: @fa-var-hdd;
@fa-var-hand-o-right: @fa-var-hand-point-right;
@fa-var-hand-o-left: @fa-var-hand-point-left;
@fa-var-hand-o-up: @fa-var-hand-point-up;
@fa-var-hand-o-down: @fa-var-hand-point-down;
@fa-var-arrows-alt: @fa-var-expand-arrows-alt;
@fa-var-group: @fa-var-users;
@fa-var-chain: @fa-var-link;
@fa-var-scissors: @fa-var-cut;
@fa-var-files-o: @fa-var-copy;
@fa-var-floppy-o: @fa-var-save;
@fa-var-navicon: @fa-var-bars;
@fa-var-reorder: @fa-var-bars;
@fa-var-google-plus: @fa-var-google-plus-g;
@fa-var-money: @fa-var-money-bill-alt;
@fa-var-unsorted: @fa-var-sort;
@fa-var-sort-desc: @fa-var-sort-down;
@fa-var-sort-asc: @fa-var-sort-up;
@fa-var-linkedin: @fa-var-linkedin-in;
@fa-var-rotate-left: @fa-var-undo;
@fa-var-legal: @fa-var-gavel;
@fa-var-tachometer: @fa-var-tachometer-alt;
@fa-var-dashboard: @fa-var-tachometer-alt;
@fa-var-comment-o: @fa-var-comment;
@fa-var-comments-o: @fa-var-comments;
@fa-var-flash: @fa-var-bolt;
@fa-var-paste: @fa-var-clipboard;
@fa-var-lightbulb-o: @fa-var-lightbulb;
@fa-var-exchange: @fa-var-exchange-alt;
@fa-var-cloud-download: @fa-var-cloud-download-alt;
@fa-var-cloud-upload: @fa-var-cloud-upload-alt;
@fa-var-bell-o: @fa-var-bell;
@fa-var-cutlery: @fa-var-utensils;
@fa-var-file-text-o: @fa-var-file-alt;
@fa-var-building-o: @fa-var-building;
@fa-var-hospital-o: @fa-var-hospital;
@fa-var-tablet: @fa-var-tablet-alt;
@fa-var-mobile: @fa-var-mobile-alt;
@fa-var-mobile-phone: @fa-var-mobile-alt;
@fa-var-circle-o: @fa-var-circle;
@fa-var-mail-reply: @fa-var-reply;
@fa-var-folder-o: @fa-var-folder;
@fa-var-folder-open-o: @fa-var-folder-open;
@fa-var-smile-o: @fa-var-smile;
@fa-var-frown-o: @fa-var-frown;
@fa-var-meh-o: @fa-var-meh;
@fa-var-keyboard-o: @fa-var-keyboard;
@fa-var-flag-o: @fa-var-flag;
@fa-var-mail-reply-all: @fa-var-reply-all;
@fa-var-star-half-o: @fa-var-star-half;
@fa-var-star-half-empty: @fa-var-star-half;
@fa-var-star-half-full: @fa-var-star-half;
@fa-var-code-fork: @fa-var-code-branch;
@fa-var-chain-broken: @fa-var-unlink;
@fa-var-shield: @fa-var-shield-alt;
@fa-var-calendar-o: @fa-var-calendar;
@fa-var-ticket: @fa-var-ticket-alt;
@fa-var-minus-square-o: @fa-var-minus-square;
@fa-var-level-up: @fa-var-level-up-alt;
@fa-var-level-down: @fa-var-level-down-alt;
@fa-var-pencil-square: @fa-var-pen-square;
@fa-var-external-link-square: @fa-var-external-link-square-alt;
@fa-var-caret-square-o-down: @fa-var-caret-square-down;
@fa-var-toggle-down: @fa-var-caret-square-down;
@fa-var-caret-square-o-up: @fa-var-caret-square-up;
@fa-var-toggle-up: @fa-var-caret-square-up;
@fa-var-caret-square-o-right: @fa-var-caret-square-right;
@fa-var-toggle-right: @fa-var-caret-square-right;
@fa-var-eur: @fa-var-euro-sign;
@fa-var-euro: @fa-var-euro-sign;
@fa-var-gbp: @fa-var-pound-sign;
@fa-var-usd: @fa-var-dollar-sign;
@fa-var-dollar: @fa-var-dollar-sign;
@fa-var-inr: @fa-var-rupee-sign;
@fa-var-rupee: @fa-var-rupee-sign;
@fa-var-jpy: @fa-var-yen-sign;
@fa-var-cny: @fa-var-yen-sign;
@fa-var-rmb: @fa-var-yen-sign;
@fa-var-yen: @fa-var-yen-sign;
@fa-var-rub: @fa-var-ruble-sign;
@fa-var-ruble: @fa-var-ruble-sign;
@fa-var-rouble: @fa-var-ruble-sign;
@fa-var-krw: @fa-var-won-sign;
@fa-var-won: @fa-var-won-sign;
@fa-var-bitcoin: @fa-var-btc;
@fa-var-file-text: @fa-var-file-alt;
@fa-var-sort-alpha-asc: @fa-var-sort-alpha-down;
@fa-var-sort-alpha-desc: @fa-var-sort-alpha-up;
@fa-var-sort-amount-asc: @fa-var-sort-amount-down;
@fa-var-sort-amount-desc: @fa-var-sort-amount-up;
@fa-var-sort-numeric-asc: @fa-var-sort-numeric-down;
@fa-var-sort-numeric-desc: @fa-var-sort-numeric-up;
@fa-var-youtube-play: @fa-var-youtube;
@fa-var-bitbucket-square: @fa-var-bitbucket;
@fa-var-long-arrow-down: @fa-var-long-arrow-alt-down;
@fa-var-long-arrow-up: @fa-var-long-arrow-alt-up;
@fa-var-long-arrow-left: @fa-var-long-arrow-alt-left;
@fa-var-long-arrow-right: @fa-var-long-arrow-alt-right;
@fa-var-gittip: @fa-var-gratipay;
@fa-var-sun-o: @fa-var-sun;
@fa-var-moon-o: @fa-var-moon;
@fa-var-arrow-circle-o-right: @fa-var-arrow-alt-circle-right;
@fa-var-arrow-circle-o-left: @fa-var-arrow-alt-circle-left;
@fa-var-caret-square-o-left: @fa-var-caret-square-left;
@fa-var-toggle-left: @fa-var-caret-square-left;
@fa-var-dot-circle-o: @fa-var-dot-circle;
@fa-var-try: @fa-var-lira-sign;
@fa-var-turkish-lira: @fa-var-lira-sign;
@fa-var-plus-square-o: @fa-var-plus-square;
@fa-var-institution: @fa-var-university;
@fa-var-bank: @fa-var-university;
@fa-var-mortar-board: @fa-var-graduation-cap;
@fa-var-spoon: @fa-var-utensil-spoon;
@fa-var-automobile: @fa-var-car;
@fa-var-cab: @fa-var-taxi;
@fa-var-envelope-o: @fa-var-envelope;
@fa-var-file-pdf-o: @fa-var-file-pdf;
@fa-var-file-word-o: @fa-var-file-word;
@fa-var-file-excel-o: @fa-var-file-excel;
@fa-var-file-powerpoint-o: @fa-var-file-powerpoint;
@fa-var-file-image-o: @fa-var-file-image;
@fa-var-file-photo-o: @fa-var-file-image;
@fa-var-file-picture-o: @fa-var-file-image;
@fa-var-file-archive-o: @fa-var-file-archive;
@fa-var-file-zip-o: @fa-var-file-archive;
@fa-var-file-audio-o: @fa-var-file-audio;
@fa-var-file-sound-o: @fa-var-file-audio;
@fa-var-file-video-o: @fa-var-file-video;
@fa-var-file-movie-o: @fa-var-file-video;
@fa-var-file-code-o: @fa-var-file-code;
@fa-var-life-bouy: @fa-var-life-ring;
@fa-var-life-buoy: @fa-var-life-ring;
@fa-var-life-saver: @fa-var-life-ring;
@fa-var-support: @fa-var-life-ring;
@fa-var-circle-o-notch: @fa-var-circle-notch;
@fa-var-ra: @fa-var-rebel;
@fa-var-resistance: @fa-var-rebel;
@fa-var-ge: @fa-var-empire;
@fa-var-y-combinator-square: @fa-var-hacker-news;
@fa-var-yc-square: @fa-var-hacker-news;
@fa-var-wechat: @fa-var-weixin;
@fa-var-send: @fa-var-paper-plane;
@fa-var-paper-plane-o: @fa-var-paper-plane;
@fa-var-send-o: @fa-var-paper-plane;
@fa-var-circle-thin: @fa-var-circle;
@fa-var-header: @fa-var-heading;
@fa-var-sliders: @fa-var-sliders-h;
@fa-var-futbol-o: @fa-var-futbol;
@fa-var-soccer-ball-o: @fa-var-futbol;
@fa-var-newspaper-o: @fa-var-newspaper;
@fa-var-bell-slash-o: @fa-var-bell-slash;
@fa-var-trash: @fa-var-trash-alt;
@fa-var-eyedropper: @fa-var-eye-dropper;
@fa-var-area-chart: @fa-var-chart-area;
@fa-var-pie-chart: @fa-var-chart-pie;
@fa-var-line-chart: @fa-var-chart-line;
@fa-var-cc: @fa-var-closed-captioning;
@fa-var-ils: @fa-var-shekel-sign;
@fa-var-shekel: @fa-var-shekel-sign;
@fa-var-sheqel: @fa-var-shekel-sign;
@fa-var-meanpath: @fa-var-font-awesome;
@fa-var-diamond: @fa-var-gem;
@fa-var-intersex: @fa-var-transgender;
@fa-var-facebook-official: @fa-var-facebook;
@fa-var-hotel: @fa-var-bed;
@fa-var-yc: @fa-var-y-combinator;
@fa-var-battery-4: @fa-var-battery-full;
@fa-var-battery: @fa-var-battery-full;
@fa-var-battery-3: @fa-var-battery-three-quarters;
@fa-var-battery-2: @fa-var-battery-half;
@fa-var-battery-1: @fa-var-battery-quarter;
@fa-var-battery-0: @fa-var-battery-empty;
@fa-var-sticky-note-o: @fa-var-sticky-note;
@fa-var-hourglass-o: @fa-var-hourglass;
@fa-var-hourglass-1: @fa-var-hourglass-start;
@fa-var-hourglass-2: @fa-var-hourglass-half;
@fa-var-hourglass-3: @fa-var-hourglass-end;
@fa-var-hand-rock-o: @fa-var-hand-rock;
@fa-var-hand-grab-o: @fa-var-hand-rock;
@fa-var-hand-paper-o: @fa-var-hand-paper;
@fa-var-hand-stop-o: @fa-var-hand-paper;
@fa-var-hand-scissors-o: @fa-var-hand-scissors;
@fa-var-hand-lizard-o: @fa-var-hand-lizard;
@fa-var-hand-spock-o: @fa-var-hand-spock;
@fa-var-hand-pointer-o: @fa-var-hand-pointer;
@fa-var-hand-peace-o: @fa-var-hand-peace;
@fa-var-television: @fa-var-tv;
@fa-var-calendar-plus-o: @fa-var-calendar-plus;
@fa-var-calendar-minus-o: @fa-var-calendar-minus;
@fa-var-calendar-times-o: @fa-var-calendar-times;
@fa-var-calendar-check-o: @fa-var-calendar-check;
@fa-var-map-o: @fa-var-map;
@fa-var-commenting: @fa-var-comment-dots;
@fa-var-commenting-o: @fa-var-comment-dots;
@fa-var-vimeo: @fa-var-vimeo-v;
@fa-var-credit-card-alt: @fa-var-credit-card;
@fa-var-pause-circle-o: @fa-var-pause-circle;
@fa-var-stop-circle-o: @fa-var-stop-circle;
@fa-var-wheelchair-alt: @fa-var-accessible-icon;
@fa-var-question-circle-o: @fa-var-question-circle;
@fa-var-volume-control-phone: @fa-var-phone-volume;
@fa-var-asl-interpreting: @fa-var-american-sign-language-interpreting;
@fa-var-deafness: @fa-var-deaf;
@fa-var-hard-of-hearing: @fa-var-deaf;
@fa-var-signing: @fa-var-sign-language;
@fa-var-google-plus-official: @fa-var-google-plus;
@fa-var-google-plus-circle: @fa-var-google-plus;
@fa-var-fa: @fa-var-font-awesome;
@fa-var-handshake-o: @fa-var-handshake;
@fa-var-envelope-open-o: @fa-var-envelope-open;
@fa-var-address-book-o: @fa-var-address-book;
@fa-var-vcard: @fa-var-address-card;
@fa-var-address-card-o: @fa-var-address-card;
@fa-var-vcard-o: @fa-var-address-card;
@fa-var-user-circle-o: @fa-var-user-circle;
@fa-var-user-o: @fa-var-user;
@fa-var-drivers-license: @fa-var-id-card;
@fa-var-id-card-o: @fa-var-id-card;
@fa-var-drivers-license-o: @fa-var-id-card;
@fa-var-thermometer-4: @fa-var-thermometer-full;
@fa-var-thermometer: @fa-var-thermometer-full;
@fa-var-thermometer-3: @fa-var-thermometer-three-quarters;
@fa-var-thermometer-2: @fa-var-thermometer-half;
@fa-var-thermometer-1: @fa-var-thermometer-quarter;
@fa-var-thermometer-0: @fa-var-thermometer-empty;
@fa-var-bathtub: @fa-var-bath;
@fa-var-s15: @fa-var-bath;
@fa-var-times-rectangle: @fa-var-window-close;
@fa-var-window-close-o: @fa-var-window-close;
@fa-var-times-rectangle-o: @fa-var-window-close;
@fa-var-eercast: @fa-var-sellcast;
@fa-var-snowflake-o: @fa-var-snowflake;]]></template>
  <template type="public" title="share_controls.less" version_id="2010131" version_string="2.1.1 Beta 1"><![CDATA[.shareButtons
{
	.m-clearFix();
}

.shareButtons-buttons
{
	.shareButtons--iconic &
	{
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(35px, 1fr));
	}
}

.shareButtons-label
{
	float: left;
	margin-right: 3px;
	color: @xf-textColorMuted;
	min-height: 35px;
	line-height: 35px;
}

.shareButtons-button
{
	float: left;
	margin-right: 3px;
	padding: 6px;
	color: @xf-textColorMuted;
	font-size: 20px;
	line-height: 20px;
	white-space: nowrap;
	min-width: 35px;
	border-radius: @xf-borderRadiusSmall;
	background-color: transparent;
	.m-transition();

	&:last-of-type
	{
		margin-right: 0;
	}

	&:hover
	{
		text-decoration: none;
		color: white;
	}

	> i
	{
		display: inline-block;
		vertical-align: middle;

		.m-faBase('Pro');
	}

	&.shareButtons-button--brand
	{
		> i
		{
			.m-faBase('Brands');
		}
	}

	> span
	{
		font-weight: @xf-fontWeightNormal;
		font-size: @xf-fontSizeNormal;
	}

	.shareButtons--iconic &
	{
		text-align: center;

		> i
		{
			min-width: 20px;
		}

		> span
		{
			.m-visuallyHidden();
		}
	}

	&.shareButtons-button--facebook
	{
		&:hover { background-color: #3B5998; }
		> i:before { .m-faContent(@fa-var-facebook-f); }
	}

	&.shareButtons-button--twitter
	{
		&:hover { background-color: #1DA1F3; }
		> i:before { .m-faContent(@fa-var-twitter); }
	}

	&.shareButtons-button--pinterest
	{
		&:hover { background-color: #bd081c; }
		> i:before { .m-faContent(@fa-var-pinterest-p); }
	}

	&.shareButtons-button--tumblr
	{
		&:hover { background-color: #35465c; }
		> i:before { .m-faContent(@fa-var-tumblr); }
	}

	&.shareButtons-button--reddit
	{
		&:hover { background-color: #FF4500; }
		> i:before { .m-faContent(@fa-var-reddit-alien); }
	}

	&.shareButtons-button--whatsApp
	{
		&:hover { background-color: #25D366; }
		> i:before { .m-faContent(@fa-var-whatsapp); }
	}

	&.shareButtons-button--email
	{
		&:hover { background-color: #1289ff; }
		> i:before { .m-faContent(@fa-var-envelope); }
	}

	&.shareButtons-button--link
	{
		cursor: pointer;
		&:hover { background-color: #787878; }
		> i:before { .m-faContent(@fa-var-link); }
	}

	&.is-hidden
	{
		display: none;
	}
}

.shareInput
{
	margin-bottom: 5px;

	&:last-child
	{
		margin-bottom: 0;
	}
}

.shareInput-label
{
	font-size: @xf-fontSizeSmall;
	.m-appendColon();
}

.shareInput-button
{
	color: @xf-linkColor;
	cursor: pointer;

	> i
	{
		display: inline-block;
		vertical-align: middle;
		.m-faBase();

		&:before { .m-faContent(@fa-var-copy); }
	}

	&.is-hidden
	{
		display: none;
	}
}

.shareInput-input
{
	font-size: @xf-fontSizeSmall;

	.m-inputZoomFix();

	.shareInput-button.is-hidden + &
	{
		border-radius: @xf-borderRadiusMedium;
	}
}]]></template>
  <template type="public" title="share_page_macros" version_id="2010170" version_string="2.1.1"><![CDATA[<xf:macro name="buttons"
	arg-iconic="{{ false }}"
	arg-hideLink="{{ false }}"
	arg-label=""
	arg-pageUrl=""
	arg-pageTitle=""
	arg-pageDesc="">
	<xf:if contentcheck="true">
		<xf:css src="share_controls.less" />
		<div class="shareButtons {{ $iconic ? 'shareButtons--iconic' : '' }}" data-xf-init="share-buttons" data-page-url="{$pageUrl}" data-page-title="{$pageTitle}" data-page-desc="{$pageDesc}">
			<xf:if is="$label is not empty">
				<span class="shareButtons-label">{$label}</span>
			</xf:if>

			<div class="shareButtons-buttons">
				<xf:contentcheck>

					<xf:if is="$xf.options.facebookLike">
						<a class="shareButtons-button shareButtons-button--brand shareButtons-button--facebook" data-href="https://www.facebook.com/sharer.php?u={url}">
							<i aria-hidden="true"></i>
							<span>{{ phrase('facebook') }}</span>
						</a>
					</xf:if>

					<xf:if is="$xf.options.tweet.enabled">
						<a class="shareButtons-button shareButtons-button--brand shareButtons-button--twitter" data-href="https://twitter.com/intent/tweet?url={url}&amp;text={title}{{ $xf.options.tweet.via ? '&amp;via=' . $xf.options.tweet.via : '' }}{{ $xf.options.tweet.related ? '&amp;related=' . $xf.options.tweet.related : '' }}">
							<i aria-hidden="true"></i>
							<span>{{ phrase('twitter') }}</span>
						</a>
					</xf:if>

					<xf:if is="$xf.options.redditShare">
						<a class="shareButtons-button shareButtons-button--brand shareButtons-button--reddit" data-href="https://reddit.com/submit?url={url}&amp;title={title}">
							<i aria-hidden="true"></i>
							<span>{{ phrase('reddit') }}</span>
						</a>
					</xf:if>

					<xf:if is="$xf.options.pinterestShare">
						<a class="shareButtons-button shareButtons-button--brand shareButtons-button--pinterest" data-href="https://pinterest.com/pin/create/bookmarklet/?url={url}&amp;description={title}">
							<i aria-hidden="true"></i>
							<span>{{ phrase('pinterest') }}</span>
						</a>
					</xf:if>

					<xf:if is="$xf.options.tumblrShare">
						<a class="shareButtons-button shareButtons-button--brand shareButtons-button--tumblr" data-href="https://www.tumblr.com/widgets/share/tool?canonicalUrl={url}&amp;title={title}">
							<i aria-hidden="true"></i>
							<span>{{ phrase('tumblr') }}</span>
						</a>
					</xf:if>

					<xf:if is="$xf.options.whatsAppShare">
						<a class="shareButtons-button shareButtons-button--brand shareButtons-button--whatsApp" data-href="https://api.whatsapp.com/send?text={title}&nbsp;{url}">
							<i aria-hidden="true"></i>
							<span>{{ phrase('whatsapp') }}</span>
						</a>
					</xf:if>

					<xf:if is="$xf.options.emailShare">
						<a class="shareButtons-button shareButtons-button--email" data-href="mailto:?subject={title}&amp;body={url}">
							<i aria-hidden="true"></i>
							<span>{{ phrase('email') }}</span>
						</a>
					</xf:if>

					<xf:if is="$xf.options.linkShare AND !$hideLink">
						<a class="shareButtons-button shareButtons-button--link is-hidden" data-clipboard="{url}">
							<i aria-hidden="true"></i>
							<span>{{ phrase('link') }}</span>
						</a>
					</xf:if>
				</xf:contentcheck>
			</div>
		</div>
	</xf:if>
</xf:macro>

<xf:macro name="share_clipboard_input" arg-label="!" arg-text="!" arg-successText="">
	<xf:css src="share_controls.less" />

	<xf:set var="$id">{{ unique_id() }}</xf:set>

	<div class="shareInput" data-xf-init="share-input" data-success-text="{$successText}">
		<xf:if is="$label">
			<label class="shareInput-label" for="{$id}">{$label}</label>
		</xf:if>
		<div class="inputGroup inputGroup--joined">
			<div class="shareInput-button inputGroup-text js-shareButton is-hidden"
				data-xf-init="tooltip" title="{{ phrase('copy_to_clipboard')|for_attr }}">

				<i aria-hidden="true"></i>
			</div>
			<xf:textbox class="shareInput-input js-shareInput"
				value="{$text}" readonly="true" id="{$id}" />
		</div>
	</div>
</xf:macro>]]></template>
  <template type="public" title="share_tooltip" version_id="2010035" version_string="2.1.0 Beta 5"><![CDATA[<div class="tooltip-content-inner">
	<div class="block-minorHeader">{$tooltipTitle}</div>
	<xf:if contentcheck="true">
		<div class="block-body block-row block-row--separated block-row--separated--mergePrev">
			<xf:contentcheck>
				<xf:macro template="share_page_macros" name="buttons"
					arg-iconic="{{ true }}"
					arg-hideLink="{{ true }}"
					arg-pageUrl="{$contentUrl}"
					arg-pageTitle="{$contentTitle}"
					arg-pageDesc="{$contentDesc}" />
			</xf:contentcheck>
		</div>
	</xf:if>
	<div class="block-body block-row block-row--separated">
		<xf:macro template="share_page_macros" name="share_clipboard_input"
			arg-label=""
			arg-text="{$contentUrl}"
			arg-successText="{{ phrase('link_copied_to_clipboard') }}" />
	</div>
</div>]]></template>
  <template type="public" title="spam_cleaner" version_id="2001070" version_string="2.0.10"><![CDATA[<xf:title>{{ phrase('spam_cleaner:') }} {$user.username}</xf:title>

<xf:form action="{{ link('spam-cleaner', $user) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:formrow rowtype="fullWidth noLabel">
				<div class="contentRow">
					<div class="contentRow-figure">
						<xf:avatar user="$user" size="m" />
					</div>
					<div class="contentRow-main">
						<dl class="pairs pairs--columns">
							<dt>{{ phrase('last_activity') }}</dt>
							<dd><xf:date time="{$user.last_activity}" /></dd>
						</dl>

						<xf:if is="$xf.visitor.hasAdminPermission('user')">
							<dl class="pairs pairs--columns">
								<dt>{{ phrase('email') }}</dt>
								<dd>{$user.email}</dd>
							</dl>
						</xf:if>

						<xf:if is="$canViewIps">
							<xf:set var="$registerIp" value="{{ $user.getIp('register') }}" />

							<xf:if is="$registerIp">
								<dl class="pairs pairs--columns">
									<dt>{{ phrase('registration_ip') }}</dt>
									<dd><a class="ip concealed" href="{{ link('misc/ip-info', null, {'ip': $registerIp|ip}) }}" target="_blank">{$registerIp|ip}</a></dd>
								</dl>
							</xf:if>

							<xf:if is="$contentIp">
								<dl class="pairs pairs--columns">
									<dt>{{ phrase('content_ip') }}</dt>
									<dd><a class="ip concealed" href="{{ link('misc/ip-info', null, {'ip': $contentIp|ip}) }}" target="_blank">{$contentIp|ip}</a></dd>
								</dl>
							</xf:if>
						</xf:if>
					</div>
				</div>
			</xf:formrow>

			<xf:inforow>
				<div class="pairJustifier">
					<xf:macro template="member_macros" name="member_stat_pairs"
						arg-user="{$user}"
						arg-context="spam-cleaner" />
				</div>
			</xf:inforow>

			<xf:checkboxrow label="{{ phrase('spam_cleaner_actions') }}">
				<xf:option name="action_threads" checked="{$xf.options.spamDefaultOptions.action_threads}">
					<xf:label>
						<xf:if is="$xf.options.spamThreadAction.action == 'move'">
							{{ phrase('move_spammers_threads') }}
						<xf:else />
							{{ phrase('delete_spammers_threads') }}
						</xf:if>
					</xf:label>
				</xf:option>
				<xf:option name="delete_messages" checked="{$xf.options.spamDefaultOptions.delete_messages}">
					<xf:label>{{ phrase('delete_spammers_messages') }}</xf:label>
				</xf:option>
				<xf:option name="delete_conversations" checked="{$xf.options.spamDefaultOptions.delete_conversations}">
					<xf:label>{{ phrase('delete_conversations_by_spammer') }}</xf:label>
				</xf:option>
				<xf:option name="ban_user" checked="{$xf.options.spamDefaultOptions.ban_user}">
					<xf:label>{{ phrase('ban_spammer') }}</xf:label>
				</xf:option>
				<xf:if is="$canViewIps">
					<xf:option name="check_ips" checked="{$xf.options.spamDefaultOptions.check_ips}">
						<xf:label>{{ phrase('check_spammers_ips') }}</xf:label>
					</xf:option>
				</xf:if>
			</xf:checkboxrow>
		</div>

		<xf:submitrow submit="{{ phrase('clean') }}" />
	</div>

	<xf:hiddenval name="no_redirect">{$noRedirect}</xf:hiddenval>
</xf:form>]]></template>
  <template type="public" title="spam_cleaner_check_ips" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('spam_cleaner_ip_address_check') }}</xf:title>

<xf:breadcrumb href="{{ link('full:members', $user) }}">{$user.username}</xf:breadcrumb>
<xf:breadcrumb href="{{ link('full:spam-cleaner', $user) }}">{{ phrase('spam_cleaner') }}</xf:breadcrumb>

<xf:macro template="member_shared_ips_list" name="shared_block" arg-user="{$spammer}" arg-shared="{$shared}" />]]></template>
  <template type="public" title="structured_list.less" version_id="2010131" version_string="2.1.1 Beta 1"><![CDATA[@_structItem-avatarSize: 36px;
@_structItem-avatarSizeExpanded: 48px;
@_structItem-avatarSizeEnd: @avatar-xxs;
@_structItem-cellPaddingH: ((@xf-paddingMedium) + (@xf-paddingLarge)) / 2; // average
@_structItem-cellPaddingV: @xf-paddingLarge;

.structItemContainer
{
	border-collapse: collapse;
	list-style: none;
	margin: 0;
	padding: 0;
	width: 100%;
}

.structItemContainer-group
{
}

.structItemContainer > .structItem:first-child,
.structItemContainer > .structItemContainer-group:first-child > .structItem:first-child
{
	border-top: none;
}

.structItem
{
	display: table;
	table-layout: fixed;
	border-collapse: collapse;
	border-top: @xf-borderSize solid @xf-borderColorFaint;
	list-style: none;
	margin: 0;
	padding: 0;
	width: 100%;

	&.is-highlighted,
	&.is-moderated
	{
		background: @xf-contentHighlightBg;
	}

	&.is-deleted
	{
		opacity: .7;

		.structItem-title
		{
			text-decoration: line-through;
		}
	}

	&.is-mod-selected
	{
		background: @xf-inlineModHighlightColor;
		opacity: 1;
	}
}

.structItem-cell
{
	display: table-cell;
	vertical-align: top;
	padding: @_structItem-cellPaddingV @_structItem-cellPaddingH;

	.structItem--middle &
	{
		vertical-align: middle;
	}

	&.structItem-cell--icon
	{
		width: ((@_structItem-avatarSize) + (@_structItem-cellPaddingH) * 2);
		position: relative;

		&.structItem-cell--iconExpanded
		{
			width: ((@_structItem-avatarSizeExpanded) + (@_structItem-cellPaddingH) * 2);
		}

		&.structItem-cell--iconEnd
		{
			width: ((@_structItem-avatarSizeEnd) + (@_structItem-cellPaddingH) * 2);
			padding-left: @_structItem-cellPaddingH / 2;

			.structItem-iconContainer
			{
				padding-top: @xf-paddingMedium;
			}
		}

		&.structItem-cell--iconFixedSmall
		{
			width: (60px + (@_structItem-cellPaddingH) * 2);
		}
	}

	&.structItem-cell--meta
	{
		width: 135px;
	}

	&.structItem-cell--latest
	{
		width: 190px;
		text-align: right;
	}
}

.structItem-iconContainer
{
	position: relative;

	img
	{
		display: block;
		width: 100%;
	}

	.avatar
	{
		.m-avatarSize(@_structItem-avatarSize);

		&.avatar--xxs
		{
			.m-avatarSize(@_structItem-avatarSizeEnd);
		}
	}

	.structItem-secondaryIcon
	{
		position: absolute;
		right: -5px;
		bottom: -5px;

		.m-avatarSize(@_structItem-avatarSize / 2  + 2px);
	}

	.structItem-cell--iconExpanded &
	{
		.avatar
		{
			.m-avatarSize(@_structItem-avatarSizeExpanded);
		}

		.structItem-secondaryIcon
		{
			.m-avatarSize(@_structItem-avatarSizeExpanded / 2 - 2px);
		}
	}
}

.structItem-title
{
	font-size: @xf-fontSizeLarge;
	font-weight: @xf-fontWeightNormal;
	margin: 0;
	padding: 0;

	.label
	{
		font-weight: @xf-fontWeightNormal;
	}

	.is-unread &
	{
		font-weight: @xf-fontWeightHeavy;
	}
}

.structItem-minor
{
	font-size: @xf-fontSizeSmaller;
	color: @xf-textColorMuted;

	.m-hiddenLinks();
}

.structItem-parts
{
	.m-listPlain();
	display: inline;

	> li
	{
		display: inline;
		margin: 0;
		padding: 0;

		&:nth-child(even)
		{
			color: @xf-textColorDimmed;
		}

		&:before
		{
			content: "\00B7\20";
		}

		&:first-child:before
		{
			content: "";
			display: none;
		}
	}
}

.structItem-pageJump
{
	margin-left: 8px;
	font-size: @xf-fontSizeSmallest;

	a
	{
		.xf-chip();
		text-decoration: none;
		border-radius: @xf-borderRadiusSmall;
		padding: 0 3px;
		opacity: .5;
		.m-transition();

		.structItem:hover &,
		.has-touchevents &
		{
			opacity: 1;
		}

		&:hover
		{
			text-decoration: none;
			.xf-chipHover();
		}
	}
}

.structItem-statuses,
.structItem-extraInfo
{
	.m-listPlain();
	float: right;

	> li
	{
		float: left;
		margin-left: 8px;
	}

	input[type=checkbox]
	{
		.m-checkboxAligner();
	}
}

.structItem-statuses .reactionSummary
{
	vertical-align: -2px;
}

.structItem-extraInfo .reactionSummary
{
	vertical-align: middle;
}

.structItem-status
{
	&::before
	{
		.m-faBase();
		display: inline-block;
		font-size: 90%;
		color: @xf-textColorMuted;
	}

	&--deleted::before { .m-faContent(@fa-var-trash-alt); }
	&--locked::before { .m-faContent(@fa-var-lock); }
	&--moderated::before { .m-faContent(@fa-var-shield); color: @xf-textColorAttention; }
	&--redirect::before { .m-faContent(@fa-var-external-link); }
	&--starred::before { .m-faContent(@fa-var-star); color: @xf-starFullColor; }
	&--sticky::before { .m-faContent(@fa-var-thumbtack); }
	&--watched::before { .m-faContent(@fa-var-eye); color: @xf-textColorFeature; }
	&--poll::before { .m-faContent(@fa-var-chart-bar); }
	&--attention::before { .m-faContent(@fa-var-bullhorn); color: @xf-textColorAttention; }
}

.structItem.structItem--note
{
	.xf-contentHighlightBase();
	color: @xf-textColorFeature;

	.structItem-cell
	{
		padding-top: @_structItem-cellPaddingV / 2;
		padding-bottom: @_structItem-cellPaddingV / 2;
		font-size: @xf-fontSizeSmaller;
		text-align: center;
	}
}

@media (max-width: @xf-responsiveWide)
{
	.structItem-cell
	{
		vertical-align: top;

		&.structItem-cell--meta
		{
			width: 115px;
			font-size: @xf-fontSizeSmaller;
		}

		&.structItem-cell--latest
		{
			width: 140px;
			font-size: @xf-fontSizeSmaller;
		}
	}
}

@media (max-width: @xf-responsiveMedium)
{
	.structItem-cell
	{
		//padding: (@_structItem-cellPaddingV) / 2 @_structItem-cellPaddingH;

		&.structItem-cell--main
		{
			display: block;
			padding-bottom: .2em;
			padding-left: 0;
		}

		&.structItem-cell--meta
		{
			display: block;
			width: auto;
			float: left;
			padding-top: 0;
			padding-left: 0;
			padding-right: 0;
			color: @xf-textColorMuted;

			.structItem-minor
			{
				display: none;
			}

			.pairs
			{
				> dt,
				> dd
				{
					display: inline;
					float: none;
					margin: 0;
				}
			}
		}

		&.structItem-cell--latest
		{
			display: block;
			width: auto;
			float: left;
			padding-top: 0;
			padding-left: 0;

			&:before
			{
				content: "\00A0\00B7\20";
				color: @xf-textColorMuted;
			}

			a
			{
				color: @xf-textColorMuted;
			}

			.structItem-minor
			{
				display: none;
			}
		}

		&.structItem-cell--iconEnd
		{
			display: none;
		}
	}

	.structItem-pageJump,
	.structItem-extraInfoMinor
	{
		display: none;
	}

	.is-unread .structItem-latestDate
	{
		font-weight: @xf-fontWeightNormal;
	}
}

@media (max-width: @xf-responsiveNarrow)
{
	.structItem-parts
	{
		.structItem-startDate
		{
			display: none;
		}
	}
}]]></template>
  <template type="public" title="style_chooser" version_id="2000053" version_string="2.0.0 Release Candidate 3"><![CDATA[<xf:title>{{ phrase('style_chooser') }}</xf:title>

<xf:head option="metaNoindex"><meta name="robots" content="noindex" /></xf:head>

<div class="block">
	<div class="block-container">
		<xf:if is="$style">
			<div class="block-body">
				<xf:inforow rowtype="confirm">
					{{ phrase('please_confirm_that_you_would_like_to_change_to_following_style:') }}
					<strong>{$style.title}</strong>
				</xf:inforow>
			</div>

			<xf:submitrow rowtype="simple"><xf:html>
				<xf:button href="{{ link('misc/style', null, {
					'style_id': $style.style_id,
					't': csrf_token(),
					'_xfRedirect': $redirect})
				}}" class="button--primary" icon="save" />
			</xf:html></xf:submitrow>
		<xf:else />
			<a href="{{ link('misc/style', null, {
				'style_id': 0, '_xfRedirect': $redirect, 't': csrf_token()
			}) }}" class="menu-linkRow menu-linkRow--alt">{{ phrase('use_default_style') }}</a>
			<div class="block-body">
				<ul class="listPlain listColumns">
					<xf:foreach loop="$styles" value="$style">
						<li>
							<a href="{{ link('misc/style', null, {
								'style_id': $style.style_id,
								'_xfRedirect': $redirect,
								't': csrf_token()
							}) }}" class="menu-linkRow">{$style.title}{{ !$style.user_selectable ? ' *' : '' }}</a>
						</li>
					</xf:foreach>
				</ul>
			</div>
		</xf:if>
	</div>
</div>]]></template>
  <template type="public" title="tag.less" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[.tagCloud-tag
{
	display: inline-block;
	margin-right: 8px;

	&:last-child
	{
		margin-right: 0;
	}

	&Level1 { font-size: 100%; color: xf-diminish(@xf-linkColor, 10%); }
	&Level2 { font-size: 100%; }
	&Level3 { font-size: 125%; }
	&Level4 { font-size: 150%; }
	&Level5 { font-size: 175%; }
	&Level6 { font-size: 200%; }
	&Level7 { font-size: 225%; color: xf-intensify(@xf-linkColor, 10%); }
}]]></template>
  <template type="public" title="tag_macros" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:macro name="edit_rows"
	arg-uneditableTags="!"
	arg-editableTags="!"
	arg-minTags="{{ 0 }}"
	arg-tagList="">

	<xf:js src="xf/tag.js" />

	<xf:if is="$uneditableTags">
		<xf:formrow label="{{ phrase('uneditable_tags') }}">
			{$uneditableTags|pluck('tag')|join(', ')}
		</xf:formrow>
	</xf:if>

	<xf:tokeninputrow name="tags" value="{$editableTags|pluck('tag')|join(', ')}" href="{{ link('misc/tag-auto-complete') }}"
		label="{{ phrase('tags') }}">

		<xf:explain>
			{{ phrase('multiple_tags_may_be_separated_by_commas') }}
			<xf:if is="$minTags">
				{{ phrase('this_content_must_have_at_least_x_tags', {'min': $minTags}) }}
			</xf:if>
		</xf:explain>
	</xf:tokeninputrow>
</xf:macro>

<xf:macro name="edit_form"
	arg-action="!"
	arg-uneditableTags="!"
	arg-editableTags="!"
	arg-minTags="{{ 0 }}"
	arg-tagList="">

	<xf:form action="{$action}" class="block" ajax="true" data-xf-init="tagger" data-tag-list="{$tagList}">
		<div class="block-container">
			<div class="block-body">
				<xf:macro name="edit_rows"
					arg-uneditableTags="{$uneditableTags}"
					arg-editableTags="{$editableTags}"
					arg-minTags="{$minTags}"
					arg-listElement="{$listElement}" />
			</div>
			<xf:submitrow icon="save" />
		</div>
	</xf:form>
</xf:macro>

<xf:macro name="list"
	arg-tags="!"
	arg-tagList="!"
	arg-editLink="!"
	arg-containerClass="">

	<xf:set var="$tagIcon">
		<xf:fa icon="fa-tags" title="{{ phrase('tags')|for_attr }}" />
		<span class="u-srOnly">{{ phrase('tags') }}</span>
	</xf:set>

	<dl class="tagList {$tagList} {{ $containerClass ?: '' }}">
		<dt>
			<xf:if is="$editLink">
				<a href="{$editLink}" class="u-concealed--icon"
					data-xf-click="overlay"
					data-xf-init="tooltip" title="{{ phrase('edit_tags')|for_attr }}">{$tagIcon}</a>
			<xf:else />
				{$tagIcon}
			</xf:if>
		</dt>
		<dd>
			<span class="js-tagList">
				<xf:if is="$tags">
					<xf:foreach loop="$tags" value="$tag">
						<a href="{{ link('tags', $tag) }}" class="tagItem" dir="auto">{$tag.tag}</a>
					</xf:foreach>
				<xf:else />
					{{ phrase('none') }}
				</xf:if>
			</span>
		</dd>
	</dl>

</xf:macro>]]></template>
  <template type="public" title="tag_search" version_id="2010052" version_string="2.1.0 Release Candidate 2"><![CDATA[<xf:title>{{ phrase('search_tags') }}</xf:title>

<xf:breadcrumb href="{{ link('tags') }}">{{ phrase('tags') }}</xf:breadcrumb>

<xf:head option="robots"><meta name="robots" content="noindex" /></xf:head>

<xf:css src="tag.less" />

<xf:form action="{{ link('tags') }}" class="block" ajax="true">
	<div class="block-container">
		<h2 class="block-tabHeader tabs hScroller" data-xf-init="h-scroller">
			<span class="hScroller-scroll">
				<a href="{{ link('search') }}" class="tabs-tab">{{ phrase('search_everything') }}</a>
				<xf:foreach loop="$tabs" key="$tabType" value="$tab">
					<a href="{{ link('search', null, {'type': $tabType}) }}" class="tabs-tab{{ $type == $tabType ? ' is-active' : '' }}">{$tab.title}</a>
				</xf:foreach>
				<xf:if is="$xf.options.enableTagging">
					<a href="{{ link('tags') }}" class="tabs-tab is-active">{{ phrase('search_tags') }}</a>
				</xf:if>
			</span>
		</h2>
		<div class="block-body">
			<xf:tokeninputrow name="tags" value="{$tags}" href="{{ link('misc/tag-auto-complete') }}"
				label="{{ phrase('tags') }}" />
		</div>
		<xf:submitrow icon="search" />
	</div>
</xf:form>

<xf:if is="$tagCloud">
	<div class="block">
		<div class="block-container">
			<h3 class="block-header">{{ phrase('popular_tags') }}</h3>
			<div class="block-body block-row tagCloud">
			<xf:foreach loop="$tagCloud" value="$cloudEntry">
				<a href="{{ link('tags', $cloudEntry.tag) }}" class="tagCloud-tag tagCloud-tagLevel{$cloudEntry.level}">{$cloudEntry.tag.tag}</a>
			</xf:foreach>
			</div>
		</div>
	</div>
</xf:if>]]></template>
  <template type="public" title="tag_view" version_id="2000034" version_string="2.0.0 Beta 4"><![CDATA[<xf:title page="{$page}">{$tag.tag}</xf:title>

<xf:breadcrumb href="{{ link('tags') }}">{{ phrase('tags') }}</xf:breadcrumb>

<xf:if is="$activeModType">
	<xf:js src="xf/inline_mod.js" min="1" />
</xf:if>

<div class="block" data-xf-init="{{ $activeModType ? 'inline-mod' : '' }}" data-type="{$activeModType}" data-href="{{ link('inline-mod') }}">
	<xf:if is="$modTypes">
		<div class="block-outer">
			<div class="block-outer-opposite">
				<div class="buttonGroup">
					<xf:if is="$activeModType">
						<xf:macro template="inline_mod_macros" name="button" />
					</xf:if>
					<div class="buttonGroup-buttonWrapper">
						<xf:button class="button--link menuTrigger" data-xf-click="menu" aria-expanded="false" aria-haspopup="true">{{ phrase('enable_moderation') }}</xf:button>
						<div class="menu" data-menu="menu" aria-hidden="true">
							<div class="menu-content">
								<h3 class="menu-header">{{ phrase('enable_moderation') }}</h3>
								<xf:foreach loop="$modTypes" key="$type" value="$text">
									<a href="{{ link('tags', $tag, {'mod': $type,  'page': $page}) }}" class="menu-linkRow {{ $activeModType == $type ? 'is-selected' : '' }}">{$text}</a>
								</xf:foreach>
								<xf:if is="$activeModType">
									<hr class="menu-separator" />
									<a href="{{ link('tags', $tag, {'page': $page}) }}" class="menu-linkRow">{{ phrase('disable') }}</a>
								</xf:if>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</xf:if>

	<div class="block-container">
		<ol class="block-body">
			<xf:foreach loop="$results" value="$result">
				{{ $result.render({'mod': $activeModType})|raw }}
			</xf:foreach>
		</ol>
	</div>
	<div class="block-outer block-outer--after">
		<xf:pagenav
			page="{$page}" perpage="{$perPage}" total="{$totalResults}"
			link="tags" data="{$tag}" params="{{ {'mod': $activeModType} }}"
			wrapperclass="block-outer-main" />
		<xf:showignored wrapperclass="block-outer-opposite" />
	</div>
</div>]]></template>
  <template type="public" title="tel_box" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:js prod="xf/tel_box-compiled.js" dev="vendor/intl-tel-input/intlTelInput.min.js, vendor/intl-tel-input/utils.js, xf/tel_box.js" />

<xf:css src="tel_box.less" />

<div data-xf-init="tel-box">
	<input type="tel" name="{$name}" value="{$value}" class="input js-telInput" {$attrsHtml|raw} />

	<xf:hiddenval name="{$dialCodeName}" class="js-dialCode" />
	<xf:hiddenval name="{$intlNumberName}" class="js-intlNumb" />
</div>]]></template>
  <template type="public" title="tel_box.less" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[/**
 * Below are XF overrides; mostly for the sprite location
 * If updating code ensure the default background calls
 * in the .iti-flag section are removed
 */

@_path: ~'styles/default/xenforo/flags/';

#XF
{
	.intl-tel-input
	{
		display: block;
	}
	
	.iti-flag
	{
		background-image: url("@{_path}flags.png");

		@media only screen and (-webkit-min-device-pixel-ratio: 2),
		only screen and (min--moz-device-pixel-ratio: 2),
		only screen and (-o-min-device-pixel-ratio: 2 / 1),
		only screen and (min-device-pixel-ratio: 2),
		only screen and (min-resolution: 192dpi),
		only screen and (min-resolution: 2dppx)
		{
			background-image: url("@{_path}flags@2x.png");
		}
	}
}

/**
 * Default library CSS
 */
.intl-tel-input {
  position: relative;
  display: inline-block; }
  .intl-tel-input * {
    box-sizing: border-box;
    -moz-box-sizing: border-box; }
  .intl-tel-input .hide {
    display: none; }
  .intl-tel-input .v-hide {
    visibility: hidden; }
  .intl-tel-input input, .intl-tel-input input[type=text], .intl-tel-input input[type=tel] {
    position: relative;
    z-index: 0;
    margin-top: 0 !important;
    margin-bottom: 0 !important;
    padding-right: 36px;
    margin-right: 0; }
  .intl-tel-input .flag-container {
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0;
    padding: 1px; }
  .intl-tel-input .selected-flag {
    z-index: 1;
    position: relative;
    width: 36px;
    height: 100%;
    padding: 0 0 0 8px; }
    .intl-tel-input .selected-flag .iti-flag {
      position: absolute;
      top: 0;
      bottom: 0;
      margin: auto; }
    .intl-tel-input .selected-flag .iti-arrow {
      position: absolute;
      top: 50%;
      margin-top: -2px;
      right: 6px;
      width: 0;
      height: 0;
      border-left: 3px solid transparent;
      border-right: 3px solid transparent;
      border-top: 4px solid #555; }
      .intl-tel-input .selected-flag .iti-arrow.up {
        border-top: none;
        border-bottom: 4px solid #555; }
  .intl-tel-input .country-list {
    position: absolute;
    z-index: 2;
    list-style: none;
    text-align: left;
    padding: 0;
    margin: 0 0 0 -1px;
    box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.2);
    background-color: white;
    border: 1px solid #CCC;
    white-space: nowrap;
    max-height: 200px;
    overflow-y: scroll; }
    .intl-tel-input .country-list.dropup {
      bottom: 100%;
      margin-bottom: -1px; }
    .intl-tel-input .country-list .flag-box {
      display: inline-block;
      width: 20px; }
    @media (max-width: 500px) {
      .intl-tel-input .country-list {
        white-space: normal; } }
    .intl-tel-input .country-list .divider {
      padding-bottom: 5px;
      margin-bottom: 5px;
      border-bottom: 1px solid #CCC; }
    .intl-tel-input .country-list .country {
      padding: 5px 10px; }
      .intl-tel-input .country-list .country .dial-code {
        color: #999; }
    .intl-tel-input .country-list .country.highlight {
      background-color: rgba(0, 0, 0, 0.05); }
    .intl-tel-input .country-list .flag-box, .intl-tel-input .country-list .country-name, .intl-tel-input .country-list .dial-code {
      vertical-align: middle; }
    .intl-tel-input .country-list .flag-box, .intl-tel-input .country-list .country-name {
      margin-right: 6px; }
  .intl-tel-input.allow-dropdown input, .intl-tel-input.allow-dropdown input[type=text], .intl-tel-input.allow-dropdown input[type=tel], .intl-tel-input.separate-dial-code input, .intl-tel-input.separate-dial-code input[type=text], .intl-tel-input.separate-dial-code input[type=tel] {
    padding-right: 6px;
    padding-left: 52px;
    margin-left: 0; }
  .intl-tel-input.allow-dropdown .flag-container, .intl-tel-input.separate-dial-code .flag-container {
    right: auto;
    left: 0; }
  .intl-tel-input.allow-dropdown .selected-flag, .intl-tel-input.separate-dial-code .selected-flag {
    width: 46px; }
  .intl-tel-input.allow-dropdown .flag-container:hover {
    cursor: pointer; }
    .intl-tel-input.allow-dropdown .flag-container:hover .selected-flag {
      background-color: rgba(0, 0, 0, 0.05); }
  .intl-tel-input.allow-dropdown input[disabled] + .flag-container:hover, .intl-tel-input.allow-dropdown input[readonly] + .flag-container:hover {
    cursor: default; }
    .intl-tel-input.allow-dropdown input[disabled] + .flag-container:hover .selected-flag, .intl-tel-input.allow-dropdown input[readonly] + .flag-container:hover .selected-flag {
      background-color: transparent; }
  .intl-tel-input.separate-dial-code .selected-flag {
    background-color: rgba(0, 0, 0, 0.05);
    display: table; }
  .intl-tel-input.separate-dial-code .selected-dial-code {
    display: table-cell;
    vertical-align: middle;
    padding-left: 28px; }
  .intl-tel-input.separate-dial-code.iti-sdc-2 input, .intl-tel-input.separate-dial-code.iti-sdc-2 input[type=text], .intl-tel-input.separate-dial-code.iti-sdc-2 input[type=tel] {
    padding-left: 66px; }
  .intl-tel-input.separate-dial-code.iti-sdc-2 .selected-flag {
    width: 60px; }
  .intl-tel-input.separate-dial-code.allow-dropdown.iti-sdc-2 input, .intl-tel-input.separate-dial-code.allow-dropdown.iti-sdc-2 input[type=text], .intl-tel-input.separate-dial-code.allow-dropdown.iti-sdc-2 input[type=tel] {
    padding-left: 76px; }
  .intl-tel-input.separate-dial-code.allow-dropdown.iti-sdc-2 .selected-flag {
    width: 70px; }
  .intl-tel-input.separate-dial-code.iti-sdc-3 input, .intl-tel-input.separate-dial-code.iti-sdc-3 input[type=text], .intl-tel-input.separate-dial-code.iti-sdc-3 input[type=tel] {
    padding-left: 74px; }
  .intl-tel-input.separate-dial-code.iti-sdc-3 .selected-flag {
    width: 68px; }
  .intl-tel-input.separate-dial-code.allow-dropdown.iti-sdc-3 input, .intl-tel-input.separate-dial-code.allow-dropdown.iti-sdc-3 input[type=text], .intl-tel-input.separate-dial-code.allow-dropdown.iti-sdc-3 input[type=tel] {
    padding-left: 84px; }
  .intl-tel-input.separate-dial-code.allow-dropdown.iti-sdc-3 .selected-flag {
    width: 78px; }
  .intl-tel-input.separate-dial-code.iti-sdc-4 input, .intl-tel-input.separate-dial-code.iti-sdc-4 input[type=text], .intl-tel-input.separate-dial-code.iti-sdc-4 input[type=tel] {
    padding-left: 82px; }
  .intl-tel-input.separate-dial-code.iti-sdc-4 .selected-flag {
    width: 76px; }
  .intl-tel-input.separate-dial-code.allow-dropdown.iti-sdc-4 input, .intl-tel-input.separate-dial-code.allow-dropdown.iti-sdc-4 input[type=text], .intl-tel-input.separate-dial-code.allow-dropdown.iti-sdc-4 input[type=tel] {
    padding-left: 92px; }
  .intl-tel-input.separate-dial-code.allow-dropdown.iti-sdc-4 .selected-flag {
    width: 86px; }
  .intl-tel-input.separate-dial-code.iti-sdc-5 input, .intl-tel-input.separate-dial-code.iti-sdc-5 input[type=text], .intl-tel-input.separate-dial-code.iti-sdc-5 input[type=tel] {
    padding-left: 90px; }
  .intl-tel-input.separate-dial-code.iti-sdc-5 .selected-flag {
    width: 84px; }
  .intl-tel-input.separate-dial-code.allow-dropdown.iti-sdc-5 input, .intl-tel-input.separate-dial-code.allow-dropdown.iti-sdc-5 input[type=text], .intl-tel-input.separate-dial-code.allow-dropdown.iti-sdc-5 input[type=tel] {
    padding-left: 100px; }
  .intl-tel-input.separate-dial-code.allow-dropdown.iti-sdc-5 .selected-flag {
    width: 94px; }
  .intl-tel-input.iti-container {
    position: absolute;
    top: -1000px;
    left: -1000px;
    z-index: 1060;
    padding: 1px; }
    .intl-tel-input.iti-container:hover {
      cursor: pointer; }

.iti-mobile .intl-tel-input.iti-container {
  top: 30px;
  bottom: 30px;
  left: 30px;
  right: 30px;
  position: fixed; }

.iti-mobile .intl-tel-input .country-list {
  max-height: 100%;
  width: 100%; }
  .iti-mobile .intl-tel-input .country-list .country {
    padding: 10px 10px;
    line-height: 1.5em; }

.iti-flag {
  width: 20px; }
  .iti-flag.be {
    width: 18px; }
  .iti-flag.ch {
    width: 15px; }
  .iti-flag.mc {
    width: 19px; }
  .iti-flag.ne {
    width: 18px; }
  .iti-flag.np {
    width: 13px; }
  .iti-flag.va {
    width: 15px; }
  @media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min--moz-device-pixel-ratio: 2), only screen and (-o-min-device-pixel-ratio: 2 / 1), only screen and (min-device-pixel-ratio: 2), only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx) {
    .iti-flag {
      background-size: 5630px 15px; } }
  .iti-flag.ac {
    height: 10px;
    background-position: 0px 0px; }
  .iti-flag.ad {
    height: 14px;
    background-position: -22px 0px; }
  .iti-flag.ae {
    height: 10px;
    background-position: -44px 0px; }
  .iti-flag.af {
    height: 14px;
    background-position: -66px 0px; }
  .iti-flag.ag {
    height: 14px;
    background-position: -88px 0px; }
  .iti-flag.ai {
    height: 10px;
    background-position: -110px 0px; }
  .iti-flag.al {
    height: 15px;
    background-position: -132px 0px; }
  .iti-flag.am {
    height: 10px;
    background-position: -154px 0px; }
  .iti-flag.ao {
    height: 14px;
    background-position: -176px 0px; }
  .iti-flag.aq {
    height: 14px;
    background-position: -198px 0px; }
  .iti-flag.ar {
    height: 13px;
    background-position: -220px 0px; }
  .iti-flag.as {
    height: 10px;
    background-position: -242px 0px; }
  .iti-flag.at {
    height: 14px;
    background-position: -264px 0px; }
  .iti-flag.au {
    height: 10px;
    background-position: -286px 0px; }
  .iti-flag.aw {
    height: 14px;
    background-position: -308px 0px; }
  .iti-flag.ax {
    height: 13px;
    background-position: -330px 0px; }
  .iti-flag.az {
    height: 10px;
    background-position: -352px 0px; }
  .iti-flag.ba {
    height: 10px;
    background-position: -374px 0px; }
  .iti-flag.bb {
    height: 14px;
    background-position: -396px 0px; }
  .iti-flag.bd {
    height: 12px;
    background-position: -418px 0px; }
  .iti-flag.be {
    height: 15px;
    background-position: -440px 0px; }
  .iti-flag.bf {
    height: 14px;
    background-position: -460px 0px; }
  .iti-flag.bg {
    height: 12px;
    background-position: -482px 0px; }
  .iti-flag.bh {
    height: 12px;
    background-position: -504px 0px; }
  .iti-flag.bi {
    height: 12px;
    background-position: -526px 0px; }
  .iti-flag.bj {
    height: 14px;
    background-position: -548px 0px; }
  .iti-flag.bl {
    height: 14px;
    background-position: -570px 0px; }
  .iti-flag.bm {
    height: 10px;
    background-position: -592px 0px; }
  .iti-flag.bn {
    height: 10px;
    background-position: -614px 0px; }
  .iti-flag.bo {
    height: 14px;
    background-position: -636px 0px; }
  .iti-flag.bq {
    height: 14px;
    background-position: -658px 0px; }
  .iti-flag.br {
    height: 14px;
    background-position: -680px 0px; }
  .iti-flag.bs {
    height: 10px;
    background-position: -702px 0px; }
  .iti-flag.bt {
    height: 14px;
    background-position: -724px 0px; }
  .iti-flag.bv {
    height: 15px;
    background-position: -746px 0px; }
  .iti-flag.bw {
    height: 14px;
    background-position: -768px 0px; }
  .iti-flag.by {
    height: 10px;
    background-position: -790px 0px; }
  .iti-flag.bz {
    height: 14px;
    background-position: -812px 0px; }
  .iti-flag.ca {
    height: 10px;
    background-position: -834px 0px; }
  .iti-flag.cc {
    height: 10px;
    background-position: -856px 0px; }
  .iti-flag.cd {
    height: 15px;
    background-position: -878px 0px; }
  .iti-flag.cf {
    height: 14px;
    background-position: -900px 0px; }
  .iti-flag.cg {
    height: 14px;
    background-position: -922px 0px; }
  .iti-flag.ch {
    height: 15px;
    background-position: -944px 0px; }
  .iti-flag.ci {
    height: 14px;
    background-position: -961px 0px; }
  .iti-flag.ck {
    height: 10px;
    background-position: -983px 0px; }
  .iti-flag.cl {
    height: 14px;
    background-position: -1005px 0px; }
  .iti-flag.cm {
    height: 14px;
    background-position: -1027px 0px; }
  .iti-flag.cn {
    height: 14px;
    background-position: -1049px 0px; }
  .iti-flag.co {
    height: 14px;
    background-position: -1071px 0px; }
  .iti-flag.cp {
    height: 14px;
    background-position: -1093px 0px; }
  .iti-flag.cr {
    height: 12px;
    background-position: -1115px 0px; }
  .iti-flag.cu {
    height: 10px;
    background-position: -1137px 0px; }
  .iti-flag.cv {
    height: 12px;
    background-position: -1159px 0px; }
  .iti-flag.cw {
    height: 14px;
    background-position: -1181px 0px; }
  .iti-flag.cx {
    height: 10px;
    background-position: -1203px 0px; }
  .iti-flag.cy {
    height: 13px;
    background-position: -1225px 0px; }
  .iti-flag.cz {
    height: 14px;
    background-position: -1247px 0px; }
  .iti-flag.de {
    height: 12px;
    background-position: -1269px 0px; }
  .iti-flag.dg {
    height: 10px;
    background-position: -1291px 0px; }
  .iti-flag.dj {
    height: 14px;
    background-position: -1313px 0px; }
  .iti-flag.dk {
    height: 15px;
    background-position: -1335px 0px; }
  .iti-flag.dm {
    height: 10px;
    background-position: -1357px 0px; }
  .iti-flag.do {
    height: 13px;
    background-position: -1379px 0px; }
  .iti-flag.dz {
    height: 14px;
    background-position: -1401px 0px; }
  .iti-flag.ea {
    height: 14px;
    background-position: -1423px 0px; }
  .iti-flag.ec {
    height: 14px;
    background-position: -1445px 0px; }
  .iti-flag.ee {
    height: 13px;
    background-position: -1467px 0px; }
  .iti-flag.eg {
    height: 14px;
    background-position: -1489px 0px; }
  .iti-flag.eh {
    height: 10px;
    background-position: -1511px 0px; }
  .iti-flag.er {
    height: 10px;
    background-position: -1533px 0px; }
  .iti-flag.es {
    height: 14px;
    background-position: -1555px 0px; }
  .iti-flag.et {
    height: 10px;
    background-position: -1577px 0px; }
  .iti-flag.eu {
    height: 14px;
    background-position: -1599px 0px; }
  .iti-flag.fi {
    height: 12px;
    background-position: -1621px 0px; }
  .iti-flag.fj {
    height: 10px;
    background-position: -1643px 0px; }
  .iti-flag.fk {
    height: 10px;
    background-position: -1665px 0px; }
  .iti-flag.fm {
    height: 11px;
    background-position: -1687px 0px; }
  .iti-flag.fo {
    height: 15px;
    background-position: -1709px 0px; }
  .iti-flag.fr {
    height: 14px;
    background-position: -1731px 0px; }
  .iti-flag.ga {
    height: 15px;
    background-position: -1753px 0px; }
  .iti-flag.gb {
    height: 10px;
    background-position: -1775px 0px; }
  .iti-flag.gd {
    height: 12px;
    background-position: -1797px 0px; }
  .iti-flag.ge {
    height: 14px;
    background-position: -1819px 0px; }
  .iti-flag.gf {
    height: 14px;
    background-position: -1841px 0px; }
  .iti-flag.gg {
    height: 14px;
    background-position: -1863px 0px; }
  .iti-flag.gh {
    height: 14px;
    background-position: -1885px 0px; }
  .iti-flag.gi {
    height: 10px;
    background-position: -1907px 0px; }
  .iti-flag.gl {
    height: 14px;
    background-position: -1929px 0px; }
  .iti-flag.gm {
    height: 14px;
    background-position: -1951px 0px; }
  .iti-flag.gn {
    height: 14px;
    background-position: -1973px 0px; }
  .iti-flag.gp {
    height: 14px;
    background-position: -1995px 0px; }
  .iti-flag.gq {
    height: 14px;
    background-position: -2017px 0px; }
  .iti-flag.gr {
    height: 14px;
    background-position: -2039px 0px; }
  .iti-flag.gs {
    height: 10px;
    background-position: -2061px 0px; }
  .iti-flag.gt {
    height: 13px;
    background-position: -2083px 0px; }
  .iti-flag.gu {
    height: 11px;
    background-position: -2105px 0px; }
  .iti-flag.gw {
    height: 10px;
    background-position: -2127px 0px; }
  .iti-flag.gy {
    height: 12px;
    background-position: -2149px 0px; }
  .iti-flag.hk {
    height: 14px;
    background-position: -2171px 0px; }
  .iti-flag.hm {
    height: 10px;
    background-position: -2193px 0px; }
  .iti-flag.hn {
    height: 10px;
    background-position: -2215px 0px; }
  .iti-flag.hr {
    height: 10px;
    background-position: -2237px 0px; }
  .iti-flag.ht {
    height: 12px;
    background-position: -2259px 0px; }
  .iti-flag.hu {
    height: 10px;
    background-position: -2281px 0px; }
  .iti-flag.ic {
    height: 14px;
    background-position: -2303px 0px; }
  .iti-flag.id {
    height: 14px;
    background-position: -2325px 0px; }
  .iti-flag.ie {
    height: 10px;
    background-position: -2347px 0px; }
  .iti-flag.il {
    height: 15px;
    background-position: -2369px 0px; }
  .iti-flag.im {
    height: 10px;
    background-position: -2391px 0px; }
  .iti-flag.in {
    height: 14px;
    background-position: -2413px 0px; }
  .iti-flag.io {
    height: 10px;
    background-position: -2435px 0px; }
  .iti-flag.iq {
    height: 14px;
    background-position: -2457px 0px; }
  .iti-flag.ir {
    height: 12px;
    background-position: -2479px 0px; }
  .iti-flag.is {
    height: 15px;
    background-position: -2501px 0px; }
  .iti-flag.it {
    height: 14px;
    background-position: -2523px 0px; }
  .iti-flag.je {
    height: 12px;
    background-position: -2545px 0px; }
  .iti-flag.jm {
    height: 10px;
    background-position: -2567px 0px; }
  .iti-flag.jo {
    height: 10px;
    background-position: -2589px 0px; }
  .iti-flag.jp {
    height: 14px;
    background-position: -2611px 0px; }
  .iti-flag.ke {
    height: 14px;
    background-position: -2633px 0px; }
  .iti-flag.kg {
    height: 12px;
    background-position: -2655px 0px; }
  .iti-flag.kh {
    height: 13px;
    background-position: -2677px 0px; }
  .iti-flag.ki {
    height: 10px;
    background-position: -2699px 0px; }
  .iti-flag.km {
    height: 12px;
    background-position: -2721px 0px; }
  .iti-flag.kn {
    height: 14px;
    background-position: -2743px 0px; }
  .iti-flag.kp {
    height: 10px;
    background-position: -2765px 0px; }
  .iti-flag.kr {
    height: 14px;
    background-position: -2787px 0px; }
  .iti-flag.kw {
    height: 10px;
    background-position: -2809px 0px; }
  .iti-flag.ky {
    height: 10px;
    background-position: -2831px 0px; }
  .iti-flag.kz {
    height: 10px;
    background-position: -2853px 0px; }
  .iti-flag.la {
    height: 14px;
    background-position: -2875px 0px; }
  .iti-flag.lb {
    height: 14px;
    background-position: -2897px 0px; }
  .iti-flag.lc {
    height: 10px;
    background-position: -2919px 0px; }
  .iti-flag.li {
    height: 12px;
    background-position: -2941px 0px; }
  .iti-flag.lk {
    height: 10px;
    background-position: -2963px 0px; }
  .iti-flag.lr {
    height: 11px;
    background-position: -2985px 0px; }
  .iti-flag.ls {
    height: 14px;
    background-position: -3007px 0px; }
  .iti-flag.lt {
    height: 12px;
    background-position: -3029px 0px; }
  .iti-flag.lu {
    height: 12px;
    background-position: -3051px 0px; }
  .iti-flag.lv {
    height: 10px;
    background-position: -3073px 0px; }
  .iti-flag.ly {
    height: 10px;
    background-position: -3095px 0px; }
  .iti-flag.ma {
    height: 14px;
    background-position: -3117px 0px; }
  .iti-flag.mc {
    height: 15px;
    background-position: -3139px 0px; }
  .iti-flag.md {
    height: 10px;
    background-position: -3160px 0px; }
  .iti-flag.me {
    height: 10px;
    background-position: -3182px 0px; }
  .iti-flag.mf {
    height: 14px;
    background-position: -3204px 0px; }
  .iti-flag.mg {
    height: 14px;
    background-position: -3226px 0px; }
  .iti-flag.mh {
    height: 11px;
    background-position: -3248px 0px; }
  .iti-flag.mk {
    height: 10px;
    background-position: -3270px 0px; }
  .iti-flag.ml {
    height: 14px;
    background-position: -3292px 0px; }
  .iti-flag.mm {
    height: 14px;
    background-position: -3314px 0px; }
  .iti-flag.mn {
    height: 10px;
    background-position: -3336px 0px; }
  .iti-flag.mo {
    height: 14px;
    background-position: -3358px 0px; }
  .iti-flag.mp {
    height: 10px;
    background-position: -3380px 0px; }
  .iti-flag.mq {
    height: 14px;
    background-position: -3402px 0px; }
  .iti-flag.mr {
    height: 14px;
    background-position: -3424px 0px; }
  .iti-flag.ms {
    height: 10px;
    background-position: -3446px 0px; }
  .iti-flag.mt {
    height: 14px;
    background-position: -3468px 0px; }
  .iti-flag.mu {
    height: 14px;
    background-position: -3490px 0px; }
  .iti-flag.mv {
    height: 14px;
    background-position: -3512px 0px; }
  .iti-flag.mw {
    height: 14px;
    background-position: -3534px 0px; }
  .iti-flag.mx {
    height: 12px;
    background-position: -3556px 0px; }
  .iti-flag.my {
    height: 10px;
    background-position: -3578px 0px; }
  .iti-flag.mz {
    height: 14px;
    background-position: -3600px 0px; }
  .iti-flag.na {
    height: 14px;
    background-position: -3622px 0px; }
  .iti-flag.nc {
    height: 10px;
    background-position: -3644px 0px; }
  .iti-flag.ne {
    height: 15px;
    background-position: -3666px 0px; }
  .iti-flag.nf {
    height: 10px;
    background-position: -3686px 0px; }
  .iti-flag.ng {
    height: 10px;
    background-position: -3708px 0px; }
  .iti-flag.ni {
    height: 12px;
    background-position: -3730px 0px; }
  .iti-flag.nl {
    height: 14px;
    background-position: -3752px 0px; }
  .iti-flag.no {
    height: 15px;
    background-position: -3774px 0px; }
  .iti-flag.np {
    height: 15px;
    background-position: -3796px 0px; }
  .iti-flag.nr {
    height: 10px;
    background-position: -3811px 0px; }
  .iti-flag.nu {
    height: 10px;
    background-position: -3833px 0px; }
  .iti-flag.nz {
    height: 10px;
    background-position: -3855px 0px; }
  .iti-flag.om {
    height: 10px;
    background-position: -3877px 0px; }
  .iti-flag.pa {
    height: 14px;
    background-position: -3899px 0px; }
  .iti-flag.pe {
    height: 14px;
    background-position: -3921px 0px; }
  .iti-flag.pf {
    height: 14px;
    background-position: -3943px 0px; }
  .iti-flag.pg {
    height: 15px;
    background-position: -3965px 0px; }
  .iti-flag.ph {
    height: 10px;
    background-position: -3987px 0px; }
  .iti-flag.pk {
    height: 14px;
    background-position: -4009px 0px; }
  .iti-flag.pl {
    height: 13px;
    background-position: -4031px 0px; }
  .iti-flag.pm {
    height: 14px;
    background-position: -4053px 0px; }
  .iti-flag.pn {
    height: 10px;
    background-position: -4075px 0px; }
  .iti-flag.pr {
    height: 14px;
    background-position: -4097px 0px; }
  .iti-flag.ps {
    height: 10px;
    background-position: -4119px 0px; }
  .iti-flag.pt {
    height: 14px;
    background-position: -4141px 0px; }
  .iti-flag.pw {
    height: 13px;
    background-position: -4163px 0px; }
  .iti-flag.py {
    height: 11px;
    background-position: -4185px 0px; }
  .iti-flag.qa {
    height: 8px;
    background-position: -4207px 0px; }
  .iti-flag.re {
    height: 14px;
    background-position: -4229px 0px; }
  .iti-flag.ro {
    height: 14px;
    background-position: -4251px 0px; }
  .iti-flag.rs {
    height: 14px;
    background-position: -4273px 0px; }
  .iti-flag.ru {
    height: 14px;
    background-position: -4295px 0px; }
  .iti-flag.rw {
    height: 14px;
    background-position: -4317px 0px; }
  .iti-flag.sa {
    height: 14px;
    background-position: -4339px 0px; }
  .iti-flag.sb {
    height: 10px;
    background-position: -4361px 0px; }
  .iti-flag.sc {
    height: 10px;
    background-position: -4383px 0px; }
  .iti-flag.sd {
    height: 10px;
    background-position: -4405px 0px; }
  .iti-flag.se {
    height: 13px;
    background-position: -4427px 0px; }
  .iti-flag.sg {
    height: 14px;
    background-position: -4449px 0px; }
  .iti-flag.sh {
    height: 10px;
    background-position: -4471px 0px; }
  .iti-flag.si {
    height: 10px;
    background-position: -4493px 0px; }
  .iti-flag.sj {
    height: 15px;
    background-position: -4515px 0px; }
  .iti-flag.sk {
    height: 14px;
    background-position: -4537px 0px; }
  .iti-flag.sl {
    height: 14px;
    background-position: -4559px 0px; }
  .iti-flag.sm {
    height: 15px;
    background-position: -4581px 0px; }
  .iti-flag.sn {
    height: 14px;
    background-position: -4603px 0px; }
  .iti-flag.so {
    height: 14px;
    background-position: -4625px 0px; }
  .iti-flag.sr {
    height: 14px;
    background-position: -4647px 0px; }
  .iti-flag.ss {
    height: 10px;
    background-position: -4669px 0px; }
  .iti-flag.st {
    height: 10px;
    background-position: -4691px 0px; }
  .iti-flag.sv {
    height: 12px;
    background-position: -4713px 0px; }
  .iti-flag.sx {
    height: 14px;
    background-position: -4735px 0px; }
  .iti-flag.sy {
    height: 14px;
    background-position: -4757px 0px; }
  .iti-flag.sz {
    height: 14px;
    background-position: -4779px 0px; }
  .iti-flag.ta {
    height: 10px;
    background-position: -4801px 0px; }
  .iti-flag.tc {
    height: 10px;
    background-position: -4823px 0px; }
  .iti-flag.td {
    height: 14px;
    background-position: -4845px 0px; }
  .iti-flag.tf {
    height: 14px;
    background-position: -4867px 0px; }
  .iti-flag.tg {
    height: 13px;
    background-position: -4889px 0px; }
  .iti-flag.th {
    height: 14px;
    background-position: -4911px 0px; }
  .iti-flag.tj {
    height: 10px;
    background-position: -4933px 0px; }
  .iti-flag.tk {
    height: 10px;
    background-position: -4955px 0px; }
  .iti-flag.tl {
    height: 10px;
    background-position: -4977px 0px; }
  .iti-flag.tm {
    height: 14px;
    background-position: -4999px 0px; }
  .iti-flag.tn {
    height: 14px;
    background-position: -5021px 0px; }
  .iti-flag.to {
    height: 10px;
    background-position: -5043px 0px; }
  .iti-flag.tr {
    height: 14px;
    background-position: -5065px 0px; }
  .iti-flag.tt {
    height: 12px;
    background-position: -5087px 0px; }
  .iti-flag.tv {
    height: 10px;
    background-position: -5109px 0px; }
  .iti-flag.tw {
    height: 14px;
    background-position: -5131px 0px; }
  .iti-flag.tz {
    height: 14px;
    background-position: -5153px 0px; }
  .iti-flag.ua {
    height: 14px;
    background-position: -5175px 0px; }
  .iti-flag.ug {
    height: 14px;
    background-position: -5197px 0px; }
  .iti-flag.um {
    height: 11px;
    background-position: -5219px 0px; }
  .iti-flag.us {
    height: 11px;
    background-position: -5241px 0px; }
  .iti-flag.uy {
    height: 14px;
    background-position: -5263px 0px; }
  .iti-flag.uz {
    height: 10px;
    background-position: -5285px 0px; }
  .iti-flag.va {
    height: 15px;
    background-position: -5307px 0px; }
  .iti-flag.vc {
    height: 14px;
    background-position: -5324px 0px; }
  .iti-flag.ve {
    height: 14px;
    background-position: -5346px 0px; }
  .iti-flag.vg {
    height: 10px;
    background-position: -5368px 0px; }
  .iti-flag.vi {
    height: 14px;
    background-position: -5390px 0px; }
  .iti-flag.vn {
    height: 14px;
    background-position: -5412px 0px; }
  .iti-flag.vu {
    height: 12px;
    background-position: -5434px 0px; }
  .iti-flag.wf {
    height: 14px;
    background-position: -5456px 0px; }
  .iti-flag.ws {
    height: 10px;
    background-position: -5478px 0px; }
  .iti-flag.xk {
    height: 15px;
    background-position: -5500px 0px; }
  .iti-flag.ye {
    height: 14px;
    background-position: -5522px 0px; }
  .iti-flag.yt {
    height: 14px;
    background-position: -5544px 0px; }
  .iti-flag.za {
    height: 14px;
    background-position: -5566px 0px; }
  .iti-flag.zm {
    height: 14px;
    background-position: -5588px 0px; }
  .iti-flag.zw {
    height: 10px;
    background-position: -5610px 0px; }

.iti-flag {
  width: 20px;
  height: 15px;
  box-shadow: 0px 0px 1px 0px #888;
  background-repeat: no-repeat;
  background-color: #DBDBDB;
  background-position: 20px 0; }

.iti-flag.np {
  background-color: transparent; }
]]></template>
  <template type="public" title="thread_approve" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('approve_thread') }}</xf:title>

<xf:breadcrumb source="$thread.getBreadcrumbs()" />

<xf:form action="{{ link('threads/approve', $thread) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('please_confirm_that_you_want_to_approve_the_following:') }}
				<strong><a href="{{ link('threads', $thread) }}">{$thread.title}</a></strong>
			</xf:inforow>
		</div>
		<xf:submitrow icon="save" rowtype="simple" />
	</div>
</xf:form>]]></template>
  <template type="public" title="thread_delete" version_id="2010052" version_string="2.1.0 Release Candidate 2"><![CDATA[<xf:title>{{ phrase('delete_thread') }}</xf:title>

<xf:breadcrumb source="$thread.getBreadcrumbs()" />

<xf:form action="{{ link('threads/delete', $thread) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:macro template="helper_action" name="delete_type" arg-canHardDelete="{$thread.canDelete('hard')}" />

			<xf:if is="$thread.canSendModeratorActionAlert()">
				<xf:macro template="helper_action" name="thread_alert" />
			</xf:if>
		</div>
		<xf:submitrow icon="delete" />
	</div>
</xf:form>]]></template>
  <template type="public" title="thread_edit" version_id="2000038" version_string="2.0.0 Beta 8"><![CDATA[<xf:title>{{ phrase('edit_thread') }}</xf:title>

<xf:js src="xf/thread.js" min="1" />

<xf:breadcrumb source="$thread.getBreadcrumbs()" />

<xf:form action="{{ link('threads/edit', $thread) }}"
	class="block"
	ajax="true"
	data-xf-init="thread-edit-form"
	data-item-selector=".js-threadListItem-{$thread.thread_id}">

	<div class="block-container">
		<div class="block-body">
			<xf:prefixinputrow
				label="{{ phrase('title') }}"
				prefixes="{$prefixes}"
				type="thread"
				prefix-value="{$thread.prefix_id}"
				textbox-value="{$thread.title}"
				placeholder="{{ phrase('title...') }}"
				autofocus="autofocus"
				maxlength="{{ max_length($thread, 'title') }}" />

			<xf:if contentcheck="true">
				<hr class="formRowSep" />
				<xf:contentcheck>
					<xf:macro template="custom_fields_macros" name="custom_fields_edit"
						arg-type="threads"
						arg-set="{$thread.custom_fields}"
						arg-editMode="{{ $thread.getFieldEditMode() }}"
						arg-onlyInclude="{$forum.field_cache}" />
				</xf:contentcheck>
				<hr class="formRowSep" />
			</xf:if>

			<xf:macro template="helper_thread_options" name="thread_status" arg-thread="{$thread}" />
		</div>

		<xf:submitrow icon="save" sticky="true">
			<xf:html>
				<xf:if is="$thread.canDelete()">
					<xf:button href="{{ link('threads/delete', $thread) }}" icon="delete" overlay="true">{{ phrase('delete...') }}</xf:button>
				</xf:if>
			</xf:html>
		</xf:submitrow>
	</div>

	<xf:if is="$noInlineMod">
		<xf:hiddenval name="_xfNoInlineMod">1</xf:hiddenval>
	</xf:if>
	<xf:if is="$forumName">
		<xf:hiddenval name="_xfForumName">1</xf:hiddenval>
	</xf:if>
</xf:form>]]></template>
  <template type="public" title="thread_edit_new_thread" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro template="thread_list_macros" name="item"
	arg-thread="{$thread}"
	arg-allowInlineMod="{{ $noInlineMod ? false : true }}"
	arg-forum="{{ $forumName ? null : $forum }}" />
]]></template>
  <template type="public" title="thread_list_item" version_id="2001070" version_string="2.0.10"><![CDATA[<xf:macro template="thread_list_macros" name="item"
	arg-thread="{$thread}"
	arg-forum="{$forum}"
	arg-forceRead="{$inlineMode}"
	arg-allowInlineMod="{{ false }}" />]]></template>
  <template type="public" title="thread_list_macros" version_id="2010131" version_string="2.1.1 Beta 1"><![CDATA[<xf:macro name="item"
	arg-thread="!"
	arg-forum=""
	arg-forceRead="{{ false }}"
	arg-showWatched="{{ true }}"
	arg-allowInlineMod="{{ true }}"
	arg-chooseName=""
	arg-extraInfo=""
	arg-allowEdit="{{ true }}">

	<xf:css src="structured_list.less" />

	<div class="structItem structItem--thread{{ $thread.prefix_id ? ' is-prefix' . $thread.prefix_id : '' }}{{ $thread.isIgnored() ? ' is-ignored' : '' }}{{ ($thread.isUnread() AND !$forceRead) ? ' is-unread' : '' }}{{ $thread.discussion_state == 'moderated' ? ' is-moderated' : '' }}{{ $thread.discussion_state == 'deleted' ? ' is-deleted' : '' }} js-inlineModContainer js-threadListItem-{$thread.thread_id}" data-author="{{ $thread.User.username ?: $thread.username }}">
		<div class="structItem-cell structItem-cell--icon">
			<div class="structItem-iconContainer">
				<xf:avatar user="$thread.User" size="s" defaultname="{$thread.username}" />
				<xf:if is="$thread.getUserPostCount()">
					<xf:avatar user="$xf.visitor" size="s"
						href=""
						class="avatar--separated structItem-secondaryIcon"
						tabindex="0"
						data-xf-init="tooltip"
						data-trigger="auto"
						title="{{ phrase('you_have_posted_x_messages_in_this_thread', {'count': $thread.getUserPostCount() }) }}" />
				</xf:if>
			</div>
		</div>
		<div class="structItem-cell structItem-cell--main" data-xf-init="touch-proxy">
			<xf:if contentcheck="true">
				<ul class="structItem-statuses">
				<xf:contentcheck>
					<xf:if is="property('reactionSummaryOnLists') == 'status' && $thread.first_post_reactions">
						<li><xf:reactions summary="true" reactions="{$thread.first_post_reactions}" /></li>
					</xf:if>
					<xf:if is="$thread.discussion_state == 'moderated'">
						<li>
							<i class="structItem-status structItem-status--moderated" aria-hidden="true" title="{{ phrase('awaiting_approval')|for_attr }}"></i>
							<span class="u-srOnly">{{ phrase('awaiting_approval') }}</span>
						</li>
					</xf:if>
					<xf:if is="$thread.discussion_state == 'deleted'">
						<li>
							<i class="structItem-status structItem-status--deleted" aria-hidden="true" title="{{ phrase('deleted')|for_attr }}"></i>
							<span class="u-srOnly">{{ phrase('deleted') }}</span>
						</li>
					</xf:if>
					<xf:if is="!$thread.discussion_open">
						<li>
							<i class="structItem-status structItem-status--locked" aria-hidden="true" title="{{ phrase('locked')|for_attr }}"></i>
							<span class="u-srOnly">{{ phrase('locked') }}</span>
						</li>
					</xf:if>
					<xf:if is="$thread.discussion_type == 'redirect'">
						<li>
							<i class="structItem-status structItem-status--redirect" aria-hidden="true" title="{{ phrase('redirect')|for_attr }}"></i>
							<span class="u-srOnly">{{ phrase('redirect') }}</span>
						</li>
					<xf:elseif is="$thread.discussion_type == 'poll'" />
						<li>
							<i class="structItem-status structItem-status--poll" aria-hidden="true" title="{{ phrase('poll')|for_attr }}"></i>
							<span class="u-srOnly">{{ phrase('poll') }}</span>
						</li>
					</xf:if>
					<xf:if is="$thread.sticky">
						<li>
							<i class="structItem-status structItem-status--sticky" aria-hidden="true" title="{{ phrase('sticky')|for_attr }}"></i>
							<span class="u-srOnly">{{ phrase('sticky') }}</span>
						</li>
					</xf:if>
					<xf:if is="{$showWatched} AND {$xf.visitor.user_id}">
						<xf:if is="{$thread.Watch.{$xf.visitor.user_id}}">
							<li>
								<i class="structItem-status structItem-status--watched" aria-hidden="true" title="{{ phrase('thread_watched')|for_attr }}"></i>
								<span class="u-srOnly">{{ phrase('thread_watched') }}</span>
							</li>
						<xf:elseif is="!$forum AND {$thread.Forum.Watch.{$xf.visitor.user_id}}" />
							<li>
								<i class="structItem-status structItem-status--watched" aria-hidden="true" title="{{ phrase('forum_watched')|for_attr }}"></i>
								<span class="u-srOnly">{{ phrase('forum_watched') }}</span>
							</li>
						</xf:if>
					</xf:if>
				</xf:contentcheck>
				</ul>
			</xf:if>

			<div class="structItem-title">
				<xf:set var="$canPreview" value="{{ $thread.canPreview() }}" />
				<xf:if is="$thread.prefix_id">
					<xf:if is="$forum">
						<a href="{{ link('forums', $forum, {'prefix_id': $thread.prefix_id}) }}" class="labelLink" rel="nofollow">{{ prefix('thread', $thread, 'html', '') }}</a>
					<xf:else />
						{{ prefix('thread', $thread, 'html', '') }}
					</xf:if>
				</xf:if>
				<a href="{{ link('threads' . (($thread.isUnread() AND !$forceRead) ? '/unread' : ''), $thread) }}" class="" data-tp-primary="on" data-xf-init="{{ $canPreview ? 'preview-tooltip' : '' }}" data-preview-url="{{ $canPreview ? link('threads/preview', $thread) : '' }}">{$thread.title}</a>
			</div>

			<div class="structItem-minor">
				<xf:if contentcheck="true">
					<ul class="structItem-extraInfo">
					<xf:contentcheck>
						<xf:if is="property('reactionSummaryOnLists') == 'minor_opposite' && $thread.first_post_reactions">
							<li><xf:reactions summary="true" reactions="{$thread.first_post_reactions}" /></li>
						</xf:if>
						<xf:if is="{$extraInfo}">
							<li>{$extraInfo}</li>
						<xf:elseif is="$thread.canEdit() AND $thread.canUseInlineModeration() AND {$allowEdit}" />
							<xf:if is="!$allowInlineMod OR !$forum">
								<xf:set var="$editParams" value="{{ {
									'_xfNoInlineMod': !$allowInlineMod ? 1 : null,
									 '_xfForumName': !$forum ? 1 : 0
								} }}" />
							<xf:else />
								<xf:set var="$editParams" value="{{ [] }}" />
							</xf:if>
							<xf:if is="$thread.discussion_type != 'redirect'">
								<li class="structItem-extraInfoMinor">
									<a href="{{ link('threads/edit', $thread) }}" data-xf-click="overlay" data-href="{{ link('threads/edit', $thread, $editParams) }}">
										{{ phrase('edit') }}
									</a>
								</li>
							</xf:if>
						</xf:if>
						<xf:if is="$chooseName">
							<li><xf:checkbox standalone="true">
								<xf:option name="{$chooseName}[]" value="{$thread.thread_id}" class="js-chooseItem" />
							</xf:checkbox></li>
						<xf:elseif is="$allowInlineMod AND $thread.canUseInlineModeration()" />
							<li><xf:checkbox standalone="true">
								<xf:option value="{$thread.thread_id}" class="js-inlineModToggle"
									data-xf-init="tooltip"
									title="{{ phrase('select_for_moderation') }}"
									label="{{ phrase('select_for_moderation') }}"
									hiddenlabel="true"
								/>
							</xf:checkbox></li>
						</xf:if>
					</xf:contentcheck>
					</ul>
				</xf:if>

				<xf:if is="$thread.discussion_state == 'deleted'">
					<xf:if is="{$extraInfo}"><span class="structItem-extraInfo">{$extraInfo}</span></xf:if>

					<xf:macro template="deletion_macros" name="notice" arg-log="{$thread.DeletionLog}" />
				<xf:else />
					<ul class="structItem-parts">
						<li><xf:username user="$thread.User" defaultname="{$thread.username}" /></li>
						<li class="structItem-startDate"><a href="{{ link('threads', $thread) }}" rel="nofollow"><xf:date time="{$thread.post_date}" /></a></li>
						<xf:if is="!$forum">
							<li><a href="{{ link('forums', $thread.Forum) }}">{$thread.Forum.title}</a></li>
						</xf:if>
					</ul>

					<xf:if is="$thread.discussion_type != 'redirect' && $thread.reply_count >= $xf.options.messagesPerPage && $xf.options.lastPageLinks">
						<span class="structItem-pageJump">
						<xf:foreach loop="{{ last_pages($thread.reply_count + 1, $xf.options.messagesPerPage, $xf.options.lastPageLinks) }}" value="$p">
							<a href="{{ link('threads', $thread, {'page': $p}) }}">{$p}</a>
						</xf:foreach>
						</span>
					</xf:if>
				</xf:if>
			</div>
		</div>
		<div class="structItem-cell structItem-cell--meta" title="{{ phrase('first_message_reaction_score:')|for_attr }} {$thread.first_post_reaction_score|number}">
			<dl class="pairs pairs--justified">
				<dt>{{ phrase('replies') }}</dt>
				<dd>{{ $thread.discussion_type == 'redirect' ? '&ndash;' : $thread.reply_count|number_short }}</dd>
			</dl>
			<dl class="pairs pairs--justified structItem-minor">
				<dt>{{ phrase('views') }}</dt>
				<dd>{{ $thread.discussion_type == 'redirect' ? '&ndash;' : ($thread.view_count > $thread.reply_count ? $thread.view_count|number_short : number_short($thread.reply_count+1)) }}</dd>
			</dl>
		</div>
		<div class="structItem-cell structItem-cell--latest">
			<xf:if is="$thread.discussion_type == 'redirect'">
				{{ phrase('n_a') }}
			<xf:else />
				<a href="{{ link('threads/latest', $thread) }}" rel="nofollow"><xf:date time="{$thread.last_post_date}" class="structItem-latestDate" /></a>
				<div class="structItem-minor">
					<xf:if is="$xf.visitor.isIgnoring($thread.last_post_user_id)">
						{{ phrase('ignored_member') }}
					<xf:else />
						<xf:username user="{$thread.LastPoster}" defaultname="{$thread.last_post_username}" />
					</xf:if>
				</div>
			</xf:if>
		</div>
		<div class="structItem-cell structItem-cell--icon structItem-cell--iconEnd">
			<div class="structItem-iconContainer">
				<xf:if is="$xf.visitor.isIgnoring($thread.last_post_user_id) OR $thread.discussion_type == 'redirect'">
					<xf:avatar user="{{ null }}" size="xxs" />
				<xf:else />
					<xf:avatar user="{$thread.LastPoster}" size="xxs" />
				</xf:if>
			</div>
		</div>
	</div>
</xf:macro>

<xf:macro name="item_new_posts" arg-thread="!">
	<div class="contentRow">
		<div class="contentRow-figure">
			<xf:avatar user="$thread.LastPoster" size="xxs" defaultname="{$thread.last_post_username}" />
		</div>
		<div class="contentRow-main contentRow-main--close">
			<xf:if is="$thread.isUnread()">
				<a href="{{ link('threads/unread', $thread) }}">{{ prefix('thread', $thread) }}{$thread.title}</a>
			<xf:else />
				<a href="{{ link('threads/post', $thread, {'post_id': $thread.last_post_id}) }}">{{ prefix('thread', $thread) }}{$thread.title}</a>
			</xf:if>

			<div class="contentRow-minor contentRow-minor--hideLinks">
				<ul class="listInline listInline--bullet">
					<li>{{ phrase('latest_x', {'name': $thread.last_post_cache.username}) }}</li>
					<li><xf:date time="{$thread.last_post_date}" /></li>
				</ul>
			</div>
			<div class="contentRow-minor contentRow-minor--hideLinks">
				<a href="{{ link('forums', $thread.Forum) }}">{$thread.Forum.title}</a>
			</div>
		</div>
	</div>
</xf:macro>

<xf:macro name="item_new_threads" arg-thread="!">
	<div class="contentRow">
		<div class="contentRow-figure">
			<xf:avatar user="$thread.User" size="xxs" defaultname="{$thread.username}" />
		</div>
		<div class="contentRow-main contentRow-main--close">
			<a href="{{ link('threads', $thread) }}">{{ prefix('thread', $thread) }}{$thread.title}</a>

			<div class="contentRow-minor contentRow-minor--hideLinks">
				<ul class="listInline listInline--bullet">
					<li>{{ phrase('started_by_x', {'name': $thread.username}) }}</li>
					<li><xf:date time="{$thread.post_date}" /></li>
					<li>{{ phrase('replies:') }} {$thread.reply_count|number_short}</li>
				</ul>
			</div>
			<div class="contentRow-minor contentRow-minor--hideLinks">
				<a href="{{ link('forums', $thread.Forum) }}">{$thread.Forum.title}</a>
			</div>
		</div>
	</div>
</xf:macro>

<xf:macro name="quick_thread"
	arg-forum="!"
	arg-page="1"
	arg-order="last_post_date"
	arg-direction="desc">

	<xf:css src="structured_list.less" />

	<xf:if is="$forum.canCreateThread()">

		<xf:js src="xf/thread.js" min="1" />

		<xf:set var="$inlineMode" value="{{ ($page == 1 && $order == 'last_post_date' && $direction == 'desc') ? true : false }}" />

		<xf:form action="{{ link('forums/post-thread', $forum, {'inline-mode': $inlineMode}) }}" class="structItem" ajax="true"
			draft="{{ link('forums/draft', $forum) }}"
			data-xf-init="quick-thread"
			data-focus-activate=".js-titleInput"
			data-focus-activate-href="{{ link('forums/post-thread', $forum, {'inline-mode': true}) }}"
			data-focus-activate-target=".js-quickThreadFields"
			data-insert-target=".js-threadList"
			data-replace-target=".js-emptyThreadList">

			<div class="structItem-cell structItem-cell--icon">
				<div class="structItem-iconContainer">
					<xf:avatar user="$xf.visitor" size="s" />
				</div>
			</div>
			<div class="structItem-cell structItem-cell--newThread js-prefixListenContainer">

				<xf:formrow rowtype="noGutter noLabel fullWidth noPadding mergeNext"
					label="{{ phrase('title') }}">

					<xf:prefixinput maxlength="{{ max_length('XF:Thread', 'title') }}"
						placeholder="{$forum.thread_prompt}"
						title="{{ phrase('post_new_thread_in_this_forum') }}"
						prefix-value="{$forum.default_prefix_id}"
						type="thread"
						prefixes="{{ $forum.getUsablePrefixes() }}"
						data-xf-init="tooltip"
						rows="1"/>
				</xf:formrow>

				<div class="js-quickThreadFields inserter-container is-hidden"><!--{{ phrase('loading...') }}--></div>
			</div>
		</xf:form>
	</xf:if>

</xf:macro>]]></template>
  <template type="public" title="thread_move" version_id="2000032" version_string="2.0.0 Beta 2"><![CDATA[<xf:title>{{ phrase('move_thread:') }} {{ prefix('thread', $thread, 'escaped') }}{$thread.title}</xf:title>
<xf:h1>{{ phrase('move_thread:') }} {{ prefix('thread', $thread) }}{$thread.title}</xf:h1>

<xf:breadcrumb source="$thread.getBreadcrumbs()" />

<xf:form action="{{ link('threads/move', $thread) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body js-prefixListenContainer">
			<xf:prefixinputrow
				label="{{ phrase('title') }}"
				prefixes="{$prefixes}"
				type="thread"
				prefix-value="{$thread.prefix_id}"
				textbox-value="{$thread.title}"
				href="{{ link('forums/prefixes') }}"
				listen-to="< .js-prefixListenContainer | .js-nodeList"
				autofocus="autofocus"
				maxlength="{{ max_length($thread, 'title') }}" />

			<xf:selectrow name="target_node_id" value="{$forum.node_id}" class="js-nodeList"
				label="{{ phrase('destination_forum') }}">

				<xf:foreach loop="$nodeTree.getFlattened(0)" value="$treeEntry">
					<xf:option value="{$treeEntry.record.node_id}" disabled="{{ $treeEntry.record.node_type_id != 'Forum' ? 'disabled' : '' }}">
						{{ repeat_raw('&nbsp; ', $treeEntry.depth) }} {$treeEntry.record.title}
					</xf:option>
				</xf:foreach>
			</xf:selectrow>

			<xf:macro template="helper_action" name="thread_redirect" arg-label="{{ phrase('redirection_notice') }}" />

			<xf:checkboxrow>
				<xf:option name="notify_watchers" value="1" selected="{{ true }}">{{ phrase('notify_members_watching_destination_forum') }}</xf:option>
			</xf:checkboxrow>

			<xf:if is="$thread.canSendModeratorActionAlert()">
				<xf:macro template="helper_action" name="thread_alert" arg-selected="{{ true }}" />
			</xf:if>
		</div>
		<xf:submitrow icon="save" sticky="true" />
	</div>
</xf:form>]]></template>
  <template type="public" title="thread_multi_quote" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro template="multi_quote_macros" name="block"
	arg-quotes="{$quotes}"
	arg-messages="{$posts}"
	arg-containerRelation="Thread"
	arg-dateKey="post_date"
	arg-bbCodeContext="post" />
]]></template>
  <template type="public" title="thread_new_posts" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:if is="$firstUnshownPost">
	<div class="message">
		<div class="message-inner">
			<div class="message-cell message-cell--alert">
				{{ phrase('there_more_posts_to_display') }} <a href="{{ link('posts', $firstUnshownPost) }}">{{ phrase('view_them') }}</a>
			</div>
		</div>
	</div>
</xf:if>

<xf:foreach loop="$posts" value="$post">
	<xf:macro template="post_macros" name="post" arg-post="{$post}" arg-thread="{$thread}" />
</xf:foreach>]]></template>
  <template type="public" title="thread_preview" version_id="2000038" version_string="2.0.0 Beta 8"><![CDATA[<div class="tooltip-content-inner">
	{{ bb_code($firstPost.message, 'post:thread_preview', $firstPost, {
		'lightbox': false
	}) }}
	<span class="tooltip-content-cover"></span>
</div>]]></template>
  <template type="public" title="thread_reply" version_id="2000038" version_string="2.0.0 Beta 8"><![CDATA[<xf:title>{{ phrase('reply_to_thread') }}</xf:title>

<xf:head option="metaNoindex"><meta name="robots" content="noindex" /></xf:head>

<xf:breadcrumb source="$thread.getBreadcrumbs()" />

<xf:form action="{{ link('threads/add-reply', $thread) }}" class="block" ajax="true" draft="{{ link('threads/draft', $thread) }}" data-xf-init="attachment-manager" data-preview-url="{{ link('threads/reply-preview', $thread) }}">
	<div class="block-container">
		<div class="block-body">
			<xf:editorrow name="message"
				value="{$defaultMessage}"
				attachments="{{ $attachmentData ? $attachmentData.attachments : [] }}"
				rowtype="fullWidth noLabel"
				placeholder="{{ phrase('reply_placeholder') }}"
				label="{{ phrase('message') }}" />

			<xf:formrow>
				<xf:if is="$attachmentData">
					<xf:macro template="helper_attach_upload" name="upload_block"
						arg-attachmentData="{$attachmentData}"
						arg-forceHash="{$thread.draft_reply.attachment_hash}" />
				</xf:if>

				<xf:if is="$xf.options.multiQuote">
					<xf:macro template="multi_quote_macros" name="button"
						arg-href="{{ link('threads/multi-quote', $thread) }}"
						arg-messageSelector=".js-post"
						arg-storageKey="multiQuoteThread" />
				</xf:if>
				<xf:button class="button--link u-jsOnly" data-xf-click="preview-click" icon="preview" />
			</xf:formrow>

			<xf:if is="!$xf.visitor.user_id">
				<xf:textboxrow name="_xfUsername" data-xf-init="guest-username"
					maxlength="{{ max_length($xf.visitor, 'username') }}"
					label="{{ phrase('name') }}"/>

				<xf:captcharow label="{{ phrase('verification') }}" />
			<xf:else />
				<xf:macro template="helper_thread_options" name="watch_input" arg-thread="{$thread}" />
				<xf:macro template="helper_thread_options" name="thread_status" arg-thread="{$thread}" />
			</xf:if>
		</div>
		<xf:submitrow submit="{{ phrase('post_reply') }}" icon="reply" sticky="true" />
	</div>
</xf:form>]]></template>
  <template type="public" title="thread_reply_bans" version_id="2000036" version_string="2.0.0 Beta 6"><![CDATA[<xf:title>{{ phrase('manage_reply_bans:') }} {{ prefix('thread', $thread, 'escaped') }}{$thread.title}</xf:title>
<xf:h1>{{ phrase('manage_reply_bans:') }} {{ prefix('thread', $thread) }}{$thread.title}</xf:h1>

<xf:breadcrumb source="$thread.getBreadcrumbs()" />

<xf:form action="{{ link('threads/reply-bans', $thread) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:if is="$bans is not empty">
				<xf:datalist data-xf-init="responsive-data-list">
					<xf:datarow rowtype="header">
						<xf:cell>{{ phrase('user') }}</xf:cell>
						<xf:cell>{{ phrase('reason') }}</xf:cell>
						<xf:cell>{{ phrase('end_date') }}</xf:cell>
						<xf:cell class="dataList-cell--min">{{ phrase('delete') }}</xf:cell>
					</xf:datarow>
					<xf:foreach loop="$bans" value="$ban">
						<xf:datarow rowclass="dataList-row--noHover">
							<xf:cell><xf:username user="$ban.User" /></xf:cell>
							<xf:cell>
								<xf:if is="$ban.reason">
									{$ban.reason}
								<xf:else />
									{{ phrase('n_a') }}
								</xf:if>
							</xf:cell>
							<xf:cell>
								<xf:if is="$ban.expiry_date">
									<xf:date time="{$ban.expiry_date}" />
								<xf:else />
									{{ phrase('permanent') }}
								</xf:if>
							</xf:cell>
							<xf:toggle name="delete[{$ban.user_id}]" class="dataList-cell--separated dataList-cell--alt" />
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<h2 class="block-formSectionHeader">{{ phrase('new_reply_ban') }}</h2>
			<div class="block-body">
			</xf:if>

			<xf:textboxrow name="username" ac="single"
				maxlength="{{ max_length($xf.visitor, 'username') }}"
				label="{{ phrase('user_name') }}"
				explain="{{ phrase('this_user_still_able_to_view_thread_not_reply') }}" />

			<xf:radiorow name="ban_length"
				label="{{ phrase('ban_length') }}">

				<xf:option value="permanent"
					label="{{ phrase('permanent') }}" />

				<xf:option value="temporary" selected="true"
					label="{{ phrase('temporary:') }}">

					<xf:dependent>
						<div class="inputGroup inputGroup--auto">
							<xf:textbox name="ban_length_value" value="7" />
							<span class="inputGroup-splitter"></span>
							<xf:select name="ban_length_unit">
								<xf:option value="hours">{{ phrase('hours') }}</xf:option>
								<xf:option value="days" selected="true">{{ phrase('days') }}</xf:option>
								<xf:option value="weeks">{{ phrase('weeks') }}</xf:option>
								<xf:option value="months">{{ phrase('months') }}</xf:option>
							</xf:select>
						</div>
					</xf:dependent>
				</xf:option>
			</xf:radiorow>

			<xf:textboxrow name="reason" maxlength="{{ max_length('XF:ThreadReplyBan', 'reason') }}"
				label="{{ phrase('reason') }}"
				explain="{{ phrase('this_will_be_shown_to_user_if_you_choose_to_notify_them') }}" />

			<xf:checkboxrow>
				<xf:option name="send_alert">{{ phrase('notify_user_of_this_action') }}</xf:option>
			</xf:checkboxrow>
		</div>
		<xf:submitrow icon="save" sticky="true" />
	</div>
</xf:form>]]></template>
  <template type="public" title="thread_save_draft" version_id="2001270" version_string="2.0.12"><![CDATA[<xf:if is="{$hasNewPost}">
	<div class="message js-newMessagesIndicator">
		<div class="message-inner">
			<div class="message-cell message-cell--alert">
				{{ phrase('messages_have_been_posted_since_you_loaded_this_page') }}
				<a href="{{ link('threads/new-posts', $thread, {'after': $lastDate}) }}" data-xf-click="message-loader">{{ phrase('view_them') }}</a>
			</div>
		</div>
	</div>
</xf:if>]]></template>
  <template type="public" title="thread_tags" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title>{{ phrase('edit_tags') }}</xf:title>

<xf:breadcrumb source="$thread.getBreadcrumbs()" />

<xf:macro template="tag_macros" name="edit_form"
	arg-action="{{ link('threads/tags', $thread) }}"
	arg-uneditableTags="{$uneditableTags}"
	arg-editableTags="{$editableTags}"
	arg-minTags="{$forum.min_tags}"
	arg-tagList="tagList--thread-{$thread.thread_id}" />
]]></template>
  <template type="public" title="thread_tags_list" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:macro template="tag_macros" name="list"
	arg-tags="{$thread.tags}"
	arg-tagList="tagList--thread-{$thread.thread_id}"
	arg-editLink="{{ $thread.canEditTags() ? link('threads/tags', $thread) : '' }}" />]]></template>
  <template type="public" title="thread_view" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:title page="{$page}">{{ prefix('thread', $thread, 'escaped') }}{$thread.title}</xf:title>
<xf:h1>{{ prefix('thread', $thread) }}{$thread.title}</xf:h1>

<xf:description meta="false">
	<ul class="listInline listInline--bullet">
		<li>
			<xf:fa icon="fa-user" title="{{ phrase('thread_starter')|for_attr }}" />
			<span class="u-srOnly">{{ phrase('thread_starter') }}</span>

			<xf:username user="{$thread.User}" defaultname="{$thread.username}" class="u-concealed" />
		</li>
		<li>
			<xf:fa icon="fa-clock" title="{{ phrase('start_date')|for_attr }}" />
			<span class="u-srOnly">{{ phrase('start_date') }}</span>

			<a href="{{ link('threads', $thread) }}" class="u-concealed"><xf:date time="{$thread.post_date}" /></a>
		</li>
		<xf:if is="$xf.options.enableTagging AND ($thread.canEditTags() OR $thread.tags)">
			<li>
				<xf:macro template="tag_macros" name="list"
					arg-tags="{$thread.tags}"
					arg-tagList="tagList--thread-{$thread.thread_id}"
					arg-editLink="{{ $thread.canEditTags() ? link('threads/tags', $thread) : '' }}" />
			</li>
		</xf:if>
	</ul>
</xf:description>

<xf:set var="$fpSnippet" value="{{ snippet($firstPost.message, 0, {'stripBbCode': true}) }}" />

<xf:macro template="metadata_macros" name="metadata"
	arg-description="{$fpSnippet}"
	arg-shareUrl="{{ link('canonical:threads', $thread) }}"
	arg-canonicalUrl="{{ link('canonical:threads', $thread, {'page': $page}) }}" />

<xf:page option="ldJsonHtml">
	<xf:if is="$thread.User.avatar_highdpi">
		<xf:set var="$image">{$thread.User.getAvatarUrl('h', null, true)}</xf:set>
	<xf:elseif is="$thread.User.avatar_date" />
		<xf:set var="$image">{$thread.User.getAvatarUrl('l', null, true)}</xf:set>
	<xf:elseif is="property('publicMetadataLogoUrl')" />
		<xf:set var="$image">{{ base_url(property('publicMetadataLogoUrl'), true) }}</xf:set>
	</xf:if>
	<xf:if is="$image">
		<script type="application/ld+json">
		{
			"@context": "https://schema.org",
			"@type": "DiscussionForumPosting",
			"@id": "{{ link('canonical:threads', $thread)|escape('json') }}",
			"headline": "{$thread.title|escape('json')}",
			"articleBody": "{$fpSnippet|escape('json')}",
			"articleSection": "{$thread.Forum.Node.title|escape('json')}",
			"author": {
				"@type": "Person",
				"name": "{{ ($thread.User ? $thread.User.username : $thread.username)|escape('json') }}"
			},
			"datePublished": "{{ date($thread.post_date, 'Y-m-d')|escape('json') }}",
			"dateModified": "{{ date($thread.last_post_date, 'Y-m-d')|escape('json') }}",
			"image": "{$image|escape('json')}",
			"interactionStatistic": {
				"@type": "InteractionCounter",
				"interactionType": "https://schema.org/ReplyAction",
				"userInteractionCount": {$thread.reply_count}
			}
		}
		</script>
	</xf:if>
</xf:page>

<!--[XF:content_top]-->

<xf:if is="$pendingApproval">
	<div class="blockMessage blockMessage--important">{{ phrase('content_submitted_displayed_pending_approval') }}</div>
</xf:if>

<xf:macro template="forum_macros" name="forum_page_options" arg-forum="{$forum}" arg-thread="{$thread}" />

<xf:breadcrumb source="$forum.getBreadcrumbs()" />

<xf:if is="$canInlineMod OR $thread.canUseInlineModeration()">
	<xf:js src="xf/inline_mod.js" min="1" />
</xf:if>

<xf:macro template="lightbox_macros" name="setup" arg-canViewAttachments="{$thread.canViewAttachments()}" />

<xf:if is="$poll">
	<xf:macro template="poll_macros" name="poll_block" arg-poll="{$poll}" />
</xf:if>

<xf:ad position="thread_view_above_messages" arg-thread="{$thread}" />

<div class="block block--messages" data-xf-init="{{ $canInlineMod ? 'inline-mod' : '' }}" data-type="post" data-href="{{ link('inline-mod') }}">

	<xf:macro name="thread_status" arg-thread="{$thread}" arg-wrapperClass="block-outer" />

	<div class="block-outer"><xf:trim>
		<xf:pagenav
			page="{$page}" perpage="{$perPage}" total="{{ $thread.reply_count + 1 }}"
			link="threads" data="{$thread}"
			wrapperclass="block-outer-main" />
		<xf:if contentcheck="true">
			<div class="block-outer-opposite">
				<div class="buttonGroup">
				<xf:contentcheck>
					<xf:if is="$canInlineMod">
						<xf:macro template="inline_mod_macros" name="button" />
					</xf:if>
					<xf:if is="$thread.discussion_state == 'deleted' AND $thread.canUndelete()">
						<xf:button href="{{ link('threads/undelete', $thread) }}" class="button--link" overlay="true">
							{{ phrase('undelete') }}
						</xf:button>
					</xf:if>
					<xf:if is="$thread.canApproveUnapprove() AND $thread.discussion_state == 'moderated'">
						<xf:button href="{{ link('threads/approve', $thread) }}" class="button--link" overlay="true">
							{{ phrase('approve') }}
						</xf:button>
					</xf:if>
					<xf:if is="$xf.visitor.user_id AND $thread.isUnread()">
						<xf:button href="{{ $firstUnread ? ('#post-' . $firstUnread.post_id) : link('threads/unread', $thread, {'new': 1}) }}"
							class="button--link"
							data-xf-click="scroll-to"
							data-silent="true">
								{{ phrase('jump_to_new') }}
						</xf:button>
					</xf:if>
					<xf:if is="$thread.canWatch()">
						<xf:button href="{{ link('threads/watch', $thread) }}" class="button--link"
							data-xf-click="switch-overlay"
							data-sk-watch="{{ phrase('watch') }}"
							data-sk-unwatch="{{ phrase('unwatch') }}">
							<xf:if is="{$thread.Watch.{$xf.visitor.user_id}}">
								{{ phrase('unwatch') }}
							<xf:else />
								{{ phrase('watch') }}
							</xf:if>
						</xf:button>
					</xf:if>

					<xf:if contentcheck="true">
						<div class="buttonGroup-buttonWrapper">
							<xf:button class="button--link menuTrigger" data-xf-click="menu" aria-expanded="false" aria-haspopup="true" title="{{ phrase('more_options') }}">&#8226;&#8226;&#8226;</xf:button>
							<div class="menu" data-menu="menu" aria-hidden="true">
								<div class="menu-content">
									<h4 class="menu-header">{{ phrase('more_options') }}</h4>
									<xf:contentcheck>
										<!--[XF:thread_tools_menu:top]-->
										<xf:if is="$thread.canEdit()">
											<a href="{{ link('threads/edit', $thread) }}" data-xf-click="overlay" class="menu-linkRow">{{ phrase('edit_thread') }}</a>
										</xf:if>
										<xf:if is="$thread.canLockUnlock()">
											<a href="{{ link('threads/quick-close', $thread) }}"
												class="menu-linkRow"
												data-xf-click="switch"
												data-menu-closer="true">

												<xf:if is="$thread.discussion_open">
													{{ phrase('close_thread') }}
												<xf:else />
													{{ phrase('open_thread') }}
												</xf:if>
											</a>
										</xf:if>
										<xf:if is="$thread.canStickUnstick()">
											<a href="{{ link('threads/quick-stick', $thread) }}"
												class="menu-linkRow"
												data-xf-click="switch"
												data-menu-closer="true">

												<xf:if is="$thread.sticky">
													{{ phrase('unstick_thread') }}
												<xf:else />
													{{ phrase('stick_thread') }}
												</xf:if>
											</a>
										</xf:if>
										<xf:if is="$thread.canCreatePoll()">
											<a href="{{ link('threads/poll/create', $thread) }}" data-xf-click="overlay" class="menu-linkRow">{{ phrase('create_poll') }}</a>
										</xf:if>
										<xf:if is="$thread.canDelete('soft')">
											<a href="{{ link('threads/delete', $thread) }}" data-xf-click="overlay" class="menu-linkRow">{{ phrase('delete_thread') }}</a>
										</xf:if>
										<xf:if is="$thread.canMove()">
											<a href="{{ link('threads/move', $thread) }}" data-xf-click="overlay" class="menu-linkRow">{{ phrase('move_thread') }}</a>
										</xf:if>
										<xf:if is="$thread.canReplyBan()">
											<a href="{{ link('threads/reply-bans', $thread) }}" data-xf-click="overlay" class="menu-linkRow">{{ phrase('manage_reply_bans') }}</a>
										</xf:if>
										<xf:if is="$thread.canViewModeratorLogs()">
											<a href="{{ link('threads/moderator-actions', $thread) }}" data-xf-click="overlay" class="menu-linkRow">{{ phrase('moderator_actions') }}</a>
										</xf:if>
										<!--[XF:thread_tools_menu:before_footer]-->
										<xf:if is="$thread.canUseInlineModeration()">
											<div class="menu-footer"
												data-xf-init="inline-mod"
												data-type="thread"
												data-href="{{ link('inline-mod') }}"
												data-toggle=".js-threadInlineModToggle">
												<xf:checkbox>
													<xf:option class="js-threadInlineModToggle" value="{$thread.thread_id}">{{ phrase('select_for_moderation') }}</xf:option>
												</xf:checkbox>
											</div>
										</xf:if>
										<!--[XF:thread_tools_menu:bottom]-->
									</xf:contentcheck>
								</div>
							</div>
						</div>
					</xf:if>
				</xf:contentcheck>
				</div>
			</div>
		</xf:if>
	</xf:trim></div>

	<div class="block-outer js-threadStatusField"><xf:trim>
		<xf:if contentcheck="true">
			<div class="blockStatus blockStatus--info">
				<xf:contentcheck>
					<xf:macro template="custom_fields_macros" name="custom_fields_view"
						arg-type="threads"
						arg-group="thread_status"
						arg-onlyInclude="{$forum.field_cache}"
						arg-set="{$thread.custom_fields}"
						arg-wrapperClass="blockStatus-message" />
				</xf:contentcheck>
			</div>
		</xf:if>
	</xf:trim></div>

	<div class="block-container lbContainer"
		data-xf-init="lightbox{{ $xf.options.selectQuotable ? ' select-to-quote' : '' }}"
		data-message-selector=".js-post"
		data-lb-id="thread-{$thread.thread_id}"
		data-lb-universal="{$xf.options.lightBoxUniversal}">

		<div class="block-body js-replyNewMessageContainer">
			<xf:foreach loop="$posts" value="$post">
				<xf:if is="$post.message_state == 'deleted'">
					<xf:macro template="post_macros" name="post_deleted"
						arg-post="{$post}"
						arg-thread="{$thread}" />
				<xf:else />
					<xf:macro template="post_macros" name="post"
						arg-post="{$post}"
						arg-thread="{$thread}" />
				</xf:if>
			</xf:foreach>
		</div>
	</div>

	<xf:if contentcheck="true">
		<div class="block-outer block-outer--after">
			<xf:contentcheck>
				<xf:pagenav
					page="{$page}" perpage="{$perPage}" total="{{ $thread.reply_count + 1 }}"
					link="threads" data="{$thread}"
					wrapperclass="block-outer-main" />
				<xf:showignored wrapperclass="block-outer-opposite" />
				<xf:if is="!$thread.canReply() AND $thread.discussion_state == 'visible' AND $thread.discussion_open">
					<div class="block-outer-opposite">
						<xf:if is="$xf.visitor.user_id">
							<span class="button is-disabled">
								{{ phrase('no_permission_to_reply') }}
								<!-- this is not interactive so shouldn't be a button element -->
							</span>
						<xf:else />
							<xf:button href="{{ link('login') }}" class="button--link" overlay="true">
								{{ phrase('log_in_or_register_to_reply') }}
							</xf:button>
						</xf:if>
					</div>
				</xf:if>
			</xf:contentcheck>
		</div>
	</xf:if>

	<xf:macro name="thread_status" arg-thread="{$thread}" arg-wrapperClass="block-outer block-outer--after" />
</div>

<xf:ad position="thread_view_below_messages" arg-thread="{$thread}" />

<xf:if is="$thread.canReply()">
	<xf:form action="{{ link('threads/add-reply', $thread) }}"
		ajax="true"
		draft="{{ link('threads/draft', $thread) }}"
		class="block js-quickReply"
		data-xf-init="attachment-manager quick-reply{{ $xf.visitor.isShownCaptcha() ? ' guest-captcha' : '' }}"
		data-message-container=".js-replyNewMessageContainer"
		data-preview-url="{{ link('threads/reply-preview', $thread, {'quick_reply': 1}) }}">

		<xf:js src="xf/message.js" min="1" />
		<xf:set var="$lastPost" value="{$posts|last}" />

		<div class="block-container">
			<div class="block-body">
				<xf:macro template="quick_reply_macros" name="body"
					arg-message="{$thread.draft_reply.message}"
					arg-attachmentData="{$attachmentData}"
					arg-forceHash="{$thread.draft_reply.attachment_hash}"
					arg-messageSelector=".js-post"
					arg-multiQuoteHref="{{ link('threads/multi-quote', $thread) }}"
					arg-multiQuoteStorageKey="multiQuoteThread"
					arg-lastDate="{$lastPost.post_date}"
					arg-lastKnownDate="{$thread.last_post_date}" />
			</div>
		</div>
	</xf:form>
</xf:if>

<div class="blockMessage blockMessage--none">
	<xf:macro template="share_page_macros" name="buttons" arg-iconic="{{ true }}" arg-label="{{ phrase('share:') }}" />
</div>

<xf:macro name="thread_status" arg-thread="!" arg-wrapperClass="">
	<xf:if contentcheck="true">
		<div class="{$wrapperClass}">
			<dl class="blockStatus">
				<dt>{{ phrase('status') }}</dt>
				<xf:contentcheck>
					<xf:if is="$thread.discussion_state == 'deleted'">
						<dd class="blockStatus-message blockStatus-message--deleted">
							<xf:macro template="deletion_macros" name="notice" arg-log="{$thread.DeletionLog}" />
						</dd>
					<xf:elseif is="$thread.discussion_state == 'moderated'" />
						<dd class="blockStatus-message blockStatus-message--moderated">
							{{ phrase('awaiting_approval_before_being_displayed_publicly') }}
						</dd>
					</xf:if>
					<xf:if is="!$thread.discussion_open">
						<dd class="blockStatus-message blockStatus-message--locked">
							{{ phrase('not_open_for_further_replies') }}
						</dd>
					</xf:if>
				</xf:contentcheck>
			</dl>
		</div>
	</xf:if>
</xf:macro>

<xf:widgetpos id="thread_view_sidebar" context-thread="{$thread}" position="sidebar" />]]></template>
  <template type="public" title="thread_watch" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:if is="$isWatched">
	<xf:title>{{ phrase('unwatch_thread') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('watch_thread') }}</xf:title>
</xf:if>

<xf:breadcrumb source="$thread.getBreadcrumbs()" />

<xf:form action="{{ link('threads/watch', $thread) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:if is="$isWatched">
				<xf:inforow rowtype="confirm">
					{{ phrase('you_sure_you_want_to_unwatch_this_thread') }}
				</xf:inforow>

				<xf:hiddenval name="stop">1</xf:hiddenval>
			<xf:else />
				<xf:radiorow name="email_subscribe"
					value="{{ $xf.visitor.Option.interaction_watch_state == 'watch_email' ? 1 : 0}}"
					rowtype="noColon"
					label="{{ phrase('watch_this_thread...') }}">

					<xf:option value="1">{{ phrase('and_receive_email_notifications') }}</xf:option>
					<xf:option value="0">{{ phrase('without_receiving_email_notifications') }}</xf:option>
				</xf:radiorow>
			</xf:if>
		</div>
		<xf:if is="$isWatched">
			<xf:submitrow submit="{{ phrase('unwatch') }}" rowtype="simple" />
		<xf:else />
			<xf:submitrow submit="{{ phrase('watch') }}" />
		</xf:if>
	</div>
</xf:form>]]></template>
  <template type="public" title="token_input" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:css src="select2.less" />

<xf:js prod="xf/token_input-compiled.js" dev="vendor/select2/select2.full.min.js, xf/token_input.js" />

<input type="text" name="{$name}" value="{$value}" class="input {$inputClass}"
	data-xf-init="token-input"
	data-ac-url="{$hrefAttr}"
	data-min-length="{$minLength}"
	{{ $maxLength ? 'data-max-length="' . $maxLength . '"' : '' }}
	{{ $maxTokens ? 'data-max-tokens="' . $maxTokens . '"' : '' }}
	{{ $listData ? 'data-list-data="' . $listData . '"' : '' }}
	{$attrsHtml|raw} />

<xf:js>
jQuery.extend(XF.phrases, {
	s2_error_loading: "{{ phrase('s2_error_loading')|escape('js') }}",
	s2_input_too_long: "{{ phrase('s2_input_too_long')|escape('js') }}",
	s2_input_too_short: "{{ phrase('s2_input_too_short')|escape('js') }}",
	s2_loading_more: "{{ phrase('s2_loading_more')|escape('js') }}",
	s2_maximum_selected: "{{ phrase('s2_maximum_selected')|escape('js') }}",
	s2_no_results: "{{ phrase('s2_no_results')|escape('js') }}",
	s2_searching: "{{ phrase('s2_searching')|escape('js') }}"
});
</xf:js>]]></template>
  <template type="public" title="two_step_authy" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:if is="$context == 'setup'">
	<xf:inforow>
		{{ phrase('two_step_authy_setup_info') }}
	</xf:inforow>

	<xf:textboxrow name="code" type="number" autofocus="autofocus" label="{{ phrase('verification_code') }}" />
<xf:else />
	<xf:inforow rowclass="js-authyLoginApprovalRow">
		{{ phrase('two_step_authy_login_info', {'logout': link('logout', null, {'t': csrf_token()})}) }}

		<xf:hiddenval name="uuid" value="{$uuid}" />
	</xf:inforow>

	<xf:js>
		jQuery.extend(XF.phrases, {
			authy_no_uuid: "{{ phrase('authy_no_uuid')|escape('js') }}",
			authy_no_approval_request: "{{ phrase('authy_no_approval_request')|escape('js') }}",
			authy_denied: "{{ phrase('authy_denied')|escape('js') }}",
			authy_success: "{{ phrase('authy_success')|escape('js') }}"
		});
	</xf:js>

	<xf:js>
			$(function()
			{
				var $form = $('.js-authyLoginApprovalRow').closest('form'),
					formData = XF.getDefaultFormData($form);

				$form.find('.formSubmitRow').hide();

				var interval = setInterval(function()
				{
					XF.ajax('post', $form.attr('action'), formData, function(data)
					{
						if (data.errors)
						{
							var error = data.errors[0];

							switch (error)
							{
								case 'authy_no_uuid':
								case 'authy_no_approval_request':
								{
									clearInterval(interval);

									// these are fatal errors
									XF.alert(XF.phrase(error, null, 'An unexpected error occurred.'));
									break;
								}
								case 'authy_denied':
								{
									clearInterval(interval);

									// quite an explicit user choice so display message and redirect to index
									XF.flashMessage(XF.phrase(error), 3000, function()
									{
										XF.redirect(XF.canonicalizeUrl(''));
									});
								}
							}
						}
						else if (data.redirect)
						{
							clearInterval(interval);

							XF.flashMessage(XF.phrase('authy_success'), 3000, function()
							{
								XF.redirect(data.redirect);
							});
						}
					}, { skipDefault: true });
				}, 1000);
			});
	</xf:js>
</xf:if>]]></template>
  <template type="public" title="two_step_backup" version_id="2001070" version_string="2.0.10"><![CDATA[<xf:inforow>{{ phrase('tfa_backup_codes_login_desc') }}</xf:inforow>

<xf:textboxrow name="code" autofocus="autofocus" inputmode="numeric" pattern="[0-9]*"
	label="{{ phrase('backup_code') }}" />]]></template>
  <template type="public" title="two_step_email" version_id="2001070" version_string="2.0.10"><![CDATA[<xf:inforow>{{ phrase('email_has_been_sent_to_x_with_code', {'email': $email}) }}</xf:inforow>

<xf:textboxrow name="code" autofocus="autofocus" inputmode="numeric" pattern="[0-9]*"
	label="{{ phrase('email_confirmation_code') }}" />]]></template>
  <template type="public" title="two_step_totp" version_id="2001070" version_string="2.0.10"><![CDATA[<xf:if is="$context == 'setup'">
	<xf:js src="vendor/qrcode/jquery-qrcode.min.js" />
	<xf:formrow label="{{ phrase('setup') }}">
		{{ phrase('totp_recieve_codes_via_app_desc') }}
		<div style="text-align: center"><span id="js-totpQrCode" style="display: inline-block; background: white; padding: 12px"></span></div>
		{{ phrase('totp_enter_secret_into_app_x', {'secret': $secret}) }}
	</xf:formrow>
	<xf:js>
	jQuery(function($)
	{
		var $el = $('#js-totpQrCode');
		$el.qrcode({
			text: '{$otpUrl|escape('js')}'
		});
	});
	</xf:js>
<xf:else />
	<xf:inforow>{{ phrase('please_enter_code_generated_by_app_on_phone') }}</xf:inforow>
</xf:if>

<xf:textboxrow name="code" autofocus="autofocus" inputmode="numeric" pattern="[0-9]*"
	label="{{ phrase('verification_code') }}" />]]></template>
  <template type="public" title="undelete_confirm" version_id="2010037" version_string="2.1.0 Beta 7"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{$confirmUrl}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('please_confirm_that_you_want_to_undelete_following:') }}
				<xf:if is="$contentUrl">
					<strong><a href="{$contentUrl}">{$contentTitle}</a></strong>
				<xf:else />
					<strong>{$contentTitle}</strong>
				</xf:if>
			</xf:inforow>
		</div>
		<xf:submitrow submit="{{ phrase('undelete') }}" rowtype="simple" />
	</div>
</xf:form>]]></template>
  <template type="public" title="videojs.css" version_id="2000034" version_string="2.0.0 Beta 4"><![CDATA[.video-js.vjs-audio .vjs-big-play-button,
.video-js.vjs-audio .vjs-loading-spinner
{
	display: none;
}
.video-js.vjs-audio .vjs-control-bar
{
	display: -webkit-box;
	display: -webkit-flex;
	display: -ms-flexbox;
	display: flex;
}

/* Make player height minimum to the controls height so when we hide video/poster area the controls are displayed correctly. */
.video-js.vjs-audio
{
	min-height: 3em;
}

/* Workaround for issue in Firefox and IE where the video has no height */
.video-js.vjs-fluid,
.video-js.vjs-16-9,
.video-js.vjs-4-3 {
  width: 100%;
  max-width: 100%;
  height: 100% !important;
}

/* <xf:set var="$fontPath" value="styles/fonts/videojs" /> */

.video-js .vjs-big-play-button .vjs-icon-placeholder:before, .vjs-button > .vjs-icon-placeholder:before, .video-js .vjs-modal-dialog, .vjs-modal-dialog .vjs-modal-dialog-content {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%; }

.video-js .vjs-big-play-button .vjs-icon-placeholder:before, .vjs-button > .vjs-icon-placeholder:before {
  text-align: center; }

@font-face {
  font-family: VideoJS;
  src: url("{$fontPath}/VideoJS.eot?#iefix") format("eot"); }

@font-face {
  font-family: VideoJS;
  src: url(data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAA54AAoAAAAAFmgAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABPUy8yAAAA9AAAAD4AAABWUZFeBWNtYXAAAAE0AAAAOgAAAUriMBC2Z2x5ZgAAAXAAAAouAAAPUFvx6AdoZWFkAAALoAAAACsAAAA2DIPpX2hoZWEAAAvMAAAAGAAAACQOogcgaG10eAAAC+QAAAAPAAAAfNkAAABsb2NhAAAL9AAAAEAAAABAMMg06m1heHAAAAw0AAAAHwAAACABMAB5bmFtZQAADFQAAAElAAACCtXH9aBwb3N0AAANfAAAAPwAAAGBZkSN43icY2BkZ2CcwMDKwMFSyPKMgYHhF4RmjmEIZzzHwMDEwMrMgBUEpLmmMDh8ZPwoxw7iLmSHCDOCCADvEAo+AAB4nGNgYGBmgGAZBkYGEHAB8hjBfBYGDSDNBqQZGZgYGD7K/f8PUvCREUTzM0DVAwEjG8OIBwCPdwbVAAB4nI1Xe1CU1xX/zv1eLItLln0JwrIfC7sJGET2hRJ2N1GUoBJE8AESQEEhmBHjaB7UuBMTO4GMaSu7aY3RNlOdRPNqO2pqRmuTaSZtR6JJILUZk00a/4imjpmiecB303O/XUgMJOPufvd+99xzzz33nN855y4HHH7EfrGfIxwHRiANvF/sH71I9BzHszmpW+rGOQOXxXE6YhI4PoMT8zkT4cDFuf1cwMrZJI5cglM0HKVv0MaUFDgIFfg9mJJCG+kbKn1JkqBOVaFOkuhLpARq8fu0Nnc9/zdvfY9PxXW4PdH0C6N+PCejhorxFjAqRjgFRXSINEARbBGsoxcFK7IJmr4OycFJnInL59zIXwxui80fkGRbEHyosMWaATJKUfCskmwJQsAWANkmnIGOhlf514h7U8HNIv3owoHB0WMt0Eb3sx0guLi5pq/8Ny1q6969fKR9X9GBV6dPv6dp04K99SOwtmyPl47ApRa6n4ZpP1yjr5fn7MmYP/vXLUJs715UguklHBaHOZHZmG1N9FAIW2mf0MqWCIdo/8RZ1yGfxKUldDcGIbFA7ICO+vqOMSPTh/ZrSqgHi/bB/O8E8Mnzp+M+acxfpsTShBwej26TiGxBn7m4eEIO+Rueu6Hj+IFBnh88cAEUEQ//nVLx5C7kf+yIR47QEe+eMlhz9SqsGbe3hh2R03NGzoY6O42Kz8l7fB6fAk6LYnTyFo/FYyT6GGyNx2Jx2sdH4rA1Fo/HyCXaFyOp8dhYBCfJb2NIn1ImE6CYNGmgSTb52DawJR6jfXEmDU4xyTEmpgHHOIStoxfjSGdkbsK2w2jbdMQG4sgAstEONgURYCwGHhEhhscioQaAhhCf7McifEQc0l6+mxj9nI+gmSdiQ0Zbm7gZnIO7GSMEXG6UDAVocxAV8GcEXCKg1a02RcTtwANWRGIAyElor6n/+ZU2yOB3+T77Hb1MLqhn4KHVnQBjJnqe9QZSon6Kc5DxAD2vMdPL/BXSmQGwspa67z9wLUjdi9TN7QC7lyyBr9rpt7uXVC1CMpyjKRoXnGPHTuiaPLsNdc2dbAFQLAooPkXEh33FodHl4XpC6sPCIa0ftUIhHSYXVSu5iME+DIXsbZJ51BeidCgajcai43jU9nVzoSn2dPqcFvSoxSzJzgRKAx47WMRxOrIj3Wf0+hndxhJTiOkSEqxar3b3RKM9hY64oxBA64ieURLvCfpkDb8siBdUJ1bgT+urJ5PGfewQrmm5R5+0HmfyIPySD7OYkT0WxRePah8oEiyjlxIP74thVoRTURpmL6QhGuWS+QDjdANXjIM8SQa/1w128ODx0Qp4aLMNg9+JL3joUn8AMxW+aLNiuKjarn4uyyTdXjOzZTsh21uwldUvJoYza+zELALfu3p1L8/3krtyZ0Ag058J3hxHghvbGZn0dHZy6Mim/7Blre4lpHd1c28yVqRViO153F2oIWoXCIKbL4Z0cM1iaQn9mI5KuV2SzEvWXJDMNtkANpMdQoDDhIdD4A/YrP6Aye9ysxyE+uOEAcTDorgvVZJjcua043PnZ/PmdDqcbibZlXOOT8uSo7Kof0YUn9GL+Jo17ficymxiTofC6znUso0DhAxs1Fo+kF+d36vLmgZ8mk5cdGv2mwYj5k3Dm9m3LhJ1aVRNm6HrTbLgYAoWXDhDd/u4PGy5CT+xGMdiaBovewUCF/1BiWNljI9MLn7jeScpg+WyH6mfU62eVDql7hsrmvx1ezp/YldE2LhjbkiDnAn8tGy/MW3IXRMYJduvq9HpmIcKuFt+JCtgdGEGKAcF6UacVwIYbVPGfw/+YuNBS4cx/CUHcnyfc+wRDMtTr72mMSBjT/yn/GKSdeDWQUCH6Xoqq5R10RE60gV6erUL0iCti16d0hZjxut4QI/rEpgSh6WjnJXdBXRg1GKCucGJPtFqM27aD1tOqqKonsQ2KsFSSmEpmvRlsR+TcD9OFwrqXxIclL4sJTnGMSuG8KpkZvKdeVIOKDyWSyPLV16/p1QMPbP8NihwUzr47bdnXtwtjdCvqqpO0H+pOvIl3Pzv46e5CT/tQjklXCXXym1AaWY7bzHLkuDMc7ldKCvgxzLn8wYkJLBhEDyK7MT8bTbwbkxbfp+3mKAGsmTBpabSIEECzMIcQlzOPAMKsxMs7uhsnxPLuofPDTc1hkuq6MX9j16YU7CqegcYHbmWYuvAP6tCS97tgWf7dlQvnl25YPavXLVZvrzQPeHCpZmzzEUVq/xzu5sChnSTPTW7oOYmh69z4zL/gk3b+O6hoa733uviP82vnFcbqWlc9tDmZa23LVzaV1yXURi+JX+28NeBuj3+O8IrQ080Vm1eWB4OKjPmrJu7c1udWynvKF6/vs479lSW9+5gZkn+dKfellNGDPllzeULustz+A0bPvhgw7lkvEUwn/N4Ty7U7nhGsEpFkOfy+kutbOh1JQxhVDJumoW11hnkPThznh6FFlhfT+ra1x9sF56kx5YuDzVY9PQYAYA7iblw4frQ4TPCk2MK/xGU3rlmze62trHz6lsko+v+So/do74PT8KVkpJfOErKcv8znrMGsHTNxoEkWy1mYgDB6XBbPaWsuiS6CryGaL6zCjaXBgvtkuyXBua1wOKnh+k7L9AvPnYWffxK18FcJbuosGf3/Jo7amY+CE1vppzY+UTrva0FXc1i55pKQ/YjVL187N5fCn1kW5uot/1hi+DiZ+5atnJR9E+prvydJ9ZZ5mwOpU5gM4KYysMBQ71UzPuMTl9QQOyUo5nwioeYCPjFklrbK6s6X+ypUZ6rum9+CZYzWRiBJfSP0xzzSmrg7f86g0DKVj/wwFzieD9rRfPGFbeKMl05pn5j9/rsQJJ2iEgRrpohlyBo3f4QK7Kl+EcAYZgAoNVmZWXK704YAa3FwBxgSGUOs5htvGRz4Sgj3yFkSJFBuv/sxu5yk998T8WDJzvv/2RX19HtTUW1S+wpKRKRjJ6zzz/1/OPdFdWGlAKbvzS4PHOtURikg9AGz0LbIB85S/cPOpoXvuue8/iV2H1vPTy3ddvOeZ37HGmO3OmSzVzR+NS53+84dHlFhXPLqtzSO+5ruHM2vXtBdxP87LOzKAD359j/INYIbyPabIi3Cq6Wa+SaGe78diIzu7qcblcAa6/fJRvNopXFJnO+U9KKM5bqH5LM0iQSVmpPCPDu7ZT4Aoubz3709EBTyrTDjyx8MQXgUH1nqm7TWng4TzE4i4AsKskBITXfSyC4Fkl5MxnJDiKSIDSJAsGvd1y+/eNDp2e+A+5d8HeiiunrTkT6TqWLIs+/QRoWr98s0qj8uuzLuS22Ytufg3rdTaHn1m46sfgGKHXt0MGnLaRHdnwN37tvHcWKo2V6lnPxL4UvUQcRdOzmZSQs8X5CH5OxXMXpkATuDz8Et0SH4uyCRR+TjmBDP1GvsVrWEGVzEj33YVQ9jAtIKpqsl/s/0xrocwAAeJxjYGRgYADig3cEzsTz23xl4GZnAIHLRucNkWl2BrA4BwMTiAIAF4IITwB4nGNgZGBgZwCChWASxGZkQAXyABOUANh4nGNnYGBgHyAMADa8ANoAAAAAAAAOAFAAZgCyAMYA5gEeAUgBdAGcAfICLgKOAroDCgOOA7AD6gQ4BHwEuAToBQwFogXoBjYGbAbaB3IHqHicY2BkYGCQZ8hlYGcAASYg5gJCBob/YD4DABbVAaoAeJxdkE1qg0AYhl8Tk9AIoVDaVSmzahcF87PMARLIMoFAl0ZHY1BHdBJIT9AT9AQ9RQ9Qeqy+yteNMzDzfM+88w0K4BY/cNAMB6N2bUaPPBLukybCLvleeAAPj8JD+hfhMV7hC3u4wxs7OO4NzQSZcI/8Ltwnfwi75E/hAR7wJTyk/xYeY49fYQ/PztM+jbTZ7LY6OWdBJdX/pqs6NYWa+zMxa13oKrA6Uoerqi/JwtpYxZXJ1coUVmeZUWVlTjq0/tHacjmdxuL90OR8O0UEDYMNdtiSEpz5XQGqzlm30kzUdAYFFOb8R7NOZk0q2lwAyz1i7oAr1xoXvrOgtYhZx8wY5KRV269JZ5yGpmzPTjQhvY9je6vEElPOuJP3mWKnP5M3V+YAAAB4nG2P2XLCMAxFfYFspGUp3Te+IB9lHJF4cOzUS2n/voaEGR6qB+lKo+WITdhga/a/bRnDBFPMkCBFhhwF5ihxg1sssMQKa9xhg3s84BFPeMYLXvGGd3zgE9tZr/hveXKVkFYoSnoeHJXfRoWOqi54mo9ameNFdrK+dLSyaVf7oJQTlkhXpD3Z5XXhR/rUfQVuKXO91Jps4cLOS6/I5YL3XhodRRsVWZe4NnZOhWnSAWgxhMoEr6SmzZieF43Mk7ZOBdeCVGrp9Eu+54J2xhySplfB5XHwQLXUmT9KH6+kPnQ7ZYuIEzNyfs1DLU1VU4SWZ6LkXGHsD1ZKbMw=) format("woff"), url(data:application/x-font-ttf;charset=utf-8;base64,AAEAAAAKAIAAAwAgT1MvMlGRXgUAAAEoAAAAVmNtYXDiMBC2AAAB/AAAAUpnbHlmW/HoBwAAA4gAAA9QaGVhZAyD6V8AAADQAAAANmhoZWEOogcgAAAArAAAACRobXR42QAAAAAAAYAAAAB8bG9jYTDINOoAAANIAAAAQG1heHABMAB5AAABCAAAACBuYW1l1cf1oAAAEtgAAAIKcG9zdGZEjeMAABTkAAABgQABAAAHAAAAAKEHAAAAAAAHAAABAAAAAAAAAAAAAAAAAAAAHwABAAAAAQAAwdxheF8PPPUACwcAAAAAANMyzzEAAAAA0zLPMQAAAAAHAAcAAAAACAACAAAAAAAAAAEAAAAfAG0ABwAAAAAAAgAAAAoACgAAAP8AAAAAAAAAAQcAAZAABQAIBHEE5gAAAPoEcQTmAAADXABXAc4AAAIABQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUGZFZABA8QHxHgcAAAAAoQcAAAAAAAABAAAAAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAAAAAMAAAADAAAAHAABAAAAAABEAAMAAQAAABwABAAoAAAABgAEAAEAAgAA8R7//wAAAADxAf//AAAPAAABAAAAAAAAAAABBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAFAAZgCyAMYA5gEeAUgBdAGcAfICLgKOAroDCgOOA7AD6gQ4BHwEuAToBQwFogXoBjYGbAbaB3IHqAABAAAAAAWLBYsAAgAAAREBAlUDNgWL++oCCwAAAwAAAAAGawZrAAIADgAaAAAJAhMEAAMSAAUkABMCAAEmACc2ADcWABcGAALrAcD+QJX+w/5aCAgBpgE9AT0BpggI/lr+w/3+rgYGAVL9/QFSBgb+rgIwAVABUAGbCP5a/sP+w/5aCAgBpgE9AT0BpvrIBgFS/f0BUgYG/q79/f6uAAAAAgAAAAAFQAWLAAMABwAAASERKQERIREBwAEr/tUCVQErAXUEFvvqBBYAAAAEAAAAAAYgBiAABgATACQAJwAAAS4BJxUXNjcGBxc+ATUmACcVFhIBBwEhESEBEQEGBxU+ATcXNwEHFwTQAWVVuAO7AidxJSgF/t/lpc77t18BYf6fASsBdQE+TF1OijuZX/1gnJwDgGSeK6W4GBhqW3FGnFT0AWM4mjT+9AHrX/6f/kD+iwH2/sI7HZoSRDGYXwSWnJwAAAEAAAAABKsF1gAFAAABESEBEQECCwEqAXb+igRg/kD+iwSq/osAAAACAAAAAAVmBdYABgAMAAABLgEnET4BAREhAREBBWUBZVRUZfwRASsBdf6LA4Bkniv9piueAUT+QP6LBKr+iwAAAwAAAAAGIAYPAAUADAAaAAATESEBEQEFLgEnET4BAxUWEhcGAgcVNgA3JgDgASsBdf6LAsUBZVVVZbqlzgMDzqXlASEFBf7fBGD+QP6LBKr+i+Bkniv9piueAvOaNP70tbX+9DSaOAFi9fUBYgAAAAQAAAAABYsFiwAFAAsAEQAXAAABIxEhNSMDMzUzNSEBIxUhESMDFTMVMxECC5YBduCWluD+igOA4AF2luDglgLr/oqWAgrglvyAlgF2AqCW4AF2AAQAAAAABYsFiwAFAAsAEQAXAAABMxUzESETIxUhESMBMzUzNSETNSMRITUBdeCW/org4AF2lgHAluD+ipaWAXYCVeABdgHAlgF2++rglgHA4P6KlgAAAAACAAAAAAXWBdYADwATAAABIQ4BBxEeARchPgE3ES4BAyERIQVA/IA/VQEBVT8DgD9VAQFVP/yAA4AF1QFVP/yAP1UBAVU/A4A/VfvsA4AAAAYAAAAABmsGawAHAAwAEwAbACAAKAAACQEmJw4BBwElLgEnAQUhATYSNyYFAQYCBxYXIQUeARcBMwEWFz4BNwECvgFkTlSH8GEBEgOONemh/u4C5f3QAXpcaAEB/BP+3VxoAQEOAjD95DXpoQESeP7dTlSH8GH+7gPwAmgSAQFYUP4nd6X2Pv4nS/1zZAEBk01NAfhk/v+TTUhLpfY+Adn+CBIBAVhQAdkAAAAFAAAAAAZrBdYADwATABcAGwAfAAABIQ4BBxEeARchPgE3ES4BASEVIQEhNSEFITUhNSE1IQXV+1ZAVAICVEAEqkBUAgJU+xYBKv7WAur9FgLqAcD+1gEq/RYC6gXVAVU//IA/VQEBVT8DgD9V/ayV/tWVlZWWlQADAAAAAAYgBdYADwAnAD8AAAEhDgEHER4BFyE+ATcRLgEBIzUjFTM1MxUUBgcjLgEnET4BNzMeARUFIzUjFTM1MxUOAQcjLgE1ETQ2NzMeARcFi/vqP1QCAlQ/BBY/VAICVP1rcJWVcCog4CAqAQEqIOAgKgILcJWVcAEqIOAgKiog4CAqAQXVAVU//IA/VQEBVT8DgD9V/fcl4CVKICoBASogASogKgEBKiBKJeAlSiAqAQEqIAEqICoBASogAAAGAAAAAAYgBPYAAwAHAAsADwATABcAABMzNSMRMzUjETM1IwEhNSERITUhERUhNeCVlZWVlZUBKwQV++sEFfvrBBUDNZb+QJUBwJX+QJb+QJUCVZWVAAAAAQAAAAAGIAZsAC4AAAEiBgcBNjQnAR4BMz4BNy4BJw4BBxQXAS4BIw4BBx4BFzI2NwEGBx4BFz4BNy4BBUArSh797AcHAg8eTixffwICf19ffwIH/fEeTixffwICf18sTh4CFAUBA3tcXHsDA3sCTx8bATcZNhkBNB0gAn9fX38CAn9fGxn+zRwgAn9fX38CIBz+yhcaXHsCAntcXXsAAAIAAAAABlkGawBDAE8AAAE2NCc3PgEnAy4BDwEmLwEuASchDgEPAQYHJyYGBwMGFh8BBhQXBw4BFxMeAT8BFh8BHgEXIT4BPwE2NxcWNjcTNiYnBS4BJz4BNx4BFw4BBasFBZ4KBgeWBxkNujpEHAMUD/7WDxQCHEU5ug0aB5UHBQudBQWdCwUHlQcaDbo5RRwCFA8BKg8UAhxFOboNGgeVBwUL/ThvlAIClG9vlAIClAM3JEokewkaDQEDDAkFSy0cxg4RAQERDsYcLUsFCQz+/QwbCXskSiR7CRoN/v0MCQVLLRzGDhEBAREOxhwtSwUJDAEDDBsJQQKUb2+UAgKUb2+UAAAAAAEAAAAABmsGawALAAATEgAFJAATAgAlBACVCAGmAT0BPQGmCAj+Wv7D/sP+WgOA/sP+WggIAaYBPQE9AaYICP5aAAAAAgAAAAAGawZrAAsAFwAAAQQAAxIABSQAEwIAASYAJzYANxYAFwYAA4D+w/5aCAgBpgE9AT0BpggI/lr+w/3+rgYGAVL9/QFSBgb+rgZrCP5a/sP+w/5aCAgBpgE9AT0BpvrIBgFS/f0BUgYG/q79/f6uAAADAAAAAAZrBmsACwAXACMAAAEEAAMSAAUkABMCAAEmACc2ADcWABcGAAMOAQcuASc+ATceAQOA/sP+WggIAaYBPQE9AaYICP5a/sP9/q4GBgFS/f0BUgYG/q4dAn9fX38CAn9fX38Gawj+Wv7D/sP+WggIAaYBPQE9Aab6yAYBUv39AVIGBv6u/f3+rgJPX38CAn9fX38CAn8AAAAEAAAAAAYgBiAADwAbACUAKQAAASEOAQcRHgEXIT4BNxEuAQEjNSMVIxEzFTM1OwEhHgEXEQ4BByE3MzUjBYv76j9UAgJUPwQWP1QCAlT9a3CVcHCVcJYBKiAqAQEqIP7WcJWVBiACVD/76j9UAgJUPwQWP1T8gpWVAcC7uwEqIP7WICoBcOAAAgAAAAAGawZrAAsAFwAAAQQAAxIABSQAEwIAEwcJAScJATcJARcBA4D+w/5aCAgBpgE9AT0BpggI/lo4af70/vRpAQv+9WkBDAEMaf71BmsI/lr+w/7D/loICAGmAT0BPQGm/BFpAQv+9WkBDAEMaf71AQtp/vQAAQAAAAAF1ga2ABYAAAERCQERHgEXDgEHLgEnIxYAFzYANyYAA4D+iwF1vv0FBf2+vv0FlQYBUf7+AVEGBv6vBYsBKv6L/osBKgT9v779BQX9vv7+rwYGAVH+/gFRAAAAAQAAAAAFPwcAABQAAAERIyIGHQEhAyMRIREjETM1NDYzMgU/nVY8ASUn/v7O///QrZMG9P74SEi9/tj9CQL3ASjaus0AAAAABAAAAAAGjgcAADAARQBgAGwAAAEUHgMVFAcGBCMiJicmNTQ2NzYlLgE1NDcGIyImNTQ2Nz4BMyEHIx4BFRQOAycyNjc2NTQuAiMiBgcGFRQeAxMyPgI1NC4BLwEmLwImIyIOAxUUHgIBMxUjFSM1IzUzNTMDH0BbWkAwSP7qn4TlOSVZSoMBESAfFS4WlMtIP03TcAGiioNKTDFFRjGSJlAaNSI/akAqURkvFCs9WTY6a1s3Dg8THgocJU4QIDVob1M2RnF9A2vV1WnU1GkD5CRFQ1CATlpTenNTYDxHUYouUhIqQCkkMQTBlFKaNkJAWD+MWkhzRztAPiEbOWY6hn1SJyE7ZS5nZ1I0/JcaNF4+GTAkGCMLFx04Ag4kOF07Rms7HQNsbNvbbNkAAwAAAAAGgAZsAAMADgAqAAABESERARYGKwEiJjQ2MhYBESERNCYjIgYHBhURIRIQLwEhFSM+AzMyFgHd/rYBXwFnVAJSZGemZASP/rdRVj9VFQv+twIBAQFJAhQqR2c/q9AEj/whA98BMkliYpNhYfzd/cgCEml3RTMeM/3XAY8B8DAwkCAwOB/jAAABAAAAAAaUBgAAMQAAAQYHFhUUAg4BBCMgJxYzMjcuAScWMzI3LgE9ARYXLgE1NDcWBBcmNTQ2MzIXNjcGBzYGlENfAUyb1v7SrP7x4SMr4bBpph8hHCsqcJNETkJOLHkBW8YIvYaMYG1gJWldBWhiRQ4cgv797rdtkQSKAn1hBQsXsXUEJgMsjlNYS5WzCiYkhr1mFTlzPwoAAAABAAAAAAWABwAAIgAAARcOAQcGLgM1ESM1PgQ3PgE7AREhFSERFB4CNzYFMFAXsFlorXBOIahIckQwFAUBBwT0AU3+sg0gQzBOAc/tIz4BAjhceHg6AiDXGlddb1ctBQf+WPz9+h40NR4BAgABAAAAAAaABoAASgAAARQCBCMiJzY/AR4BMzI+ATU0LgEjIg4DFRQWFxY/ATY3NicmNTQ2MzIWFRQGIyImNz4CNTQmIyIGFRQXAwYXJgI1NBIkIAQSBoDO/p/Rb2s7EzYUaj15vmh34o5ptn9bK1BNHggIBgIGETPRqZepiWs9Sg4IJRc2Mj5WGWMRBM7+zgFhAaIBYc4DgNH+n84gXUfTJzmJ8JZyyH46YH2GQ2ieIAwgHxgGFxQ9WpfZpIOq7lc9I3VZHzJCclVJMf5eRmtbAXzp0QFhzs7+nwAABwAAAAAHAATPAA4AFwAqAD0AUABaAF0AAAERNh4CBw4BBwYmIycmNxY2NzYmBxEUBRY2Nz4BNy4BJyMGHwEeARcOARcWNjc+ATcuAScjBh8BHgEXFAYXFjY3PgE3LgEnIwYfAR4BFw4BBTM/ARUzESMGAyUVJwMchM2UWwgNq4JHrQgBAapUaAoJcWMBfiIhDiMrAQJLMB0BBAokNAIBPmMiIQ4iLAECSzAeAQUKJDQBP2MiIQ4iLAECSzAeAQUKJDQBAT75g+5B4arNLNIBJ44ByQL9BQ9mvYCKwA8FBQMDwwJVTGdzBf6VB8IHNR08lld9uT4LCRA/qGNxvUwHNR08lld9uT4LCRA/qGNxvUwHNR08lld9uT4LCRA/qGNxvVJkAWUDDEf+tYP5AQAAAAEAAAAABiAGtgAbAAABBAADER4BFzMRITU2ADcWABcVIREzPgE3EQIAA4D+4v6FBwJ/X+D+1QYBJ97eAScG/tXgX38CB/6FBrUH/oX+4v32X38CAlWV3gEnBgb+2d6V/asCf18CCgEeAXsAAAAAEADGAAEAAAAAAAEABwAAAAEAAAAAAAIABwAHAAEAAAAAAAMABwAOAAEAAAAAAAQABwAVAAEAAAAAAAUACwAcAAEAAAAAAAYABwAnAAEAAAAAAAoAKwAuAAEAAAAAAAsAEwBZAAMAAQQJAAEADgBsAAMAAQQJAAIADgB6AAMAAQQJAAMADgCIAAMAAQQJAAQADgCWAAMAAQQJAAUAFgCkAAMAAQQJAAYADgC6AAMAAQQJAAoAVgDIAAMAAQQJAAsAJgEeVmlkZW9KU1JlZ3VsYXJWaWRlb0pTVmlkZW9KU1ZlcnNpb24gMS4wVmlkZW9KU0dlbmVyYXRlZCBieSBzdmcydHRmIGZyb20gRm9udGVsbG8gcHJvamVjdC5odHRwOi8vZm9udGVsbG8uY29tAFYAaQBkAGUAbwBKAFMAUgBlAGcAdQBsAGEAcgBWAGkAZABlAG8ASgBTAFYAaQBkAGUAbwBKAFMAVgBlAHIAcwBpAG8AbgAgADEALgAwAFYAaQBkAGUAbwBKAFMARwBlAG4AZQByAGEAdABlAGQAIABiAHkAIABzAHYAZwAyAHQAdABmACAAZgByAG8AbQAgAEYAbwBuAHQAZQBsAGwAbwAgAHAAcgBvAGoAZQBjAHQALgBoAHQAdABwADoALwAvAGYAbwBuAHQAZQBsAGwAbwAuAGMAbwBtAAAAAgAAAAAAAAARAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfAAABAgEDAQQBBQEGAQcBCAEJAQoBCwEMAQ0BDgEPARABEQESARMBFAEVARYBFwEYARkBGgEbARwBHQEeAR8EcGxheQtwbGF5LWNpcmNsZQVwYXVzZQt2b2x1bWUtbXV0ZQp2b2x1bWUtbG93CnZvbHVtZS1taWQLdm9sdW1lLWhpZ2gQZnVsbHNjcmVlbi1lbnRlcg9mdWxsc2NyZWVuLWV4aXQGc3F1YXJlB3NwaW5uZXIJc3VidGl0bGVzCGNhcHRpb25zCGNoYXB0ZXJzBXNoYXJlA2NvZwZjaXJjbGUOY2lyY2xlLW91dGxpbmUTY2lyY2xlLWlubmVyLWNpcmNsZQJoZAZjYW5jZWwGcmVwbGF5CGZhY2Vib29rBWdwbHVzCGxpbmtlZGluB3R3aXR0ZXIGdHVtYmxyCXBpbnRlcmVzdBFhdWRpby1kZXNjcmlwdGlvbgVhdWRpbwAAAAAA) format("truetype");
  font-weight: normal;
  font-style: normal; }

.vjs-icon-play, .video-js .vjs-big-play-button .vjs-icon-placeholder:before, .video-js .vjs-play-control .vjs-icon-placeholder {
  font-family: VideoJS;
  font-weight: normal;
  font-style: normal; }
  .vjs-icon-play:before, .video-js .vjs-big-play-button .vjs-icon-placeholder:before, .video-js .vjs-play-control .vjs-icon-placeholder:before {
    content: "\f101"; }

.vjs-icon-play-circle {
  font-family: VideoJS;
  font-weight: normal;
  font-style: normal; }
  .vjs-icon-play-circle:before {
    content: "\f102"; }

.vjs-icon-pause, .video-js .vjs-play-control.vjs-playing .vjs-icon-placeholder {
  font-family: VideoJS;
  font-weight: normal;
  font-style: normal; }
  .vjs-icon-pause:before, .video-js .vjs-play-control.vjs-playing .vjs-icon-placeholder:before {
    content: "\f103"; }

.vjs-icon-volume-mute, .video-js .vjs-mute-control.vjs-vol-0 .vjs-icon-placeholder {
  font-family: VideoJS;
  font-weight: normal;
  font-style: normal; }
  .vjs-icon-volume-mute:before, .video-js .vjs-mute-control.vjs-vol-0 .vjs-icon-placeholder:before {
    content: "\f104"; }

.vjs-icon-volume-low, .video-js .vjs-mute-control.vjs-vol-1 .vjs-icon-placeholder {
  font-family: VideoJS;
  font-weight: normal;
  font-style: normal; }
  .vjs-icon-volume-low:before, .video-js .vjs-mute-control.vjs-vol-1 .vjs-icon-placeholder:before {
    content: "\f105"; }

.vjs-icon-volume-mid, .video-js .vjs-mute-control.vjs-vol-2 .vjs-icon-placeholder {
  font-family: VideoJS;
  font-weight: normal;
  font-style: normal; }
  .vjs-icon-volume-mid:before, .video-js .vjs-mute-control.vjs-vol-2 .vjs-icon-placeholder:before {
    content: "\f106"; }

.vjs-icon-volume-high, .video-js .vjs-mute-control .vjs-icon-placeholder {
  font-family: VideoJS;
  font-weight: normal;
  font-style: normal; }
  .vjs-icon-volume-high:before, .video-js .vjs-mute-control .vjs-icon-placeholder:before {
    content: "\f107"; }

.vjs-icon-fullscreen-enter, .video-js .vjs-fullscreen-control .vjs-icon-placeholder {
  font-family: VideoJS;
  font-weight: normal;
  font-style: normal; }
  .vjs-icon-fullscreen-enter:before, .video-js .vjs-fullscreen-control .vjs-icon-placeholder:before {
    content: "\f108"; }

.vjs-icon-fullscreen-exit, .video-js.vjs-fullscreen .vjs-fullscreen-control .vjs-icon-placeholder {
  font-family: VideoJS;
  font-weight: normal;
  font-style: normal; }
  .vjs-icon-fullscreen-exit:before, .video-js.vjs-fullscreen .vjs-fullscreen-control .vjs-icon-placeholder:before {
    content: "\f109"; }

.vjs-icon-square {
  font-family: VideoJS;
  font-weight: normal;
  font-style: normal; }
  .vjs-icon-square:before {
    content: "\f10a"; }

.vjs-icon-spinner {
  font-family: VideoJS;
  font-weight: normal;
  font-style: normal; }
  .vjs-icon-spinner:before {
    content: "\f10b"; }

.vjs-icon-subtitles, .video-js .vjs-subtitles-button .vjs-icon-placeholder, .video-js .vjs-subs-caps-button .vjs-icon-placeholder,
.video-js.video-js:lang(en-GB) .vjs-subs-caps-button .vjs-icon-placeholder,
.video-js.video-js:lang(en-IE) .vjs-subs-caps-button .vjs-icon-placeholder,
.video-js.video-js:lang(en-AU) .vjs-subs-caps-button .vjs-icon-placeholder,
.video-js.video-js:lang(en-NZ) .vjs-subs-caps-button .vjs-icon-placeholder {
  font-family: VideoJS;
  font-weight: normal;
  font-style: normal; }
  .vjs-icon-subtitles:before, .video-js .vjs-subtitles-button .vjs-icon-placeholder:before, .video-js .vjs-subs-caps-button .vjs-icon-placeholder:before,
  .video-js.video-js:lang(en-GB) .vjs-subs-caps-button .vjs-icon-placeholder:before,
  .video-js.video-js:lang(en-IE) .vjs-subs-caps-button .vjs-icon-placeholder:before,
  .video-js.video-js:lang(en-AU) .vjs-subs-caps-button .vjs-icon-placeholder:before,
  .video-js.video-js:lang(en-NZ) .vjs-subs-caps-button .vjs-icon-placeholder:before {
    content: "\f10c"; }

.vjs-icon-captions, .video-js .vjs-captions-button .vjs-icon-placeholder, .video-js:lang(en) .vjs-subs-caps-button .vjs-icon-placeholder,
.video-js:lang(fr-CA) .vjs-subs-caps-button .vjs-icon-placeholder {
  font-family: VideoJS;
  font-weight: normal;
  font-style: normal; }
  .vjs-icon-captions:before, .video-js .vjs-captions-button .vjs-icon-placeholder:before, .video-js:lang(en) .vjs-subs-caps-button .vjs-icon-placeholder:before,
  .video-js:lang(fr-CA) .vjs-subs-caps-button .vjs-icon-placeholder:before {
    content: "\f10d"; }

.vjs-icon-chapters, .video-js .vjs-chapters-button .vjs-icon-placeholder {
  font-family: VideoJS;
  font-weight: normal;
  font-style: normal; }
  .vjs-icon-chapters:before, .video-js .vjs-chapters-button .vjs-icon-placeholder:before {
    content: "\f10e"; }

.vjs-icon-share {
  font-family: VideoJS;
  font-weight: normal;
  font-style: normal; }
  .vjs-icon-share:before {
    content: "\f10f"; }

.vjs-icon-cog {
  font-family: VideoJS;
  font-weight: normal;
  font-style: normal; }
  .vjs-icon-cog:before {
    content: "\f110"; }

.vjs-icon-circle, .video-js .vjs-play-progress, .video-js .vjs-volume-level {
  font-family: VideoJS;
  font-weight: normal;
  font-style: normal; }
  .vjs-icon-circle:before, .video-js .vjs-play-progress:before, .video-js .vjs-volume-level:before {
    content: "\f111"; }

.vjs-icon-circle-outline {
  font-family: VideoJS;
  font-weight: normal;
  font-style: normal; }
  .vjs-icon-circle-outline:before {
    content: "\f112"; }

.vjs-icon-circle-inner-circle {
  font-family: VideoJS;
  font-weight: normal;
  font-style: normal; }
  .vjs-icon-circle-inner-circle:before {
    content: "\f113"; }

.vjs-icon-hd {
  font-family: VideoJS;
  font-weight: normal;
  font-style: normal; }
  .vjs-icon-hd:before {
    content: "\f114"; }

.vjs-icon-cancel, .video-js .vjs-control.vjs-close-button .vjs-icon-placeholder {
  font-family: VideoJS;
  font-weight: normal;
  font-style: normal; }
  .vjs-icon-cancel:before, .video-js .vjs-control.vjs-close-button .vjs-icon-placeholder:before {
    content: "\f115"; }

.vjs-icon-replay, .video-js .vjs-play-control.vjs-ended .vjs-icon-placeholder {
  font-family: VideoJS;
  font-weight: normal;
  font-style: normal; }
  .vjs-icon-replay:before, .video-js .vjs-play-control.vjs-ended .vjs-icon-placeholder:before {
    content: "\f116"; }

.vjs-icon-facebook {
  font-family: VideoJS;
  font-weight: normal;
  font-style: normal; }
  .vjs-icon-facebook:before {
    content: "\f117"; }

.vjs-icon-gplus {
  font-family: VideoJS;
  font-weight: normal;
  font-style: normal; }
  .vjs-icon-gplus:before {
    content: "\f118"; }

.vjs-icon-linkedin {
  font-family: VideoJS;
  font-weight: normal;
  font-style: normal; }
  .vjs-icon-linkedin:before {
    content: "\f119"; }

.vjs-icon-twitter {
  font-family: VideoJS;
  font-weight: normal;
  font-style: normal; }
  .vjs-icon-twitter:before {
    content: "\f11a"; }

.vjs-icon-tumblr {
  font-family: VideoJS;
  font-weight: normal;
  font-style: normal; }
  .vjs-icon-tumblr:before {
    content: "\f11b"; }

.vjs-icon-pinterest {
  font-family: VideoJS;
  font-weight: normal;
  font-style: normal; }
  .vjs-icon-pinterest:before {
    content: "\f11c"; }

.vjs-icon-audio-description, .video-js .vjs-descriptions-button .vjs-icon-placeholder {
  font-family: VideoJS;
  font-weight: normal;
  font-style: normal; }
  .vjs-icon-audio-description:before, .video-js .vjs-descriptions-button .vjs-icon-placeholder:before {
    content: "\f11d"; }

.vjs-icon-audio, .video-js .vjs-audio-button .vjs-icon-placeholder {
  font-family: VideoJS;
  font-weight: normal;
  font-style: normal; }
  .vjs-icon-audio:before, .video-js .vjs-audio-button .vjs-icon-placeholder:before {
    content: "\f11e"; }

.video-js {
  display: block;
  vertical-align: top;
  box-sizing: border-box;
  color: #fff;
  background-color: #000;
  position: relative;
  padding: 0;
  font-size: 10px;
  line-height: 1;
  font-weight: normal;
  font-style: normal;
  font-family: Arial, Helvetica, sans-serif; }
  .video-js:-moz-full-screen {
    position: absolute; }
  .video-js:-webkit-full-screen {
    width: 100% !important;
    height: 100% !important; }

.video-js[tabindex="-1"] {
  outline: none; }

.video-js *,
.video-js *:before,
.video-js *:after {
  box-sizing: inherit; }

.video-js ul {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  list-style-position: outside;
  margin-left: 0;
  margin-right: 0;
  margin-top: 0;
  margin-bottom: 0; }

.video-js.vjs-fluid,
.video-js.vjs-16-9,
.video-js.vjs-4-3 {
  width: 100%;
  max-width: 100%;
  height: 0; }

.video-js.vjs-16-9 {
  padding-top: 56.25%; }

.video-js.vjs-4-3 {
  padding-top: 75%; }

.video-js.vjs-fill {
  width: 100%;
  height: 100%; }

.video-js .vjs-tech {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%; }

body.vjs-full-window {
  padding: 0;
  margin: 0;
  height: 100%;
  overflow-y: auto; }

.vjs-full-window .video-js.vjs-fullscreen {
  position: fixed;
  overflow: hidden;
  z-index: 1000;
  left: 0;
  top: 0;
  bottom: 0;
  right: 0; }

.video-js.vjs-fullscreen {
  width: 100% !important;
  height: 100% !important;
  padding-top: 0 !important; }

.video-js.vjs-fullscreen.vjs-user-inactive {
  cursor: none; }

.vjs-hidden {
  display: none !important; }

.vjs-disabled {
  opacity: 0.5;
  cursor: default; }

.video-js .vjs-offscreen {
  height: 1px;
  left: -9999px;
  position: absolute;
  top: 0;
  width: 1px; }

.vjs-lock-showing {
  display: block !important;
  opacity: 1;
  visibility: visible; }

.vjs-no-js {
  padding: 20px;
  color: #fff;
  background-color: #000;
  font-size: 18px;
  font-family: Arial, Helvetica, sans-serif;
  text-align: center;
  width: 300px;
  height: 150px;
  margin: 0px auto; }

.vjs-no-js a,
.vjs-no-js a:visited {
  color: #66A8CC; }

.video-js .vjs-big-play-button {
  font-size: 3em;
  line-height: 1.5em;
  height: 1.5em;
  width: 3em;
  display: block;
  position: absolute;
  top: 10px;
  left: 10px;
  padding: 0;
  cursor: pointer;
  opacity: 1;
  border: 0.06666em solid #fff;
  background-color: #2B333F;
  background-color: rgba(43, 51, 63, 0.7);
  -webkit-border-radius: 0.3em;
  -moz-border-radius: 0.3em;
  border-radius: 0.3em;
  -webkit-transition: all 0.4s;
  -moz-transition: all 0.4s;
  -ms-transition: all 0.4s;
  -o-transition: all 0.4s;
  transition: all 0.4s; }

.vjs-big-play-centered .vjs-big-play-button {
  top: 50%;
  left: 50%;
  margin-top: -0.75em;
  margin-left: -1.5em; }

.video-js:hover .vjs-big-play-button,
.video-js .vjs-big-play-button:focus {
  border-color: #fff;
  background-color: #73859f;
  background-color: rgba(115, 133, 159, 0.5);
  -webkit-transition: all 0s;
  -moz-transition: all 0s;
  -ms-transition: all 0s;
  -o-transition: all 0s;
  transition: all 0s; }

.vjs-controls-disabled .vjs-big-play-button,
.vjs-has-started .vjs-big-play-button,
.vjs-using-native-controls .vjs-big-play-button,
.vjs-error .vjs-big-play-button {
  display: none; }

.vjs-has-started.vjs-paused.vjs-show-big-play-button-on-pause .vjs-big-play-button {
  display: block; }

.video-js button {
  background: none;
  border: none;
  color: inherit;
  display: inline-block;
  overflow: visible;
  font-size: inherit;
  line-height: inherit;
  text-transform: none;
  text-decoration: none;
  transition: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none; }

.vjs-control .vjs-button {
  width: 100%;
  height: 100%; }

.video-js .vjs-control.vjs-close-button {
  cursor: pointer;
  height: 3em;
  position: absolute;
  right: 0;
  top: 0.5em;
  z-index: 2; }

.video-js .vjs-modal-dialog {
  background: rgba(0, 0, 0, 0.8);
  background: -webkit-linear-gradient(-90deg, rgba(0, 0, 0, 0.8), rgba(255, 255, 255, 0));
  background: linear-gradient(180deg, rgba(0, 0, 0, 0.8), rgba(255, 255, 255, 0));
  overflow: auto;
  box-sizing: content-box; }

.video-js .vjs-modal-dialog > * {
  box-sizing: border-box; }

.vjs-modal-dialog .vjs-modal-dialog-content {
  font-size: 1.2em;
  line-height: 1.5;
  padding: 20px 24px;
  z-index: 1; }

.vjs-menu-button {
  cursor: pointer; }

.vjs-menu-button.vjs-disabled {
  cursor: default; }

.vjs-workinghover .vjs-menu-button.vjs-disabled:hover .vjs-menu {
  display: none; }

.vjs-menu .vjs-menu-content {
  display: block;
  padding: 0;
  margin: 0;
  font-family: Arial, Helvetica, sans-serif;
  overflow: auto;
  box-sizing: content-box; }

.vjs-menu .vjs-menu-content > * {
  box-sizing: border-box; }

.vjs-scrubbing .vjs-menu-button:hover .vjs-menu {
  display: none; }

.vjs-menu li {
  list-style: none;
  margin: 0;
  padding: 0.2em 0;
  line-height: 1.4em;
  font-size: 1.2em;
  text-align: center;
  text-transform: lowercase; }

.vjs-menu li.vjs-menu-item:focus,
.vjs-menu li.vjs-menu-item:hover {
  background-color: #73859f;
  background-color: rgba(115, 133, 159, 0.5); }

.vjs-menu li.vjs-selected,
.vjs-menu li.vjs-selected:focus,
.vjs-menu li.vjs-selected:hover {
  background-color: #fff;
  color: #2B333F; }

.vjs-menu li.vjs-menu-title {
  text-align: center;
  text-transform: uppercase;
  font-size: 1em;
  line-height: 2em;
  padding: 0;
  margin: 0 0 0.3em 0;
  font-weight: bold;
  cursor: default; }

.vjs-menu-button-popup .vjs-menu {
  display: none;
  position: absolute;
  bottom: 0;
  width: 10em;
  left: -3em;
  height: 0em;
  margin-bottom: 1.5em;
  border-top-color: rgba(43, 51, 63, 0.7); }

.vjs-menu-button-popup .vjs-menu .vjs-menu-content {
  background-color: #2B333F;
  background-color: rgba(43, 51, 63, 0.7);
  position: absolute;
  width: 100%;
  bottom: 1.5em;
  max-height: 15em; }

.vjs-workinghover .vjs-menu-button-popup:hover .vjs-menu,
.vjs-menu-button-popup .vjs-menu.vjs-lock-showing {
  display: block; }

.video-js .vjs-menu-button-inline {
  -webkit-transition: all 0.4s;
  -moz-transition: all 0.4s;
  -ms-transition: all 0.4s;
  -o-transition: all 0.4s;
  transition: all 0.4s;
  overflow: hidden; }

.video-js .vjs-menu-button-inline:before {
  width: 2.222222222em; }

.video-js .vjs-menu-button-inline:hover,
.video-js .vjs-menu-button-inline:focus,
.video-js .vjs-menu-button-inline.vjs-slider-active,
.video-js.vjs-no-flex .vjs-menu-button-inline {
  width: 12em; }

.vjs-menu-button-inline .vjs-menu {
  opacity: 0;
  height: 100%;
  width: auto;
  position: absolute;
  left: 4em;
  top: 0;
  padding: 0;
  margin: 0;
  -webkit-transition: all 0.4s;
  -moz-transition: all 0.4s;
  -ms-transition: all 0.4s;
  -o-transition: all 0.4s;
  transition: all 0.4s; }

.vjs-menu-button-inline:hover .vjs-menu,
.vjs-menu-button-inline:focus .vjs-menu,
.vjs-menu-button-inline.vjs-slider-active .vjs-menu {
  display: block;
  opacity: 1; }

.vjs-no-flex .vjs-menu-button-inline .vjs-menu {
  display: block;
  opacity: 1;
  position: relative;
  width: auto; }

.vjs-no-flex .vjs-menu-button-inline:hover .vjs-menu,
.vjs-no-flex .vjs-menu-button-inline:focus .vjs-menu,
.vjs-no-flex .vjs-menu-button-inline.vjs-slider-active .vjs-menu {
  width: auto; }

.vjs-menu-button-inline .vjs-menu-content {
  width: auto;
  height: 100%;
  margin: 0;
  overflow: hidden; }

.video-js .vjs-control-bar {
  display: none;
  width: 100%;
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: 3.0em;
  background-color: #2B333F;
  background-color: rgba(43, 51, 63, 0.7); }

.vjs-has-started .vjs-control-bar {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  visibility: visible;
  opacity: 1;
  -webkit-transition: visibility 0.1s, opacity 0.1s;
  -moz-transition: visibility 0.1s, opacity 0.1s;
  -ms-transition: visibility 0.1s, opacity 0.1s;
  -o-transition: visibility 0.1s, opacity 0.1s;
  transition: visibility 0.1s, opacity 0.1s; }

.vjs-has-started.vjs-user-inactive.vjs-playing .vjs-control-bar {
  visibility: visible;
  opacity: 0;
  -webkit-transition: visibility 1s, opacity 1s;
  -moz-transition: visibility 1s, opacity 1s;
  -ms-transition: visibility 1s, opacity 1s;
  -o-transition: visibility 1s, opacity 1s;
  transition: visibility 1s, opacity 1s; }

.vjs-controls-disabled .vjs-control-bar,
.vjs-using-native-controls .vjs-control-bar,
.vjs-error .vjs-control-bar {
  display: none !important; }

.vjs-audio.vjs-has-started.vjs-user-inactive.vjs-playing .vjs-control-bar {
  opacity: 1;
  visibility: visible; }

.vjs-has-started.vjs-no-flex .vjs-control-bar {
  display: table; }

.video-js .vjs-control {
  position: relative;
  text-align: center;
  margin: 0;
  padding: 0;
  height: 100%;
  width: 4em;
  -webkit-box-flex: none;
  -moz-box-flex: none;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none; }

.vjs-button > .vjs-icon-placeholder:before {
  font-size: 1.8em;
  line-height: 1.67; }

.video-js .vjs-control:focus:before,
.video-js .vjs-control:hover:before,
.video-js .vjs-control:focus {
  text-shadow: 0em 0em 1em white; }

.video-js .vjs-control-text {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }

.vjs-no-flex .vjs-control {
  display: table-cell;
  vertical-align: middle; }

.video-js .vjs-custom-control-spacer {
  display: none; }

.video-js .vjs-progress-control {
  cursor: pointer;
  -webkit-box-flex: auto;
  -moz-box-flex: auto;
  -webkit-flex: auto;
  -ms-flex: auto;
  flex: auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 4em; }

.vjs-live .vjs-progress-control {
  display: none; }

.vjs-no-flex .vjs-progress-control {
  width: auto; }

.video-js .vjs-progress-holder {
  -webkit-box-flex: auto;
  -moz-box-flex: auto;
  -webkit-flex: auto;
  -ms-flex: auto;
  flex: auto;
  -webkit-transition: all 0.2s;
  -moz-transition: all 0.2s;
  -ms-transition: all 0.2s;
  -o-transition: all 0.2s;
  transition: all 0.2s;
  height: 0.3em; }

.video-js .vjs-progress-control .vjs-progress-holder {
  margin: 0 10px; }

.video-js .vjs-progress-control:hover .vjs-progress-holder {
  font-size: 1.666666666666666666em; }

.video-js .vjs-progress-holder .vjs-play-progress,
.video-js .vjs-progress-holder .vjs-load-progress,
.video-js .vjs-progress-holder .vjs-load-progress div {
  position: absolute;
  display: block;
  height: 100%;
  margin: 0;
  padding: 0;
  width: 0;
  left: 0;
  top: 0; }

.video-js .vjs-play-progress {
  background-color: #fff; }
  .video-js .vjs-play-progress:before {
    font-size: 0.9em;
    position: absolute;
    right: -0.5em;
    top: -0.333333333333333em;
    z-index: 1; }

.video-js .vjs-load-progress {
  background: #bfc7d3;
  background: rgba(115, 133, 159, 0.5); }

.video-js .vjs-load-progress div {
  background: white;
  background: rgba(115, 133, 159, 0.75); }

.video-js .vjs-time-tooltip {
  background-color: #fff;
  background-color: rgba(255, 255, 255, 0.8);
  -webkit-border-radius: 0.3em;
  -moz-border-radius: 0.3em;
  border-radius: 0.3em;
  color: #000;
  float: right;
  font-family: Arial, Helvetica, sans-serif;
  font-size: 1em;
  padding: 6px 8px 8px 8px;
  pointer-events: none;
  position: relative;
  top: -3.4em;
  visibility: hidden;
  z-index: 1; }

.video-js .vjs-progress-holder:focus .vjs-time-tooltip {
  display: none; }

.video-js .vjs-progress-control:hover .vjs-time-tooltip,
.video-js .vjs-progress-control:hover .vjs-progress-holder:focus .vjs-time-tooltip {
  display: block;
  font-size: 0.6em;
  visibility: visible; }

.video-js .vjs-progress-control .vjs-mouse-display {
  display: none;
  position: absolute;
  width: 1px;
  height: 100%;
  background-color: #000;
  z-index: 1; }

.vjs-no-flex .vjs-progress-control .vjs-mouse-display {
  z-index: 0; }

.video-js .vjs-progress-control:hover .vjs-mouse-display {
  display: block; }

.video-js.vjs-user-inactive .vjs-progress-control .vjs-mouse-display {
  visibility: hidden;
  opacity: 0;
  -webkit-transition: visibility 1s, opacity 1s;
  -moz-transition: visibility 1s, opacity 1s;
  -ms-transition: visibility 1s, opacity 1s;
  -o-transition: visibility 1s, opacity 1s;
  transition: visibility 1s, opacity 1s; }

.video-js.vjs-user-inactive.vjs-no-flex .vjs-progress-control .vjs-mouse-display {
  display: none; }

.vjs-mouse-display .vjs-time-tooltip {
  color: #fff;
  background-color: #000;
  background-color: rgba(0, 0, 0, 0.8); }

.video-js .vjs-slider {
  position: relative;
  cursor: pointer;
  padding: 0;
  margin: 0 0.45em 0 0.45em;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  background-color: #73859f;
  background-color: rgba(115, 133, 159, 0.5); }

.video-js .vjs-slider:focus {
  text-shadow: 0em 0em 1em white;
  -webkit-box-shadow: 0 0 1em #fff;
  -moz-box-shadow: 0 0 1em #fff;
  box-shadow: 0 0 1em #fff; }

.video-js .vjs-mute-control {
  cursor: pointer;
  -webkit-box-flex: none;
  -moz-box-flex: none;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  padding-left: 2em;
  padding-right: 2em;
  padding-bottom: 3em; }

.video-js .vjs-volume-control {
  cursor: pointer;
  margin-right: 1em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; }

.video-js .vjs-volume-control.vjs-volume-horizontal {
  width: 5em; }

.video-js .vjs-volume-panel .vjs-volume-control {
  visibility: visible;
  opacity: 0;
  width: 1px;
  height: 1px;
  margin-left: -1px; }

.vjs-no-flex .vjs-volume-panel .vjs-volume-control.vjs-volume-vertical {
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)"; }
  .vjs-no-flex .vjs-volume-panel .vjs-volume-control.vjs-volume-vertical .vjs-volume-bar,
  .vjs-no-flex .vjs-volume-panel .vjs-volume-control.vjs-volume-vertical .vjs-volume-level {
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)"; }

.video-js .vjs-volume-panel {
  -webkit-transition: width 1s;
  -moz-transition: width 1s;
  -ms-transition: width 1s;
  -o-transition: width 1s;
  transition: width 1s; }
  .video-js .vjs-volume-panel:hover .vjs-volume-control,
  .video-js .vjs-volume-panel:active .vjs-volume-control,
  .video-js .vjs-volume-panel:focus .vjs-volume-control,
  .video-js .vjs-volume-panel .vjs-volume-control:hover,
  .video-js .vjs-volume-panel .vjs-volume-control:active,
  .video-js .vjs-volume-panel .vjs-volume-control:focus,
  .video-js .vjs-volume-panel .vjs-mute-control:hover ~ .vjs-volume-control,
  .video-js .vjs-volume-panel .vjs-mute-control:active ~ .vjs-volume-control,
  .video-js .vjs-volume-panel .vjs-mute-control:focus ~ .vjs-volume-control,
  .video-js .vjs-volume-panel .vjs-volume-control.vjs-slider-active {
    visibility: visible;
    opacity: 1;
    position: relative;
    -webkit-transition: visibility 0.1s, opacity 0.1s, height 0.1s, width 0.1s, left 0s, top 0s;
    -moz-transition: visibility 0.1s, opacity 0.1s, height 0.1s, width 0.1s, left 0s, top 0s;
    -ms-transition: visibility 0.1s, opacity 0.1s, height 0.1s, width 0.1s, left 0s, top 0s;
    -o-transition: visibility 0.1s, opacity 0.1s, height 0.1s, width 0.1s, left 0s, top 0s;
    transition: visibility 0.1s, opacity 0.1s, height 0.1s, width 0.1s, left 0s, top 0s; }
    .video-js .vjs-volume-panel:hover .vjs-volume-control.vjs-volume-horizontal,
    .video-js .vjs-volume-panel:active .vjs-volume-control.vjs-volume-horizontal,
    .video-js .vjs-volume-panel:focus .vjs-volume-control.vjs-volume-horizontal,
    .video-js .vjs-volume-panel .vjs-volume-control:hover.vjs-volume-horizontal,
    .video-js .vjs-volume-panel .vjs-volume-control:active.vjs-volume-horizontal,
    .video-js .vjs-volume-panel .vjs-volume-control:focus.vjs-volume-horizontal,
    .video-js .vjs-volume-panel .vjs-mute-control:hover ~ .vjs-volume-control.vjs-volume-horizontal,
    .video-js .vjs-volume-panel .vjs-mute-control:active ~ .vjs-volume-control.vjs-volume-horizontal,
    .video-js .vjs-volume-panel .vjs-mute-control:focus ~ .vjs-volume-control.vjs-volume-horizontal,
    .video-js .vjs-volume-panel .vjs-volume-control.vjs-slider-active.vjs-volume-horizontal {
      width: 5em;
      height: 3em; }
    .video-js .vjs-volume-panel:hover .vjs-volume-control.vjs-volume-vertical,
    .video-js .vjs-volume-panel:active .vjs-volume-control.vjs-volume-vertical,
    .video-js .vjs-volume-panel:focus .vjs-volume-control.vjs-volume-vertical,
    .video-js .vjs-volume-panel .vjs-volume-control:hover.vjs-volume-vertical,
    .video-js .vjs-volume-panel .vjs-volume-control:active.vjs-volume-vertical,
    .video-js .vjs-volume-panel .vjs-volume-control:focus.vjs-volume-vertical,
    .video-js .vjs-volume-panel .vjs-mute-control:hover ~ .vjs-volume-control.vjs-volume-vertical,
    .video-js .vjs-volume-panel .vjs-mute-control:active ~ .vjs-volume-control.vjs-volume-vertical,
    .video-js .vjs-volume-panel .vjs-mute-control:focus ~ .vjs-volume-control.vjs-volume-vertical,
    .video-js .vjs-volume-panel .vjs-volume-control.vjs-slider-active.vjs-volume-vertical {
      -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=100)"; }
      .video-js .vjs-volume-panel:hover .vjs-volume-control.vjs-volume-vertical .vjs-volume-bar,
      .video-js .vjs-volume-panel:hover .vjs-volume-control.vjs-volume-vertical .vjs-volume-level,
      .video-js .vjs-volume-panel:active .vjs-volume-control.vjs-volume-vertical .vjs-volume-bar,
      .video-js .vjs-volume-panel:active .vjs-volume-control.vjs-volume-vertical .vjs-volume-level,
      .video-js .vjs-volume-panel:focus .vjs-volume-control.vjs-volume-vertical .vjs-volume-bar,
      .video-js .vjs-volume-panel:focus .vjs-volume-control.vjs-volume-vertical .vjs-volume-level,
      .video-js .vjs-volume-panel .vjs-volume-control:hover.vjs-volume-vertical .vjs-volume-bar,
      .video-js .vjs-volume-panel .vjs-volume-control:hover.vjs-volume-vertical .vjs-volume-level,
      .video-js .vjs-volume-panel .vjs-volume-control:active.vjs-volume-vertical .vjs-volume-bar,
      .video-js .vjs-volume-panel .vjs-volume-control:active.vjs-volume-vertical .vjs-volume-level,
      .video-js .vjs-volume-panel .vjs-volume-control:focus.vjs-volume-vertical .vjs-volume-bar,
      .video-js .vjs-volume-panel .vjs-volume-control:focus.vjs-volume-vertical .vjs-volume-level,
      .video-js .vjs-volume-panel .vjs-mute-control:hover ~ .vjs-volume-control.vjs-volume-vertical .vjs-volume-bar,
      .video-js .vjs-volume-panel .vjs-mute-control:hover ~ .vjs-volume-control.vjs-volume-vertical .vjs-volume-level,
      .video-js .vjs-volume-panel .vjs-mute-control:active ~ .vjs-volume-control.vjs-volume-vertical .vjs-volume-bar,
      .video-js .vjs-volume-panel .vjs-mute-control:active ~ .vjs-volume-control.vjs-volume-vertical .vjs-volume-level,
      .video-js .vjs-volume-panel .vjs-mute-control:focus ~ .vjs-volume-control.vjs-volume-vertical .vjs-volume-bar,
      .video-js .vjs-volume-panel .vjs-mute-control:focus ~ .vjs-volume-control.vjs-volume-vertical .vjs-volume-level,
      .video-js .vjs-volume-panel .vjs-volume-control.vjs-slider-active.vjs-volume-vertical .vjs-volume-bar,
      .video-js .vjs-volume-panel .vjs-volume-control.vjs-slider-active.vjs-volume-vertical .vjs-volume-level {
        -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=100)"; }
  .video-js .vjs-volume-panel.vjs-volume-panel-horizontal:hover, .video-js .vjs-volume-panel.vjs-volume-panel-horizontal:focus, .video-js .vjs-volume-panel.vjs-volume-panel-horizontal:active, .video-js .vjs-volume-panel.vjs-volume-panel-horizontal.vjs-slider-active {
    width: 9em;
    -webkit-transition: width 0.1s;
    -moz-transition: width 0.1s;
    -ms-transition: width 0.1s;
    -o-transition: width 0.1s;
    transition: width 0.1s; }

.video-js .vjs-volume-panel .vjs-volume-control.vjs-volume-vertical {
  height: 8em;
  width: 3em;
  left: -3.5em;
  -webkit-transition: visibility 1s, opacity 1s, height 1s 1s, width 1s 1s, left 1s 1s, top 1s 1s;
  -moz-transition: visibility 1s, opacity 1s, height 1s 1s, width 1s 1s, left 1s 1s, top 1s 1s;
  -ms-transition: visibility 1s, opacity 1s, height 1s 1s, width 1s 1s, left 1s 1s, top 1s 1s;
  -o-transition: visibility 1s, opacity 1s, height 1s 1s, width 1s 1s, left 1s 1s, top 1s 1s;
  transition: visibility 1s, opacity 1s, height 1s 1s, width 1s 1s, left 1s 1s, top 1s 1s; }

.video-js .vjs-volume-panel .vjs-volume-control.vjs-volume-horizontal {
  -webkit-transition: visibility 1s, opacity 1s, height 1s 1s, width 1s, left 1s 1s, top 1s 1s;
  -moz-transition: visibility 1s, opacity 1s, height 1s 1s, width 1s, left 1s 1s, top 1s 1s;
  -ms-transition: visibility 1s, opacity 1s, height 1s 1s, width 1s, left 1s 1s, top 1s 1s;
  -o-transition: visibility 1s, opacity 1s, height 1s 1s, width 1s, left 1s 1s, top 1s 1s;
  transition: visibility 1s, opacity 1s, height 1s 1s, width 1s, left 1s 1s, top 1s 1s; }

.video-js.vjs-no-flex .vjs-volume-panel .vjs-volume-control.vjs-volume-horizontal {
  width: 5em;
  height: 3em;
  visibility: visible;
  opacity: 1;
  position: relative;
  -webkit-transition: none;
  -moz-transition: none;
  -ms-transition: none;
  -o-transition: none;
  transition: none; }

.video-js.vjs-no-flex .vjs-volume-control.vjs-volume-vertical,
.video-js.vjs-no-flex .vjs-volume-panel .vjs-volume-control.vjs-volume-vertical {
  position: absolute;
  bottom: 3em;
  left: 0.5em; }

.video-js .vjs-volume-panel {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; }

.video-js .vjs-volume-bar {
  margin: 1.35em 0.45em; }

.vjs-volume-bar.vjs-slider-horizontal {
  width: 5em;
  height: 0.3em; }

.vjs-volume-bar.vjs-slider-vertical {
  width: 0.3em;
  height: 5em;
  margin: 1.35em auto; }

.video-js .vjs-volume-level {
  position: absolute;
  bottom: 0;
  left: 0;
  background-color: #fff; }
  .video-js .vjs-volume-level:before {
    position: absolute;
    font-size: 0.9em; }

.vjs-slider-vertical .vjs-volume-level {
  width: 0.3em; }
  .vjs-slider-vertical .vjs-volume-level:before {
    top: -0.5em;
    left: -0.3em; }

.vjs-slider-horizontal .vjs-volume-level {
  height: 0.3em; }
  .vjs-slider-horizontal .vjs-volume-level:before {
    top: -0.3em;
    right: -0.5em; }

.video-js .vjs-volume-panel.vjs-volume-panel-vertical {
  width: 4em; }

.vjs-volume-bar.vjs-slider-vertical .vjs-volume-level {
  height: 100%; }

.vjs-volume-bar.vjs-slider-horizontal .vjs-volume-level {
  width: 100%; }

.video-js .vjs-volume-vertical {
  width: 3em;
  height: 8em;
  bottom: 8em;
  background-color: #2B333F;
  background-color: rgba(43, 51, 63, 0.7); }

.video-js .vjs-volume-horizontal .vjs-menu {
  left: -2em; }

.vjs-poster {
  display: inline-block;
  vertical-align: middle;
  background-repeat: no-repeat;
  background-position: 50% 50%;
  background-size: contain;
  background-color: #000000;
  cursor: pointer;
  margin: 0;
  padding: 0;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  height: 100%; }

.vjs-poster img {
  display: block;
  vertical-align: middle;
  margin: 0 auto;
  max-height: 100%;
  padding: 0;
  width: 100%; }

.vjs-has-started .vjs-poster {
  display: none; }

.vjs-audio.vjs-has-started .vjs-poster {
  display: block; }

.vjs-using-native-controls .vjs-poster {
  display: none; }

.video-js .vjs-live-control {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: flex-start;
  -webkit-align-items: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  -webkit-box-flex: auto;
  -moz-box-flex: auto;
  -webkit-flex: auto;
  -ms-flex: auto;
  flex: auto;
  font-size: 1em;
  line-height: 3em; }

.vjs-no-flex .vjs-live-control {
  display: table-cell;
  width: auto;
  text-align: left; }

.video-js .vjs-time-control {
  -webkit-box-flex: none;
  -moz-box-flex: none;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  font-size: 1em;
  line-height: 3em;
  min-width: 2em;
  width: auto;
  padding-left: 1em;
  padding-right: 1em; }

.vjs-live .vjs-time-control {
  display: none; }

.video-js .vjs-current-time,
.vjs-no-flex .vjs-current-time {
  display: none; }

.vjs-no-flex .vjs-remaining-time.vjs-time-control.vjs-control {
  width: 0px !important;
  white-space: nowrap; }

.video-js .vjs-duration,
.vjs-no-flex .vjs-duration {
  display: none; }

.vjs-time-divider {
  display: none;
  line-height: 3em; }

.vjs-live .vjs-time-divider {
  display: none; }

.video-js .vjs-play-control .vjs-icon-placeholder {
  cursor: pointer;
  -webkit-box-flex: none;
  -moz-box-flex: none;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none; }

.vjs-text-track-display {
  position: absolute;
  bottom: 3em;
  left: 0;
  right: 0;
  top: 0;
  pointer-events: none; }

.video-js.vjs-user-inactive.vjs-playing .vjs-text-track-display {
  bottom: 1em; }

.video-js .vjs-text-track {
  font-size: 1.4em;
  text-align: center;
  margin-bottom: 0.1em;
  background-color: #000;
  background-color: rgba(0, 0, 0, 0.5); }

.vjs-subtitles {
  color: #fff; }

.vjs-captions {
  color: #fc6; }

.vjs-tt-cue {
  display: block; }

video::-webkit-media-text-track-display {
  -moz-transform: translateY(-3em);
  -ms-transform: translateY(-3em);
  -o-transform: translateY(-3em);
  -webkit-transform: translateY(-3em);
  transform: translateY(-3em); }

.video-js.vjs-user-inactive.vjs-playing video::-webkit-media-text-track-display {
  -moz-transform: translateY(-1.5em);
  -ms-transform: translateY(-1.5em);
  -o-transform: translateY(-1.5em);
  -webkit-transform: translateY(-1.5em);
  transform: translateY(-1.5em); }

.video-js .vjs-fullscreen-control {
  cursor: pointer;
  -webkit-box-flex: none;
  -moz-box-flex: none;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none; }

.vjs-playback-rate > .vjs-menu-button,
.vjs-playback-rate .vjs-playback-rate-value {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%; }

.vjs-playback-rate .vjs-playback-rate-value {
  pointer-events: none;
  font-size: 1.5em;
  line-height: 2;
  text-align: center; }

.vjs-playback-rate .vjs-menu {
  width: 4em;
  left: 0em; }

.vjs-error .vjs-error-display .vjs-modal-dialog-content {
  font-size: 1.4em;
  text-align: center; }

.vjs-error .vjs-error-display:before {
  color: #fff;
  content: 'X';
  font-family: Arial, Helvetica, sans-serif;
  font-size: 4em;
  left: 0;
  line-height: 1;
  margin-top: -0.5em;
  position: absolute;
  text-shadow: 0.05em 0.05em 0.1em #000;
  text-align: center;
  top: 50%;
  vertical-align: middle;
  width: 100%; }

.vjs-loading-spinner {
  display: none;
  position: absolute;
  top: 50%;
  left: 50%;
  margin: -25px 0 0 -25px;
  opacity: 0.85;
  text-align: left;
  border: 6px solid rgba(43, 51, 63, 0.7);
  box-sizing: border-box;
  background-clip: padding-box;
  width: 50px;
  height: 50px;
  border-radius: 25px; }

.vjs-seeking .vjs-loading-spinner,
.vjs-waiting .vjs-loading-spinner {
  display: block; }

.vjs-loading-spinner:before,
.vjs-loading-spinner:after {
  content: "";
  position: absolute;
  margin: -6px;
  box-sizing: inherit;
  width: inherit;
  height: inherit;
  border-radius: inherit;
  opacity: 1;
  border: inherit;
  border-color: transparent;
  border-top-color: white; }

.vjs-seeking .vjs-loading-spinner:before,
.vjs-seeking .vjs-loading-spinner:after,
.vjs-waiting .vjs-loading-spinner:before,
.vjs-waiting .vjs-loading-spinner:after {
  -webkit-animation: vjs-spinner-spin 1.1s cubic-bezier(0.6, 0.2, 0, 0.8) infinite, vjs-spinner-fade 1.1s linear infinite;
  animation: vjs-spinner-spin 1.1s cubic-bezier(0.6, 0.2, 0, 0.8) infinite, vjs-spinner-fade 1.1s linear infinite; }

.vjs-seeking .vjs-loading-spinner:before,
.vjs-waiting .vjs-loading-spinner:before {
  border-top-color: white; }

.vjs-seeking .vjs-loading-spinner:after,
.vjs-waiting .vjs-loading-spinner:after {
  border-top-color: white;
  -webkit-animation-delay: 0.44s;
  animation-delay: 0.44s; }

@keyframes vjs-spinner-spin {
  100% {
    transform: rotate(360deg); } }

@-webkit-keyframes vjs-spinner-spin {
  100% {
    -webkit-transform: rotate(360deg); } }

@keyframes vjs-spinner-fade {
  0% {
    border-top-color: #73859f; }
  20% {
    border-top-color: #73859f; }
  35% {
    border-top-color: white; }
  60% {
    border-top-color: #73859f; }
  100% {
    border-top-color: #73859f; } }

@-webkit-keyframes vjs-spinner-fade {
  0% {
    border-top-color: #73859f; }
  20% {
    border-top-color: #73859f; }
  35% {
    border-top-color: white; }
  60% {
    border-top-color: #73859f; }
  100% {
    border-top-color: #73859f; } }

.vjs-chapters-button .vjs-menu ul {
  width: 24em; }

.video-js .vjs-subs-caps-button + .vjs-menu .vjs-captions-menu-item .vjs-menu-item-text .vjs-icon-placeholder {
  position: absolute; }

.video-js .vjs-subs-caps-button + .vjs-menu .vjs-captions-menu-item .vjs-menu-item-text .vjs-icon-placeholder:before {
  font-family: VideoJS;
  content: "\f10d";
  font-size: 1.5em;
  line-height: inherit; }

.video-js.vjs-layout-tiny:not(.vjs-fullscreen) .vjs-custom-control-spacer {
  -webkit-box-flex: auto;
  -moz-box-flex: auto;
  -webkit-flex: auto;
  -ms-flex: auto;
  flex: auto; }

.video-js.vjs-layout-tiny:not(.vjs-fullscreen).vjs-no-flex .vjs-custom-control-spacer {
  width: auto; }

.video-js.vjs-layout-tiny:not(.vjs-fullscreen) .vjs-current-time, .video-js.vjs-layout-tiny:not(.vjs-fullscreen) .vjs-time-divider, .video-js.vjs-layout-tiny:not(.vjs-fullscreen) .vjs-duration, .video-js.vjs-layout-tiny:not(.vjs-fullscreen) .vjs-remaining-time,
.video-js.vjs-layout-tiny:not(.vjs-fullscreen) .vjs-playback-rate, .video-js.vjs-layout-tiny:not(.vjs-fullscreen) .vjs-progress-control,
.video-js.vjs-layout-tiny:not(.vjs-fullscreen) .vjs-mute-control, .video-js.vjs-layout-tiny:not(.vjs-fullscreen) .vjs-volume-control,
.video-js.vjs-layout-tiny:not(.vjs-fullscreen) .vjs-chapters-button, .video-js.vjs-layout-tiny:not(.vjs-fullscreen) .vjs-descriptions-button, .video-js.vjs-layout-tiny:not(.vjs-fullscreen) .vjs-captions-button,
.video-js.vjs-layout-tiny:not(.vjs-fullscreen) .vjs-subtitles-button, .video-js.vjs-layout-tiny:not(.vjs-fullscreen) .vjs-audio-button {
  display: none; }

.video-js.vjs-layout-x-small:not(.vjs-fullscreen) .vjs-current-time, .video-js.vjs-layout-x-small:not(.vjs-fullscreen) .vjs-time-divider, .video-js.vjs-layout-x-small:not(.vjs-fullscreen) .vjs-duration, .video-js.vjs-layout-x-small:not(.vjs-fullscreen) .vjs-remaining-time,
.video-js.vjs-layout-x-small:not(.vjs-fullscreen) .vjs-playback-rate,
.video-js.vjs-layout-x-small:not(.vjs-fullscreen) .vjs-mute-control, .video-js.vjs-layout-x-small:not(.vjs-fullscreen) .vjs-volume-control,
.video-js.vjs-layout-x-small:not(.vjs-fullscreen) .vjs-chapters-button, .video-js.vjs-layout-x-small:not(.vjs-fullscreen) .vjs-descriptions-button, .video-js.vjs-layout-x-small:not(.vjs-fullscreen) .vjs-captions-button,
.video-js.vjs-layout-x-small:not(.vjs-fullscreen) .vjs-subtitles-button, .video-js.vjs-layout-x-small:not(.vjs-fullscreen) .vjs-audio-button {
  display: none; }

.video-js.vjs-layout-small:not(.vjs-fullscreen) .vjs-current-time, .video-js.vjs-layout-small:not(.vjs-fullscreen) .vjs-time-divider, .video-js.vjs-layout-small:not(.vjs-fullscreen) .vjs-duration, .video-js.vjs-layout-small:not(.vjs-fullscreen) .vjs-remaining-time,
.video-js.vjs-layout-small:not(.vjs-fullscreen) .vjs-playback-rate,
.video-js.vjs-layout-small:not(.vjs-fullscreen) .vjs-mute-control, .video-js.vjs-layout-small:not(.vjs-fullscreen) .vjs-volume-control,
.video-js.vjs-layout-small:not(.vjs-fullscreen) .vjs-chapters-button, .video-js.vjs-layout-small:not(.vjs-fullscreen) .vjs-descriptions-button, .video-js.vjs-layout-small:not(.vjs-fullscreen) .vjs-captions-button,
.video-js.vjs-layout-small:not(.vjs-fullscreen) .vjs-subtitles-button .vjs-audio-button {
  display: none; }

.vjs-modal-dialog.vjs-text-track-settings {
  background-color: #2B333F;
  background-color: rgba(43, 51, 63, 0.75);
  color: #fff;
  height: 70%; }

.vjs-text-track-settings .vjs-modal-dialog-content {
  display: table; }

.vjs-text-track-settings .vjs-track-settings-colors,
.vjs-text-track-settings .vjs-track-settings-font,
.vjs-text-track-settings .vjs-track-settings-controls {
  display: table-cell; }

.vjs-text-track-settings .vjs-track-settings-controls {
  text-align: right;
  vertical-align: bottom; }

.vjs-text-track-settings fieldset {
  margin: 5px;
  padding: 3px;
  border: none; }

.vjs-text-track-settings fieldset span {
  display: inline-block;
  margin-left: 5px; }

.vjs-text-track-settings legend {
  color: #fff;
  margin: 0 0 5px 0; }

.vjs-text-track-settings .vjs-label {
  position: absolute;
  clip: rect(1px 1px 1px 1px);
  clip: rect(1px, 1px, 1px, 1px);
  display: block;
  margin: 0 0 5px 0;
  padding: 0;
  border: 0;
  height: 1px;
  width: 1px;
  overflow: hidden; }

.vjs-track-settings-controls button:focus,
.vjs-track-settings-controls button:active {
  outline-style: solid;
  outline-width: medium;
  background-image: linear-gradient(0deg, #fff 88%, #73859f 100%); }

.vjs-track-settings-controls button:hover {
  color: rgba(43, 51, 63, 0.75); }

.vjs-track-settings-controls button {
  background-color: #fff;
  background-image: linear-gradient(-180deg, #fff 88%, #73859f 100%);
  color: #2B333F;
  cursor: pointer;
  border-radius: 2px; }

.vjs-track-settings-controls .vjs-default-button {
  margin-right: 1em; }

@media print {
  .video-js > *:not(.vjs-tech):not(.vjs-poster) {
    visibility: hidden; } }

@media \0screen {
  .vjs-user-inactive.vjs-playing .vjs-control-bar :before {
    content: "";
  }
}

@media \0screen {
  .vjs-has-started.vjs-user-inactive.vjs-playing .vjs-control-bar {
    visibility: hidden;
  }
}]]></template>
  <template type="public" title="videojs_macros" version_id="2000034" version_string="2.0.0 Beta 4"><![CDATA[<xf:macro name="setup">
	<xf:css src="videojs.css" />
	<xf:js prod="xf/video_player-compiled.js" dev="vendor/videojs/video.js, xf/video_player.js" />
</xf:macro>]]></template>
  <template type="public" title="warning_info" version_id="2001170" version_string="2.0.11"><![CDATA[<xf:title>{{ phrase('warning_for_x', {'name': $user.username}) }}</xf:title>

<div class="form block">
	<div class="block-container">
		<div class="block-body">
			<xf:if is="$canViewContent">
				<xf:formrow label="{{ phrase('content') }}">
					<xf:if is="{$contentUrl}">
						<a href="{$contentUrl}">{$warning.display_title}</a>
					<xf:else />
						{$warning.display_title}
					</xf:if>
				</xf:formrow>
			</xf:if>

			<xf:formrow label="{{ phrase('given_by') }}">
				<ul class="listInline listInline--bullet">
					<li><xf:username user="{$warning.WarnedBy}" /></li>
					<li><xf:date time="{$warning.warning_date}" /></li>
				</ul>
			</xf:formrow>

			<xf:formrow label="{{ phrase('details_of_warning') }}">
				{$warning.title}
				<xf:if is="{$warning.notes}"><div class="u-muted">{{ structured_text($warning.notes) }}</div></xf:if>
			</xf:formrow>

			<xf:formrow label="{{ phrase('warning_points') }}">
				{$warning.points|number}
				<xf:if is="$warning.is_expired">
					<span class="u-muted">{{ phrase('(expired)') }}</span>
				<xf:elseif is="$warning.expiry_date" />
					<span class="u-muted">{{ phrase('(expires_x)', {'date': date($warning.expiry_date)}) }}</span>
				</xf:if>
			</xf:formrow>
		</div>
		<xf:if is="$warning.canDelete() AND $warning.canEditExpiry()">
			<h2 class="block-tabHeader tabs" data-xf-init="tabs" role="tablist">
				<a class="tabs-tab is-active" role="tab" tabindex="0" aria-controls="{{ unique_id('warningDelete') }}">{{ phrase('delete_warning') }}</a>
				<a class="tabs-tab is-active" role="tab" tabindex="0" aria-controls="{{ unique_id('warningUpdate') }}">{{ phrase('update_warning') }}</a>
			</h2>
			<ul class="tabPanes">
				<li class="is-active" role="tabpanel" id="{{ unique_id('warningDelete') }}">
					<xf:macro name="delete" arg-warning="{$warning}" />
				</li>
				<li role="tabpanel" id="{{ unique_id('warningUpdate') }}">
					<xf:macro name="expire" arg-warning="{$warning}" />
				</li>
			</ul>
		<xf:elseif is="$warning.canDelete()" />
			<xf:macro name="delete" arg-warning="{$warning}" />
		<xf:elseif is="$warning.canEditExpiry()" />
			<xf:macro name="expire" arg-warning="{$warning}" />
		</xf:if>
	</div>
</div>

<xf:macro name="delete" arg-warning="!" arg-redirect="">
	<xf:form action="{{ link('warnings/delete', $warning) }}">
		<xf:checkboxrow>
			<xf:option name="confirm" value="1">{{ phrase('confirm_deletion') }}</xf:option>
		</xf:checkboxrow>
		<xf:submitrow icon="delete" />
		<xf:redirect url="{$redirect}" />
	</xf:form>
</xf:macro>

<xf:macro name="expire" arg-warning="!" arg-redirect="">
	<xf:form action="{{ link('warnings/expire', $warning) }}">
		<xf:radiorow name="expire" value="now">
			<xf:option value="now">{{ phrase('expire_now') }}</xf:option>
			<xf:option value="future" label="{{ phrase('expire_in_time:') }}">
				<xf:dependent>
					<div class="inputGroup">
						<xf:numberbox name="expiry_value" value="1" min="0" />
						<span class="inputGroup-splitter"></span>
						<xf:select name="expiry_unit" value="days" class="input--inline">
							<xf:option value="days">{{ phrase('days') }}</xf:option>
							<xf:option value="weeks">{{ phrase('weeks') }}</xf:option>
							<xf:option value="months">{{ phrase('months') }}</xf:option>
							<xf:option value="years">{{ phrase('years') }}</xf:option>
						</xf:select>
					</div>
				</xf:dependent>
			</xf:option>
		</xf:radiorow>
		<xf:submitrow icon="save" />
		<xf:redirect url="{$redirect}" />
	</xf:form>
</xf:macro>]]></template>
  <template type="public" title="watched_forums_list" version_id="2000036" version_string="2.0.0 Beta 6"><![CDATA[<xf:title>{{ phrase('watched_forums') }}</xf:title>

<xf:css src="node_list.less" />

<xf:if is="$watchedForums is not empty">
	<xf:form action="{{ link('watched/forums/update') }}" ajax="true" class="block" autocomplete="off">

		<div class="block-outer">

			<div class="block-outer-opposite">
				<xf:button class="button--link menuTrigger" data-xf-click="menu" aria-expanded="false" aria-haspopup="true">{{ phrase('manage_watched_forums') }}</xf:button>
				<div class="menu" data-menu="menu" aria-hidden="true">
					<div class="menu-content">
						<h3 class="menu-header">{{ phrase('manage_watched_forums') }}</h3>
						<!--[XF:manage_menu:top]-->
						<a href="{{ link('watched/forums/manage', null, {'state': 'watch_no_email'}) }}" data-xf-click="overlay" class="menu-linkRow">{{ phrase('disable_email_notification') }}</a>
						<a href="{{ link('watched/forums/manage', null, {'state': 'delete'}) }}" data-xf-click="overlay" class="menu-linkRow">{{ phrase('stop_watching_forums') }}</a>
						<!--[XF:manage_menu:bottom]-->
					</div>
				</div>
			</div>
		</div>

		<div class="block-container">
			<div class="block-body">
				<xf:foreach loop="$nodeTree.getFlattened()" key="$id" value="$treeEntry">
					<xf:set var="$node" value="{$treeEntry.record}" />
					<xf:set var="$forumWatch" value="{$watchedForums.{$node.node_id}}" />
					<xf:if is="$forumWatch">
						<xf:set var="$bonusInfo">
							<ul class="listInline listInline--bullet">
								<xf:if is="$forumWatch.notify_on == 'thread'">
									<li>{{ phrase('new_threads') }}</li>
								<xf:elseif is="$forumWatch.notify_on == 'message'" />
									<li>{{ phrase('new_messages') }}</li>
								</xf:if>
								<xf:if is="$forumWatch.send_alert"><li>{{ phrase('alerts') }}</li></xf:if>
								<xf:if is="$forumWatch.send_email"><li>{{ phrase('emails') }}</li></xf:if>
							</ul>
						</xf:set>
						<xf:macro template="node_list_forum" name="forum"
							arg-node="{$node}"
							arg-extras="{$nodeExtras.{$node.node_id}}"
							arg-children="{$nodeTree.{$id}.children}"
							arg-childExtras="{$nodeExtras}"
							arg-depth="2"
							arg-chooseName="node_ids"
							arg-bonusInfo="{$bonusInfo}" />
					</xf:if>
				</xf:foreach>
			</div>
			<div class="block-footer block-footer--split">
				<span class="block-footer-counter"></span>
				<span class="block-footer-select"><xf:checkbox standalone="true">
					<xf:option class="input--inline" check-all="< .block-container" label="{{ phrase('select_all') }}" />
				</xf:checkbox></span>
				<span class="block-footer-controls">
					<xf:select name="action" class="input--inline">
						<xf:option>{{ phrase('with_selected...') }}</xf:option>
						<!--[XF:action_menu:top]-->
						<xf:option value="email">{{ phrase('enable_email_notification') }}</xf:option>
						<xf:option value="no_email">{{ phrase('disable_email_notification') }}</xf:option>
						<xf:option value="alert">{{ phrase('enable_alerts') }}</xf:option>
						<xf:option value="no_alert">{{ phrase('disable_alerts') }}</xf:option>
						<xf:option value="delete">{{ phrase('stop_watching') }}</xf:option>
						<!--[XF:action_menu:bottom]-->
					</xf:select>
					<xf:button type="submit">{{ phrase('go') }}</xf:button>
				</span>
			</div>
		</div>
	</xf:form>
<xf:else />
	<div class="blockMessage">{{ phrase('you_not_watching_any_forums') }}</div>
</xf:if>]]></template>
  <template type="public" title="watched_forums_manage" version_id="2000036" version_string="2.0.0 Beta 6"><![CDATA[<xf:title>{{ phrase('manage_watched_forums') }}</xf:title>

<xf:form action="{{ link('watched/forums/manage', null, {'state': $state}) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-row">
			<xf:inforow rowtype="confirm">
				<xf:if is="$state == 'delete'">
					{{ phrase('you_sure_you_want_to_stop_watching_all_forums') }}
				<xf:else />
					{{ phrase('you_sure_you_want_to_update_notification_settings_for_all_forums') }}
				</xf:if>
			</xf:inforow>
		</div>
		<xf:submitrow submit="{{ phrase('proceed') }}" icon="notificationsOff" rowtype="simple" />
	</div>
</xf:form>]]></template>
  <template type="public" title="watched_threads_list" version_id="2000570" version_string="2.0.5"><![CDATA[<xf:title page="{$page}">{{ phrase('watched_threads') }}</xf:title>

<xf:if is="$threads is not empty">
	<xf:form action="{{ link('watched/threads/update') }}" ajax="true" class="block" autocomplete="off">
		<div class="block-outer">
			<xf:pagenav
				page="{$page}" perpage="{$perPage}" total="{$total}"
				link="watched/threads"
				wrapperclass="block-outer-main" />
			<div class="block-outer-opposite">
				<xf:button class="button--link menuTrigger" data-xf-click="menu" aria-expanded="false" aria-haspopup="true">{{ phrase('manage_watched_threads') }}</xf:button>
				<div class="menu" data-menu="menu" aria-hidden="true">
					<div class="menu-content">
						<h3 class="menu-header">{{ phrase('manage_watched_threads') }}</h3>
						<!--[XF:manage_menu:top]-->
						<a href="{{ link('watched/threads/manage', null, {'state': 'watch_no_email'}) }}" data-xf-click="overlay" class="menu-linkRow">{{ phrase('disable_email_notification') }}</a>
						<a href="{{ link('watched/threads/manage', null, {'state': 'delete'}) }}" data-xf-click="overlay" class="menu-linkRow">{{ phrase('stop_watching_threads') }}</a>
						<!--[XF:manage_menu:bottom]-->
					</div>
				</div>
			</div>
		</div>

		<div class="block-container">
			<div class="block-body">
				<div class="structItemContainer">
					<xf:foreach loop="$threads" value="$thread">
						<xf:set var="$extra" value="{{ {$thread.Watch.{$xf.visitor.user_id}.email_subscribe} ? phrase('email') : '' }}" />
						<xf:macro template="thread_list_macros" name="item"
							arg-thread="{$thread}"
							arg-chooseName="thread_ids"
							arg-showWatched="{{ false }}"
							arg-extraInfo="{$extra}"
							arg-allowEdit="{{ false }}" />
					</xf:foreach>
				</div>
			</div>
			<div class="block-footer block-footer--split">
				<span class="block-footer-counter"></span>
				<span class="block-footer-select"><xf:checkbox standalone="true"><xf:option check-all="< .block-container" label="{{ phrase('select_all') }}" /></xf:checkbox></span>
				<span class="block-footer-controls">
						<xf:select name="state" class="input--inline">
						<xf:option>{{ phrase('with_selected...') }}</xf:option>
						<!--[XF:action_menu:top]-->
							<xf:option value="watch_email">{{ phrase('enable_email_notification') }}</xf:option>
							<xf:option value="watch_no_email">{{ phrase('disable_email_notification') }}</xf:option>
							<xf:option value="delete">{{ phrase('stop_watching') }}</xf:option>
						<!--[XF:action_menu:bottom]-->
					</xf:select>
					<xf:button type="submit">{{ phrase('go') }}</xf:button>
				</span>
			</div>
		</div>

		<xf:pagenav link="watched/threads" page="{$page}" perpage="{$perPage}" total="{$total}"
			wrapperclass="block-outer block-outer--after" />

		<xf:showignored wrapperclass="block-outer block-outer-opposite block-outer--after" />
	</xf:form>
<xf:else />
	<div class="blockMessage">
		<xf:if is="$page > 1">
			{{ phrase('there_no_threads_to_display') }}
		<xf:else />
			<p>{{ phrase('you_not_watching_any_threads') }}</p>
			<div>{{ phrase('show_all:') }}</div>
			<ul>
				<li><a href="{{ link('find-threads/started') }}">{{ phrase('threads_youve_started') }}</a></li>
				<li><a href="{{ link('find-threads/contributed') }}">{{ phrase('threads_in_which_youve_participated') }}</a></li>
			</ul>
		</xf:if>
	</div>
</xf:if>]]></template>
  <template type="public" title="watched_threads_manage" version_id="2000036" version_string="2.0.0 Beta 6"><![CDATA[<xf:title>{{ phrase('manage_watched_threads') }}</xf:title>

<xf:form action="{{ link('watched/threads/manage', null, {'state': $state}) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-row">
			<xf:inforow rowtype="confirm">
				<xf:if is="$state == 'delete'">
					{{ phrase('you_sure_you_want_to_stop_watching_all_threads') }}
				<xf:else />
					{{ phrase('you_sure_you_want_to_update_notification_settings_for_all_threads') }}
				</xf:if>
			</xf:inforow>
		</div>
		<xf:submitrow submit="{{ phrase('proceed') }}" icon="notificationsOff" rowtype="simple" />
	</div>
</xf:form>]]></template>
  <template type="public" title="whats_new" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('whats_new') }}</xf:title>

<xf:wrap template="whats_new_wrapper">
	<xf:set var="$pageSelected" value="overview" />
</xf:wrap>

<xf:widgetpos id="whats_new_overview" />]]></template>
  <template type="public" title="whats_new_posts" version_id="2000037" version_string="2.0.0 Beta 7"><![CDATA[<xf:title page="{$page}">{{ phrase('new_posts') }}</xf:title>

<xf:wrap template="whats_new_wrapper">
	<xf:set var="$pageSelected">new_thread</xf:set>
</xf:wrap>

<xf:pageaction>
	<xf:if is="$xf.visitor.canCreateThread()">
		<xf:button href="{{ link('forums/create-thread') }}" class="button--cta" icon="write" overlay="true">
			{{ phrase('post_thread...') }}
		</xf:button>
	</xf:if>
</xf:pageaction>

<xf:if is="$canInlineMod">
	<xf:js src="xf/inline_mod.js" min="1" />
</xf:if>

<div class="block" data-xf-init="{{ $canInlineMod ? 'inline-mod' : '' }}" data-type="thread" data-href="{{ link('inline-mod') }}">
	<xf:if is="$findNew.result_count">
		<div class="block-outer">
			<xf:pagenav
				page="{$page}" perpage="{$perPage}" total="{$findNew.result_count}"
				link="whats-new/posts" data="{$findNew}"
				wrapperclass="block-outer-main" />

			<xf:if contentcheck="true">
				<div class="block-outer-opposite">
					<div class="buttonGroup">
					<xf:contentcheck>
						<xf:macro name="buttons"
							arg-findNew="{$findNew}"
							arg-canInlineMod="{$canInlineMod}" />
					</xf:contentcheck>
					</div>
				</div>
			</xf:if>
		</div>
	</xf:if>

	<div class="block-container">
		<xf:macro name="filter_bar"
			arg-findNew="{$findNew}"
			arg-rerunRoute="whats-new/posts"
			arg-rerunData="{$findNew}"
			arg-filterRoute="whats-new/posts" />

		<xf:macro name="results"
			arg-findNew="{$findNew}"
			arg-threads="{$threads}"
			arg-latestRoute="whats-new/posts" />
	</div>

	<xf:if is="$findNew.result_count">
		<div class="block-outer block-outer--after">
			<xf:pagenav
				page="{$page}" perpage="{$perPage}" total="{$findNew.result_count}"
				link="whats-new/posts" data="{$findNew}"
				wrapperclass="block-outer-main" />
			<xf:showignored wrapperclass="block-outer-opposite" />
		</div>
	</xf:if>
</div>

<xf:macro name="buttons"
	arg-findNew="!"
	arg-canInlineMod="{{ false }}">

	<xf:if is="$canInlineMod">
		<xf:macro template="inline_mod_macros" name="button" />
	</xf:if>
	<xf:if is="$xf.visitor.user_id">
		<xf:button href="{{ link('forums/mark-read', null, {'date': $findNew.cache_date}) }}"
			class="button--link" overlay="true">
			{{ phrase('mark_forums_read') }}
		</xf:button>
	</xf:if>
</xf:macro>

<xf:macro name="filter_bar"
	arg-findNew="!"
	arg-rerunRoute="!"
	arg-rerunData="{{ null }}"
	arg-rerunQuery="{{ [] }}"
	arg-filterRoute="!">

	<xf:if is="$xf.visitor.user_id">
		<div class="block-filterBar">
			<div class="filterBar">
				<xf:if contentcheck="true">
					<ul class="filterBar-filters">
					<xf:contentcheck>
						<!--[XF:filters:top]-->
						<xf:if is="$findNew.filters.unread">
							<li><a href="{{ link($rerunRoute, $rerunData, $rerunQuery + {'remove': 'unread'}) }}"
								class="filterBar-filterToggle" data-xf-init="tooltip" title="{{ phrase('remove_this_filter')|for_attr }}">
								<span class="filterBar-filterToggle-label">{{ phrase('show_only:') }}</span>
								{{ phrase('filter_unread') }}</a></li>
						</xf:if>
						<xf:if is="$findNew.filters.watched">
							<li><a href="{{ link($rerunRoute, $rerunData, $rerunQuery + {'remove': 'watched'}) }}"
								class="filterBar-filterToggle" data-xf-init="tooltip" title="{{ phrase('remove_this_filter')|for_attr }}">
								<span class="filterBar-filterToggle-label">{{ phrase('show_only:') }}</span>
								{{ phrase('filter_watched') }}</a></li>
						</xf:if>
						<xf:if is="$findNew.filters.participated">
							<li><a href="{{ link($rerunRoute, $rerunData, $rerunQuery + {'remove': 'participated'}) }}"
								class="filterBar-filterToggle" data-xf-init="tooltip" title="{{ phrase('remove_this_filter')|for_attr }}">
								<span class="filterBar-filterToggle-label">{{ phrase('show_only:') }}</span>
								{{ phrase('filter_participated') }}</a></li>
						</xf:if>
						<xf:if is="$findNew.filters.started">
							<li><a href="{{ link($rerunRoute, $rerunData, $rerunQuery + {'remove': 'started'}) }}"
								class="filterBar-filterToggle" data-xf-init="tooltip" title="{{ phrase('remove_this_filter')|for_attr }}">
								<span class="filterBar-filterToggle-label">{{ phrase('show_only:') }}</span>
								{{ phrase('filter_started') }}</a></li>
						</xf:if>
						<xf:if is="$findNew.filters.unanswered">
							<li><a href="{{ link($rerunRoute, $rerunData, $rerunQuery + {'remove': 'unanswered'}) }}"
								class="filterBar-filterToggle" data-xf-init="tooltip" title="{{ phrase('remove_this_filter')|for_attr }}">
								<span class="filterBar-filterToggle-label">{{ phrase('show_only:') }}</span>
								{{ phrase('filter_unanswered') }}</a></li>
						</xf:if>
						<!--[XF:filters:bottom]-->
					</xf:contentcheck>
					</ul>
				</xf:if>

				<a class="filterBar-menuTrigger" data-xf-click="menu" role="button" tabindex="0" aria-expanded="false" aria-haspopup="true">{{ phrase('filters') }}</a>
				<xf:macro name="filter_menu" arg-findNew="{$findNew}" arg-submitRoute="{$filterRoute}" />
			</div>
		</div>
	</xf:if>
</xf:macro>

<xf:macro name="filter_menu" arg-findNew="!" arg-submitRoute="!">
	<div class="menu" data-menu="menu" aria-hidden="true">
		<div class="menu-content">
			<h4 class="menu-header">{{ phrase('show_only:') }}</h4>
			<xf:form action="{{ link($submitRoute) }}">
				<div class="menu-row">
					<xf:checkbox>
						<xf:option name="unread" selected="{$findNew.filters.unread}">{{ phrase('unread_threads') }}</xf:option>
						<xf:option name="watched" selected="{$findNew.filters.watched}">{{ phrase('watched_content') }}</xf:option>
						<xf:option name="participated" selected="{$findNew.filters.participated}">{{ phrase('threads_in_which_youve_participated') }}</xf:option>
						<xf:option name="started" selected="{$findNew.filters.started}">{{ phrase('threads_youve_started') }}</xf:option>
						<xf:option name="unanswered" selected="{$findNew.filters.unanswered}">{{ phrase('unanswered_threads') }}</xf:option>
						<!--[XF:filter_menu:filters_extra]-->
					</xf:checkbox>
				</div>
				<!--[XF:filter_menu:below_filters]-->

				<xf:macro template="filter_macros" name="find_new_filter_footer" />
			</xf:form>
		</div>
	</div>
</xf:macro>

<xf:macro name="results" arg-findNew="!" arg-threads="!" arg-latestRoute="!">
	<xf:if is="$findNew.result_count">
		<xf:set var="$activityBarShown" value="{{ false }}" />
		<div class="structItemContainer">
			<xf:foreach loop="$threads" value="$thread">
				<xf:if is="$xf.visitor.user_id AND !$activityBarShown AND $thread.last_post_date < $xf.session.previousActivity">
					<div class="structItem structItem--note">
						<div class="structItem-cell">{{ phrase('threads_below_not_updated_since_your_last_visit') }}</div>
					</div>
					<xf:set var="$activityBarShown" value="{{ true }}" />
				</xf:if>

				<xf:macro template="thread_list_macros" name="item" arg-thread="{$thread}" />
			</xf:foreach>
		</div>
	<xf:else />
		<div class="block-row">
			<xf:if is="$xf.visitor.user_id AND ($findNew.filters.unread AND count($findNew.filters) == 1)">
				{{ phrase('no_unread_posts_view_latest', {'link': link($latestRoute, null, {'skip': 1})}) }}
			<xf:else />
				{{ phrase('no_results_found') }}
			</xf:if>
		</div>
	</xf:if>
</xf:macro>]]></template>
  <template type="public" title="whats_new_profile_posts" version_id="2000037" version_string="2.0.0 Beta 7"><![CDATA[<xf:title page="{$page}">{{ phrase('new_profile_posts') }}</xf:title>

<xf:wrap template="whats_new_wrapper">
	<xf:set var="$pageSelected">new_profile_post</xf:set>
</xf:wrap>

<xf:if is="$canInlineMod">
	<xf:js src="xf/inline_mod.js" min="1" />
</xf:if>

<div class="block" data-xf-init="{{ $canInlineMod ? 'inline-mod' : '' }}" data-type="profile_post" data-href="{{ link('inline-mod') }}">
	<xf:if is="$findNew.result_count">
		<div class="block-outer">
			<xf:pagenav
				page="{$page}" perpage="{$perPage}" total="{$findNew.result_count}"
				link="whats-new/profile-posts" data="{$findNew}"
				wrapperclass="block-outer-main" />

			<xf:if contentcheck="true">
				<div class="block-outer-opposite">
					<div class="buttonGroup">
					<xf:contentcheck>
						<xf:if is="$canInlineMod">
							<xf:macro template="inline_mod_macros" name="button" />
						</xf:if>
					</xf:contentcheck>
					</div>
				</div>
			</xf:if>
		</div>
	</xf:if>

	<div class="block-container">
		<xf:if is="$xf.visitor.user_id">
			<div class="block-filterBar">
				<div class="filterBar">
					<xf:if contentcheck="true">
						<ul class="filterBar-filters">
							<xf:contentcheck>
								<!--[XF:filters:top]-->
								<xf:if is="$findNew.filters.followed">
									<li><a href="{{ link('whats-new/profile-posts', $findNew, {'remove': 'followed'}) }}"
										class="filterBar-filterToggle" data-xf-init="tooltip" title="{{ phrase('remove_this_filter')|for_attr }}">
										<span class="filterBar-filterToggle-label">{{ phrase('show_only') }}</span>
										{{ phrase('filter_followed_members') }}</a></li>
								</xf:if>
								<!--[XF:filters:bottom]-->
							</xf:contentcheck>
						</ul>
					</xf:if>

					<a class="filterBar-menuTrigger" data-xf-click="menu" role="button" tabindex="0" aria-expanded="false" aria-haspopup="true">{{ phrase('filters') }}</a>
					<div class="menu" data-menu="menu" aria-hidden="true">
						<div class="menu-content">
							<h4 class="menu-header">{{ phrase('show_only:') }}</h4>
							<xf:form action="{{ link('whats-new/profile-posts') }}">
								<div class="menu-row">
									<xf:checkbox>
										<xf:option name="followed" selected="{$findNew.filters.followed}"
											label="{{ phrase('members_you_follow') }}" />
									</xf:checkbox>
								</div>

								<xf:macro template="filter_macros" name="find_new_filter_footer" />
							</xf:form>
						</div>
					</div>
				</div>
			</div>
		</xf:if>

		<xf:if is="$findNew.result_count">
			<xf:foreach loop="$profilePosts" value="$profilePost">
				<xf:macro template="profile_post_macros" name="profile_post"
					arg-profilePost="{$profilePost}"
					arg-showTargetUser="{{ true }}" />
			</xf:foreach>
		<xf:else />
			<div class="block-row">{{ phrase('no_results_found') }}</div>
		</xf:if>
	</div>

	<xf:if is="$findNew.result_count">
		<div class="block-outer block-outer--after">
			<xf:pagenav
				page="{$page}" perpage="{$perPage}" total="{$findNew.result_count}"
				link="whats-new/profile-posts" data="{$findNew}"
				wrapperclass="block-outer-main" />
			<xf:showignored wrapperclass="block-outer-opposite" />
		</div>
	</xf:if>
</div>]]></template>
  <template type="public" title="whats_new_wrapper" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:if is="{$pageSelected} != 'overview'">
	<xf:head option="metaNoindex"><meta name="robots" content="noindex" /></xf:head>
</xf:if>

<xf:if is="property('whatsNewNavStyle') == 'tabs'">
	<div class="tabs tabs--standalone">
		<div class="hScroller" data-xf-init="h-scroller">
			<span class="hScroller-scroll">
				<xf:macro name="links"
					arg-pageSelected="{$pageSelected}"
					arg-baseClass="tabs-tab"
					arg-selectedClass="is-active" />
			</span>
		</div>
	</div>
<xf:else />
	<xf:sidenav>
		<div class="block">
			<div class="block-container">
				<h3 class="block-header">{{ phrase('whats_new') }}</h3>
				<div class="block-body">
					<xf:macro name="links"
						arg-pageSelected="{$pageSelected}"
						arg-baseClass="blockLink"
						arg-selectedClass="is-selected" />
				</div>
			</div>
		</div>

		<xf:widgetpos id="whats_new_sidenav" />
	</xf:sidenav>
	<xf:page option="sideNavTitle">{{ phrase('whats_new') }}</xf:page>
</xf:if>

{$innerContent|raw}

<xf:macro name="links" arg-pageSelected="!" arg-baseClass="!" arg-selectedClass="!">
	<a class="{$baseClass} {{ $pageSelected == 'overview' ? {$selectedClass} : '' }}" href="{{ link('whats-new') }}">{{ phrase('whats_new') }}</a>
	<!--[XF:links:start]-->
	<a class="{$baseClass} {{ $pageSelected == 'new_thread' ? {$selectedClass} : '' }}" href="{{ link('whats-new/posts') }}" rel="nofollow">{{ phrase('new_posts') }}</a>
	<!--[XF:links:after_thread]-->
	<xf:if is="$xf.visitor.canViewProfilePosts()">
		<a class="{$baseClass} {{ $pageSelected == 'new_profile_post' ? {$selectedClass} : '' }}" href="{{ link('whats-new/profile-posts') }}" rel="nofollow">{{ phrase('new_profile_posts') }}</a>
	</xf:if>
	<!--[XF:links:after_profile_post]-->
	<xf:if is="$xf.options.enableNewsFeed">
		<xf:if is="$xf.visitor.user_id">
			<a class="{$baseClass} {{ $pageSelected == 'news_feed' ? {$selectedClass} : '' }}" href="{{ link('whats-new/news-feed') }}" rel="nofollow">{{ phrase('your_news_feed') }}</a>
		</xf:if>

		<a class="{$baseClass} {{ $pageSelected == 'latest_activity' ? {$selectedClass} : '' }}" href="{{ link('whats-new/latest-activity') }}" rel="nofollow">{{ phrase('latest_activity') }}</a>
	</xf:if>
	<!--[XF:links:end]-->
</xf:macro>]]></template>
  <template type="public" title="widget_birthdays" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:if is="$users is not empty">
	<div class="block"{{ widget_data($widget) }}>
		<div class="block-container">
			<h3 class="block-minorHeader">{$title}</h3>
			<div class="block-body block-row">
				<ul class="listHeap">
					<xf:foreach loop="$users" value="$user">
						<li>
							<xf:avatar user="$user" size="s" img="true" />
						</li>
					</xf:foreach>
				</ul>
			</div>
		</div>
	</div>
</xf:if>]]></template>
  <template type="public" title="widget_find_member" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:form action="{{ link('members') }}" class="block" attributes="{{ widget_data($widget, true) }}">
	<div class="block-container">
		<h3 class="block-minorHeader">{$title}</h3>
		<div class="block-body block-row">
			<xf:textbox name="username" ac="single" data-autosubmit="true" autocomplete="off"
				maxlength="{{ max_length($xf.visitor, 'username') }}"
				placeholder="{{ phrase('name...') }}" />
		</div>
	</div>
</xf:form>]]></template>
  <template type="public" title="widget_forum_statistics" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<div class="block"{{ widget_data($widget) }}>
	<div class="block-container">
		<h3 class="block-minorHeader">{$title}</h3>
		<div class="block-body block-row">
			<dl class="pairs pairs--justified">
				<dt>{{ phrase('threads') }}</dt>
				<dd>{$forumStatistics.threads|number}</dd>
			</dl>

			<dl class="pairs pairs--justified">
				<dt>{{ phrase('messages') }}</dt>
				<dd>{$forumStatistics.messages|number}</dd>
			</dl>

			<dl class="pairs pairs--justified">
				<dt>{{ phrase('members') }}</dt>
				<dd>{$forumStatistics.users|number}</dd>
			</dl>

			<dl class="pairs pairs--justified">
				<dt>{{ phrase('latest_member') }}</dt>
				<dd><xf:username user="{$forumStatistics.latestUser}" /></dd>
			</dl>
		</div>
	</div>
</div>]]></template>
  <template type="public" title="widget_html" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:if is="!$options.advanced_mode">
	<div class="block">
		<div class="block-container">
			<h3 class="block-minorHeader">{$title}</h3>
			<div class="block-body block-row">
				{$template|raw}
			</div>
		</div>
	</div>
<xf:else />
	{$template|raw}
</xf:if>]]></template>
  <template type="public" title="widget_member_stat" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:css src="member.less" />

<xf:if contentcheck="true">
	<div class="block"{{ widget_data($widget) }}>
		<div class="block-container">
			<h3 class="block-minorHeader">
				<a href="{{ link('members', null, {'key': $memberStat.member_stat_key}) }}">
					{$title}
				</a>
			</h3>
			<ol class="block-body">
				<xf:contentcheck>
					<xf:foreach loop="$results" key="$userId" value="$data">
						<li class="block-row">
							<xf:macro template="member_notable" name="overview_row" arg-data="{$data}" />
						</li>
					</xf:foreach>
				</xf:contentcheck>
			</ol>
		</div>
	</div>
</xf:if>]]></template>
  <template type="public" title="widget_members_online" version_id="2000270" version_string="2.0.2"><![CDATA[<xf:if is="$options.staffOnline">
	<xf:if contentcheck="true">
		<div class="block" data-widget-section="staffMembers"{{ widget_data($widget) }}>
			<div class="block-container">
				<h3 class="block-minorHeader"><a href="{{ link('members', null, {'key': 'staff_members'}) }}">{{ phrase('staff_online') }}</a></h3>
				<ul class="block-body">
				<xf:contentcheck>
					<xf:foreach loop="$online.users" value="$user">
						<xf:if is="$user.is_staff">
							<li class="block-row">
								<div class="contentRow">
									<div class="contentRow-figure">
										<xf:avatar user="$user" size="xs" />
									</div>
									<div class="contentRow-main contentRow-main--close">
										<xf:username user="$user" rich="true" />
										<div class="contentRow-minor">
											<xf:usertitle user="$user" />
										</div>
									</div>
								</div>
							</li>
						</xf:if>
					</xf:foreach>
				</xf:contentcheck>
				</ul>
			</div>
		</div>
	</xf:if>
</xf:if>

<div class="block" data-widget-section="onlineNow"{{ widget_data($widget) }}>
	<div class="block-container">
		<h3 class="block-minorHeader"><a href="{{ link('online') }}">{$title}</a></h3>
		<div class="block-body">
			<xf:if contentcheck="true">
				<div class="block-row block-row--minor">
					<h4 class="block-textHeader block-textHeader--scaled">
						{{ phrase('people_you_follow') }}
					</h4>
					<ul class="listHeap">
						<xf:contentcheck>
							<xf:if is="$options.followedOnline">
								<xf:foreach loop="$online.users" value="$user">
									<xf:if is="in_array($user.user_id, $xf.visitor.Profile.following)">
										<li>
											<xf:avatar user="$user" size="xxs" img="true" />
										</li>
									</xf:if>
								</xf:foreach>
							</xf:if>
						</xf:contentcheck>
					</ul>
				</div>

				<div class="block-row block-row--minor">
					<h4 class="block-textHeader block-textHeader--scaled">
						{{ phrase('members') }}
					</h4>
			<xf:else />
				<div class="block-row block-row--minor">
			</xf:if>

				<xf:if is="$online.users is not empty">
					<ul class="listInline listInline--comma">
						<xf:foreach loop="$online.users" value="$user"><xf:trim>
							<li><xf:username user="$user" rich="true" class="{{ !$user.visible ? 'username--invisible' : '' }}" /></li>
						</xf:trim></xf:foreach>
					</ul>
					<xf:if is="$online.counts.unseen">
						<a href="{{ link('online') }}">{{ phrase('ellipsis_and_x_more', {'count': $online.counts.unseen}) }}</a>
					</xf:if>
				<xf:else />
					{{ phrase('no_members_online_now') }}
				</xf:if>
			</div>
		</div>
		<div class="block-footer">
			<span class="block-footer-counter">{{ phrase('online_now_x_members_y_guests_z',{
				'total': number($online.counts.total),
				'members': number($online.counts.members),
				'guests': number($online.counts.guests)})
			}}</span>
		</div>
	</div>
</div>]]></template>
  <template type="public" title="widget_new_posts" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:if is="$threads is not empty OR ($threads is empty AND $filter != 'latest')">
	<div class="block"{{ widget_data($widget) }}>
		<div class="block-container">
			<xf:if is="$style == 'full'">
				<h3 class="block-header">
					<a href="{$link}" rel="nofollow">{$title}</a>
				</h3>
				<div class="block-body">
					<div class="structItemContainer">
						<xf:if is="$threads is not empty">
							<xf:foreach loop="$threads" value="$thread">
								<xf:macro template="thread_list_macros" name="item"
									arg-allowInlineMod="{{ false }}"
									arg-thread="{$thread}" />
							</xf:foreach>
						<xf:elseif is="$filter == 'unread'" />
							<div class="block-row">
								{{ phrase('no_unread_posts_view_latest', {'link': link('whats-new/posts', null, {'skip': 1})}) }}
							</div>
						<xf:else />
							<div class="block-row">
								{{ phrase('no_results_found') }}
							</div>
						</xf:if>
					</div>
				</div>
				<xf:if is="$hasMore">
					<div class="block-footer">
						<span class="block-footer-controls">
							<xf:button href="{$link}" rel="nofollow">{{ phrase('view_more...') }}</xf:button>
						</span>
					</div>
				</xf:if>
			<xf:else />
				<h3 class="block-minorHeader">
					<a href="{$link}" rel="nofollow">{$title}</a>
				</h3>
				<ul class="block-body">
					<xf:if is="$threads is not empty">
						<xf:foreach loop="$threads" value="$thread">
							<li class="block-row">
								<xf:macro template="thread_list_macros" name="item_new_posts"
									arg-thread="{$thread}" />
							</li>
						</xf:foreach>
					<xf:elseif is="$filter == 'unread'" />
						<li class="block-row block-row--minor">
							{{ phrase('no_unread_posts_view_latest', {'link': link('whats-new/posts', null, {'skip': 1})}) }}
						</li>
					<xf:else />
						<li class="block-row block-row--minor">
							{{ phrase('no_results_found') }}
						</li>
					</xf:if>
				</ul>
			</xf:if>
		</div>
	</div>
</xf:if>]]></template>
  <template type="public" title="widget_new_profile_posts" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:if is="$profilePosts is not empty">
	<div class="block"{{ widget_data($widget) }}>
		<div class="block-container">
			<xf:if is="$style == 'full'">
				<h3 class="block-header">
					<a href="{$link}" rel="nofollow">{$title}</a>
				</h3>
			<xf:else />
				<h3 class="block-minorHeader">
					<a href="{$link}" rel="nofollow">{$title}</a>
				</h3>
			</xf:if>
			<div class="block-body js-replyNewMessageContainer">
				<xf:if is="$xf.visitor.canPostOnProfile()">
					<xf:set var="$firstProfilePost" value="{$profilePosts|first}" />
					<xf:macro template="profile_post_macros" name="submit"
						arg-user="{$xf.visitor}"
						arg-lastDate="{{ $firstProfilePost.post_date ?: 0 }}"
						arg-containerSelector="< .js-replyNewMessageContainer"
						arg-style="{$style}"
						arg-context="all" />
				</xf:if>
				<xf:foreach loop="$profilePosts" value="$profilePost">
					<xf:if is="$style == 'full'">
						<xf:macro template="profile_post_macros" name="profile_post"
							arg-profilePost="{$profilePost}"
							arg-showTargetUser="{{ true }}"
							arg-allowInlineMod="{{ false }}" />
					<xf:else />
						<div class="block-row">
							<xf:macro template="profile_post_macros" name="profile_post_simple"
								arg-profilePost="{$profilePost}"
								arg-limitHeight="{{ true }}" />
						</div>
					</xf:if>
				</xf:foreach>
			</div>
			<xf:if is="$style == 'full'">
				<div class="block-footer">
					<span class="block-footer-controls">
						<xf:button href="{$link}" rel="nofollow">{{ phrase('view_more...') }}</xf:button>
					</span>
				</div>
			</xf:if>
		</div>
	</div>
</xf:if>]]></template>
  <template type="public" title="widget_new_threads" version_id="2000570" version_string="2.0.5"><![CDATA[<xf:if is="$threads is not empty">
	<xf:if is="$style != 'expanded'">
		<div class="block"{{ widget_data($widget) }}>
			<div class="block-container">
				<xf:if is="$style == 'full'">
					<h3 class="block-header">
						<a href="{$link}" rel="nofollow">{$title}</a>
					</h3>
					<div class="block-body">
						<div class="structItemContainer">
							<xf:foreach loop="$threads" value="$thread">
								<xf:macro template="thread_list_macros" name="item"
									arg-allowInlineMod="{{ false }}"
									arg-thread="{$thread}" />
							</xf:foreach>
						</div>
					</div>
				<xf:else />
					<h3 class="block-minorHeader">
						<a href="{$link}" rel="nofollow">{$title}</a>
					</h3>
					<ul class="block-body">
						<xf:foreach loop="$threads" value="$thread">
							<li class="block-row">
								<xf:macro template="thread_list_macros" name="item_new_threads"
									arg-thread="{$thread}" />
							</li>
						</xf:foreach>
					</ul>
				</xf:if>
			</div>
		</div>
	<xf:else />
		<xf:css src="message.less" />

		<div class="blocks">
			<xf:if is="$showExpandedTitle">
				<h2 class="blocks-header">
					{$title}
				</h2>
			</xf:if>

			<xf:foreach loop="$threads" value="$thread">
				<xf:set var="$post" value="{$thread.FirstPost}" />

				<div class="block">
					<div class="block-container"
						data-xf-init="lightbox">

						<h4 class="block-header">
							<a href="{{ link('threads', $thread) }}">{$thread.title}</a>
						</h4>
						<div class="block-body">
							<div class="message message--post">
								<div class="message-inner">
									<div class="message-cell message-cell--main">
										<div class="message-content js-messageContent">
											<header class="message-attribution">
												<ul class="listInline listInline--bullet u-muted">
													<li><xf:username user="{$thread.User}" /></li>
													<li><xf:date time="{$post.post_date}" /></li>
													<li><a href="{{ link('forums', $thread.Forum) }}">{$thread.Forum.title}</a></li>
													<li>{{ phrase('replies:') }} {$thread.reply_count|number}</li>
												</ul>
											</header>
											<div class="message-userContent lbContainer js-lbContainer"
												data-lb-id="post-{$post.post_id}"
												data-lb-caption-desc="{{ $post.User ? $post.User.username : $post.username }} &middot; {{ date_time($post.post_date) }}">

												<article class="message-body">
													{{ bb_code($post.message, 'post', $post) }}
												</article>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</xf:foreach>
		</div>
	</xf:if>
</xf:if>]]></template>
  <template type="public" title="widget_newest_members" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:if is="$users is not empty">
	<div class="block"{{ widget_data($widget) }}>
		<div class="block-container">
			<h3 class="block-minorHeader">{$title}</h3>
			<div class="block-body block-row">
				<ul class="listHeap">
					<xf:foreach loop="$users" value="$user">
						<li>
							<xf:avatar user="$user" size="s" img="true" />
						</li>
					</xf:foreach>
				</ul>
			</div>
		</div>
	</div>
</xf:if>]]></template>
  <template type="public" title="widget_online_statistics" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<div class="block"{{ widget_data($widget) }}>
	<div class="block-container">
		<h3 class="block-minorHeader">{$title}</h3>
		<div class="block-body block-row">
			<dl class="pairs pairs--justified">
				<dt>{{ phrase('members_online') }}</dt>
				<dd>{$counts.members|number}</dd>
			</dl>

			<dl class="pairs pairs--justified">
				<dt>{{ phrase('guests_online') }}</dt>
				<dd>{$counts.guests|number}</dd>
			</dl>

			<dl class="pairs pairs--justified">
				<dt>{{ phrase('total_visitors') }}</dt>
				<dd>{$counts.total|number}</dd>
			</dl>
		</div>
		<div class="block-footer">
			{{ phrase('totals_may_include_hidden_visitors') }}
		</div>
	</div>
</div>]]></template>
  <template type="public" title="widget_share_page" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:if contentcheck="true">
	<div class="block"{{ widget_data($widget) }}>
		<div class="block-container">
			<h3 class="block-minorHeader">{$title}</h3>
			<div class="block-body block-row">
				<xf:contentcheck>
					<xf:macro template="share_page_macros" name="buttons" arg-iconic="{$options.iconic}" />
				</xf:contentcheck>
			</div>
		</div>
	</div>
</xf:if>]]></template>
  <template type="public" title="widget_thread_poll" version_id="2000010" version_string="2.0.0 Alpha"><![CDATA[<xf:macro template="poll_macros" name="poll_block" arg-poll="{$poll}" arg-simpleDisplay="{{ true }}" arg-forceTitle="{$title}" />]]></template>
  <template type="public" title="widget_visitor_panel" version_id="2010010" version_string="2.1.0 Alpha"><![CDATA[<xf:if is="$xf.visitor.user_id">
	<div class="block"{{ widget_data($widget) }}>
		<div class="block-container">
			<div class="block-body block-row">
				<xf:macro template="account_visitor_menu" name="visitor_panel_row" />
			</div>
		</div>
	</div>
</xf:if>]]></template>
</templates>
