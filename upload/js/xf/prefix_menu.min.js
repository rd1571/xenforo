var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.findInternal=function(b,d,c){b instanceof String&&(b=String(b));for(var f=b.length,a=0;a<f;a++){var e=b[a];if(d.call(c,e,a,b))return{i:a,v:e}}return{i:-1,v:void 0}};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(b,d,c){b!=Array.prototype&&b!=Object.prototype&&(b[d]=c.value)};
$jscomp.getGlobal=function(b){return"undefined"!=typeof window&&window===b?b:"undefined"!=typeof global&&null!=global?global:b};$jscomp.global=$jscomp.getGlobal(this);$jscomp.polyfill=function(b,d,c,f){if(d){c=$jscomp.global;b=b.split(".");for(f=0;f<b.length-1;f++){var a=b[f];a in c||(c[a]={});c=c[a]}b=b[b.length-1];f=c[b];d=d(f);d!=f&&null!=d&&$jscomp.defineProperty(c,b,{configurable:!0,writable:!0,value:d})}};
$jscomp.polyfill("Array.prototype.find",function(b){return b?b:function(b,c){return $jscomp.findInternal(this,b,c).v}},"es6","es3");
!function(b,d,c,f){XF.PrefixMenu=XF.Element.newHandler({options:{select:"< .js-prefixContainer | .js-prefixSelect",title:"< .js-prefixContainer | .js-titleInput",active:".js-activePrefix",menu:"| [data-menu]",menuContent:".js-prefixMenuContent",listenTo:"",href:""},$select:null,$active:null,$title:null,$menu:null,$menuContent:null,template:null,initialPrefixId:0,init:function(){this.$select=XF.findRelativeIf(this.options.select,this.$target);if(this.$select.length){this.$select.on("control:enabled control:disabled",
XF.proxy(this,"toggleActive"));this.$title=XF.findRelativeIf(this.options.title,this.$target);this.$active=this.$target.find(this.options.active);this.$menu=XF.findRelativeIf(this.options.menu,this.$target);this.$menuContent=this.$menu.find(this.options.menuContent);this.$menuContent.on("click","[data-prefix-id]",XF.proxy(this,"prefixClick"));this.template=this.$menuContent.find('script[type="text/template"]').html();this.template||(console.error("No template could be found"),this.template="");if(this.options.href){var a=
this.options.listenTo?XF.findRelativeIf(this.options.listenTo,this.$target):b([]);if(a.length)a.on("change",XF.proxy(this,"loadPrefixes"));else console.error("Cannot load prefixes dynamically as no element set to listen to for changes")}this.initMenu();if(a=parseInt(this.$select.val(),10))this.initialPrefixId=a,this.selectPrefix(a);this.$target.closest("form").on("reset",XF.proxy(function(){this.reset()},this))}else console.error("No select matching %s",this.options.select)},initMenu:function(){var a=
[],e=[];this.$select.children().each(function(){var g=b(this);if(g.is("optgroup")){var c=[];g.find("option").each(function(){var a=b(this);c.push({prefix_id:a.attr("value"),title:a.text(),css_class:a.attr("data-prefix-class")})});c.length&&a.push({title:g.attr("label"),prefixes:c})}else{var h=g.attr("value");"0"!==h&&"-1"!==h&&e.push({prefix_id:h,title:g.text(),css_class:g.attr("data-prefix-class")})}});e.length&&a.push({title:null,prefixes:e});this.$menuContent.empty().html(Mustache.render(this.template,
{groups:a}))},reset:function(){this.selectPrefix(this.initialPrefixId)},loadPrefixes:function(a){XF.ajax("POST",this.options.href,{val:b(a.target).val(),initial_prefix_id:this.initialPrefixId},XF.proxy(this,"loadSuccess"))},loadSuccess:function(a){if(a.html){var e=this,c=this.$select;XF.setupHtmlInsert(a.html,function(a){a.each(function(){var a=b(this);if(a.is("select")){var g=c.val();c.empty().append(a.children());c.find('option[value="'+g+'"]').length||(g=0);e.initMenu();e.selectPrefix(g);return!1}})})}},
toggleActive:function(a){a=b(a.target);var e=this.$active.closest(".inputGroup-text");e.length&&(a.is(":disabled")?e.addClass("inputGroup-text--disabled"):e.removeClass("inputGroup-text--disabled"))},selectPrefix:function(a){a=parseInt(a,10);var b=this.$active,c=this.$select,d=c.find('option[value="'+a+'"]');d.length||(a=0,d=c.find('option[value="'+a+'"]'));var h=d.data("prefix-class");c.val(a);b.text(d.text()).removeClass(b.data("prefix-class")).addClass(h);b.data("prefix-class",h);c.trigger("change")},
prefixClick:function(a){this.selectPrefix(b(a.target).data("prefix-id"));(a=this.$menu.data("menu-trigger"))&&a.close();a=this.$title;a.length&&a.autofocus()}});XF.PrefixLoader=XF.Element.newHandler({options:{listenTo:"",initUpdate:!0,href:""},init:function(){if(!this.$target.is("select"))console.error("Must trigger on select");else if(this.options.href){var a=this.options.listenTo?XF.findRelativeIf(this.options.listenTo,this.$target):b([]);a.length?(a.on("change",XF.proxy(this,"loadPrefixes")),this.options.initUpdate&&
a.trigger("change")):console.error("Cannot load prefixes dynamically as no element set to listen to for changes")}},loadPrefixes:function(a){XF.ajax("POST",this.options.href,{val:b(a.target).val()},XF.proxy(this,"loadSuccess"))},loadSuccess:function(a){if(a.html){var c=this.$target;XF.setupHtmlInsert(a.html,function(a){var d=c.val();a.each(function(){var a=b(this);if(a.is("select")){c.empty().append(a.children());var e=!1;a=c.find("option");a.each(function(){if(b(this).attr("value")===d)return c.val(d),
e=!0,!1});e||c.val(a.first().attr("value"));return!1}})})}}});XF.Element.register("prefix-menu","XF.PrefixMenu");XF.Element.register("prefix-loader","XF.PrefixLoader")}(jQuery,window,document);
